@prefix :      <http://star.siemens.com/ontology/instance#> .
@prefix temp:  <http://www.siemens.com/star/temporary/> .
@prefix instance: <http://www.siemens.com/star/instance/> .
@prefix dbc:   <http://dbpedia.org/resource/Category:> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix afn:   <http://jena.hpl.hp.com/ARQ/function#> .
@prefix swrl:  <http://www.w3.org/2003/11/swrl#> .
@prefix protege: <http://protege.stanford.edu/plugins/owl/protege#> .
@prefix fn:    <http://www.w3.org/2005/xpath-functions#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix swrlb: <http://www.w3.org/2003/11/swrlb#> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sie:   <http://data.ifs.tuwien.ac.at/star/ontology#> .
@prefix spec:  <http://data.ifs.tuwien.ac.at/star/ontology#> .
@prefix dbo:   <http://dbpedia.org/ontology/> .
@prefix gen:   <http://data.ifs.tuwien.ac.at/star/ontology#> .
@prefix dct:   <http://purl.org/dc/terms/> .
@prefix xsp:   <http://www.owl-ontologies.com/2005/08/07/xsp.owl#> .
@prefix dbr:   <http://dbpedia.org/resource/> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sear:  <http://data.ifs.tuwien.ac.at/star/ontology#> .
@prefix sesame: <http://www.openrdf.org/schema/sesame#> .
@prefix cont:  <http://data.ifs.tuwien.ac.at/star/ontology#> .
@prefix dc:    <http://purl.org/dc/elements/1.1/> .

{ :DesignPattern_object_pool
          a                              gen:DesignPattern ;
          rdfs:label                     "Object Pool" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_composability , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_flexibility ;
          gen:isAlternativeOf            :DesignTactic_composition ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Object_pool_pattern .
  
  :Requirement_ar-005__security_and_privacy_policies
          a                          spec:Requirement ;
          rdfs:label                 "AR-005: Security and Privacy Policies" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall support the definition of security and privacy policies associated with the published APIs." ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_ar-010__publishing_services ;
          spec:requirementGroup      "Security and Privacy" ;
          spec:requirementPurpose    "API Protection" .
  
  :ArchitecturalQuality_transferability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "transferability" , "Transferability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_dynamically-adjustable_configuration , :DesignPattern_swappable_staging_environment , :DesignPattern_facade , :DesignPattern_session_failover , :DesignPattern_encapsulation , :DesignPattern_virtual_platform , :DesignTactic_change_propagation , :DesignPattern_reflection ;
          gen:relatedQuality       :ArchitecturalQuality_portability , :ArchitecturalQuality_flexibility ;
          gen:wikiEntry            "[Castsoftware Software Transferability [date unknown]] Transferability is about to determine how easily a new team groupor team member can become productive when assigned to work onone or moreapplication. Increase in transferability helps to prevent resource lock-in - Between internal resources or outsourcers. Help in moving from the outsourcer to internal teams or from internal teams to the outsourcer    Relations Change Propagation The term Change Propagation refers to clients must be adapted and Transferability is also about integration ofa new team group or team member [Castsoftware Software Transferability [date unknown]]." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_point_to_point
          a                              gen:DesignPattern ;
          rdfs:label                     "Point to Point" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_message_construction , :DesignTactic_message_channeling ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_dynamic_scalability
          a                              gen:DesignPattern ;
          rdfs:label                     "Dynamic Scalability" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_load_distribution ;
          gen:wikiEntry                  "<div id=\"title_row\"><div class=\"left\"><h2>Dynamic Scalability <span class=\"title_small\">(Erl, Naserpour)</span></h2>\n\t\t\t\t\t\t\t<p>How can IT resources be scaled automatically in response to fluctuating demand?</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"right\"><img alt=\"Dynamic Scalability\" title=\"Dynamic Scalability\" src=\"http://cloudpatterns.org/static/images/icons/dynamic_scalability.png\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t<div class=\"content_box\"><!--BEGIN CONTENT-->\n\n\t\n\t<div class=\"tabular\">\n\t\t<h3>Problem</h3>\n\t\tIt is challenging to equip an IT resource to match its processing requirements. If the demand for the IT resource is below its capacity, then it is under-utilized and if the demand is above its capacity it is over-utilized or unable to meet the demand.\n\t</div>\n\t\n\t<div class=\"tabular\">\n\t\t<h3>Solution</h3>\n\t\tThe IT resource can be integrated with a reactive cloud architecture capable of automatically scaling it horizontally or vertically in response to fluctuating demand.\n\t</div>\n\t\n\t<div class=\"tabular\">\n\t\t<h3>Application</h3>\n\t\tDynamic horizontal scaling can be enabled via the use of pools of identical IT resources and components capable of dispersing and retracting workloads across each pool. Dynamic vertical scaling can be enabled via technology capable of swapping IT resource components at runtime.\n\t</div>\n\t\n\n\t<div class=\"tabular\"><h3>Mechanisms</h3><a href=\"http://cloudpatterns.org/mechanisms/automated_scaling_listener\" target=\"_blank\">Automated Scaling Listener</a>, <a href=\"http://cloudpatterns.org/mechanisms/cloud_storage_device\" target=\"_blank\">Cloud Storage Device</a>, <a href=\"http://cloudpatterns.org/mechanisms/cloud_usage_monitor\" target=\"_blank\">Cloud Usage Monitor</a>, <a href=\"http://cloudpatterns.org/mechanisms/hypervisor\" target=\"_blank\">Hypervisor</a>, <a href=\"http://cloudpatterns.org/mechanisms/pay_per_use_monitor\" target=\"_blank\">Pay-Per-Use Monitor</a>, <a href=\"http://cloudpatterns.org/mechanisms/resource_replication\" target=\"_blank\">Resource Replication</a>, <a href=\"http://cloudpatterns.org/mechanisms/virtual_server\" target=\"_blank\">Virtual Server</a></div>\t\n\t<div class=\"tabular\"><h3>Compound Patterns</h3><a href=\"http://cloudpatterns.org/compound_patterns/burst_in\" target=\"_blank\">Burst In</a>, <a href=\"http://cloudpatterns.org/compound_patterns/burst_out_to_private_cloud\" target=\"_blank\">Burst Out to Private Cloud</a>, <a href=\"http://cloudpatterns.org/compound_patterns/burst_out_to_public_cloud\" target=\"_blank\">Burst Out to Public Cloud</a>, <a href=\"http://cloudpatterns.org/compound_patterns/cloud_authentication\" target=\"_blank\">Cloud Authentication</a>, <a href=\"http://cloudpatterns.org/compound_patterns/elastic_environment\" target=\"_blank\">Elastic Environment</a>, <a href=\"http://cloudpatterns.org/compound_patterns/infrastructure_as_a_service\" target=\"_blank\">Infrastructure-as-a-Service (IaaS)</a>, <a href=\"http://cloudpatterns.org/compound_patterns/isolated_trust_boundary\" target=\"_blank\">Isolated Trust Boundary</a>, <a href=\"http://cloudpatterns.org/compound_patterns/multitenant_environment\" target=\"_blank\">Multitenant Environment</a>, <a href=\"http://cloudpatterns.org/compound_patterns/platform_as_a_service\" target=\"_blank\">Platform-as-a-Service (PaaS)</a>, <a href=\"http://cloudpatterns.org/compound_patterns/private_cloud\" target=\"_blank\">Private Cloud</a>, <a href=\"http://cloudpatterns.org/compound_patterns/public_cloud\" target=\"_blank\">Public Cloud</a>, <a href=\"http://cloudpatterns.org/compound_patterns/resilient_environment\" target=\"_blank\">Resilient Environment</a>, <a href=\"http://cloudpatterns.org/compound_patterns/resource_workload_management\" target=\"_blank\">Resource Workload Management</a>, <a href=\"http://cloudpatterns.org/compound_patterns/secure_burst_out_to_private_cloud_public_cloud\" target=\"_blank\">Secure Burst Out to Private Cloud/Public Cloud</a>, <a href=\"http://cloudpatterns.org/compound_patterns/software_as_a_service\" target=\"_blank\">Software-as-a-Service (SaaS)</a></div>\n\t\n\t<div class=\"figure\">\n\t\t<img src=\"http://cloudpatterns.org/static/images/figures/dynamic_scalability/fig3.png\" alt=\"Dynamic Scalability: A sample dynamic scaling process.\" title=\"Dynamic Scalability: A sample dynamic scaling process.\">\n\t\t<p>A sample dynamic scaling process. </p>\n\t</div>\n\n\t<div class=\"figure\">\n\t\t<img src=\"http://cloudpatterns.org/static/images/figures/dynamic_scalability/fig4.png\" alt=\"Dynamic Scalability: An example of a dynamic scaling architecture involving an automated scaling mechanism (Part I).\" title=\"Dynamic Scalability: An example of a dynamic scaling architecture involving an automated scaling mechanism (Part I).\">\n\t\t<p>An example of a dynamic scaling architecture involving an automated scaling mechanism (Part I). </p>\n\t</div>\n\n\t<div class=\"figure\">\n\t\t<img src=\"http://cloudpatterns.org/static/images/figures/dynamic_scalability/fig5.png\" alt=\"Dynamic Scalability: An example of a dynamic scaling architecture involving an automated scaling mechanism (Part II).\" title=\"Dynamic Scalability: An example of a dynamic scaling architecture involving an automated scaling mechanism (Part II).\">\n\t\t<p>An example of a dynamic scaling architecture involving an automated scaling mechanism (Part II). </p>\n\t</div>\n\n\t<div class=\"figure\">\n\t\t<img src=\"http://cloudpatterns.org/static/images/figures/dynamic_scalability/fig6.png\" alt=\"Dynamic Scalability: An example of a dynamic scaling architecture involving an automated scaling mechanism (Part III).\" title=\"Dynamic Scalability: An example of a dynamic scaling architecture involving an automated scaling mechanism (Part III).\">\n\t\t<p>An example of a dynamic scaling architecture involving an automated scaling mechanism (Part III).</p></div></div>" ;
          spec:hasPatternDomain          :Domain_cloud_computing .
  
  :DesignPattern_small_patches
          a                              gen:DesignPattern ;
          rdfs:label                     "Small Patches" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_reliability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_viability , :ArchitecturalQuality_safety , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_dependability ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "The fault that caused a detected error or failure is found and the options of Let Sleeping Dogs Lie are weighed. The Correction needs to be deployed now. The deployment should happen with minimal risk of downtime due to either the installation of the correction or latent faults in the correction [Hanmer 2007] pp 239-241.  Relations Error Handling [Hanmer 2007] Fault Treatment Patterns pp 239-241. Fault Handling [Hanmer 2007] Fault Treatment Patterns pp 239-241." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_perf-2__performance_optimization
          a                          spec:Requirement ;
          rdfs:label                 "PERF-2: Performance Optimization" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify;\ntext-indent:-18.0pt\"><b><span lang=\"EN-US\">Performance Optimization:</span></b><span lang=\"EN-US\"> </span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify\"><span lang=\"EN-US\">Most of the operations listed above have very less amount of data\ntransmitted between client and server. So as such they will not impose\nchallenge in WAN environment (from Performance perspective).</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify\"><span lang=\"EN-US\">However, display of data in PB list control (Series View, Study\nView, Manual Worklist) may have to handle large amount of data based on the\nfilter applied by user. Please refer to 2.1.2 (1) for further description.</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Performance in 3 MBPS line" ;
          spec:requirementPurpose    "Limit transmission" .
  
  :DesignPattern_content-based_router
          a                              gen:DesignPattern ;
          rdfs:label                     "Content-based Router" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_security , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_portability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_routing , :DesignTactic_message_transformation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_privacy
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "privacy" , "Privacy" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_public_key_encryption , :DesignPattern_connection_limitation , :DesignPattern_secure_channels , :DesignPattern_packet_filtering , :DesignDecision_ad-012__deployment_schemes , :DesignPattern_demilitarized_zone__dmz_ , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_capturing_architectural_requirements , :DesignTactic_encryption , :DesignDecision_ad-001_1__ecosystem_components , :DesignPattern_state , :DesignDecision_ad-017__core_services , :DesignPattern_access_control , :DesignPattern_lock , :DesignPattern_command , :DesignPattern_minimize_human_intervention , :DesignTactic_limit_access , :DesignPattern_module , :DesignPattern_bridge , :DesignPattern_breadcrumbs , :DesignPattern_message_federation , :DesignPattern_decision_2 , :DesignPattern_resource_pooling , :DesignPattern_restful_web_api , :DesignPattern_api_gateway , :DesignPattern_process_manager , :DesignPattern_gatekeeper_pattern , :DesignPattern_layered_architecture , :DesignPattern_information_obscurity , :DesignPattern_event_message , :DesignPattern_private_key_encryption ;
          gen:relatedQuality       :ArchitecturalQuality_security ;
          gen:wikiEntry            "<p><strong>Privacy</strong></p>\n<p>Information privacy, or data privacy (or data protection), is the relationship between collection and dissemination of data, technology, the public expectation of privacy, and the legal and political issues surrounding them.&nbsp;Privacy concerns exist wherever personally identifiable information or other sensitive information is collected and stored. Improper or non-existent disclosure control can be the root cause for privacy issues.</p>\n<p><span style=\"line-height: 1.3em;\">Privacy requirements can dictate protection for sensitive information and provide security to user data. Some types of privacy requirements include data encryption for database tables policies regarding the transmission of data to 3rd parties (e.g. scrambling user account numbers) etc.&nbsp;</span></p>\n<p><strong><span style=\"line-height: 1.3em;\">Source:</span></strong></p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Information_privacy\">https://en.wikipedia.org/wiki/Information_privacy</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_swot_analysis
          a           cont:AuthorTag ;
          rdfs:label  "swot analysis" .
  
  :DesignTactic_event_handling
          a           gen:DesignTactic ;
          rdfs:label  "event handling" .
  
  :DesignPattern_overloaded_functions
          a                              gen:DesignPattern ;
          rdfs:label                     "Overloaded functions" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Overloaded functions</h1>\n\n<p>When porting a 32-bit program to a 64-bit platform, you may encounter changes in its logic related to the use of overloaded functions. If a function is overlapped for 32-bit and 64-bit values, the access to it with an argument of a <a href=\"http://www.viva64.com/en/t/0030/\" class=\"link-inner\" target=\"_blank\">memsize</a>-type will be translated into different calls on different systems. This technique may be useful as, for example, in this code:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"typ\">GetBitCount</span><span class=\"pun\">(</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">unsigned</span><span class=\"pln\"> __int32 </span><span class=\"pun\">&amp;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">32</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"typ\">GetBitCount</span><span class=\"pun\">(</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">unsigned</span><span class=\"pln\"> __int64 </span><span class=\"pun\">&amp;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">64</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> a</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> bitCount </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">GetBitCount</span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"pun\">);</span></code></pre>\n<p>But this change of logic is potentially dangerous. Imagine a program that uses a class to arrange the stack. This class is specific in that way that it allows you to store values of different types:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">MyStack</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n</span><span class=\"pun\">...</span><span class=\"pln\">\n</span><span class=\"kwd\">public</span><span class=\"pun\">:</span><span class=\"pln\">\n  </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">Push</span><span class=\"pun\">(</span><span class=\"pln\">__int32 </span><span class=\"pun\">&amp;);</span><span class=\"pln\">\n  </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">Push</span><span class=\"pun\">(</span><span class=\"pln\">__int64 </span><span class=\"pun\">&amp;);</span><span class=\"pln\">\n  </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">Pop</span><span class=\"pun\">(</span><span class=\"pln\">__int32 </span><span class=\"pun\">&amp;);</span><span class=\"pln\">\n  </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">Pop</span><span class=\"pun\">(</span><span class=\"pln\">__int64 </span><span class=\"pun\">&amp;);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\"> stack</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"typ\">ptrdiff_t</span><span class=\"pln\"> value_1</span><span class=\"pun\">;</span><span class=\"pln\">\nstack</span><span class=\"pun\">.</span><span class=\"typ\">Push</span><span class=\"pun\">(</span><span class=\"pln\">value_1</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">...</span><span class=\"pln\">\n</span><span class=\"kwd\">int</span><span class=\"pln\"> value_2</span><span class=\"pun\">;</span><span class=\"pln\">\nstack</span><span class=\"pun\">.</span><span class=\"typ\">Pop</span><span class=\"pun\">(</span><span class=\"pln\">value_2</span><span class=\"pun\">);</span></code></pre>\n<p>A careless programmer saves into and then selects from the stack values of different types (\"<a href=\"http://www.viva64.com/en/t/0041/\" class=\"link-inner\" target=\"_blank\">ptrdiff_t</a>\" and \"int\"). Their sizes coincide on the 32-bit system and everything is quite okay. But when the size of the type \"ptrdiff_t\" changes on the 64-bit system, the number of bytes saved into the stack gets larger than the number of bytes loaded then from the stack.</p>\n<p>I think this type of errors is clear to you and you understand that one should be very careful about calls to overloaded functions when passing actual arguments of a memsize-type.</p>" ;
          spec:hasPatternDomain          :Domain_visual_c__ ;
          owl:sameAs                     dbr:Function_overloading .
  
  :SoftwareEngineeringMethod_performance_engineering_for_sw-based_systems
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Performance Engineering for SW-Based Systems" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability ;
          gen:hasMethodPhase            :ProjectPhase_analysis ;
          gen:hasMethodRole             :Role_performance_engineer , :Role_systems_engineer ;
          gen:hasMethodTag              :AuthorTag_logical_architecture , :AuthorTag_architecture , :AuthorTag_domain_model , :AuthorTag_nfr_engineering ;
          gen:wikiEntry                 "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>Performance engineering is a collection of interrelated, quantitative methods that reduce system performance risk by accounting for performance requirements in the system architecture and throughout the development lifecycle. This article establishes the methodology framework and places related methods within it.</p></td>\n</tr>\n</tbody></table>" .
  
  :DesignPattern_shared_space
          a                              gen:DesignPattern ;
          rdfs:label                     "Shared Space" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_availability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_mobility , :ArchitecturalQuality_operability , :ArchitecturalQuality_performance , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_scalability , :ArchitecturalQuality_effectiveness ;
          gen:isAlternativeOf            :DesignTactic_parallel_computing , :DesignTactic_load_distribution ;
          gen:wikiEntry                  "[DZone Architects Scalable System Design Patterns [date unknown]] The Shared Space pattern utzilizes independent workers monitoring information from a shared space and contributing partial knowledge back to the shared space. The information is continuously enriched until a solution is reached. This pattern is used in JavaSpace and also in the commercial product GigaSpace.  The following figure illustrates the pattern.    Blackboard" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  gen:methodInput  a   owl:DatatypeProperty ;
          rdfs:domain  gen:SoftwareEngineeringMethod ;
          rdfs:range   xsd:string .
  
  :Domain_software_ecosystems
          a           spec:Domain ;
          rdfs:label  "software ecosystems" .
  
  :DesignPattern_task_precondition_-_data_existence
          a                              gen:DesignPattern ;
          rdfs:label                     "Task Precondition - Data Existence" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_consistency , :ArchitecturalQuality_controllability , :ArchitecturalQuality_visibility , :ArchitecturalQuality_configurability , :ArchitecturalQuality_observability ;
          gen:isAlternativeOf            :DesignTactic_data_access ;
          gen:wikiEntry                  "<h1 align=\"center\">Pattern 34 (Task Precondition - Data Existence)</h1>\n<p><a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp34_animation.php\" target=\"_blank\">FLASH animation of Task Precondition - Data Existence pattern</a></p>\n<h2>Description</h2>\n<p align=\"justify\">Data-based preconditions can be specified for tasks based on the presence of data elements at the time of execution. The preconditions can utilize any data elements available to the task with which they are associated. A task can only proceed if the associated precondition evaluates positively.\n</p><h2>Example</h2>\n<p align=\"justify\">Only execute the <em>Run Backup </em> task when <em>tape_loaded_flag </em> exists.\n</p><h2>Motivation</h2>\n<p align=\"justify\"> The ability to deal with missing data elements at the time of task invocation is desirable. This allows corrective action to be taken during process execution rather than necessitating the raising of an error condition and halting any further action. \n</p><p align=\"center\"><a name=\"figure21\" id=\"figure21\" href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp34.php\" target=\"_blank\"><img src=\"http://www.workflowpatterns.com/patterns/data/images/workflow-case-34.png\" alt=\"Figure 21: Task precondition - data existence\" name=\"figure21\" width=\"453\" height=\"243\" id=\"figure21\"></a>\n</p><p align=\"center\"><strong>Figure 21:</strong> Task precondition - data existence\n</p><h2>Overview</h2>\n<p align=\"justify\">The operation of this pattern is illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp34.php#figure21\" target=\"_blank\">21</a>. Typically data existence preconditions are specified on task input parameters (footnote<a href=\"http://www.workflowpatterns.com/patterns/data/footnotes.php#foot12\" name=\"foot12\" class=\"style1\" id=\"foot12\" target=\"_blank\">12) </a> in the process model as illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp34.php#figure21\" target=\"_blank\">21 </a>. In this context, data existence refers to the ability to determine whether a required parameter has been defined and provided to the task at the time of task invocation and whether it has been assigned a value. One of five actions are possible where missing parameters are identified: </p>\n<div align=\"justify\">\n  <ul>\n    <li>Defer task commencement until they are available.\n    </li><li>Specify default values for parameters to take when they are not available.\n    </li><li>Request values for them interactively from PAIS users.\n    </li><li>Skip this task and trigger the following task(s).\n    </li><li>Kill this thread of execution in the workflow case. </li>\n  </ul>\n</div>\n<h2>Context</h2>\n<p>There are no specific context conditions associated with this pattern. </p>\n<h2>Implementation</h2>\n<p>This pattern is implemented in a variety of different ways amongst the offerings examined. Staffware provides the ability to set default values for fields which do not have a value recorded for them via the initial form command facility but only for those tasks that have forms associated with them. Conditional actions can also be specified which route control-flow around (i.e. skip) a task where required data elements are not available. FLOWer provides the milestone construct which, amongst other capabilities, provides data synchronization support allowing the commencement of a subsequent task to be deferred until nominated data elements have a value specified. COSA also provides transition conditions on incoming arcs and in conjunction with the CONDITION.TOKEN and STD tool agents, it enables the passing of control to a task to be delayed until the transition condition (which could be data element existence) is achieved. iPlanet supports this form of precondition using Trigger methods which are evaluated when a task receives the thread of control to determine whether it can commence. BPMN supports the specification of data existence preconditions using the RequiredForStart attribute for Data Objects. UML 2.0 ADs allow preconditions to be specified for actions and activities using OCL expressions. BPEL provides exception handling facilities where an attempt to utilize an uninitialized variable is detected. These can be indirectly used to provide data existence precondition support at task level but require each task to be defined as having its own scope with a dedicated fault handler to manage the uninitialized parameters accordingly.</p>\n<h2>Issues</h2>\n<p align=\"justify\">A significant consideration in managing preconditions that relate to data existence is being able to differentiate between data elements that have an undefined value and those that are merely empty or null. </p>\n<h2>Solutions</h2>\n<p align=\"justify\">Staffware addresses this issue by using a special value (SW NA) for data elements that are undefined. Uninitialized fields have this value by default and it can be tested for in workflow expressions and conditions. FLOWer also provides facilities to test whether data elements have been assigned a value. BPEL provides internal capabilities to recognize uninitialized data elements although these facilities are not directly accessible to process developers. Other workflow engines examined do not differentiate between undefined and empty (or null) values.</p>\n<h2>Evaluation Criteria</h2>\n<p>An offering achieves full support if it has a construct that satisfies the description of the pattern. It rates as partial support if the precondition cannot be satisfied declaratively as part of the task declaration.</p>" ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  gen:hasEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:label          "hasEffectOnQuality" ;
          rdfs:range          gen:ArchitecturalQuality ;
          rdfs:subPropertyOf  gen:hasEffectOn ;
          owl:inverseOf       gen:isQualityAffectedBy .
  
  :Role_operations_engineer
          a           cont:Role ;
          rdfs:label  "operations engineer" .
  
  :ArchitecturalQuality_resilience
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "resilience" , "Resilience" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_maintenance_interface , :DesignPattern_small_patches , :DesignPattern_error_containment_barrier , :DesignDecision_ad-017__core_services , :DesignPattern_routine_audits , :DesignPattern_routine_maintenance , :DesignPattern_realistic_threshold , :DesignPattern_slow_it_down , :DesignPattern_error_correcting_code , :DesignPattern_someone_in_charge , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_final_handling , :DesignPattern_remote_storage , :DesignPattern_software_update , :DesignPattern_3-category_logging , :DesignPattern_routine_exercises , :DesignPattern_leaky_bucket_counter , :DesignPattern_limit_retries , :DesignPattern_watchdog , :DesignDecision_ad-012__deployment_schemes , :DesignPattern_similarity_detection , :DesignPattern_fault_correlation , :DesignPattern_rollforward , :DesignPattern_resource_allocation , :DesignPattern_existing_metrics , :DesignPattern_correcting_audits , :DesignPattern_quarantine , :DesignPattern_circuit_breaker , :DesignPattern_marked_data , :DesignPattern_maximize_human_participation , :DesignPattern_checksum , :DesignTactic_error_detection , :DesignPattern_reconfiguration , :DesignDecision_ad-006__failure_handling , :DesignPattern_return_to_reference_point , :DesignPattern_recovery_blocks , :DesignPattern_compensating_transaction_pattern , :DesignPattern_concentrated_recovery , :DesignPattern_restart , :DesignPattern_queue_for_resources , :DesignPattern_leader_election_pattern , :DesignPattern_retry_pattern , :DesignPattern_service_orientation , :DesignPattern_escalation , :DesignPattern_units_of_mitigation , :DesignPattern_expansive_automatic_controls , :DesignPattern_rollback , :DesignPattern_revise_procedure , :DesignPattern_compensation , :DesignPattern_treshold_analysis , :DesignTactic_fault_handling , :DesignPattern_fault_isolation , :DesignPattern_reintegration , :DesignPattern_deferrable_work , :DesignPattern_fault_diagnosis , :DesignPattern_minimize_human_intervention , :DesignPattern_checkpoint , :DesignPattern_redundancy , :DesignPattern_root_cause_analysis , :DesignPattern_acknowledgement , :DesignPattern_error_handler , :DesignPattern_reinitialization , :DesignPattern_finish_work_in_progress , :DesignPattern_heartbeat , :DesignPattern_parameter_checking , :DesignTactic_error_handling , :DesignPattern_temporal_analytics , :DesignPattern_fault_observer , :DesignPattern_memento , :DesignPattern_protective_automatic_controls , :DesignPattern_riding_over_transients , :DesignPattern_voting , :DesignPattern_fresh_work_before_stale , :DesignPattern_reproducible_error , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_indiviuals_decide_timing , :DesignPattern_failover , :DesignPattern_claim_check ;
          gen:relatedQuality       :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance ;
          gen:wikiEntry            "<p><strong>Resilience</strong></p>\n<p>Resilience reflects the ability of a system or compoent to recover its normal stateafter being pushed into an abnormal (or failed) state.&nbsp;</p>" ;
          spec:requiredBy          :Domain_cloud_computing , :Domain_abstract .
  
  :DesignDecision_ad-122__analytics_service
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-122: Analytics service" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Facade to the analytics-service</strong></p>\n<p style=\"font-size: small;\">The communication with the Analytics Service is managed by the facade classes prototypically depicted in the class diagram below. Each type of analysis (e.g., correlation analysis or trend analysis) is managed by a different facade, which is concerned with the preparation of the input parameters as well as with formatting the results of the analysis. This way, it is possible to provide connections to different analytics services, which use different input/output data formats and communication models.&nbsp;The analytics component of the Benchmarks system uses different statistical analyses for identifying relations and dependencies within the data. In this version, two types of analyses are supported: correlation and trend analysis.</p>\n<p style=\"font-size: small;\">For carrying out the correlation and trend analyses, a specialized statistics engine like R<a target=\"_blank\" name=\"_ftnref1\" style=\"font-size: small;\"></a>[1] and&nbsp;RapidMiner<a target=\"_blank\" name=\"_ftnref2\" style=\"font-size: small;\"></a>[2]&nbsp;can be used. This allows for extending the range of possible analyses indefinetely in future versions of the system. These statistics engines can be exposed as services and accessed via a TCP/IP connection. For the Benchmarks use case, the RServe<a href=\"#_ftn3\" name=\"_ftnref3\" style=\"font-size: small;\">[3]</a>&nbsp;TCP/IP connector for Java was used.&nbsp;</p>\n<p style=\"font-size: small;\">The \"facade\" design pattern provides a unified and simplified interface to a set of internal interfaces of&nbsp;a subsystem. For&nbsp;these reasons, it proves as an efficient integration solution for the Analytics service. The Analytics service (e.g., R Service) is invoked&nbsp;from the facade classes shown in the class diagram below. The facades TrendAnalysis and CorrelationAnalysis use a <i>QueryManager</i>&nbsp;to retrieve the data from the DWH. The facade promotes loose coupling because it hides the underlying subsystem and reduces complexity because several interfaces are combined into one. In addition, the subsystem can be easily extended by virtue of&nbsp;loose coupling.</p>\n<p style=\"font-size: small;\"><img style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernBM/AnalyticsServiceprovider.png\" alt=\"\" width=\"628\" height=\"407\"></p>\n<p style=\"text-align: center; font-size: small;\">Analytics Service Provider class, which is part of the Analytics services component of the system (see component view).</p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Notes:</strong></p>\n<p style=\"font-size: small;\"><a href=\"#_ftnref1\" name=\"_ftn1\" style=\"font-size: small;\">[1]</a> R Statistics and Data Mining Tool: <a href=\"http://www.r-project.org/\" style=\"font-size: small;\">http://www.r-project.org/</a></p>\n<p style=\"font-size: small;\"><a href=\"#_ftnref2\" name=\"_ftn2\" style=\"font-size: small;\">[2]</a> RapidMiner Data Mining: <a href=\"https://rapidminer.com/\" style=\"font-size: small;\">https://rapidminer.com/</a></p>\n<p style=\"font-size: small;\"><a href=\"#_ftnref3\" name=\"_ftn3\" style=\"font-size: small;\">[3]</a> RServe TCP/IP Server für R: <a href=\"https://rforge.net/Rserve/doc.html\" style=\"font-size: small;\">https://rforge.net/Rserve/doc.html</a></p>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-102__tool_integration , :Domain_ar-105__reports_and_analytics ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability ;
          spec:useDecisionTactic          :DesignTactic_tool_integration , :DesignTactic_reduce_dependencies .
  
  :ArchitecturalQuality_interoperability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Interoperability" , "interoperability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_ad-111__synch_asynch_communication , :DesignPattern_service-oriented_architecture , :DesignDecision_kdd-03__platform_architecture , :DesignTactic_messaging , :DesignPattern_timeout-based_delivery , :DesignPattern_tenant-isolated_component , :DesignPattern_bridge , :DesignDecision_ad-009__restful_api_registry , :DesignPattern_shared_component , :DesignPattern_platform_invoke , :DesignPattern_content_enricher , :DesignDecision_kdd-05__main_process , :DesignPattern_dedicated_component , :DesignPattern_transaction-based_delivery , :DesignPattern_claim_check , :DesignPattern_content-based_router , :DesignPattern_compliant_data_replication , :DesignPattern_adapter , :DesignTactic_system_integration , :DesignPattern_publish-subscribe_channel , :DesignDecision_ad-202__components , :DesignPattern_layered_architecture , :DesignPattern_exactly-once_delivery , :DesignDecision_ad-121__data_querying , :DesignPattern_integration_provider , :DesignTactic_reduce_coupling , :DesignPattern_normalizer , :DesignPattern_at-least-once_delivery , :DesignDecision_kdd-22 , :DesignPattern_application_component_proxy , :DesignPattern_proxy , :DesignTactic_multitenancy , :DesignDecision_kdd-11 , :DesignPattern_content_filter , :DesignPattern_mediator , :DesignDecision_ad-110__filter-based_queries , :DesignPattern_external_configuration_store_pattern , :DesignDecision_ad-122__analytics_service , :DesignPattern_facade , :DesignTactic_globalization , :DesignDecision_kdd-07 , :DesignPattern_provider_adapter , :DesignDecision_kdd-02__native_code_invocation , :DesignPattern_envelope_wrapper , :DesignDecision_kdd-08__adaptation_process , :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_canonical_data_mapper , :DesignDecision_kdd-02__use_camunda_suite , :DesignDecision_kdd-01__high_level_architecture , :DesignTactic_message_transformation ;
          gen:relatedQuality       :ArchitecturalQuality_usability , :ArchitecturalQuality_testability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_extensibility ;
          gen:wikiEntry            "<p><strong>Interoperability</strong></p>\n<p>Interoperability is the ability of a system or different systems to operate successfully by communicating and exchanging information with other external systems written and run by external parties. An interoperable system makes it easier to exchange and reuse information internally as well as externally.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658094.aspx\">https://msdn.microsoft.com/en-us/library/ee658094.aspx</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_confidentiality
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Confidentiality" , "confidentiality" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_federated_identity_pattern , :DesignTactic_authorization , :DesignPattern_information_obscurity , :DesignPattern_public_key_encryption , :DesignPattern_access_control , :DesignPattern_private_key_encryption , :DesignPattern_valet_key_pattern , :DesignDecision_add-06__secret_project_urls , :DesignPattern_secure_channels , :DesignPattern_identity_credentials , :DesignTactic_encryption , :DesignPattern_secret_url ;
          gen:relatedQuality       :ArchitecturalQuality_accountability , :ArchitecturalQuality_security , :ArchitecturalQuality_integrity ;
          gen:wikiEntry            "Data should be protected from unauthorized access. Confidentiality is usually achieved by applying some form of encryption to data and to communication links in order to resist to attacks. Encryption provides extra protection to persistently maintained data beyond that available from authorization.  [Rmon Sinnema - Confidentiality] Confidentiality refers to efforts made to prevent unauthorized disclosure of informationto thoase woho do not have the need or right to see it. We should always make sure to adhere to the principle of least privilege and only give access to those people who really have a need for it." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignDecision_ad-007__wso2_caching
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-007: WSO2 Caching" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"padding-bottom: 1em; line-height: 1.3em; font-size: small;\"><span style=\"font-weight: 700; font-size: small;\">Caching</span></p><p style=\"padding-bottom: 1em; line-height: 1.3em; font-size: small;\">Use the WSO2 built-in caching features.</p><p style=\"padding-bottom: 1em; line-height: 1.3em; font-size: small;\">The WSO2 gateway implementation has&nbsp;several caching capabilities/strategies:&nbsp;</p><ul style=\"line-height: normal; font-size: small;\"><li style=\"font-size: small;\"><span style=\"font-weight: 700; font-size: small;\">API Gateway Cache</span>: Enables or disables caching of token information. It reduces the number of requests sent to the key server.</li><li style=\"font-size: small;\"><span style=\"font-weight: 700; font-size: small;\">Resource Cache:&nbsp;</span>This cache can be used to enable caching meta-information of REST resources, e.g. throttling information or authentication type.</li><li style=\"font-size: small;\"><span style=\"font-weight: 700; font-size: small;\">Key Manager Cache:&nbsp;</span>There are several options available to cache information regarding authorization and authentication also at key server side. This is slower than using API gateway cache, but has the advantage – especially in DMZ type setups, where the key server is not exposed to external networks – that no key information is cached at the gateway.</li><li style=\"font-size: small;\"><span style=\"font-weight: 700; font-size: small;\">Response Cache:&nbsp;</span>This type of cache uses an ESB mediator to cache response messages for each API. This cache can be enabled in the API publisher while defining an API or in the ESB configuration where also parameters like the number and maximum size of stored elements can be modified. Based on hashing of the request the mediator implementation decides if a response can be reused or not. This hashing algorithms can be replaced.</li></ul>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-026__caching_and_performance ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_caching .
  
  :DesignPattern_representational_state_transfer
          a                              gen:DesignPattern ;
          rdfs:label                     "Representational State Transfer" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_modifiability , :ArchitecturalQuality_visibility , :ArchitecturalQuality_performance , :ArchitecturalQuality_portability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf            :DesignTactic_resource_orientation ;
          gen:wikiEntry                  "<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Representational state transfer</h1>\n\t\t\t\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\">From Wikipedia, the free encyclopedia</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#mw-head\" target=\"_blank\">navigation</a>, \t\t\t\t\t<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#p-search\" target=\"_blank\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"hatnote\">\"REST\" redirects here. For other uses, see <a href=\"http://en.wikipedia.org/wiki/Rest_(disambiguation)\" title=\"Rest (disambiguation)\" class=\"mw-redirect\" target=\"_blank\">Rest</a>.</div>\n<table class=\"metadata plainlinks ambox ambox-move\" role=\"presentation\">\n<tbody><tr>\n<td class=\"mbox-image\">\n<div style=\"width:52px\"><img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Mergefrom.svg/50px-Mergefrom.svg.png\" width=\"50\" height=\"20\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Mergefrom.svg/75px-Mergefrom.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Mergefrom.svg/100px-Mergefrom.svg.png 2x\" data-file-width=\"50\" data-file-height=\"20\"></div>\n</td>\n<td class=\"mbox-text\"><span class=\"mbox-text-span\">It has been suggested that <i><a href=\"http://en.wikipedia.org/wiki/Overview_of_RESTful_API_Description_Languages\" title=\"Overview of RESTful API Description Languages\" target=\"_blank\">Overview of RESTful API Description Languages</a></i> be <a href=\"http://en.wikipedia.org/wiki/Wikipedia:Merging\" title=\"Wikipedia:Merging\" target=\"_blank\">merged</a> into this article. (<a href=\"http://en.wikipedia.org/wiki/Talk:Representational_state_transfer#Proposed_merge_with_Overview_of_RESTful_API_Description_Languages\" title=\"Talk:Representational state transfer\" target=\"_blank\">Discuss</a>) <small><i>Proposed since May 2015.</i></small></span></td>\n</tr>\n</tbody></table>\n<p><b>Representational State Transfer</b> (<b>REST</b>) is a <a href=\"http://en.wikipedia.org/wiki/Software_architecture_styles_and_patterns\" title=\"Software architecture styles and patterns\" class=\"mw-redirect\" target=\"_blank\">software architecture style</a> consisting of guidelines and best practices for creating <a href=\"http://en.wikipedia.org/wiki/Scalability\" title=\"Scalability\" target=\"_blank\">scalable</a> <a href=\"http://en.wikipedia.org/wiki/Web_service\" title=\"Web service\" target=\"_blank\">web services</a>.<sup id=\"cite_ref-Fielding-Taylor_2000_1-0\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Taylor_2000-1\" target=\"_blank\"><span>[</span>1<span>]</span></a></sup><sup id=\"cite_ref-Richardson_2007_2-0\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Richardson_2007-2\" target=\"_blank\"><span>[</span>2<span>]</span></a></sup> REST is a coordinated set of constraints applied to the design of components in a distributed <a href=\"http://en.wikipedia.org/wiki/Hypermedia\" title=\"Hypermedia\" target=\"_blank\">hypermedia</a> system that can lead to a more performant and maintainable <a href=\"http://en.wikipedia.org/wiki/Software_architecture\" title=\"Software architecture\" target=\"_blank\">architecture</a>.<sup id=\"cite_ref-Fielding-Ch5_3-0\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch5-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup></p>\n<p>REST has gained widespread acceptance across the Web <sup id=\"cite_ref-4\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-4\" target=\"_blank\"><span>[</span>4<span>]</span></a></sup> as a simpler alternative to <a href=\"http://en.wikipedia.org/wiki/SOAP\" title=\"SOAP\" target=\"_blank\">SOAP</a> and <a href=\"http://en.wikipedia.org/wiki/WSDL\" title=\"WSDL\" class=\"mw-redirect\" target=\"_blank\">WSDL</a>-based Web services. RESTful systems typically, but not always, communicate over the <a href=\"http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\" target=\"_blank\">Hypertext Transfer Protocol</a> with the same <a href=\"http://en.wikipedia.org/wiki/HTTP_verbs\" title=\"HTTP verbs\" class=\"mw-redirect\" target=\"_blank\">HTTP verbs</a> (GET, POST, PUT, DELETE, etc.) used by web browsers to retrieve <a href=\"http://en.wikipedia.org/wiki/Web_page\" title=\"Web page\" target=\"_blank\">web pages</a> and send data to remote servers.<sup id=\"cite_ref-Fielding-Ch5_3-1\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch5-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup></p>\n<p>The REST architectural style was developed by <a href=\"http://en.wikipedia.org/wiki/World_Wide_Web_Consortium\" title=\"World Wide Web Consortium\" target=\"_blank\">W3C</a> Technical Architecture Group (TAG) in parallel with <a href=\"http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" title=\"Hypertext Transfer Protocol\" target=\"_blank\">HTTP</a> 1.1, based on the existing design of HTTP 1.0.<sup id=\"cite_ref-Fielding-discuss_5-0\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-discuss-5\" target=\"_blank\"><span>[</span>5<span>]</span></a></sup> The <a href=\"http://en.wikipedia.org/wiki/World_Wide_Web\" title=\"World Wide Web\" target=\"_blank\">World Wide Web</a> represents the largest implementation of a system conforming to the REST architectural style.</p>\n<p>A widely established design pattern for REST interfaces involves a number of <i>resources</i> (e.g. '/person/paul') that can be operated upon with standard <a href=\"http://en.wikipedia.org/wiki/HTTP_verbs\" title=\"HTTP verbs\" class=\"mw-redirect\" target=\"_blank\">HTTP verbs</a> (e.g. \"DELETE /person/paul\").</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#\" id=\"togglelink\" target=\"_blank\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_properties\" target=\"_blank\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Architectural properties</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints\" target=\"_blank\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Architectural constraints</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Client.E2.80.93server\" target=\"_blank\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">Client–server</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Stateless\" target=\"_blank\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">Stateless</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Cacheable\" target=\"_blank\"><span class=\"tocnumber\">2.3</span> <span class=\"toctext\">Cacheable</span></a></li>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Layered_system\" target=\"_blank\"><span class=\"tocnumber\">2.4</span> <span class=\"toctext\">Layered system</span></a></li>\n<li class=\"toclevel-2 tocsection-7\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Code_on_demand_.28optional.29\" target=\"_blank\"><span class=\"tocnumber\">2.5</span> <span class=\"toctext\">Code on demand (optional)</span></a></li>\n<li class=\"toclevel-2 tocsection-8\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Uniform_interface\" target=\"_blank\"><span class=\"tocnumber\">2.6</span> <span class=\"toctext\">Uniform interface</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-9\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Applied_to_web_services\" target=\"_blank\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">Applied to web services</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-10\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Example\" target=\"_blank\"><span class=\"tocnumber\">3.1</span> <span class=\"toctext\">Example</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-11\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#See_also\" target=\"_blank\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-12\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#References\" target=\"_blank\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-13\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Further_reading\" target=\"_blank\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">Further reading</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Architectural_properties\">Architectural properties</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=1\" title=\"Edit section: Architectural properties\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The architectural properties affected by the constraints of the REST architectural style are:<sup id=\"cite_ref-Fielding-Ch5_3-2\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch5-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup><sup id=\"cite_ref-SOA_with_REST_6-0\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-SOA_with_REST-6\" target=\"_blank\"><span>[</span>6<span>]</span></a></sup></p>\n<ul>\n<li>Performance - component interactions can be the dominant factor in user-perceived performance and network efficiency.<sup id=\"cite_ref-Fielding-Ch2_7-0\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch2-7\" target=\"_blank\"><span>[</span>7<span>]</span></a></sup></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Scalability\" title=\"Scalability\" target=\"_blank\">Scalability</a> to support large numbers of components and interactions among components\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Roy_Fielding\" title=\"Roy Fielding\" target=\"_blank\">Roy Fielding</a>, one of the principal authors of the HTTP specification, describes REST's effect on scalability thus:</li>\n</ul>\n</li>\n</ul>\n<blockquote class=\"toccolours\" style=\"float:none; padding: 10px 15px 10px 15px; display:table;\">\n<p>REST's client–server separation of concerns simplifies component implementation, reduces the complexity of <a href=\"http://en.wikipedia.org/wiki/Connector_(computer_science)\" title=\"Connector (computer science)\" class=\"mw-redirect\" target=\"_blank\">connector</a> semantics, improves the effectiveness of performance tuning, and increases the scalability of pure server components. Layered system constraints allow intermediaries—<a href=\"http://en.wikipedia.org/wiki/Proxy_server\" title=\"Proxy server\" target=\"_blank\">proxies</a>, <a href=\"http://en.wikipedia.org/wiki/Gateway_(telecommunications)\" title=\"Gateway (telecommunications)\" target=\"_blank\">gateways</a>, and <a href=\"http://en.wikipedia.org/wiki/Firewall_(computing)\" title=\"Firewall (computing)\" target=\"_blank\">firewalls</a>—to be introduced at various points in the communication without changing the interfaces between components, thus allowing them to assist in communication translation or improve performance via large-scale, shared caching. REST enables intermediate processing by constraining messages to be self-descriptive: interaction is stateless between requests, standard methods and media types are used to indicate semantics and exchange information, and responses explicitly indicate <a href=\"http://en.wikipedia.org/wiki/Web_cache\" title=\"Web cache\" target=\"_blank\">cacheability</a>.<sup id=\"cite_ref-Fielding-Ch5_3-3\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch5-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup></p>\n</blockquote>\n<ul>\n<li>Simplicity of <a href=\"http://en.wikipedia.org/wiki/Interface_(computer_science)\" title=\"Interface (computer science)\" class=\"mw-redirect\" target=\"_blank\">interfaces</a></li>\n<li>Modifiability of components to meet changing needs (even while the application is running)</li>\n<li>Visibility of communication between components by service agents</li>\n<li>Portability of components by moving program code with the data</li>\n<li><a href=\"http://en.wiktionary.org/wiki/reliability\" class=\"extiw\" title=\"wikt:reliability\" target=\"_blank\">Reliability</a> is the resistance to failure at the system level in the presence of failures within components, connectors, or data<sup id=\"cite_ref-Fielding-Ch2_7-1\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch2-7\" target=\"_blank\"><span>[</span>7<span>]</span></a></sup></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Architectural_constraints\">Architectural constraints</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=2\" title=\"Edit section: Architectural constraints\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The architectural properties of REST are realized by applying specific interaction constraints to components, connectors, and data elements.<sup id=\"cite_ref-Fielding-Ch5_3-4\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch5-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup><sup id=\"cite_ref-SOA_with_REST_6-1\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-SOA_with_REST-6\" target=\"_blank\"><span>[</span>6<span>]</span></a></sup> The formal REST constraints are:</p>\n<h3><span class=\"mw-headline\" id=\"Client.E2.80.93server\">Client–server</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=3\" title=\"Edit section: Client–server\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"hatnote boilerplate seealso\">See also: <a href=\"http://en.wikipedia.org/wiki/Client%E2%80%93server_model\" title=\"Client–server model\" target=\"_blank\">Client–server model</a></div>\n<p>A uniform interface separates clients from servers. This <a href=\"http://en.wikipedia.org/wiki/Separation_of_concerns\" title=\"Separation of concerns\" target=\"_blank\">separation of concerns</a> means that, for example, clients are not concerned with data storage, which remains internal to each server, so that the <a href=\"http://en.wikipedia.org/wiki/Software_portability\" title=\"Software portability\" target=\"_blank\">portability</a> of client code is improved. Servers are not concerned with the user interface or user state, so that servers can be simpler and more <a href=\"http://en.wikipedia.org/wiki/Scalability\" title=\"Scalability\" target=\"_blank\">scalable</a>. Servers and clients may also be replaced and developed independently, as long as the interface between them is not altered.</p>\n<h3><span class=\"mw-headline\" id=\"Stateless\">Stateless</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=4\" title=\"Edit section: Stateless\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"hatnote boilerplate seealso\">See also: <a href=\"http://en.wikipedia.org/wiki/Stateless_protocol\" title=\"Stateless protocol\" target=\"_blank\">Stateless protocol</a></div>\n<p>The client–server communication is further constrained by no client context being stored on the server between requests. Each request from any client contains all the information necessary to service the request, and session state is held in the client. The session state can be transferred by the server to another service such as a database to maintain a persistent state for a period and allow authentication. The client begins sending requests when it is ready to make the transition to a new state. While one or more requests are outstanding, the client is considered to be <i>in transition</i>. The representation of each application state contains links that may be used the next time the client chooses to initiate a new state-transition.<sup id=\"cite_ref-8\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-8\" target=\"_blank\"><span>[</span>8<span>]</span></a></sup></p>\n<h3><span class=\"mw-headline\" id=\"Cacheable\">Cacheable</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=5\" title=\"Edit section: Cacheable\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"hatnote boilerplate seealso\">See also: <a href=\"http://en.wikipedia.org/wiki/Web_cache\" title=\"Web cache\" target=\"_blank\">Web cache</a></div>\n<p>As on the World Wide Web, clients can cache responses. Responses must therefore, implicitly or explicitly, define themselves as cacheable, or not, to prevent clients from reusing stale or inappropriate data in response to further requests. Well-managed caching partially or completely eliminates some client–server interactions, further improving scalability and performance.</p>\n<h3><span class=\"mw-headline\" id=\"Layered_system\">Layered system</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=6\" title=\"Edit section: Layered system\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"hatnote boilerplate seealso\">See also: <a href=\"http://en.wikipedia.org/wiki/Layered_system\" title=\"Layered system\" target=\"_blank\">Layered system</a></div>\n<p>A client cannot ordinarily tell whether it is connected directly to the end server, or to an intermediary along the way. Intermediary servers may improve system scalability by enabling load balancing and by providing shared caches. They may also enforce security policies.</p>\n<h3><span class=\"mw-headline\" id=\"Code_on_demand_.28optional.29\">Code on demand (optional)</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=7\" title=\"Edit section: Code on demand (optional)\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"hatnote boilerplate seealso\">See also: <a href=\"http://en.wikipedia.org/wiki/Client-side_scripting\" title=\"Client-side scripting\" target=\"_blank\">Client-side scripting</a></div>\n<p>Servers can temporarily extend or customize the functionality of a client by the transfer of executable code. Examples of this may include compiled components such as <a href=\"http://en.wikipedia.org/wiki/Java_applet\" title=\"Java applet\" target=\"_blank\">Java applets</a> and client-side scripts such as <a href=\"http://en.wikipedia.org/wiki/JavaScript\" title=\"JavaScript\" target=\"_blank\">JavaScript</a>. \"Code on demand\" is the only optional constraint of the REST architecture.</p>\n<h3><span class=\"mw-headline\" id=\"Uniform_interface\">Uniform interface</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=8\" title=\"Edit section: Uniform interface\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>The uniform interface constraint is fundamental to the design of any REST service.<sup id=\"cite_ref-Fielding-Ch5_3-5\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch5-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup> The uniform interface simplifies and decouples the architecture, which enables each part to evolve independently. The four constraints for this uniform interface are:</p>\n<dl>\n<dt>Identification of resources</dt>\n<dd>Individual resources are identified in requests, for example using <a href=\"http://en.wikipedia.org/wiki/Uniform_resource_identifier\" title=\"Uniform resource identifier\" target=\"_blank\">URIs</a> in web-based REST systems. The resources themselves are conceptually separate from the representations that are returned to the client. For example, the server may send data from its database as <a href=\"http://en.wikipedia.org/wiki/HTML\" title=\"HTML\" target=\"_blank\">HTML</a>, <a href=\"http://en.wikipedia.org/wiki/XML\" title=\"XML\" target=\"_blank\">XML</a> or <a href=\"http://en.wikipedia.org/wiki/JSON\" title=\"JSON\" target=\"_blank\">JSON</a>, none of which are the server's internal representation, and it is the same one resource regardless.</dd>\n<dt>Manipulation of resources through these representations</dt>\n<dd>When a client holds a representation of a resource, including any <a href=\"http://en.wikipedia.org/wiki/Metadata\" title=\"Metadata\" target=\"_blank\">metadata</a> attached, it has enough information to modify or delete the resource.</dd>\n<dt>Self-descriptive messages</dt>\n<dd>Each message includes enough information to describe how to process the message. For example, which parser to invoke may be specified by an <a href=\"http://en.wikipedia.org/wiki/Internet_media_type\" title=\"Internet media type\" target=\"_blank\">Internet media type</a> (previously known as a <a href=\"http://en.wikipedia.org/wiki/MIME\" title=\"MIME\" target=\"_blank\">MIME</a> type). Responses also explicitly indicate their cacheability.<sup id=\"cite_ref-Fielding-Ch5_3-6\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Fielding-Ch5-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup></dd>\n<dt>Hypermedia as the engine of application state (<a href=\"http://en.wikipedia.org/wiki/HATEOAS\" title=\"HATEOAS\" target=\"_blank\">HATEOAS</a>)</dt>\n<dd>Clients make state transitions only through actions that are dynamically identified within hypermedia by the server (e.g., by <a href=\"http://en.wikipedia.org/wiki/Hyperlink\" title=\"Hyperlink\" target=\"_blank\">hyperlinks</a> within <a href=\"http://en.wikipedia.org/wiki/Hypertext\" title=\"Hypertext\" target=\"_blank\">hypertext</a>). Except for simple fixed entry points to the application, a client does not assume that any particular action is available for any particular resources beyond those described in representations previously received from the server.</dd>\n</dl>\n<p>One can characterise applications conforming to the REST constraints described in this section as \"RESTful\".<sup id=\"cite_ref-Richardson_2007_2-1\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Richardson_2007-2\" target=\"_blank\"><span>[</span>2<span>]</span></a></sup> If a service violates any of the required constraints, it cannot be considered RESTful.</p>\n<p>Complying with these constraints, and thus conforming to the REST architectural style, enables any kind of distributed hypermedia system to have desirable <a href=\"http://en.wikipedia.org/wiki/Non-functional_requirement\" title=\"Non-functional requirement\" target=\"_blank\">non-functional properties</a>, such as performance, scalability, simplicity, modifiability, visibility, portability, and reliability.</p>\n<h2><span class=\"mw-headline\" id=\"Applied_to_web_services\">Applied to web services</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=9\" title=\"Edit section: Applied to web services\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Web service APIs that adhere to the <a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints\" target=\"_blank\">REST architectural constraints</a> are called <a href=\"http://en.wikipedia.org/w/index.php?title=RESTful_APIs&amp;action=edit&amp;redlink=1\" class=\"new\" title=\"RESTful APIs (page does not exist)\" target=\"_blank\">RESTful APIs</a>. HTTP based RESTful APIs are defined with these aspects:</p>\n<ul>\n<li>base <a href=\"http://en.wikipedia.org/wiki/URI\" title=\"URI\" class=\"mw-redirect\" target=\"_blank\">URI</a>, such as <code>http://example.com/resources/</code></li>\n<li>an <a href=\"http://en.wikipedia.org/wiki/Internet_media_type\" title=\"Internet media type\" target=\"_blank\">Internet media type</a> for the data. This is often <a href=\"http://en.wikipedia.org/wiki/JSON\" title=\"JSON\" target=\"_blank\">JSON</a> but can be any other valid Internet media type (e.g. XML, Atom, microformats, images, etc.)</li>\n<li>standard <a href=\"http://en.wikipedia.org/wiki/HTTP_method\" title=\"HTTP method\" class=\"mw-redirect\" target=\"_blank\">HTTP methods</a> (e.g., GET, PUT, POST, or DELETE)</li>\n<li>hypertext links to reference state</li>\n<li>hypertext links to reference related resources<sup id=\"cite_ref-9\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-9\" target=\"_blank\"><span>[</span>9<span>]</span></a></sup></li>\n</ul>\n<h3><span class=\"mw-headline\" id=\"Example\">Example</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=10\" title=\"Edit section: Example\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>The following table shows the HTTP methods that are typically used to implement a RESTful API.</p>\n<table class=\"wikitable\">\n<caption>RESTful API HTTP methods</caption>\n<tbody><tr>\n<th>Resource</th>\n<th>GET</th>\n<th>PUT</th>\n<th>POST</th>\n<th>DELETE</th>\n</tr>\n<tr>\n<th>Collection URI, such as <code>http://api.example.com/v1/resources/</code></th>\n<td><b>List</b> the URIs and perhaps other details of the collection's members.</td>\n<td><b>Replace</b> the entire collection with another collection.</td>\n<td><b>Create</b> a new entry in the collection. The new entry's URI is assigned automatically and is usually returned by the operation.<sup id=\"cite_ref-thereisnorightway_10-0\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-thereisnorightway-10\" target=\"_blank\"><span>[</span>10<span>]</span></a></sup></td>\n<td><b>Delete</b> the entire collection.</td>\n</tr>\n<tr>\n<th>Element URI, such as <code>http://api.example.com/v1/resources/item17</code></th>\n<td><b>Retrieve</b> a representation of the addressed member of the collection, expressed in an appropriate Internet media type.</td>\n<td><b>Replace</b> the addressed member of the collection, or if it does not exist, <b>create</b> it.</td>\n<td>Not generally used. Treat the addressed member as a collection in its own right and <b>create</b> a new entry in it.<sup id=\"cite_ref-thereisnorightway_10-1\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-thereisnorightway-10\" target=\"_blank\"><span>[</span>10<span>]</span></a></sup></td>\n<td><b>Delete</b> the addressed member of the collection.</td>\n</tr>\n</tbody></table>\n<p>The PUT and DELETE methods are referred to as <a href=\"http://en.wikipedia.org/wiki/Idempotent#Computer_science_meaning\" title=\"Idempotent\" class=\"mw-redirect\" target=\"_blank\">idempotent</a>, meaning that the operation will produce the same result no matter how many times it is repeated. The GET method is a <a href=\"http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Safe_methods\" title=\"Hypertext Transfer Protocol\" target=\"_blank\">safe method</a> (or <a href=\"http://en.wiktionary.org/wiki/nullipotent\" class=\"extiw\" title=\"wiktionary:nullipotent\" target=\"_blank\"><i>nullipotent</i></a>), meaning that calling it produces no <a href=\"http://en.wikipedia.org/wiki/Side_effect_(computer_science)\" title=\"Side effect (computer science)\" target=\"_blank\">side-effects</a>. In other words, retrieving or accessing a record does not change it.</p>\n<p>Unlike <a href=\"http://en.wikipedia.org/wiki/SOAP\" title=\"SOAP\" target=\"_blank\">SOAP</a>-based web services, there is no \"official\" standard for RESTful web APIs.<sup id=\"cite_ref-Elkstein_11-0\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Elkstein-11\" target=\"_blank\"><span>[</span>11<span>]</span></a></sup> This is because REST is an architectural style, while SOAP is a protocol. Even though REST is not a standard <i>per se</i>, most RESTful implementations make use of standards such as <a href=\"http://en.wikipedia.org/wiki/HTTP\" title=\"HTTP\" class=\"mw-redirect\" target=\"_blank\">HTTP</a>, <a href=\"http://en.wikipedia.org/wiki/URI\" title=\"URI\" class=\"mw-redirect\" target=\"_blank\">URI</a>, <a href=\"http://en.wikipedia.org/wiki/JSON\" title=\"JSON\" target=\"_blank\">JSON</a>, and <a href=\"http://en.wikipedia.org/wiki/XML\" title=\"XML\" target=\"_blank\">XML</a>.<sup id=\"cite_ref-Elkstein_11-1\" class=\"reference\"><a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#cite_note-Elkstein-11\" target=\"_blank\"><span>[</span>11<span>]</span></a></sup></p>\n<h2><span class=\"mw-headline\" id=\"See_also\">See also</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"http://en.wikipedia.org/w/index.php?title=Representational_state_transfer&amp;action=edit&amp;section=11\" title=\"Edit section: See also\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Open_Data_Protocol\" title=\"Open Data Protocol\" target=\"_blank\">OData</a> – Protocol for REST APIs</li>\n<li><a href=\"http://en.wikipedia.org/wiki/RSDL\" title=\"RSDL\" target=\"_blank\">RSDL (RESTful Service Description Language)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Semantic_URL\" title=\"Semantic URL\" target=\"_blank\">Semantic URLs</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Create,_read,_update_and_delete\" title=\"Create, read, update and delete\" target=\"_blank\">Create, read, update and delete</a> (CRUD)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Resource-oriented_architecture\" title=\"Resource-oriented architecture\" target=\"_blank\">Resource-oriented architecture</a> (ROA)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Service-oriented_architecture\" title=\"Service-oriented architecture\" target=\"_blank\">Service-oriented architecture</a> (SOA)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Resource-oriented_computing\" title=\"Resource-oriented computing\" target=\"_blank\">Resource-oriented computing</a> (ROC)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Domain_Application_Protocol\" title=\"Domain Application Protocol\" target=\"_blank\">Domain Application Protocol</a> (DAP)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/RAML_(software)\" title=\"RAML (software)\" target=\"_blank\">RAML (software)</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Swagger_(Computer_Science)\" title=\"Swagger (Computer Science)\" class=\"mw-redirect\" target=\"_blank\">Swagger Specification for defining interfaces</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/HATEOAS\" title=\"HATEOAS\" target=\"_blank\">Hypermedia as the Engine of Application State</a></li></ul></div></div>" ;
          spec:hasPatternDomain          :Domain_seco__aspern_ ;
          owl:sameAs                     dbr:Representational_state_transfer .
  
  :DesignTactic_vertical_scaling
          a                             gen:DesignTactic ;
          rdfs:label                    "vertical scaling" , "Vertical Scaling" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_maintainability , :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_generality , :ArchitecturalQuality_reliability , :ArchitecturalQuality_versatility ;
          gen:wikiEntry                 "Vertical scaling or scaling up typically refers to adding more processors and storage to a computing node to extend its processing capability. As a result the node can handle more work." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  spec:hasNegRequirementEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  spec:hasRequirementEffectOnQuality , gen:hasNegEffectOnQuality .
  
  :AuthorTag_verification
          a           cont:AuthorTag ;
          rdfs:label  "verification" .
  
  :DesignTactic_domain_alignment
          a           gen:DesignTactic ;
          rdfs:label  "domain alignment" .
  
  :AuthorTag_stakeholder
          a           cont:AuthorTag ;
          rdfs:label  "stakeholder" .
  
  :DesignPattern_64-bit_data_types
          a                              gen:DesignPattern ;
          rdfs:label                     "64-Bit Data Types" ;
          gen:hasKnowledgeAuthor         :Author_edwin_willegger , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki , :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code , :DesignTactic_bridge ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;The New Data Types</h1>\n<div id=\"mainSection\" style=\"position: relative;\">\n<p>Three classes of data types were introduced for 64-bit Windows: fixed-precision data types, pointer-precision types, and specific-pointer-precision types. These types were added to the development environment to allow developers to prepare for 64-bit Windows. These types are derived from the basic C-language integer and long types. Therefore, you can use these data types in code that you compile and test on 32-bit Windows, and then recompile with the 64-bit compiler when targeting 64-bit Windows.</p>\n<p>Even for applications that target only 32-bit Windows, adopting these new data types makes your code more robust. To use these data types, you must scan your code for potentially unsafe pointer usage, polymorphism, and data definitions. For example, when a variable is of type <strong>ULONG_PTR</strong>, it is clear that it will be used for casting pointers for arithmetic operations or polymorphism. It is not possible to indicate such usage directly by using the older data types. (You can do this indirectly by using derived type naming or Hungarian notation, but both techniques are prone to errors.)</p>\n<p>All of these data types are declared in BaseTsd.h. For more information, including definitions of these data types, see <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa383751(v=vs.85).aspx\" target=\"_blank\">Windows Data Types</a>.</p>\n<h2><a id=\"Fixed_Precision\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"fixed_precision\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"FIXED_PRECISION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a>Fixed Precision</h2>\n<p>Fixed-precision data types are the same length in both 32- and 64-bit Windows. To help you remember this, their precision is part of the name of the data type. The following are the fixed-precision data types.</p>\n<table border=\"1px\">\n<tbody>\n<tr>\n<th>Term</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>\n<p><a id=\"DWORD32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"dword32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>DWORD32</strong></p>\n</td>\n<td>\n<p>32-bit unsigned integer</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"DWORD64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"dword64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>DWORD64</strong></p>\n</td>\n<td>\n<p>64-bit unsigned integer</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"INT32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"int32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>INT32</strong></p>\n</td>\n<td>\n<p>32-bit signed integer</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"INT64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"int64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>INT64</strong></p>\n</td>\n<td>\n<p>64-bit signed integer</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"LONG32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"long32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>LONG32</strong></p>\n</td>\n<td>\n<p>32-bit signed integer</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"LONG64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"long64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>LONG64</strong></p>\n</td>\n<td>\n<p>64-bit signed integer</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"UINT32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"uint32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>UINT32</strong></p>\n</td>\n<td>\n<p>Unsigned <strong>INT32</strong></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"UINT64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"uint64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>UINT64</strong></p>\n</td>\n<td>\n<p>Unsigned <strong>INT64</strong></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"ULONG32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"ulong32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>ULONG32</strong></p>\n</td>\n<td>\n<p>Unsigned <strong>LONG32</strong></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"ULONG64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"ulong64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>ULONG64</strong></p>\n</td>\n<td>\n<p>Unsigned <strong>LONG64</strong></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<h2><a id=\"Pointer_Precision\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"pointer_precision\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"POINTER_PRECISION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a>Pointer Precision</h2>\n<p>As the pointer precision changes (that is, as it becomes 32 bits on 32-bit Windows and 64 bits with 64-bit Windows), the pointer precision data types reflect the precision accordingly. Therefore, it is safe to cast a pointer to one of these types when performing pointer arithmetic; if the pointer precision is 64 bits, the type is 64 bits. The count types also reflect the maximum size to which a pointer can refer. The following are the pointer-precision and count types.</p>\n<table border=\"1px\">\n<tbody>\n<tr>\n<th>Term</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>\n<p><a id=\"DWORD_PTR\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"dword_ptr\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>DWORD_PTR</strong></p>\n</td>\n<td>\n<p>Unsigned long type for pointer precision.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"HALF_PTR\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"half_ptr\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>HALF_PTR</strong></p>\n</td>\n<td>\n<p>Half the size of a pointer. Use within a structure that contains a pointer and two small fields.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"INT_PTR\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"int_ptr\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>INT_PTR</strong></p>\n</td>\n<td>\n<p>Signed integer type for pointer precision.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"LONG_PTR\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"long_ptr\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>LONG_PTR</strong></p>\n</td>\n<td>\n<p>Signed long type for pointer precision.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"SIZE_T\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"size_t\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>SIZE_T</strong></p>\n</td>\n<td>\n<p>The maximum number of bytes to which a pointer can refer. Use for a count that must span the full range of a pointer.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"SSIZE_T\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"ssize_t\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>SSIZE_T</strong></p>\n</td>\n<td>\n<p>Signed <strong>SIZE_T</strong>.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"UHALF_PTR\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"uhalf_ptr\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>UHALF_PTR</strong></p>\n</td>\n<td>\n<p>Unsigned <strong>HALF_PTR</strong>.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"UINT_PTR\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"uint_ptr\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>UINT_PTR</strong></p>\n</td>\n<td>\n<p>Unsigned <strong>INT_PTR</strong>.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"ULONG_PTR\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"ulong_ptr\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>ULONG_PTR</strong></p>\n</td>\n<td>\n<p>Unsigned <strong>LONG_PTR</strong>.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<h2><a id=\"Specific_Pointer-Precision_Types\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"specific_pointer-precision_types\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SPECIFIC_POINTER-PRECISION_TYPES\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a>Specific Pointer-Precision Types</h2>\n<p>The following new pointer types explicitly size the pointer. Be cautious when using pointers in 64-bit code: If you declare the pointer using a 32-bit type, the operating system creates the pointer by truncating a 64-bit pointer. (All pointers are 64 bits on 64-bit Windows.)</p>\n<table border=\"1px\">\n<tbody>\n<tr>\n<th>Term</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>\n<p><a id=\"POINTER_32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"pointer_32\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>POINTER_32</strong></p>\n</td>\n<td>\n<p>A 32-bit pointer. On 32-bit Windows, this is a native pointer. On 64-bit Windows, this is a truncated 64-bit pointer.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><a id=\"POINTER_64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"pointer_64\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\"></a><strong>POINTER_64</strong></p>\n</td>\n<td>\n<p>A 64-bit pointer. On 64-bit Windows, this is a native pointer. On 32-bit Windows, this is a sign-extended 32-bit pointer.</p>\n<p>Note that it is not safe to assume the state of the high pointer bit.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>" ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_visual_c__ .
  
  :DesignPattern_faceted_search_navigation
          a                        gen:DesignPattern ;
          rdfs:label               "Faceted Search/Navigation" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_aspernbm , :Project_aspernes ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_versatility , :ArchitecturalQuality_usability ;
          gen:isAlternativeOf      :DesignTactic_faceting ;
          gen:wikiEntry            "<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\"><span style=\"font-weight: bold; line-height: 16.8999996185303px;\">Faceted Search/Navigation</span></span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\">Faceted search, also called&nbsp;faceted navigation&nbsp;or&nbsp;faceted browsing, is a technique for accessing information organized according to a&nbsp;<a title=\"Faceted classification\" href=\"https://en.wikipedia.org/wiki/Faceted_classification\" target=\"_blank\">faceted classification</a>&nbsp;system, allowing users to explore a collection of information by applying multiple filters. A faceted classification system classifies each information element along multiple explicit dimensions, called facets, enabling the classifications to be accessed and ordered in multiple ways rather than in a single, pre-determined,&nbsp;<a title=\"Taxonomy (general)\" href=\"https://en.wikipedia.org/wiki/Taxonomy_(general)\" target=\"_blank\">taxonomic</a>&nbsp;order.&nbsp;</span><span style=\"font-size: 12pt;\">Facets correspond to properties of the information elements. They are often derived by analysis of the text of an item using&nbsp;<a class=\"mw-redirect\" title=\"Entity extraction\" href=\"https://en.wikipedia.org/wiki/Entity_extraction\" target=\"_blank\">entity extraction</a>&nbsp;techniques or from pre-existing fields in a database such as author, descriptor, language, and format. Thus, existing web-pages, product descriptions or online collections of articles can be augmented with navigational facets.</span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\">Faceted search or navigation, in almost all applications, needs the very critical functionality of relevance adjustment. This requires that all facet values, offered as user choices, represent relevant, available possibilities. This guarantees that every choice will be successful, making the progressive narrowing process of adding facet values an information revealing and useful experience.</span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\"><img style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\" src=\"p/AspernBM/facets-wf.gif\" alt=\"\" width=\"471\" height=\"210\" /></span></p>\n<p style=\"text-align: center;\"><span style=\"font-size: 12pt;\"><em>The filtering&nbsp;mechanism&nbsp;in faceted navigation</em></span></p>\n<p style=\"font-size: small; text-align: left;\"><span style=\"font-size: 12pt;\"><strong>See also:</strong> <a href=\"http://www.nngroup.com/articles/filters-vs-facets/\">Filters vs. Facets: Definitions</a></span></p>" , "<p style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><span style=\"font-weight: 700; line-height: 16.8999996185303px;\">Faceted Search/Navigation</span></span></p><p style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Faceted search, also called&nbsp;faceted navigation&nbsp;or&nbsp;faceted browsing, is a technique for accessing information organized according to a&nbsp;<a title=\"Faceted classification\" href=\"https://en.wikipedia.org/wiki/Faceted_classification\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Faceted_classification\">faceted classification</a>&nbsp;system, allowing users to explore a collection of information by applying multiple filters. A faceted classification system classifies each information element along multiple explicit dimensions, called facets, enabling the classifications to be accessed and ordered in multiple ways rather than in a single, pre-determined,&nbsp;<a title=\"Taxonomy (general)\" href=\"https://en.wikipedia.org/wiki/Taxonomy_(general)\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Taxonomy_(general)\">taxonomic</a>&nbsp;order.</span></p><p style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Facets correspond to properties of the information elements. They are often derived by analysis of the text of an item using&nbsp;<a class=\"mw-redirect\" title=\"Entity extraction\" href=\"https://en.wikipedia.org/wiki/Entity_extraction\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Entity_extraction\">entity extraction</a>&nbsp;techniques or from pre-existing fields in a database such as author, descriptor, language, and format. Thus, existing web-pages, product descriptions or online collections of articles can be augmented with navigational facets.</span></p><p style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Faceted search or navigation, in almost all applications, needs the very critical functionality of relevance adjustment. This requires that all facet values, offered as user choices, represent relevant, available possibilities. This guarantees that every choice will be successful, making the progressive narrowing process of adding facet values an information revealing and useful experience. Without that feature, searching or navigating using facet values, results in a large number of nothing found frustrating experiences.</span></p><p style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><img src=\"https://workspace.cee.siemens.com/content/00000102/saFiddle/p/AspernBM/facets-wf.gif\" alt=\"\" width=\"471\" height=\"210\" data-mce-style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\" style=\"display: block; margin-left: auto; margin-right: auto;\"></span><br data-mce-bogus=\"1\"></p><p data-mce-style=\"text-align: center;\" style=\"font-size: small; text-align: center;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><em>The filtering&nbsp;mechanism&nbsp;in faceted navigation</em></span></p>" ;
          spec:hasPatternDomain    :Domain_user_interfaces ;
          owl:sameAs               dbr:Faceted_search .
  
  <http://star.siemens.com/ontology/generic>
          a       owl:Ontology .
  
  :Author_willegger_edwin
          a           cont:Author ;
          rdfs:label  "willegger edwin" .
  
  :DesignPattern_packet_filtering
          a                              gen:DesignPattern ;
          rdfs:label                     "Packet Filtering" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_security , :ArchitecturalQuality_traceability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_trustability , :ArchitecturalQuality_immunity ;
          gen:isAlternativeOf            :DesignTactic_limit_access , :DesignTactic_intrusion_detection ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_cust-1__reporting_capability_in_wan
          a           spec:Domain ;
          rdfs:label  "cust-1: reporting capability in wan" .
  
  :DesignPattern_cqrs
          a                              gen:DesignPattern ;
          rdfs:label                     "CQRS" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown ;
          gen:isAlternativeOf            :DesignTactic_unknown ;
          gen:wikiEntry                  "(CQRS) Pattern  Segregate operations that read data from operations that update data by using separate interfaces. This pattern can maximize performance scalability and security support evolution of the system over time through higher flexibility and prevent update commands from causing merge conflicts at the domain level.[MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_scheduler_agent_supervisor_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Scheduler Agent Supervisor Pattern" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_robustness , :ArchitecturalQuality_maturity , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_safety , :ArchitecturalQuality_viability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_dependability , :ArchitecturalQuality_survivability ;
          gen:isAlternativeOf            :DesignTactic_fault_handling ;
          gen:wikiEntry                  "Coordinate a set of actions across a distributed set of services and other remote resources attempt to transparently handle faults if any of these actions fail or undo the effects of the work performed if the system cannot recover from a fault. This pattern can add resiliency to a distributed system by enabling it to recover and retry actions that fail due to transient exceptions long-lasting faults and process failures. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_software_ecosystems , :Domain_abstract , :Domain_cloud_computing .
  
  :DesignTactic_softcoding
          a                             gen:DesignTactic ;
          rdfs:label                    "softcoding" , "Softcoding" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_controllability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_serviceability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_usability , :ArchitecturalQuality_agility ;
          gen:wikiEntry                 "Softcoding refers to obtaining a value or function from some external resource such as a preprocessor macro external constant configuration file command line argument or database table. It is the opposite of hardcoding which refers to coding values and functions in the source code." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  gen:hasNegPatternEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  gen:hasPatternEffectOnQuality , gen:hasNegEffectOnQuality .
  
  :AuthorTag_logical_architecture
          a           cont:AuthorTag ;
          rdfs:label  "logical architecture" .
  
  :Domain_ar-07__pattern-oriented_architecture
          a           spec:Domain ;
          rdfs:label  "ar-07: pattern-oriented architecture" .
  
  :Domain_changed  a  spec:Domain ;
          rdfs:label  "changed" .
  
  :DesignPattern_leader_election_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Leader Election Pattern" ;
          gen:hasKnowledgeAuthor         :Author_edwin_willegger , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown , :ArchitecturalQuality_resilience ;
          gen:isAlternativeOf            :DesignTactic_fault_handling , :DesignTactic_unknown ;
          gen:wikiEntry                  "Coordinate the actions performed by a collection of collaborating task instances in a distributed application by electing one instance as the leader that assumes responsibility for managing the other instances. This pattern can help to ensure that task instances do not conflict with each other cause contention for shared resources or inadvertently interfere with the work that other task instances are performing. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_software_ecosystems , :Domain_abstract , :Domain_cloud_computing .
  
  :DesignPattern_exceptions
          a                              gen:DesignPattern ;
          rdfs:label                     "Exceptions" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Exceptions</h1>\n\n<p>Generation and processing of exceptions using integer types is a bad practice of C++ programming. You should use more informative types for these purposes, for example types derived from the class <span class=\" span-i\">std::exception</span>. But sometimes you have to deal with a low-quality code like this:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">ptr1</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">ptr2</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n    </span><span class=\"kwd\">throw</span><span class=\"pln\"> ptr2 </span><span class=\"pun\">-</span><span class=\"pln\"> ptr1</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"pun\">}</span><span class=\"pln\">\n  </span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n    std</span><span class=\"pun\">::</span><span class=\"pln\">cout </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"str\">\"catch 1: on x86\"</span><span class=\"pln\"> </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> std</span><span class=\"pun\">::</span><span class=\"pln\">endl</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  std</span><span class=\"pun\">::</span><span class=\"pln\">cout </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"str\">\"catch 2: on x64\"</span><span class=\"pln\"> </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> std</span><span class=\"pun\">::</span><span class=\"pln\">endl</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></code></pre>\n<p>You should be very attentive and avoid generation or processing of exceptions using <a href=\"http://www.viva64.com/en/t/0030/\" class=\"link-inner\" target=\"_blank\">memsize</a>-types because it may result in changes of program logic. To correct this code you may replace \"catch (int)\" with \"catch (ptrdiff_t)\". A more correct way is to use a special class to pass the information about an error that has occurred.</p>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignTactic_distribution
          a           gen:DesignTactic ;
          rdfs:label  "distribution" .
  
  :AuthorTag_requiremetns_engineering
          a           cont:AuthorTag ;
          rdfs:label  "requiremetns engineering" .
  
  :ArchitecturalQuality_portability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "portability" , "Portability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_external_configuration_store_pattern , :DesignPattern_canonical_data_mapper , :DesignDecision_kdd-18 , :DesignPattern_virtual_functions , :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_facade , :DesignPattern_rest_architecture , :DesignPattern_restful_architecture , :DesignPattern_64-bit_tools , :DesignTactic_layering , :DesignPattern_adapter , :DesignPattern_content-based_router , :DesignPattern_compliant_data_replication , :DesignPattern_virtual_address_space , :DesignPattern_process_interoperability , :DesignPattern_general_porting_guidelines , :DesignDecision_ad-103__web_interfaces , :DesignPattern_application_component_proxy , :DesignPattern_provider_adapter , :DesignPattern_exceptions , :DesignPattern_shift_operations , :DesignDecision_kdd-21 , :DesignTactic_message_transformation , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_capturing_architectural_requirements , :DesignPattern_representational_state_transfer , :DesignPattern_change_array_type , :DesignPattern_avoiding_information_hiding , :DesignPattern_storing_a_64-bit_value , :DesignPattern_proxy , :DesignPattern_timeout-based_delivery , :DesignDecision_ad-121__data_querying , :DesignPattern_content_enricher , :DesignPattern_magic_numbers , :DesignPattern_address_arithmetic , :DesignTactic_system_integration , :DesignPattern_exactly-once_delivery , :DesignPattern_mediator , :DesignPattern_64-bit_data_types , :DesignDecision_kdd-03 , :DesignPattern_transaction-based_delivery , :DesignPattern_changing_an_existing_interface , :DesignPattern_rest , :DesignDecision_ad-009__restful_api_registry , :DesignDecision_ad-126__benchmarks_deployment , :DesignDecision_ad-110__filter-based_queries , :DesignDecision_kdd-10 , :DesignPattern_integration_provider , :DesignPattern_claim_check , :DesignPattern_overloaded_functions , :DesignPattern_common_compiler_errors , :DesignPattern_avoiding_polymorphism , :DesignPattern_bridge , :DesignPattern_pointer_packing , :DesignDecision_kdd-08__32_64-bit_portability , :DesignTactic_messaging , :DesignPattern_serialization , :DesignTactic_globalization , :DesignPattern_rules_for_using_pointers , :DesignPattern_alignment_faults , :DesignPattern_normalizer , :DesignTactic_reduce_coupling , :DesignDecision_add-01__zero-footprint_architecture , :DesignPattern_content_filter , :DesignPattern_integer_values_in_double , :DesignPattern_at-least-once_delivery , :DesignPattern_composite , :DesignPattern_module , :DesignPattern_envelope_wrapper , :DesignDecision_kdd-26 ;
          gen:relatedQuality       :ArchitecturalQuality_transferability , :ArchitecturalQuality_mobility , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_installability ;
          gen:wikiEntry            "<p><strong>Portability</strong></p>\n<p>Portability reflects the ease with which a system or component can be transferred from one environment to another. Portability depends on the system's compliance with standardized interfaces with respect to a variaty of potential new environments.&nbsp;</p>" ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_system_analysis_report
          a           cont:AuthorTag ;
          rdfs:label  "system analysis report" .
  
  :DesignTactic_load_distribution
          a                             gen:DesignTactic ;
          rdfs:label                    "load distribution" , "Load Distribution" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_operability , :ArchitecturalQuality_utility , :ArchitecturalQuality_integratability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_mobility , :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:wikiEntry                 "Load Distribution is a tactic the share the workload across multiple computers or a computer cluster network links etc. (usually refered to as workers) according to distribution criteria. One example is to balance to workload among the workers (ie. load balancing) e.g. to achieve optimal resource utilization maximize throughput etc." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  gen:hasNegEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:label          "hasNegEffectOnQuality" ;
          rdfs:subPropertyOf  gen:hasNegEffectOn , gen:hasEffectOnQuality .
  
  :SoftwareEngineeringMethod_model-based_survivability_engineering
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Model-Based Survivability Engineering" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_survivability , :ArchitecturalQuality_availability ;
          gen:hasMethodPhase            :ProjectPhase_analysis ;
          gen:hasMethodRole             :Role_performance_engineer ;
          gen:hasMethodTag              :AuthorTag_modeling , :AuthorTag_requirements , :AuthorTag_smart_grid , :AuthorTag_logical_architecture , :AuthorTag_optimization , :AuthorTag_system_analysis_report , :AuthorTag_failure , :AuthorTag_metrics , :AuthorTag_recovery ;
          gen:wikiEntry                 "This methodology creates and analyzes a hierarchical model of a system (e.g. a power distribution system in a smart grid) during a transient period that starts after a failure and ends when the system fully recovers. It applies to many infrastructure domains, such as water and gas, and to the engineering of high-availability software architectures." .
  
  :DesignTactic_authorization
          a                             gen:DesignTactic ;
          rdfs:label                    "authorization" , "Authorization" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_immunity , :ArchitecturalQuality_trustability , :ArchitecturalQuality_security , :ArchitecturalQuality_traceability , :ArchitecturalQuality_accountability ;
          gen:wikiEntry                 "Auhtorization   is ensuring that an authenticated user/entity has the rights to access and modify either data or services." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_data-based_routing
          a                              gen:DesignPattern ;
          rdfs:label                     "Data-Based Routing" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_controllability , :ArchitecturalQuality_configurability ;
          gen:isAlternativeOf            :DesignTactic_data_access , :DesignTactic_routing ;
          gen:wikiEntry                  "<h1 align=\"center\">Pattern 40 (Data-Based Routing)</h1>\n<p><a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp40_animation.php\" target=\"_blank\">FLASH animation of Data-based Routing pattern</a></p>\n<h2>Description</h2>\n<p align=\"justify\">Data-based routing provides the ability to alter the control-flow within a case based on the evaluation of data-based expressions. A data-based routing expression is associated with each outgoing arc of an OR-split or XOR-split. It can be composed of any data-values, expressions and functions available in the process environment providing it can be evaluated at the time the split construct with which it is associated completes. Depending on whether the construct is an XOR-split or OR-split, a mechanism is available to select one or several outgoing arcs to which the thread of control should be passed based on the evaluation of the expressions associated with the arcs.\n</p><h2>Example</h2>\n<p align=\"justify\">If <em>alert </em> is <em>red </em> then execute the <em>Inform Fire Crew </em> task after the <em>Handle Alert </em> task otherwise run the <em>Identify False Trigger </em> task. \n</p><h2>Motivation</h2>\n<p align=\"justify\"><em>Data-based Routing</em> is a variant of the <a href=\"http://www.workflowpatterns.com/patterns/control/basic/wcp4.php\" target=\"_blank\"><em>Exclusive Choice</em></a> and <a href=\"http://www.workflowpatterns.com/patterns/control/advanced_branching/wcp6.php\" target=\"_blank\"><em>Multi-Choice</em></a> patterns (WCP4, WCP6) in the control-flow perspective which requires that the selection mechanism for evaluation of the pattern be based on data-based expressions evaluated using data elements available within the context of the process instance (footnote <a href=\"http://www.workflowpatterns.com/patterns/data/footnotes.php#foot14\" name=\"foot14\" class=\"style1\" id=\"foot14\" target=\"_blank\">14</a>).\n</p><h2>Overview</h2>\n<p align=\"justify\">This pattern aggregates two control-flow patterns:</p><div align=\"justify\">\n  <ul>\n    <li><em>Exclusive Choice </em> - where control flow is passed to precisely one of several subsequent tasks based on the evaluation of a data-based expression associated with each of the outgoing branches.</li><li><em>Multi-Choice </em> - where, depending on the outcome of a decision or the value of an expression based on  data elements, control flow is passed to several subsequent task instances. </li>\n    </ul>\n  <p>Figure <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp40.php#figure25\" target=\"_blank\">25</a> illustrates data-based routing expressions as conditions associated with the control-flow branches from one task to another. These expressions can utilize task-level data passed from the completing task as well as any other data elements that are accessible to the task. In the example shown, task C will be triggered once A completes (as the value of data element M is greater than 3.0), task D will not and task B may be triggered depending on the value of data element R that is passed from A.</p>\n  <p align=\"center\"><a name=\"figure25\" id=\"figure25\" href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp40.php\" target=\"_blank\"><img src=\"http://www.workflowpatterns.com/patterns/data/images/workflow-case-40.png\" alt=\"Figure 25: Data-based routing\" name=\"figure25\" width=\"398\" height=\"334\" id=\"figure25\"></a>\n  </p><p align=\"center\"><strong>Figure 25:</strong> Data-based routing  </p></div>\n<h2>Context</h2>\n<p>There is one context condition associated with this pattern: the mechanism that evaluates the <em>Data-based Routing </em>is able to access any required data elements when determining which of the outgoing branches the thread of control should be passed. </p>\n<h2>Implementation</h2>\n<p>Both the <em>Executive Choice </em>and <em>Multi-Choice </em>variants of this construct are supported by WebSphere MQ, COSA, iPlanet, XPDL, BPEL, BPMN and UML 2.0 ADs. Staffware and FLOWer only support the <em>Exclusive Choice </em>pattern.</p>\n<h2>Issues</h2>\n<p align=\"justify\">None identified. </p>\n<h2>Solutions</h2>\n<p align=\"justify\"> N/A.</p>\n<h2>Evaluation Criteria</h2>\n<p>Full support for this pattern is demonstrated by any offering which provides a construct which satisfies the description when used in a context satisfying the context assumption. It rates as partial support if only one variant of the pattern is supported.</p>" ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  :Domain_web_services
          a           spec:Domain ;
          rdfs:label  "web services" .
  
  :DesignDecision_add-03__concept_linkage
          a                               spec:DesignDecision ;
          rdfs:label                      "ADD-03: Concept linkage" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_safiddle ;
          gen:wikiEntry                   "<p><span style=\"font-size: 14pt;\"><b>Concept linkage</b></span></p><p><span style=\"font-size: 14pt;\">Use different types of linkage between different schemas in order to facilitate term suggestion, report generation, and coverage analytics.</span></p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"p/saFiddle/concept_linkage.png\" alt=\"\" width=\"650\" height=\"427\"></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 14pt;\">The following types of concept linkage are currently supported:</span></p>\n<table style=\"width: 100%;\" border=\"1\" cellspacing=\"0\" cellpadding=\"5px\">\n<tbody>\n<tr>\n<td>&nbsp;</td>\n<td><span style=\"font-size: 12pt;\"><strong>Indirect&nbsp;Linkage</strong></span></td>\n<td><span style=\"font-size: 12pt;\"><strong>Semantic Linkage</strong></span></td>\n<td><span style=\"font-size: 12pt;\"><strong>Direct Linkage</strong></span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: 12pt;\"><em>Definition</em></span></td>\n<td><span style=\"font-size: 12pt;\">Finding related and possibly unknown concepts that lie on a path between two known concepts.</span></td>\n<td><span style=\"font-size: 12pt;\">The meaning of a concept from one schema is analogous to the meaning of another concept in another schema.</span></td>\n<td><span style=\"font-size: 12pt;\">The use of a particular concept to define a category in two or more schemas.</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: 12pt;\"><em>Example</em></span></td>\n<td><span style=\"font-size: 12pt;\">Design pattern/decision - <em>Design tactic</em> - Architectural quality</span></td>\n<td><span style=\"font-size: 12pt;\"><em>Purpose</em> in Requirements schema ~ <em>Design tactic</em> in Design Decisions schema</span></td>\n<td><span style=\"font-size: 12pt;\"><em>Design tactic</em>&nbsp;in Design Patterns and Design Decisions&nbsp;schemas</span></td>\n</tr>\n<tr>\n<td><span style=\"font-size: 12pt;\"><em>Benefits</em></span></td>\n<td><span style=\"font-size: 12pt;\">Facilitates the quantification of the impact of design decisions upon different quality attributes.</span></td>\n<td><span style=\"font-size: 12pt;\">Enables&nbsp;a pattern-oriented architectural approach by linking&nbsp;requirement purposes and design tactics.</span></td>\n<td><span style=\"font-size: 12pt;\">Implicit linking of different types of items in generated reports.</span></td>\n</tr>\n</tbody>\n</table>" ;
          spec:decisionArchitecturalView  "Logical view" ;
          spec:hasDecisionDomain          :Domain_ar-03__reuse_requirements_and_decisions , :Domain_ar-07__pattern-oriented_architecture , :Domain_ar-01__tool_support_for_sad , :Domain_ar-02__incentives_for_architects ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_analyzability , :ArchitecturalQuality_functionality , :ArchitecturalQuality_traceability , :ArchitecturalQuality_reusability ;
          spec:useDecisionTactic          :DesignTactic_querying , :DesignTactic_mapping .
  
  :DesignTactic_bridge
          a           gen:DesignTactic ;
          rdfs:label  "bridge" .
  
  :Domain_ar-05__effective_collaboration
          a           spec:Domain ;
          rdfs:label  "ar-05: effective collaboration" .
  
  :DesignTactic_multitenancy
          a                             gen:DesignTactic ;
          rdfs:label                    "Multitenancy" , "multitenancy" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasPosTacticEffectOnQuality
                  :ArchitecturalQuality_effectiveness ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_functionality , :ArchitecturalQuality_agility , :ArchitecturalQuality_generality , :ArchitecturalQuality_uniformity , :ArchitecturalQuality_utility , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_interoperability ;
          gen:wikiEntry                 "Multitenancyrefers to a principle insoftware architecturewhere a singleinstanceof thesoftwareruns on a server serving multiple client-organizations (tenants). Multitenancy contrasts with multi-instance architectures where separate software instances (or hardware systems) operate on behalf of different client organizations. With a multitenant architecture asoftware applicationis designed to virtuallypartitionits data and configuration and each client organization works with a customized virtual application. [Wikipedia Multitenancy 2014]" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignDecision_kdd-02__use_camunda_suite
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-02: Use Camunda Suite" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<h2 style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\"><span style=\"font-size: 12pt;\"><span class=\"SpellE\"><span lang=\"DE-AT\">Use the Camunda</span></span><span lang=\"DE-AT\"> Suite as a Process Automation Platform</span></span></h2>\n<p><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">The following diagram illustrate how&nbsp;different actors having different roles in the project interact with the Camunda suite during development and deployment.&nbsp;</span></span></p>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\"><img style=\"border-width: 0px;\" src=\"p/Shape/camunda_development.png\" alt=\"\" width=\"535\" height=\"317\" /></span></strong></span></p>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">Components:</span></strong></span></p>\n<h4><span style=\"font-size: 12pt;\">Process Implementation and Execution</span></h4>\n<ul>\n<li><span style=\"font-size: 12pt;\">camunda engine - The core component responsible for executing BPMN 2.0 processes.</span></li>\n<li><span style=\"font-size: 12pt;\">REST API - The REST API provides remote access to running processes.</span></li>\n<li><span style=\"font-size: 12pt;\">Spring, CDI integration - Programming model integration that allows developers to write Java Applications that interact with running processes.</span></li>\n</ul>\n<h4><span style=\"font-size: 12pt;\"><a id=\"user-content-process-design\" class=\"anchor\" href=\"https://github.com/camunda/camunda-bpm-platform#process-design\"></a>Process Design</span></h4>\n<ul>\n<li><span style=\"font-size: 12pt;\">camunda modeler - A <a href=\"https://github.com/camunda/camunda-modeler\">modeler plugin for eclipse</a> that allows developers to design &amp; refactor processes inside their IDE.</span></li>\n<li><span style=\"font-size: 12pt;\">camunda cycle - Enables BPMN 2.0 based Roundtrip between Business and IT parties involved in a project. Allows to use any BPMN 2.0 modeling tool with camunda BPM.</span></li>\n</ul>\n<h4><span style=\"font-size: 12pt;\"><a id=\"user-content-process-operations\" class=\"anchor\" href=\"https://github.com/camunda/camunda-bpm-platform#process-operations\"></a>Process Operations</span></h4>\n<ul>\n<li><span style=\"font-size: 12pt;\">camunda engine - JMX and advanced Runtime Container Integration for process engine monitoring.</span></li>\n<li><span style=\"font-size: 12pt;\">camunda cockpit - Web application tool for process operations.</span></li>\n</ul>\n<h4><span style=\"font-size: 12pt;\"><a id=\"user-content-human-task-management\" class=\"anchor\" href=\"https://github.com/camunda/camunda-bpm-platform#human-task-management\"></a>Human Task Management</span></h4>\n<ul>\n<li><span style=\"font-size: 12pt;\">camunda tasklist - Simple web application demonstrating how the process engine task API can be used.</span></li>\n</ul>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\">&nbsp;</p>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">Pros:</span></strong></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> Addresses all aspects of process management &amp; execution</span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> High-quality documentation</span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> Sound software architecture (high design pattern density)</span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> Uses state of the art technology (JAX-RS, <span class=\"SpellE\">AngularJS</span>, <span class=\"GramE\">Spring</span>, <span class=\"SpellE\">jQuery</span>, etc.)</span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> Many supported environments (Tomcat, JBOSS, Glassfish &hellip;)</span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">+ </span></strong><span lang=\"EN-US\">Flexibility, extensibility (Community extensions)</span></span></p>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span class=\"GramE\"><span lang=\"EN-US\">Cons:</span></span></strong></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">-</span></strong><span lang=\"EN-US\"> Is it really lightweight?</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\"><span style=\"mso-list: Ignore;\">&bull;<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"EN-US\">A constellation of tools </span><span lang=\"EN-US\" style=\"font-family: Wingdings; color: black;\"><span style=\"mso-char-type: symbol; mso-symbol-font-family: Wingdings;\">&agrave;</span></span><span lang=\"EN-US\"> Temptation to use them all&nbsp;</span></span><span style=\"font-family: Wingdings; font-size: 16px; line-height: 20.8px;\">&agrave;</span><span style=\"font-size: 12pt; line-height: 1.3em;\">&nbsp;Complexity</span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">- </span></strong><span lang=\"EN-US\">Infrastructure needs </span><span lang=\"EN-US\" style=\"font-family: Wingdings; color: black;\"><span style=\"mso-char-type: symbol; mso-symbol-font-family: Wingdings;\">&agrave;</span></span><span lang=\"EN-US\"> Web servers, database servers&nbsp;</span></span><span style=\"font-family: Wingdings; font-size: 16px; line-height: 20.8px; text-indent: 0px;\">&agrave;</span><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">&nbsp;Administrators + Programmers</span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">- </span></strong><span lang=\"EN-US\">Real flexibility or exhaustiveness?</span></span></p>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">Bottom line:</span></strong></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">+ </span></strong><span lang=\"EN-US\">Pros seem to dominate cons from a software architecture perspective</span></span></p>" ;
          spec:decisionArchitecturalView  "2. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-01__process_automation ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_flexibility ;
          spec:useDecisionTactic          :DesignTactic_tool_integration .
  
  :DesignPattern_restful_versioning
          a                              gen:DesignPattern ;
          rdfs:label                     "RESTful Versioning" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_compatibility ;
          gen:isAlternativeOf            :DesignTactic_versioning ;
          gen:wikiEntry                  "<div class=\"asset-header\">\n<h1 id=\"page-title\" class=\"asset-name entry-title\">Versioning RESTful Web Resources - A Survey</h1>\n<div class=\"asset-meta\">&nbsp;</div>\n</div>\n<div class=\"asset-content entry-content\">\n<div class=\"asset-body\">\n<p><strong>Data Versioning vs. Language Versioning</strong></p>\n<p>Extensibility and versioning in RESTful services can be viewed in terms of two domains of agreement. The two domains are: resource and representation, which could also be thought of as the \"data\" vs. \"language\" domains.</p>\n<p>First, let's recall what a resource is: <strong>a <em>time varying</em> membership function</strong>, where the members are instances of a representation at various points in time. The resource can return different values at different times. BUT resources can be narrowed down into very specific semantics, if resource owner wishes. A resource might be \"the most recent version\" of a record, whose state might change often, or it might be a \"specific version\" of a record, and thus unchanging in state. These are two different resources, even though they may have the same representation for a period of time. A resource may even contain format metadata and constrain the language emitted, though <a href=\"http://en.wikipedia.org/wiki/Content_negotiation\" target=\"_blank\">content negotiation</a> may be preferred.</p>\n<p>Regardless of how often the values change, the semantics of the resource should not change. \"Revision 3 of purchase order 123\" should retain that meaning. If they do change the meaning, it hurts consumers that relied on the old meaning.</p>\n<p>When we think of <strong>URI versioning</strong>, this is a design choice when resources are immutable across time and we create new resources for state changes (similar to how we manage time-series data in a database).</p>\n<p>With <strong>language extension or versioning</strong>, on the other hand, the state is unchanged, but the way that data is represented has changed.</p>\n<p><strong>On Language Versioning</strong></p>\n<p>Rule #1: Prefer to extend a language in a forwards and/or backwards compatibile manner. Version indicators are a <a href=\"http://www.subbu.org/blog/2008/05/avoid-versioning-please\" target=\"_blank\">last resort</a>, to denote incompatible changes.</p>\n<p>Extension, of course, requires thought. It implies well-specified interpretation policies for language consumers, and in the case of a machine-readable schema, well-specified extension points. But the range of choices aren't too hard to understand.</p>\n<p>This table summarizes the current techniques in practice for extensible or versioned languages, using the terminology from the W3C TAG's draft <a href=\"http://www.w3.org/2001/tag/doc/versioning-compatibility-strategies#iddiv2125080648\" target=\"_blank\">versioning compatibility strategies</a> document, by David Orchard, which I'm going to butcher through my own brief summaries.</p>\n<table border=\"1\" cellpadding=\"10\" align=\"left\">\n<tbody>\n<tr>\n<th width=\"20%\">&nbsp;</th>\n<th width=\"40%\">Consumer</th>\n<th width=\"40%\">Producer</th>\n</tr>\n<tr>\n<td>Backwards-Compatible</td>\n<td>\n<ul>\n<li>Lookup version notifications</li>\n</ul>\n</td>\n<td>\n<ul>\n<li><em>Replacement</em> or <em>Side-by-side</em></li>\n<li><em>Version notification</em> via out-of-band channel or links</li>\n</ul>\n</td>\n</tr>\n<tr>\n<td>Forwards-Compatible</td>\n<td>\n<ul>\n<li>Must accept unknowns</li>\n<li>Must preserve unknowns if persisting state</li>\n<li>Version identifier substitution model</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>Media type specification clearly defines consumer <a class=\"zem_slink\" title=\"Forward compatibility\" href=\"http://en.wikipedia.org/wiki/Forward_compatibility\" target=\"_blank\" rel=\"wikipedia\">forward compatibility</a> expectations (and/or uses a machine-readable schema to denote forward-compatibility extension areas)</li>\n</ul>\n</td>\n</tr>\n<tr>\n<td>Incompatible</td>\n<td>\n<ul>\n<li>Check for <em>version identifier</em></li>\n</ul>\n</td>\n<td>\n<ul>\n<li><em>Side-by-side</em> or <em>Breaking Replacement</em></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>Version Notifications</strong></p>\n<p>Agents should be notified of new versions. This can be done out-of-band (email, physical letter, carrier pigeon), but it helps to complement this with links. These links could be an extended, and agreed to <a href=\"http://tools.ietf.org/html/draft-nottingham-http-link-header-08\" target=\"_blank\">link relation</a>, and/or as part of the media type specification. The links may point to a description of the version change, or, in the case of a Side-by-Side, the URI that emits the resource in the new language version.</p>\n<p><strong>Replacement</strong></p>\n<p>This implies that origin server is replaced by a new <a class=\"zem_slink\" title=\"Backward compatibility\" href=\"http://en.wikipedia.org/wiki/Backward_compatibility\" target=\"_blank\" rel=\"wikipedia\">backwards-compatible</a> version that is able to accept both old versions and new versions of representations sent by a client (usually via a POST link). This is useful in combination with a forward compatible change -- none of the links need to change.</p>\n<p><strong>Side by Side</strong></p>\n<p>This implies that the origin server provides a new MIME type or URI-space for resources using the new language, along side old resources using the old language. In either case, you are impyling \"this language changes everything\". In the case of changing URIs to reflect the new language verison, in effect, you're using \"resource versioning\", something usually relegated to storing time series data , as a means to work around your language compatibility problems.</p>\n<p>To make this RESTful, your media type must include a link from the old resources to their new version, along with metadata indicating the version of the language used at the URI, possibly including a link to a machine-readable schema of the new version (if your media type has such a thing, like XML with Relax NG or XSD). In the case of a new MIME type, you would want a link relation that notes an alternate format is available.</p>\n<p>Let me underscore this: <strong>You cannot expect clients to understand your URI format and swap out all occurrences of \"v1\" with \"v2\".</strong>, if you do, you're placing a heavy burden of coupling on your client, that YOUR SERVER is so special, that they need to understand YOUR URI format. This is completely antithetical to why we would want to use REST in the first place, unless you're really just tunnelling XML over HTTP for the heck of it. I note that many \"REST APIs\" out there actually are built this way, which means they're just as point-to-point coupled as other interface styles.</p>\n<p><strong>Must Accept Unknowns</strong></p>\n<p>If the consumer sees elements in the data it doesn't recognize, it still accepts the representation. Generally, it ignores these elements for processing.</p>\n<p><strong>Must preserve unknowns if persisting state</strong></p>\n<p>This is an optional follow-on from \"Must accept unknowns\", and is often forgotten. If representation state is being persisted (i.e. cached) in the consumer's domain for later use, the unrecognized elements <strong>should be preserved</strong>, and not stripped. This could greatly assist forward compatibility when the client is upgraded to handle the previously unrecognized elements.</p>\n<p><strong>Version identifier substitution model</strong></p>\n<p>I defer to Section 5.3 of the <a href=\"http://www.w3.org/2001/tag/doc/versioning-compatibility-strategies#iddiv2123033680\" target=\"_blank\">compatibility strategies</a> document.</p>\n<p><strong>Where do you place the version identifier?</strong></p>\n<p>In order of preference:</p>\n<ol>\n<li>In the media type content</li>\n<li>In the MIME type itself, or as a MIME type parameters</li>\n<li>In the URI</li>\n</ol>\n<p><strong>Version identifier inside the media type content</strong></p>\n<p>This has many examples in the wild, such as HTML DOCTYPE, some uses of XMLNS, a version identifier inside your PDF document.</p>\n<p>This requires the replacement model for backwards-compatibility, and encourages the greater use of forwards compatibility. It's the way that most web media types have long worked, with varying degrees of success, but note that those formats were long designed with forward compatibility in mind.</p>\n<p>It's still possible to combine this approach into side-by-side versioning if need be, especially if you are changing the semantics of your resources.</p>\n<p><strong>Version identifier in the MIME type</strong></p>\n<p>e.g. application/vnd.mytype;version=2</p>\n<p>This is currently a non-standard and debatable technique. The benefit here is that this enables side-by-side versioning without impacting the URI-space. On the other hand, this reeks of avoiding hypermedia and trying to push things to the other layers of the Web Architecture (HTTP and/or URIs). But in many cases this is preferable to a new URI space.</p>\n<p><strong>Version identifier in the URI</strong></p>\n<p>e.g. http://example.com/data/v1/po/123</p>\n<p>I described the primary problem here earlier: <strong>you can't assume you are a special snowflake and the client will know that 'v1' is your magic crystal</strong>. You must provide a link or a URI template in the media itself (and/or in a service resource) to denote new versions.</p>\n<p>The secondary problem is bookmarks, or inbound hyperlinks. In a database system these are known as \"foreign keys\". Anyone with a relational data background knows that their primary keys really shouldn't change, as it's expensive to propagate that change to foreign keys.</p>\n<p>There is, however, one case, where this approach is preferred over the others. This ties back to the beginning of this entry, when I discussed \"Resource Versioning\". It's clear we mint URIs when the <strong>semantics of the resource itself</strong> changes. So, if they change with the language, then mint new URIs -- using hypermedia, if possible, to link old concepts to new ones, as this requires a side-by-side compatibility approach.</p>\n<p>For example, if we have an Account resource, and a new version of our resources and language we are deprecating the notion of account, and adding two new resources, \"Customer\" and \"Agreement\". It makes no sense to preserve the Account URIs for new Customer resources in this case, as the changed meaning would be confusing to clients expecting an Account.</p>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_web_services .
  
  :DesignPattern_publish_subscribe
          a                              gen:DesignPattern ;
          rdfs:label                     "Publish Subscribe" , "Publish subscribe" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wos2016 , :Project_asperntest , :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_sustainability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_scalability , :ArchitecturalQuality_security , :ArchitecturalQuality_availability , :ArchitecturalQuality_accessibility ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_accessibility , :ArchitecturalQuality_availability , :ArchitecturalQuality_performance , :ArchitecturalQuality_visibility ;
          gen:isAlternativeOf            :DesignTactic_message_channeling , :DesignTactic_asynchronous_communication , :DesignTactic_caching , :DesignTactic_producer_consumer , :DesignTactic_association , :DesignTactic_multicasting , :DesignTactic_fault_handling , :DesignTactic_routing ;
          gen:wikiEntry                  "<p>In the pub/sub model, subscribers typically receive only a subset of the total messages published. The process of selecting messages for reception and processing is called <i>filtering</i>. There are two common forms of filtering: topic-based and content-based.</p>\n<p>In a <b>topic-based</b> system, messages are published to \"topics\" or named logical channels. Subscribers in a topic-based system will receive all messages published to the topics to which they subscribe, and all subscribers to a topic will receive the same messages. The publisher is responsible for defining the classes of messages to which subscribers can subscribe.</p>\n<p>In a <b>content-based</b> system, messages are only delivered to a subscriber if the attributes or content of those messages match constraints defined by the subscriber. The subscriber is responsible for classifying the messages.</p>\n<p>Some systems support a <b>hybrid</b> of the two; publishers post messages to a topic while subscribers register content-based subscriptions to one or more topics.</p>\n<h2></h2>" , "[EAI Publish Subscribe 2003] This Pattern deals with the issue how can the sender broadcast an event to all interested receivers. Publish Subscribe is a messaging pattern where senders of messages called publishers do not program the messages to be sent directly to specific receivers called subscribers. Instead published messages are characterized into classes without knowledge of what if any subscribers there may be. Similarly subscribers express interest in one or more classes and only receive messages that are of interest without knowledge of what if any publishers there are." , "<p>In <a href=\"https://en.wikipedia.org/wiki/Software_architecture\" title=\"Software architecture\" target=\"_blank\">software architecture</a>, <b>publish–subscribe</b> is a <a href=\"https://en.wikipedia.org/wiki/Messaging_pattern\" title=\"Messaging pattern\" target=\"_blank\">messaging pattern</a> where senders of <a href=\"https://en.wikipedia.org/wiki/Message_passing\" title=\"Message passing\" target=\"_blank\">messages</a>, called publishers, do not program the messages to be sent directly to specific receivers, called subscribers, but instead characterize published messages into classes without knowledge of which subscribers, if any, there may be. Similarly, subscribers express interest in one or more classes and only receive messages that are of interest, without knowledge of which publishers, if any, there are.</p>\n<p>Pub/sub is a sibling of the <a href=\"https://en.wikipedia.org/wiki/Message_queue\" title=\"Message queue\" target=\"_blank\">message queue</a> paradigm, and is typically one part of a larger <a href=\"https://en.wikipedia.org/wiki/Message-oriented_middleware\" title=\"Message-oriented middleware\" target=\"_blank\">message-oriented middleware</a> system. Most messaging systems support both the pub/sub and message queue models in their <a href=\"https://en.wikipedia.org/wiki/Application_programming_interface\" title=\"Application programming interface\" target=\"_blank\">API</a>, e.g. <a href=\"https://en.wikipedia.org/wiki/Java_Message_Service\" title=\"Java Message Service\" target=\"_blank\">Java Message Service</a> (JMS).</p><p><br></p><p><br></p><p>sdfdfs</p>\n<p></p>" ;
          spec:hasPatternDomain          :Domain_embedded_systems , :Domain_web_applications , :Domain_web_of_system , :Domain_abstract , :Domain_any ;
          owl:sameAs                     <http://dbpedia.org/resource/Publish–subscribe_pattern> .
  
  :DesignTactic_flexible_deployment
          a           gen:DesignTactic ;
          rdfs:label  "flexible deployment" .
  
  :DesignPattern_compensating_transaction_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Compensating Transaction Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_robustness , :ArchitecturalQuality_dependability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_safety , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_fault_handling ;
          spec:hasPatternDomain          :Domain_software_ecosystems , :Domain_abstract , :Domain_cloud_computing ;
          owl:sameAs                     dbr:Compensating_transaction .
  
  :DesignTactic_feasibility_study
          a                             gen:DesignTactic ;
          rdfs:label                    "Feasibility Study" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_affordability , :ArchitecturalQuality_sustainability , :ArchitecturalQuality_analyzability , :ArchitecturalQuality_feasibility , :ArchitecturalQuality_durability ;
          gen:wikiEntry                 "[Businessdictionary Feasibility Study [date unknown]] An analysis and evaluation of a proposed project to determine if it is technically feasible is feasible within the estimated cost and will be profitable. Feasibility studies are almost always conducted where large sums are at stake." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignTactic_loose_coupling
          a           gen:DesignTactic ;
          rdfs:label  "loose coupling" .
  
  :DesignPattern_content_enricher
          a                              gen:DesignPattern ;
          rdfs:label                     "Content Enricher" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_portability , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_message_transformation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_fault_observer
          a                              gen:DesignPattern ;
          rdfs:label                     "Fault Observer" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_safety , :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability , :ArchitecturalQuality_availability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_resilience , :ArchitecturalQuality_robustness ;
          gen:isAlternativeOf            :DesignTactic_fault_handling , :DesignTactic_error_handling ;
          gen:wikiEntry                  "The system does not stop when errors are detected the errors are automatically corrected. One doesnt know what faults and errors have been detected and processed both currently and in the past. All errors should be reported to the Fault Observer. The Fault Observer is not necessarily an internal part of the system it can be an external entity that receives reports and passes them along to other parties that are interested. The Fault Observer will ensure that all interested parties receive information about the errors that are occurring [Hanmer 2007]pp 73-77. Relations Error Handling [Hanmer 2007] Architectural Patterns pp 73-77. Fault Handling [Hanmer 2007] Architectural Patterns pp 73-77." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_ar-023__integrated_services
          a                          spec:Requirement ;
          rdfs:label                 "AR-023: Integrated services" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall provide an interface to the logs and transaction records of the core services for monitoring, privacy, identity management, etc. This interface shall be published as an API for debugging and analysis purposes." ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Governance" ;
          spec:requirementPurpose    "Service integration" .
  
  :DesignDecision_ad-202__components
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-202: Components" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p>The following diagram illustrates the generic components of the system:</p>\n<p><img src=\"p/AspernES/uc8_component_view.png\" alt=\"\" width=\"600\" height=\"418\" /></p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_change_me ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_auditability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_security , :ArchitecturalQuality_reusability ;
          spec:useDecisionTactic          :DesignTactic_componentization .
  
  :Domain_ar-02__incentives_for_architects
          a           spec:Domain ;
          rdfs:label  "ar-02: incentives for architects" .
  
  :Requirement_ar-105__analytics
          a                          spec:Requirement ;
          rdfs:label                 "AR-105: Analytics" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Neben\n  den einfachen filterbasierten Datenabfragen soll das System auch komplexe\n  Fragestellungen durch Analysen beantworten können." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_sr-01_09 ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Data Analytics" .
  
  :Requirement_arch-1__client-server_interface
          a                          spec:Requirement ;
          rdfs:label                 "ARCH-1: Client-Server Interface" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Harmonize the\n  different Client-Server interface for the 2 clients</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">This will help in reducing complexity and Technical debt.</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Architecture / Development / Test" ;
          spec:requirementPurpose    "Web interfaces" .
  
  :Domain_ar-016__external_service_integration
          a           spec:Domain ;
          rdfs:label  "ar-016: external service integration" .
  
  :Project_aspernes  a  cont:Project ;
          rdfs:label  "aspernes" .
  
  :ArchitecturalQuality_provability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "provability" , "Provability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_access_control , :DesignPattern_federated_identity_pattern , :DesignTactic_authentication , :DesignPattern_identity_credentials , :DesignPattern_information_obscurity , :DesignPattern_public_key_encryption , :DesignPattern_secure_channels , :DesignPattern_known_partners ;
          gen:relatedQuality       :ArchitecturalQuality_functionality ;
          gen:wikiEntry            "[Wikipedia Provability 2014] Provability establishes authenticity and verifies results. It also demonstrates the validity of a hypothesis.Provability logic is a modal logic  in which the box operator is interpreted as it is provable that. The point is to capture the notion of a proof predicate of a reasonably rich formal theory such as peano arithmetic    Relations Authentication [Wikipedia Provability 2014] Provability establishes authenticity" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignTactic_overload_mitigation
          a                             gen:DesignTactic ;
          rdfs:label                    "overload mitigation" , "Overload Mitigation" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_affordability ;
          gen:wikiEntry                 "Overload mitigation aims to reduce the impact of increased workload conditions. The objective of mitigation is to enable the system to adapt to a new situation and to provide the ability to scale." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  gen:hasKnowledgeAuthor
          a                   owl:ObjectProperty ;
          rdfs:label          "isAddedBy" ;
          rdfs:subPropertyOf  gen:hasKnowledgeContext .
  
  :Domain_web  a      spec:Domain ;
          rdfs:label  "web" .
  
  :Requirement_cust-2__version_compatibility
          a                          spec:Requirement ;
          rdfs:label                 "CUST-2: Version Compatibility" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Version Compatibility\n  between Server and Client:</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">Both the clients can work only with the same version of syngo.plaza\n  server. This limitation prevents step-wise upgrade of clients in large setups</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Customer / SCM" ;
          spec:requirementPurpose    "Eliminate/Reduce macros" .
  
  gen:hasPosTacticEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  gen:hasTacticEffectOnQuality , gen:hasPosEffectOnQuality .
  
  :AuthorTag_modeling
          a           cont:AuthorTag ;
          rdfs:label  "modeling" .
  
  :DesignTactic_questionnaire
          a           gen:DesignTactic ;
          rdfs:label  "questionnaire" .
  
  :Requirement_ar-104_1__metadata_interface
          a                          spec:Requirement ;
          rdfs:label                 "AR-104.1: Metadata interface" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes , :Project_aspernbm ;
          gen:wikiEntry              "Die Schnittstellen des DWH\n  umfassen neben einer Datenabfrage auch eine Metadaten-abfrage, die es dem CLM\n  ermöglicht, die zur Verfügung stehenden KPIs und Dimensionsgrößen zur Auswahl\n  und Einschränkung anzubieten." , "<div style=\"position: relative; font-size: small;\">The interfaces of the DWH shall allow metadata queries in addition to simple data queries, which will enable the CLM to provide the available KPIs and underlying data as well as the possibility to choose from them and limit result sets .</div>" ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren , :UseCase_benchmarks ;
          spec:hasRequirementOrigin  :Domain_ar-104__stepwise_querying ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Adaptive Query Processing" .
  
  cont:AuthorTag  a        owl:Class ;
          rdfs:subClassOf  cont:ContextInformationElement .
  
  spec:Requirement  a      owl:Class ;
          rdfs:label       "Requirement" ;
          rdfs:subClassOf  gen:ArchitecturalKnowledgeElement .
  
  :DesignTactic_maintain_integrity
          a                             gen:DesignTactic ;
          rdfs:label                    "maintain integrity" , "Maintain Integrity" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_security , :ArchitecturalQuality_integrity ;
          gen:wikiEntry                 "Data should be delivered as intended. It can have redundant information encoded in it such as checksums or hash results which can be encrypted either along with or independently from the original data." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_logging_facade
          a                              gen:DesignPattern ;
          rdfs:label                     "Logging Facade" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_observability , :ArchitecturalQuality_testability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_testability , :ArchitecturalQuality_observability ;
          gen:isAlternativeOf            :DesignTactic_logging , :DesignTactic_abstraction ;
          gen:wikiEntry                  "<h1>Simple Logging Facade for Java (SLF4J)</h1>\n\n  <p>The Simple Logging Facade for Java (SLF4J) serves as a simple\n  facade or abstraction for various logging frameworks\n  (e.g. java.util.logging, logback, log4j) allowing the end user to\n  plug in the desired logging framework at <em>deployment</em>\n  time. </p>\n\n  <p>Before you start using SLF4J, we highly recommend that you read\n  the two-page <a href=\"http://www.slf4j.org/manual.html\" target=\"_blank\">SLF4J user manual</a>. \n  </p>\n\n  <p>Note that SLF4J-enabling your library implies the addition of\n  only a single mandatory dependency, namely <em>slf4j-api.jar</em>.\n  If no binding is found on the class path, then SLF4J will default to\n  a no-operation implementation.\n  </p>\n\n  <p>In case you wish to migrate your Java source files to SLF4J,\n  consider our <a href=\"http://www.slf4j.org/migrator.html\" target=\"_blank\">migrator tool</a> which can\n  migrate your project to use the SLF4J API in just a few minutes.</p><p><img src=\"https://workspace.cee.siemens.com/content/00000102/Pictures/NFR_Metamodel.png\"></p>\n\n  <p>In case an externally-maintained component you depend on uses a\n  logging API other than SLF4J, such as commons logging, log4j or\n  java.util.logging, have a look at SLF4J's binary-support for <a href=\"http://www.slf4j.org/legacy.html\" target=\"_blank\">legacy APIs</a>.</p>" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  gen:ArchitecturalQuality
          a                owl:Class ;
          rdfs:label       "Architectural Quality" ;
          rdfs:subClassOf  gen:ArchitecturalKnowledgeElement .
  
  :DesignPattern_marked_data
          a                              gen:DesignPattern ;
          rdfs:label                     "Marked Data" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_availability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_safety ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "When the system finds uncorrectable erroneous data the error is kept from spreading by markingthe data to indicate that it is unusable. Rules for processing these values when the data is encountered should be defined [Hanmer 2007] pp 220-223.  Relations Error Handling [Hanmer 2007] Error Mitigation Patterns pp 220-223." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_ad-006__failure_handling
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-006: Failure Handling" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p><strong>Failure Handling</strong></p><p>Use Timeout and Circuit braker patterns.&nbsp;</p><p>The timeout pattern basically helps to detect failed resources and to implement a fail fast strategy and to exactly define the reaction to a disconnected API.&nbsp;&nbsp;Connection timeouts can be implemented for each endpoint separately via the publisher application for each API.</p><p>The circuit breaker pattern<a href=\"javascript:saFiddle();\" name=\"_ftnref1\" data-mce-href=\"#_ftn1\" target=\"_blank\">[1]</a> builds on the timeout pattern. It basically defines an object that monitors resources and uses three states to define the reaction to calling instances</p><p><a href=\"javascript:closePopup(this);\" name=\"_ftn1\" data-mce-href=\"#_ftnref1\" target=\"_blank\">[1]</a> http://martinfowler.com/bliki/CircuitBreaker.html</p><p></p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-025__perceived_resillience ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_resilience ;
          spec:useDecisionTactic          :DesignTactic_grateful_degradation , :DesignTactic_failure_handling .
  
  :DesignPattern_local_cache
          a                              gen:DesignPattern ;
          rdfs:label                     "Local Cache" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_generality , :ArchitecturalQuality_scalability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_versatility , :ArchitecturalQuality_maintainability ;
          gen:isAlternativeOf            :DesignTactic_vertical_scaling ;
          gen:wikiEntry                  "[Dyson and Longshaw 2004] pp. 315-317.A Local cache helps to speed up access to information distributed across multiple servers. An Internet technology system that uses Dedicated Web and Application Servers with Common Persistent store. Information must be identified that changes infrequently compared to the frequency with which it is accessed and to cache it locally to where it is used.   Relations Vertical Scaling Vertical scaling extends its processing capability. A local cache speeds up access to information distributed across multiple servers." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_routine_maintenance
          a                              gen:DesignPattern ;
          rdfs:label                     "Routine Maintenance" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_integrity , :ArchitecturalQuality_robustness , :ArchitecturalQuality_security , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_safety , :ArchitecturalQuality_maturity , :ArchitecturalQuality_dependability , :ArchitecturalQuality_auditability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_viability , :ArchitecturalQuality_availability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_utility , :ArchitecturalQuality_accountability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_survivability , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_defensibility ;
          gen:isAlternativeOf            :DesignTactic_auditing , :DesignTactic_error_detection ;
          gen:wikiEntry                  "Routine Maintenancekeeps preventable errors from occuring as it checks the memory for errors. In many systems memory leaks occur. In general terms a memory leak is a loss of finite resources due to faults. When these faults are detected early the system can prevent errors and failures by not allowing the fault to activate.  Preventive Maintenance avoids many common and easily preventable errors. It can be initiated either through an operator request through the Maintenance Interface or it can be built into the system to happen automatically [Hanmer 2007]pp 122-123.  Relations Auditing [Hanmer 2007]Detection Patterns pp 122-123. Error Detection [Hanmer 2007]Detection Patterns pp 122-123." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  sear:trimmedKeyword
          a            owl:DatatypeProperty ;
          rdfs:domain  sear:Keyword ;
          rdfs:range   xsd:string .
  
  :DesignTactic_globalization
          a                             gen:DesignTactic ;
          rdfs:label                    "Globalization" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_localizability , :ArchitecturalQuality_suitability , :ArchitecturalQuality_portability , :ArchitecturalQuality_versatility ;
          gen:wikiEntry                 "[MSDN Globalization Step-by-Step 2014] The process of developing a program core whose features and code design are not solely based on a single language or locale. Instead their design is developed for the input display and output of a defined set of Unicode-supported language scripts and data related to specific locales." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_structuredness
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "structuredness" , "Structuredness" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_prototype , :DesignPattern_composite , :DesignPattern_proxy , :DesignPattern_abstract_factory , :DesignPattern_temporal_analytics , :DesignPattern_strategy , :DesignPattern_builder , :DesignPattern_state , :DesignPattern_visitor , :DesignPattern_factory_method , :DesignTactic_composition , :DesignPattern_command , :DesignPattern_bridge , :DesignPattern_object_pool , :DesignPattern_facade , :DesignTactic_abstraction , :DesignPattern_template_method , :DesignTactic_inheritance , :DesignPattern_chain_of_responsibility , :DesignPattern_pipes_and_filters_pattern , :DesignPattern_decorator ;
          gen:relatedQuality       :ArchitecturalQuality_complexity ;
          gen:wikiEntry            "[Alan Gillies 2011]Structuredness at its simplest may be calculated in terms of the average length of the code modules within the programm." ;
          spec:requiredBy          :Domain_abstract .
  
  gen:methodContext  a  owl:DatatypeProperty ;
          rdfs:domain  gen:SoftwareEngineeringMethod ;
          rdfs:range   xsd:string .
  
  :DesignPattern_factory_method
          a                              gen:DesignPattern ;
          rdfs:label                     "Factory Method" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_accessibility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_composability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          gen:isAlternativeOf            :DesignTactic_composition , :DesignTactic_abstraction ;
          gen:wikiEntry                  "<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Factory method pattern</h1>\n\t\t\t\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\">From Wikipedia, the free encyclopedia</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#mw-head\" target=\"_blank\">navigation</a>, \t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#p-search\" target=\"_blank\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"thumb tright\">\n<div class=\"thumbinner\" style=\"width:302px;\"><a href=\"https://en.wikipedia.org/wiki/File:FactoryMethod.svg\" class=\"image\" target=\"_blank\"><img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/FactoryMethod.svg/300px-FactoryMethod.svg.png\" width=\"300\" height=\"177\" class=\"thumbimage\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a3/FactoryMethod.svg/450px-FactoryMethod.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a3/FactoryMethod.svg/600px-FactoryMethod.svg.png 2x\" data-file-width=\"349\" data-file-height=\"206\"></a>\n<div class=\"thumbcaption\">\n<div class=\"magnify\"><a href=\"https://en.wikipedia.org/wiki/File:FactoryMethod.svg\" class=\"internal\" title=\"Enlarge\" target=\"_blank\"></a></div>\nFactory method pattern in <a href=\"https://en.wikipedia.org/wiki/Unified_Modeling_Language\" title=\"Unified Modeling Language\" target=\"_blank\">UML</a></div>\n</div>\n</div>\n<p>In <a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\" target=\"_blank\">class-based programming</a>, the <b>factory method pattern</b> is a <a href=\"https://en.wikipedia.org/wiki/Creational_pattern\" title=\"Creational pattern\" target=\"_blank\">creational pattern</a> which uses factory methods to deal with the problem of <a href=\"https://en.wikipedia.org/wiki/Object_creation\" title=\"Object creation\" class=\"mw-redirect\" target=\"_blank\">creating objects</a> without specifying the exact <a href=\"https://en.wikipedia.org/wiki/Class_(computer_programming)\" title=\"Class (computer programming)\" target=\"_blank\">class</a> of object that will be created. This is done by creating objects via calling a factory method—either specified in an interface and implemented by child classes, or implemented in a base class and optionally overridden by derived classes—rather than by calling a <a href=\"https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)\" title=\"Constructor (object-oriented programming)\" target=\"_blank\">constructor</a>.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#\" id=\"togglelink\" target=\"_blank\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Definition\" target=\"_blank\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Definition</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Example_implementations\" target=\"_blank\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Example implementations</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Java\" target=\"_blank\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">Java</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#PHP\" target=\"_blank\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">PHP</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#C.23\" target=\"_blank\"><span class=\"tocnumber\">2.3</span> <span class=\"toctext\">C#</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Limitations\" target=\"_blank\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">Limitations</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Uses\" target=\"_blank\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">Uses</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#See_also\" target=\"_blank\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-9\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#References\" target=\"_blank\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-10\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#External_links\" target=\"_blank\"><span class=\"tocnumber\">7</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Definition\">Definition</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"https://en.wikipedia.org/w/index.php?title=Factory_method_pattern&amp;action=edit&amp;section=1\" title=\"Edit section: Definition\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The factory method pattern should <i>not</i> be confused with the more general notion of <a href=\"https://en.wikipedia.org/wiki/Factory_(object-oriented_programming)\" title=\"Factory (object-oriented programming)\" target=\"_blank\">factories</a> and factory methods. The factory method pattern is the best-known use of factories and factory methods, but not all uses of factory methods are examples of the factory method pattern – only when inheritance is involved (a class implementing an interface, or derived class, implements a factory method) is it an example of the factory method pattern<sup class=\"noprint Inline-Template\" style=\"white-space:nowrap;\">[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Disputed_statement\" title=\"Wikipedia:Disputed statement\" class=\"mw-redirect\" target=\"_blank\"><span title=\"The material near this tag is possibly inaccurate or nonfactual. (October 2014)\">dubious</span></a> <span class=\"metadata\">– <a href=\"https://en.wikipedia.org/wiki/Talk:Factory_method_pattern#Dubious\" title=\"Talk:Factory method pattern\" target=\"_blank\">discuss</a></span></i>]</sup>. More basic uses of factories are not examples of the factory method pattern, and may instead be referred to as the <i>factory pattern</i><sup id=\"cite_ref-oodesign_1-0\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#cite_note-oodesign-1\" target=\"_blank\"><span>[</span>1<span>]</span></a></sup> or a <i>simple factory;</i><sup id=\"cite_ref-2\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#cite_note-2\" target=\"_blank\"><span>[</span>2<span>]</span></a></sup> these are discussed at <a href=\"https://en.wikipedia.org/wiki/Factory_(object-oriented_programming)\" title=\"Factory (object-oriented programming)\" target=\"_blank\">factory</a>.</p>\n<p>The Factory method lets a class defer instantiation to subclasses.<sup id=\"cite_ref-3\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#cite_note-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup></p>\n<p>Creating an object often requires complex processes not appropriate to include within a composing object. The object's creation may lead to a significant duplication of code, may require information not accessible to the composing object, may not provide a sufficient level of abstraction, or may otherwise not be part of the composing object's <a href=\"https://en.wikipedia.org/wiki/Concern_(computer_science)\" title=\"Concern (computer science)\" target=\"_blank\">concerns</a>. The factory method design pattern handles these problems by defining a separate <a href=\"https://en.wikipedia.org/wiki/Method_(computer_science)\" title=\"Method (computer science)\" class=\"mw-redirect\" target=\"_blank\">method</a> for creating the objects, which <a href=\"https://en.wikipedia.org/wiki/Subclass_(computer_science)\" title=\"Subclass (computer science)\" class=\"mw-redirect\" target=\"_blank\">subclasses</a> can then override to specify the <a href=\"https://en.wikipedia.org/wiki/Subtype\" title=\"Subtype\" class=\"mw-redirect\" target=\"_blank\">derived type</a> of product that will be created.</p>\n<p>The factory method pattern relies on inheritance, as object creation is delegated to subclasses that implement the factory method to create objects.<sup id=\"cite_ref-4\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#cite_note-4\" target=\"_blank\"><span>[</span>4<span>]</span></a></sup></p></div></div>" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Factory_method_pattern .
  
  gen:relatedQuality  a       owl:SymmetricProperty , owl:ObjectProperty ;
          rdfs:domain         gen:ArchitecturalQuality ;
          rdfs:label          "isRelatedTo" ;
          rdfs:range          gen:ArchitecturalQuality ;
          rdfs:subPropertyOf  gen:isRelatedTo ;
          owl:inverseOf       gen:relatedQuality .
  
  :DesignPattern_system_overview
          a                              gen:DesignPattern ;
          rdfs:label                     "System overview" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_isolateability , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_understandability , :ArchitecturalQuality_affordability ;
          gen:isAlternativeOf            :DesignTactic_transparency , :DesignTactic_monitoring , :DesignTactic_data_access ;
          gen:wikiEntry                  "<h2>Motivation</h2>\n<p align=\"justify\">The <em>Cancel Task </em>pattern provides the ability to withdraw a task which has been enabled or is already executing. This ensures that it will not commence or complete execution. </p>\n<h2>Overview</h2>\n<p align=\"justify\">The general interpretation of the <em>Cancel Task</em> pattern is illustrated by Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig25\" target=\"_blank\">25</a>. The trigger which has enabled task B is removed, preventing the task from proceeding.</p>\n<a name=\"fig25\" id=\"fig25\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig25.png\" width=\"539\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 25: </strong>Cancel task pattern (variant 1) </p>\n<p align=\"justify\">There is also a second variant of the pattern where the task has already commenced execution but has not yet completed. This scenario is shown in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig26\" target=\"_blank\">26</a>, where a task which has been enabled or is currently executing can be cancelled. It is important to note for both variants that cancellation is not guaranteed and it is possible that the task will continue executing to completion. In effect, the cancellation vs continuation decision operates as a <em>Deferred Choice</em> with a race condition being set up between the cancellation event and the much slower task of resources responding to work assignment. For all practical purposes, it is much more likely that the cancellation will be effected rather than the task being continued.</p>\n<a name=\"fig26\" id=\"fig26\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig26.png\" width=\"620\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 26:</strong> Cancel task pattern (variant 2) </p>\n<p align=\"justify\">Where guaranteed cancellation is required, the implementation of tasks should take the form illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig27\" target=\"_blank\">27</a>. The decision to cancel task B can only be made after it has been enabled and prior to it completing. Once this decision is made, it is not possible for the task to progress any further. For obvious reasons, it is not possible to cancel a task which has not been enabled (i.e. there is no \"memory\" associated with the action of cancelling a task in the way that there is for triggers) nor is it possible to cancel a task which has already completed execution. </p>\n<a name=\"fig27\" id=\"fig27\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig27.png\" width=\"734\" height=\"276\"></p>\n<p align=\"center\"><strong>Figure 27:</strong> Cancel task pattern with guaranteed termination</p>\n<p align=\"justify\">&nbsp;</p>" , "[Dyson andLongshaw 2004] pp. 326-328. When the amount of system elements is very high we need to identify long-term trends and the systems current health. There has to be a mechanism to aggregate the monitoring and logging information generated by Continual Status Reporting and 3-Category Logging. The information has to be merged and abstracted from it to give an overview ofthe system.   Relations Transparacy Transparacy indicates that something goes in the way it should and System overview has to identify the system current health." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_optimization
          a           cont:AuthorTag ;
          rdfs:label  "optimization" .
  
  :DesignTactic_virtual_paging
          a           gen:DesignTactic ;
          rdfs:label  "virtual paging" .
  
  :DesignTactic_monitoring
          a                             gen:DesignTactic ;
          rdfs:label                    "Monitoring" , "monitoring" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_observability , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_availability ;
          gen:wikiEntry                 "[Wikipedia Monitoring 2014] To monitor or monitoring generally means to be aware of the state of a system. [Wikipedia System Monitoring 2014] A system monitor is a process (within a distributed system) for collecting and storing state data." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_defensibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "defensibility" , "Defensibility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_routine_audits , :DesignTactic_auditing , :DesignPattern_limit_retries , :DesignPattern_data_logger , :DesignPattern_routine_maintenance , :DesignPattern_escalation , :DesignPattern_existing_metrics , :DesignPattern_access_control , :DesignPattern_correcting_audits , :DesignTactic_logging ;
          gen:relatedQuality       :ArchitecturalQuality_security , :ArchitecturalQuality_survivability ;
          gen:wikiEntry            "The concept of defensibility usually means the confidence to be able to declare in e.g. legal proceedings that everything that was reasonable has been done in order to protect your systems after a breach or successful attack.  [Donald G. Firesmith et al. 2008]The subtype of dependability that is the degree to which the system or architectural component defends valuable assets from unauthorized harm." ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_project_business
          a           cont:AuthorTag ;
          rdfs:label  "project business" .
  
  :Author_wehrwein_bradley
          a           cont:Author ;
          rdfs:label  "wehrwein bradley" .
  
  :ArchitecturalQuality_mobility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Mobility" , "mobility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_load_distribution , :DesignPattern_scatter_and_gather , :DesignPattern_shared_space , :DesignPattern_caching , :DesignPattern_map_reduce , :DesignPattern_peripheral_specialist_elements , :DesignPattern_queuing , :DesignPattern_competing_consumers , :DesignPattern_execution_orchestrator , :DesignPattern_static_content_hosting_pattern , :DesignPattern_load_balancing , :DesignPattern_sharding_pattern , :DesignPattern_bulk_synchronous_parallel , :DesignPattern_replication , :DesignPattern_pipe_and_filter ;
          gen:relatedQuality       :ArchitecturalQuality_flexibility , :ArchitecturalQuality_portability ;
          gen:wikiEntry            "Mobility is the requirement to utilize a system on different devices. This requirement is fulfilled by Portal Mobile Accelerator [Chelis and Martins 2012].   Relations To use a system on different devices Load Distribution should be consideren which can also share the workload and connect different devices networks etc" ;
          spec:requiredBy          :Domain_abstract .
  
  :UseCase_sad_generation
          a           spec:UseCase ;
          rdfs:label  "sad generation" .
  
  gen:alternatives  a    owl:FunctionalProperty , owl:ObjectProperty ;
          rdfs:domain    gen:DesignTactic ;
          rdfs:label     "supports" ;
          rdfs:range     gen:DesignPattern ;
          owl:inverseOf  gen:isAlternativeOf .
  
  :DesignDecision_kdd-42
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-42" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Stakeholderabhängige Anzeige</strong></p><p>Die verschiedenen Darstellungen und Auswahlmenus werden Stakeholderabhängig erzeugt. Somit ist auch die Anzeige der Zielgrößen in der Benutzeroberfläche rollenabhängig und wird von den systemweiten Zugriffskontrollmechanismen unterstützt.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-161__access_control , :Domain_ar-107__multi-tenancy_support ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_authorization , :DesignTactic_multitenancy , :DesignTactic_authentication .
  
  :DesignPattern_throttling_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Throttling Pattern" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki , :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_performance , :ArchitecturalQuality_affordability , :ArchitecturalQuality_manageability ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation , :DesignTactic_throttling ;
          gen:wikiEntry                  "<h3 class=\"title\">Throttling Pattern</h3>\n<div id=\"mainSection\">\n<div id=\"mainBody\">\n<p>Control the consumption of resources used by an instance of an application, an individual tenant, or an entire service. This pattern can allow the system to continue to function and meet service level agreements, even when an increase in demand places an extreme load on resources.</p>\n<h3 class=\"heading\">Context and Problem</h3>\n<p>The load on a cloud application typically varies over time based on the number of active users or the types of activities they are performing. For example, more users are likely to be active during business hours, or the system may be required to perform computationally expensive analytics at the end of each month. There may also be sudden and unanticipated bursts in activity. If the processing requirements of the system exceed the capacity of the resources that are available, it will suffer from poor performance and may even fail. The system may be obliged to meet an agreed level of service, and such failure could be unacceptable.</p>\n<p>There are many strategies available for handling varying load in the cloud, depending on the business goals for the application. One strategy is to use autoscaling to match the provisioned resources to the user needs at any given time. This has the potential to consistently meet user demand, while optimizing running costs. However, while autoscaling may trigger the provisioning of additional resources, this provisioning is not instantaneous. If demand grows quickly, there may be a window of time where there is a resource deficit.</p>\n<h3 class=\"heading\">Solution</h3>\n<p>An alternative strategy to autoscaling is to allow applications to use resources only up to some soft limit, and then throttle them when this limit is reached. The system should monitor how it is using resources so that, when usage exceeds some system-defined threshold, it can throttle requests from one or more users to enable the system to continue functioning and meet any service level agreements (SLAs) that are in place.&nbsp;</p>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_web_services , :Domain_abstract .
  
  :Domain_rq11  a     spec:Domain ;
          rdfs:label  "rq11" .
  
  :Author_filippov_sergey
          a           cont:Author ;
          rdfs:label  "filippov sergey" .
  
  :ArchitecturalQuality_localizability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "localizability" , "Localizability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_globalization , :DesignPattern_capturing_architectural_requirements ;
          gen:relatedQuality       :ArchitecturalQuality_usability ;
          gen:wikiEntry            "Localizability is the design of the basic software code and resources such that a program can be localized into different language editions without any changes to the source code. [Termwiki Localizability 2014].  Relations For localizability the Globalization Tactic would be right by developing programs whose features and code design are not solely based on a single language or locale No changes in the source code have to be made by using it. Instead the design is developed for the input display and output of a defined set of Unicode-supported language scripts and data related to specific locales." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_flyweight
          a                              gen:DesignPattern ;
          rdfs:label                     "Flyweight" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_performance , :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_affordability ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation , :DesignTactic_parallel_computing ;
          gen:wikiEntry                  "[Wikipedia Flyweight Pattern 2014] A Flyweight reduces the cost of creating and manipulating a large number of similar objects. (GoF structural pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Flyweight_pattern .
  
  :AuthorTag_load_testing
          a           cont:AuthorTag ;
          rdfs:label  "load testing" .
  
  :DesignDecision_kdd-10
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-10" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Filterbasierte Datenabfragen</strong></p><p>Die Schnittstelle zum DWH unterstützt einen webbasierten (z.B. REST, SOAP), zustandslosen „Request/Response“ Mechanismus für die Datenabfragen. Für die Datenabfragen werden sogenannte Abfragefilter verwendet. Ein Abfragefilter ist eine Datenstruktur, die es ermöglicht, die Ergebnismenge einer Datenabfrage gezielt nach bestimmten Kriterien einzuschränken.</p><p>Die im Smart ICT-System verwendeten Abfragefilter haben folgende Struktur (siehe auch KDD-9):<br></p><ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Hauptteil</span><br></li><ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Eindeutiger Name der Abfrage (kann z.B. der Name eines Serverseitig gespeicherten SQL-Abfrage sein oder der Name einer RESTful POST Methode).</span></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Liste von Parametername/Wert-Paaren</span></li></ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Optional</span><br></li><ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Name/Typ der Analyse</span></li></ul></ul><p>Der eindeutige Name der Abfrage wird von der Visualisierungsschicht bis zur Datenschicht bei jeder Datenabfrage durchgestellt. Dies ermöglicht ein direktes Mapping zwischen Visualisierungen und Abfragen.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-158__standard_compatibility , :Domain_ar-104_2__variable_filtering , :Domain_ar-153__scalability , :Domain_ar-104__stepwise_querying , :Domain_ar-104_1__metadata_interface ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_versatility , :ArchitecturalQuality_portability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_adaptive_query_processing , :DesignTactic_web_interfaces , :DesignTactic_filter-based_queries .
  
  :Domain_ar-154__extensibiltiy
          a           spec:Domain ;
          rdfs:label  "ar-154: extensibiltiy" .
  
  :DesignDecision_kdd-09__client-server_compatibility
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-09: Client-Server Compatibility" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><strong><span lang=\"EN-US\">Version Compatibility between Server and Client</span></strong></p>\n<p><span lang=\"EN-US\">Use the version compatibility mechanisms from syngo Imaging.</span></p>\n<p><strong><span lang=\"EN-US\">Background and rationale:</span></strong></p>\n<p><span lang=\"EN-US\">During system upgrades in large sites, it is quite important that the downtime is reduced to least possible duration. Client&rsquo;s Backward compatibility (old client connecting to upgraded server) with server becomes essential in this case. </span></p>\n<p><span lang=\"EN-US\">Another use case is when newer version of client needs to connect to an existing (older) version of server. This is useful when selective users try out the new features in client application. This is the Forward compatibility requirement.</span></p>\n<p><span lang=\"EN-US\">syngo Imaging has been supporting this feature for quite some time. It would be a good idea to consider the key concepts of interface management for version compatibility. Refer to &ldquo;Interfacing FS&rdquo; of syngo Imaging VB36D for more information.</span></p>\n<p><span lang=\"EN-US\">A detailed analysis of this topic is required.</span></p>\n<p><strong><span lang=\"EN-US\">Pros:</span></strong></p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">Upgrade and roll out of new versions will be shorter and hence, more cost effective.</span></li>\n<li><span style=\"line-height: 1.3em;\">In case of any client issues (bugs) in newer version, the selective roll out mechanism allows a quick rollback of the new version.</span></li>\n</ul>\n<p><strong><span lang=\"EN-US\">Cons:</span></strong></p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">Redesign of the interfaces may require some effort</span></li>\n<li><span style=\"line-height: 1.3em;\">Testing could be expensive if automation is not achieved to a good extent</span></li>\n</ul>" ;
          spec:decisionArchitecturalView  "4. Deployment View" ;
          spec:hasDecisionDomain          :Domain_cust-2__version_compatibility ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_compatibility ;
          spec:useDecisionTactic          :DesignTactic_versioning .
  
  cont:ContextInformationElement
          a           owl:Class ;
          rdfs:label  "Context Information Element" .
  
  :DesignPattern_selective_consumer
          a                              gen:DesignPattern ;
          rdfs:label                     "Selective Consumer" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          spec:hasPatternDomain          :Domain_abstract .
  
  sear:hasQueryElementContext
          a                   owl:ObjectProperty ;
          rdfs:domain         sear:QueryElement ;
          rdfs:subPropertyOf  gen:hasContext .
  
  :DesignDecision_kdd-04__limiting_results_in_pb
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-04: Limiting Results in PB" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><strong><span lang=\"EN-US\">Limiting results in Patient Browser</span></strong></p><p><span lang=\"EN-US\">Currently the results in the Patien Browser (PB) are fetched from the client for the given filter. Then sorting is done on the fetched data and displayed in a <em>List Control</em>. For smaller result sets, the duration in a low bandwidth environment may not be significantly different from LAN environment. However, if the result set is very large (say, more than 5000 studies), it may take several seconds to display the results in PB in WAN environment. </span><span lang=\"EN-US\">The criticality of the delay needs to be assessed in a simulated WAN environment. </span></p><p><span lang=\"EN-US\">In case any improvement is required in result display in PB, the following options could be considered:</span></p><p><strong><span lang=\"EN-US\">Option 1:</span></strong><span lang=\"EN-US\">&nbsp;</span><span lang=\"EN-US\">Show a warning massage</span></p><p><span lang=\"EN-US\">If the result set for the currently applied filter exceeds a preconfigured number the following alternative behaviors can be implemented</span></p><ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">A&nbsp;warning message is&nbsp;shown to the user telling her to refine the filter. The results will be displayed only when the number of entries is less than the configured value.</span></li><li>Instead of a warning, the user receives a message stating that the result set has been reduced to a certain limit by the system to ensure good performance. The user can opt for getting all results at the cost of a longer waiting time. Thus, it is not a warning but an option dialogue.</li></ul><p><strong><span lang=\"EN-US\">Pros:</span></strong></p><p><span lang=\"EN-US\">o&nbsp;&nbsp; </span><span lang=\"EN-US\">Low effort </span></p><p><strong><span lang=\"EN-US\">Cons:</span></strong></p><p><span lang=\"EN-US\">o&nbsp;&nbsp; </span><span lang=\"EN-US\">Usability can be an issue – user may have to refine filters to see results in PB, thus will consume more time from user</span></p><p>&nbsp;</p><p><strong><span lang=\"EN-US\">Option 2:&nbsp;</span></strong><span lang=\"EN-US\">Chunked result fetch and display:</span></p><p><span lang=\"EN-US\">The result will have to be sorted on the&nbsp;server side</span><span lang=\"EN-US\">&nbsp;first&nbsp;and needs to be sent in chunks to the client using&nbsp;bookmarking.&nbsp;For greater efficiency, the sorting should be done in the SQL Select statement. A smart combination of pre-sorting and post-filtering may eliminate any sorting needs on the client side.</span></p><p><span lang=\"EN-US\">The data will be displayed in PB page by page. As the user scrolls, data will be fetched in background from server and displayed in PB.&nbsp;</span></p><p><span lang=\"EN-US\"><strong>Note:</strong> This tactic is also called <em>virtual paging</em>: the user does not have to click on \"next / previous page\" buttons; instead, a&nbsp;<em>virtual next / previous page behavior</em>&nbsp;is activated without the need of buttons. The user's experience thus becomes on of endless or infinite scrolling, even if the entire request is not cached on the client.</span></p><p><strong><span lang=\"EN-US\">Pros:</span></strong></p><p><span lang=\"EN-US\">o&nbsp;&nbsp; </span><span lang=\"EN-US\">Can handle very large amount of data</span></p><p><strong><span lang=\"EN-US\">Cons:</span></strong></p><p><span lang=\"EN-US\">o&nbsp;&nbsp; </span><span lang=\"EN-US\">Complexity and effort are high</span></p><p><span lang=\"EN-US\">o&nbsp;&nbsp; </span><span lang=\"EN-US\">Depending on the implementation / network, it could be that there might be small delays during scrolling in PB List control</span></p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_perf-2__performance_optimization , :Domain_cust-1__reporting_capability_in_wan , :Domain_cust-4__web_client_startup , :Domain_perf-1__performance_requirements ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_performance ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_complexity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_infinite_scrolling , :DesignTactic_virtual_paging .
  
  :AuthorTag_domain_model
          a           cont:AuthorTag ;
          rdfs:label  "domain model" .
  
  :DesignTactic_divide_and_conquer
          a           gen:DesignTactic ;
          rdfs:label  "divide and conquer" .
  
  :DesignPattern_restful_web_api
          a                              gen:DesignPattern ;
          rdfs:label                     "RESTful Web API" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_complexity , :ArchitecturalQuality_security , :ArchitecturalQuality_privacy ;
          gen:isAlternativeOf            :DesignTactic_web_interfaces ;
          gen:wikiEntry                  "<p><span style=\"font-size: 14pt;\"><strong>RESTful Web API</strong></span></p>\n<p>The term API stands for ‘Application Programming Interface’. In the world of web development the term ‘API’ is synonymous with online web services which client apps can use to retrieve and update data. These online services have had several names/formats over the years such as SOAP, however the current popular choice is to create a REST (or RESTful) API.</p>\n<p>We’ll come onto REST and why REST is now preferred later, but first let’s examine why you would even bother with an API.</p>\n<p>Let’s consider a modern application which may include several mobile apps on various platforms and usually some kind of web application too. Without an API, a basic architecture may look like this where each client app has its own embedded business logic.</p>\n<p><a href=\"http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-56-73/3225.NoAPIArchitecture.PNG\" target=\"_blank\"><img src=\"http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-56-73/3225.NoAPIArchitecture.PNG\" alt=\"\" border=\"0\"></a></p>\n<p>Notice that each client app has its own embedded business logic (probably written in several different languages) which connects directly to the database to get, update and manipulate data. This local business logic means that the client apps can easily become complex and all need to be maintained in sync with each other. When a new feature is required, you’ll have to update each app accordingly. This can be a very expensive process which often leads to feature fragmentation, bugs and can really hold back innovation.</p>\n<p>Now let’s consider the same architecture with a central API which hold all the business logic.</p>\n<p><a href=\"http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-56-73/2318.WithAPIArchitecture.PNG\" target=\"_blank\"><img src=\"http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-56-73/2318.WithAPIArchitecture.PNG\" alt=\"\" border=\"0\"></a></p>\n<p>Each app uses the same API to get, update and manipulate data. All apps have feature parity and when you need to make a change you just make it in one place in line with the ‘Don’t Repeat Yourself’ (DRY) principle of software development. The apps themselves then become relatively lightweight UI layers.</p>\n<h2>What is REST?</h2>\n<p>REST stands for ‘Representational State Transfer’ and it is an architectural pattern for creating an API that uses HTTP as its underlying communication method. REST was originally conceived by Roy Fielding in his 2000 dissertation paper entitled ‘Architectural Styles and the Design of Network-based Software Architectures’, chapter 5 cover REST specifically: <a href=\"http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm\" target=\"_blank\">http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm</a></p>\n<p>Almost every device that is connected to the internet already uses HTTP; it is the base protocol that the internet is built on which is why it makes such a great platform for an API.</p>\n<p>HTTP is a request and response system; a calling client sends a request to an endpoint and the endpoint responds. The client and endpoint can be anything but a typical example is a browser accessing a web server or an app accessing and API.</p>\n<p>There are several key implementation details with HTTP that you should be aware of:</p>\n<ul>\n<li><strong>Resources</strong> – REST uses addressable resources to define the structure of the API. These are the URLs you use to get to pages on the web, for example ‘http://www.microsoft.com/Surface-Pro-3’ is a resource</li>\n<li><strong>Request Verbs</strong> – These describe what you want to do with the resource. A browser typically issues a GET verb to instruct the endpoint it wants to get data, however there are many other verbs available including things like POST, PUT and DELETE. See the full list at <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\" target=\"_blank\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html</a></li>\n<li><strong>Request Headers</strong> – These are additional instructions that are sent with the request. These might define what type of response is required or authorisation details. See the full list at <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\" target=\"_blank\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a></li>\n<li><strong>Request Body</strong> - Data that is sent with the request. For example a POST (creation of a new item) will required some data which is typically sent as the request body in the format of JSON or XML.</li>\n<li><strong>Response Body</strong> – This is the main body of the response. If the request was to a web server, this might be a full HTML page, if it was to an API, this might be a JSON or XML document.</li>\n<li><strong>Response Status codes</strong> – These codes are issues with the response and give the client details on the status of the request. See the full list at <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\" target=\"_blank\">www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a></li>\n</ul>\n<p>In the context of a REST API, resources typically represent your data entities (i.e. ‘Product’, ‘Person’, ‘Order’ etc). The verb that is sent with the request informs the API what to do with the resource, for example a GET request gets data about an entity, POST requests create a new entity.</p>\n<p>There is a convention in place that GET requests to an entity url such as /Products returns a list of products, possibly matching some criteria that was sent with the request. However, to retrieve a specific product, you would use the product’s ID as part of the resource, for example /Products/81 would return product with the ID of 81. It is also possible to use query string parameters with an API, for example you may have something like /Products?Colour=red which returns all red products.</p>\n<p>These are some typical requests you might expect to see in an ecommerce API:</p>\n<table>\n<tbody>\n<tr>\n<td><strong>Resource</strong></td>\n<td><strong>Verb</strong></td>\n<td><strong>Expected Outcome</strong></td>\n<td><strong>Response Code</strong></td>\n</tr>\n<tr>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">/Products</span></td>\n<td>&nbsp;<span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">GET</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">A list of all products in the system</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">200/OK</span></td>\n</tr>\n<tr>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">/Products?Colour=red</span></td>\n<td>&nbsp;GET</td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">A list of all products in the system where the colour is red</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">200/OK</span></td>\n</tr>\n<tr>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">/Products</span></td>\n<td>&nbsp;POST</td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">Creation of a new product</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">201/Created</span></td>\n</tr>\n<tr>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">/Products/81</span></td>\n<td>&nbsp;GET</td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">Product with ID of 81</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">200/OK</span></td>\n</tr>\n<tr>\n<td>/Products/881(a product ID which does not exist)</td>\n<td>&nbsp;GET</td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">Some error message</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">404/Not<br>Found</span></td>\n</tr>\n<tr>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">/Products/81</span></td>\n<td>&nbsp;PUT</td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">An update to the product with an ID of 81</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">204/No<br>Content</span></td>\n</tr>\n<tr>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">/Products/81</span></td>\n<td>&nbsp;DELETE</td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">Deletion of the product with an ID of 81</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">204/No<br>Content</span></td>\n</tr>\n<tr>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">/Customers</span></td>\n<td>&nbsp;GET</td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">A list of all customers</span></td>\n<td><span style=\"font-family: 'Calibri',sans-serif; font-size: 11pt; mso-bidi-font-size: 10.0pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: 'Times New Roman'; mso-fareast-theme-font: minor-fareast; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-GB; mso-fareast-language: EN-GB; mso-bidi-language: AR-SA;\">200/OK</span></td>\n</tr>\n</tbody>\n</table><span style=\"font-size: small;\">&nbsp;</span>\n<h2>What is .net Web API?</h2>\n<p>.Net’s Web API is an easy way to implement a RESTful web service using all of the goodness that the .net framework provides. Once you understand the basic principles of REST, then a .net Web API will be very easy to implement.</p>\n<p>Web API is built on .net’s modular, pluggable pipeline model. This means that when a server hosting a web API receives a request, it passes through .nets request pipeline first. This enables you to easily add your own modules if you find that the default capabilities are not enough for your needs. With the recent announcements on ASP.net vNext this also means you can potentially host your Web API outside of Windows Server which opens up a whole range of usage cases. See <a href=\"http://www.asp.net/vnext\" target=\"_blank\">http://www.asp.net/vnext</a> for detail.</p>\n<p>Web API uses the Controller and Action concepts from MVC so if you already understand .net MVC you are in a good place. If you don’t, then Web API is a great way to learn MVC.</p>\n<p>Resources are mapped directly to controllers; you would typically have a different controller for each of your main data entities (Product, Person, Order etc). Web API uses the .net routing engine to map URLs to controllers. Typically, APIs are held within a ‘/api/’ route which helps to distinguish API controllers from other non-API in the same website.</p>\n<p>Actions are used to map to specific HTTP verbs, for example you would typically have a GET action which returns all of the entities. This action would respond to /api/Products (where ‘products’ is your controller) and would look something like this:</p>\n<pre class=\"scroll\"><code class=\"csharp\"> public IEnumerable Get()<br> {<br> return new string[] { \"value1\", \"value2\" };<br> }</code></pre>\n<p>You may also have a GET action which accepts a specific ID and returns a specific entity. It would respond to /api/Products/81 and would look something like this:</p>\n<pre class=\"scroll\"><code class=\"csharp\"> public string Get(int id)<br> {<br> return \"value\";<br> }</code></pre>\n<p>There are many great hidden benefits to using Web API which you may not realise but actually save you a lot of work.</p>" ;
          spec:hasPatternDomain          :Domain_web_services .
  
  :DesignPattern_async_methods
          a                              gen:DesignPattern ;
          rdfs:label                     "Async Methods" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_usability ;
          gen:isAlternativeOf            :DesignTactic_asynchronous_calls ;
          gen:wikiEntry                  "<h2 class=\"title\">Asynchronous Programming with Async and Await (C# and Visual Basic)</h2>\n<div class=\"lw_vs\">\n<div id=\"curversion\">You can avoid performance bottlenecks and enhance the overall responsiveness of your application by using asynchronous programming. However, traditional techniques for writing asynchronous applications can be complicated, making them difficult to write, debug, and maintain.</div>\n</div>\n<div id=\"mainSection\">\n<div id=\"mainBody\">\n<div class=\"introduction\">\n<p>Visual Studio 2012 introduces a simplified approach, async programming, that leverages asynchronous support in the .NET Framework 4.5 and the Windows Runtime. The compiler does the difficult work that the developer used to do, and your application retains a logical structure that resembles synchronous code. As a result, you get all the advantages of asynchronous programming with a fraction of the effort.</p>\n<p>Asynchrony is essential for activities that are potentially blocking, such as when your application accesses the web. Access to a web resource sometimes is slow or delayed. If such an activity is blocked within a synchronous process, the entire application must wait. In an asynchronous process, the application can continue with other work that doesn't depend on the web resource until the potentially blocking task finishes.</p>\n</div>\n<div>\n<div class=\"sectionblock\">\n<div class=\"section\">\n<p>The following table shows typical areas where asynchronous programming improves responsiveness. The listed APIs from the .NET Framework 4.5 and the Windows Runtime contain methods that support async programming.</p>\n<div class=\"contentTableWrapper\">\n<table border=\"1px\">\n<tbody>\n<tr>\n<th>\n<p style=\"text-align: left;\">Application area</p>\n</th>\n<th>\n<p style=\"text-align: left;\">Supporting APIs that contain async methods</p>\n</th>\n</tr>\n<tr>\n<td>\n<p>Web access</p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.net.http.httpclient.aspx\" target=\"_blank\">HttpClient</a>, <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=259441\" target=\"_blank\">SyndicationClient</a></p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Working with files</p>\n</td>\n<td>\n<p><a href=\"http://go.microsoft.com/fwlink/p/?LinkId=248220\" target=\"_blank\">StorageFile</a>, <a href=\"https://msdn.microsoft.com/en-us/library/system.io.streamwriter.aspx\" target=\"_blank\">StreamWriter</a>, <a href=\"https://msdn.microsoft.com/en-us/library/system.io.streamreader.aspx\" target=\"_blank\">StreamReader</a>, <a href=\"https://msdn.microsoft.com/en-us/library/system.xml.xmlreader.aspx\" target=\"_blank\">XmlReader</a></p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Working with images</p>\n</td>\n<td>\n<p><a href=\"http://go.microsoft.com/fwlink/p/?LinkId=261839\" target=\"_blank\">MediaCapture</a>, <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=261840\" target=\"_blank\">BitmapEncoder</a>, <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=261841\" target=\"_blank\">BitmapDecoder</a></p>\n</td>\n</tr>\n<tr>\n<td>\n<p>WCF programming</p>\n</td>\n<td>\n<p><a href=\"http://go.microsoft.com/fwlink/p/?LinkID=192382\" target=\"_blank\">Synchronous and Asynchronous Operations</a></p>\n</td>\n</tr>\n<tr>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Asynchrony proves especially valuable for applications that access the UI thread because all UI-related activity usually shares one thread. If any process is blocked in a synchronous application, all are blocked. Your application stops responding, and you might conclude that it has failed when instead it's just waiting.</p>\n<p>When you use asynchronous methods, the application continues to respond to the UI. You can resize or minimize a window, for example, or you can close the application if you don't want to wait for it to finish.</p>\n<p>The async-based approach adds the equivalent of an automatic transmission to the list of options that you can choose from when designing asynchronous operations. That is, you get all the benefits of traditional asynchronous programming but with much less effort from the developer.</p>\n</div>\n</div>\n</div>\n<a id=\"BKMK_HowtoWriteanAsyncMethod\" href=\"https://msdn.microsoft.com/en-us/library/hh191443.aspx\" target=\"_blank\"></a>\n<div>\n<div>The <a href=\"https://msdn.microsoft.com/en-us/library/hh191564.aspx\" target=\"_blank\">Async</a> and <a href=\"https://msdn.microsoft.com/en-us/library/hh191564.aspx\" target=\"_blank\">Await</a> keywords in Visual Basic and the <a href=\"https://msdn.microsoft.com/en-us/library/hh156513.aspx\" target=\"_blank\">async</a> and <a href=\"https://msdn.microsoft.com/en-us/library/hh156528.aspx\" target=\"_blank\">await</a> keywords in C# are the heart of async programming. By using those two keywords, you can use resources in the .NET Framework or the Windows Runtime to create an asynchronous method almost as easily as you create a synchronous method. Asynchronous methods that you define by using async and await are referred to as async methods.</div>\n<div class=\"sectionblock\">\n<div class=\"section\">\n<p>The following example shows an async method. Almost everything in the code should look completely familiar to you. The comments call out the features that you add to create the asynchrony.</p>\n<p>You can find the complete example file at the end of this topic, and you can download the sample from <a href=\"http://go.microsoft.com/fwlink/?LinkID=261549\" target=\"_blank\">Async Sample: Example from \"Asynchronous Programming with Async and Await\"</a>.</p>\n<div id=\"code-snippet-1\" class=\"codeSnippetContainer\">\n<div class=\"codeSnippetContainerCodeContainer\">\n<div id=\"CodeSnippetContainerCode_65468b39-1f96-41c5-af25-0f9f48dc8491\" class=\"codeSnippetContainerCode\" dir=\"ltr\">\n<div style=\"color: black;\">\n<pre><span style=\"color: green;\">// Three things to note in the signature:</span>\n<span style=\"color: green;\">//  - The method has an async modifier. </span>\n<span style=\"color: green;\">//  - The return type is Task or Task. (See \"Return Types\" section.)</span>\n<span style=\"color: green;\">//    Here, it is Task because the return statement returns an integer.</span>\n<span style=\"color: green;\">//  - The method name ends in \"Async.\"</span>\n<span style=\"color: blue;\">async</span> Task&lt;<span style=\"color: blue;\">int</span>&gt; AccessTheWebAsync()\n{ \n    <span style=\"color: green;\">// You need to add a reference to System.Net.Http to declare client.</span>\n    HttpClient client = <span style=\"color: blue;\">new</span> HttpClient();\n\n    <span style=\"color: green;\">// GetStringAsync returns a Task. That means that when you await the</span>\n    <span style=\"color: green;\">// task you'll get a string (urlContents).</span>\n    Task&lt;<span style=\"color: blue;\">string</span>&gt; getStringTask = client.GetStringAsync(<span style=\"color: #a31515;\">\"http://msdn.microsoft.com\"</span>);\n\n    <span style=\"color: green;\">// You can do work here that doesn't rely on the string from GetStringAsync.</span>\n    DoIndependentWork();\n\n    <span style=\"color: green;\">// The await operator suspends AccessTheWebAsync.</span>\n    <span style=\"color: green;\">//  - AccessTheWebAsync can't continue until getStringTask is complete.</span>\n    <span style=\"color: green;\">//  - Meanwhile, control returns to the caller of AccessTheWebAsync.</span>\n    <span style=\"color: green;\">//  - Control resumes here when getStringTask is complete. </span>\n    <span style=\"color: green;\">//  - The await operator then retrieves the string result from getStringTask.</span>\n    <span style=\"color: blue;\">string</span> urlContents = <span style=\"color: blue;\">await</span> getStringTask;\n\n    <span style=\"color: green;\">// The return statement specifies an integer result.</span>\n    <span style=\"color: green;\">// Any methods that are awaiting AccessTheWebAsync retrieve the length value.</span>\n    <span style=\"color: blue;\">return</span> urlContents.Length;\n}\n</pre>\n</div>\n</div>\n</div>\n</div>\n<p>If <span class=\"code\">AccessTheWebAsync</span> doesn't have any work that it can do between calling <span class=\"code\">GetStringAsync</span> and awaiting its completion, you can simplify your code by calling and awaiting in the following single statement.</p>\n<div id=\"code-snippet-2\" class=\"codeSnippetContainer\">\n<div class=\"codeSnippetContainerCodeContainer\">\n<div id=\"CodeSnippetContainerCode_9d00c653-2b89-47b1-bdd1-5b19f4b87df3\" class=\"codeSnippetContainerCode\" dir=\"ltr\">\n<div style=\"color: black;\">\n<pre><span style=\"color: blue;\">string</span> urlContents = <span style=\"color: blue;\">await</span> client.GetStringAsync();\n</pre>\n</div>\n</div>\n</div>\n</div>\n<p>The following characteristics summarize what makes the previous example an async method.</p>\n<ul class=\"unordered\">\n<li>\n<p>The method signature includes an <strong>Async</strong> or <strong>async</strong> modifier.</p>\n</li>\n<li>\n<p>The name of an async method, by convention, ends with an \"Async\" suffix.</p>\n</li>\n<li>\n<p>The return type is one of the following types:</p>\n<ul class=\"unordered\">\n<li>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/dd321424.aspx\" target=\"_blank\">Task</a> if your method has a return statement in which the operand has type TResult.</p>\n</li>\n<li>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.threading.tasks.task.aspx\" target=\"_blank\">Task</a> if your method has no return statement or has a return statement with no operand.</p>\n</li>\n<li>\n<p>Void (a <a href=\"https://msdn.microsoft.com/en-us/library/831f9wka.aspx\" target=\"_blank\">Sub</a> in Visual Basic) if you're writing an async event handler.</p>\n</li>\n</ul>\n<p>For more information, see \"Return Types and Parameters\" later in this topic.</p>\n</li>\n<li>\n<p>The method usually includes at least one await expression, which marks a point where the method can't continue until the awaited asynchronous operation is complete. In the meantime, the method is suspended, and control returns to the method's caller. The next section of this topic illustrates what happens at the suspension point.</p>\n</li>\n</ul>\n<p>In async methods, you use the provided keywords and types to indicate what you want to do, and the compiler does the rest, including keeping track of what must happen when control returns to an await point in a suspended method. Some routine processes, such as loops and exception handling, can be difficult to handle in traditional asynchronous code. In an async method, you write these elements much as you would in a synchronous solution, and the problem is solved.</p>\n<p>For more information about asynchrony in previous versions of the .NET Framework, see <a href=\"https://msdn.microsoft.com/en-us/library/dd997423.aspx\" target=\"_blank\">TPL and Traditional .NET Framework Asynchronous Programming</a>.</p>\n</div>\n</div>\n</div>\n<a id=\"BKMK_WhatHappensUnderstandinganAsyncMethod\" href=\"https://msdn.microsoft.com/en-us/library/hh191443.aspx\" target=\"_blank\"></a>\n<div>\n<div>&nbsp;</div>\n<div class=\"sectionblock\">\n<div class=\"section\">\n<p>The most important thing to understand in asynchronous programming is how the control flow moves from method to method. The following diagram leads you through the process.</p>\n<div class=\"inset\"><img id=\"912a1b15-7663-4c06-b43c-b488bee93580\" title=\"Trace an async program\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC612215.jpeg\" alt=\"Trace an async program\" /></div>\n<p>The numbers in the diagram correspond to the following steps.</p>\n<ol class=\"ordered\">\n<li>\n<p>An event handler calls and awaits the <span class=\"code\">AccessTheWebAsync</span> async method.</p>\n</li>\n<li>\n<p><span class=\"code\">AccessTheWebAsync</span> creates an <a href=\"https://msdn.microsoft.com/en-us/library/system.net.http.httpclient.aspx\" target=\"_blank\">HttpClient</a> instance and calls the <a href=\"https://msdn.microsoft.com/en-us/library/hh551746.aspx\" target=\"_blank\">GetStringAsync</a> asynchronous method to download the contents of a website as a string.</p>\n</li>\n<li>\n<p>Something happens in <strong>GetStringAsync</strong> that suspends its progress. Perhaps it must wait for a website to download or some other blocking activity. To avoid blocking resources, <strong>GetStringAsync</strong> yields control to its caller, <span class=\"code\">AccessTheWebAsync</span>.</p>\n<p><strong>GetStringAsync</strong> returns a <a href=\"https://msdn.microsoft.com/en-us/library/dd321424.aspx\" target=\"_blank\">Task</a> where TResult is a string, and <span class=\"code\">AccessTheWebAsync</span> assigns the task to the <span class=\"code\">getStringTask</span> variable. The task represents the ongoing process for the call to <strong>GetStringAsync</strong>, with a commitment to produce an actual string value when the work is complete.</p>\n</li>\n<li>\n<p>Because <span class=\"code\">getStringTask</span> hasn't been awaited yet, <span class=\"code\">AccessTheWebAsync</span> can continue with other work that doesn't depend on the final result from <strong>GetStringAsync</strong>. That work is represented by a call to the synchronous method <span class=\"code\">DoIndependentWork</span>.</p>\n</li>\n<li>\n<p><span class=\"code\">DoIndependentWork</span> is a synchronous method that does its work and returns to its caller.</p>\n</li>\n<li>\n<p><span class=\"code\">AccessTheWebAsync</span> has run out of work that it can do without a result from <span class=\"code\">getStringTask</span>. <span class=\"code\">AccessTheWebAsync</span> next wants to calculate and return the length of the downloaded string, but the method can't calculate that value until the method has the string.</p>\n<p>Therefore, <span class=\"code\">AccessTheWebAsync</span> uses an await operator to suspend its progress and to yield control to the method that called <span class=\"code\">AccessTheWebAsync</span>. <span class=\"code\">AccessTheWebAsync</span> returns a <strong>Task(Of Integer)</strong> or <strong>Task</strong> to the caller. The task represents a promise to produce an integer result that's the length of the downloaded string.</p>\n<div class=\"alert\">\n<div class=\"contentTableWrapper\">\n<table>\n<tbody>\n<tr>\n<th align=\"left\"><span class=\"alertTitle\">Note </span></th>\n</tr>\n<tr>\n<td>\n<p>If <strong>GetStringAsync</strong> (and therefore <span class=\"code\">getStringTask</span>) is complete before <span class=\"code\">AccessTheWebAsync</span> awaits it, control remains in <span class=\"code\">AccessTheWebAsync</span>. The expense of suspending and then returning to <span class=\"code\">AccessTheWebAsync</span> would be wasted if the called asynchronous process (<span class=\"code\">getStringTask</span>) has already completed and AccessTheWebSync doesn't have to wait for the final result.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<p>Inside the caller (the event handler in this example), the processing pattern continues. The caller might do other work that doesn't depend on the result from <span class=\"code\">AccessTheWebAsync</span> before awaiting that result, or the caller might await immediately. The event handler is waiting for <span class=\"code\">AccessTheWebAsync</span>, and <span class=\"code\">AccessTheWebAsync</span> is waiting for <strong>GetStringAsync</strong>.</p>\n</li>\n<li>\n<p><strong>GetStringAsync</strong> completes and produces a string result. The string result isn't returned by the call to <strong>GetStringAsync</strong> in the way that you might expect. (Remember that the method already returned a task in step 3.) Instead, the string result is stored in the task that represents the completion of the method, <span class=\"code\">getStringTask</span>. The await operator retrieves the result from <span class=\"code\">getStringTask</span>. The assignment statement assigns the retrieved result to <span class=\"code\">urlContents</span>.</p>\n</li>\n<li>\n<p>When <span class=\"code\">AccessTheWebAsync</span> has the string result, the method can calculate the length of the string. Then the work of <span class=\"code\">AccessTheWebAsync</span> is also complete, and the waiting event handler can resume. In the full example at the end of the topic, you can confirm that the event handler retrieves and prints the value of the length result.</p>\n</li>\n</ol>\n<p>If you are new to asynchronous programming, take a minute to consider the difference between synchronous and asynchronous behavior. A synchronous method returns when its work is complete (step 5), but an async method returns a task value when its work is suspended (steps 3 and 6). When the async method eventually completes its work, the task is marked as completed and the result, if any, is stored in the task.</p>\n<p>For more information about control flow, see <a href=\"https://msdn.microsoft.com/en-us/library/hh873191.aspx\" target=\"_blank\">Control Flow in Async Programs (C# and Visual Basic)</a>.</p>\n</div>\n</div>\n</div>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_web_applications ;
          owl:sameAs                     dbr:Asynchronous_method_invocation .
  
  :DesignPattern_final_handling
          a                              gen:DesignPattern ;
          rdfs:label                     "Final Handling" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_safety , :ArchitecturalQuality_availability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_viability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_resilience , :ArchitecturalQuality_maturity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_recoverability ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "It appears that a request has not finished but its resource is already released back to the process. Such abnormal terminated transactions and all the resources that they used need releasing such as Final Handling. Final Handling gracefully removes resource allcoations using the same means that normal processing does to save effort and reduce faults[Hanmer 2007] pp 203-205. Relations Error Handling [Hanmer 2007] Error Mitigation Patterns pp 203-205." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Project_requirements
          a           cont:Project ;
          rdfs:label  "requirements" .
  
  :Requirement_ar-03__reuse_requirements_and_decisions
          a                          spec:Requirement ;
          rdfs:label                 "AR-03: Reuse requirements and decisions" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_safiddle ;
          gen:wikiEntry              "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Reuse architectural requirements and design decisions in&nbsp;new architecture specifications and share them with other architects.&nbsp;</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Rationale:</strong> Architectural design decisions comprised in MS Word documents are not effectively reused and shared.&nbsp;</span></p>" ;
          spec:containedWithin       :UseCase_nfr_repository , :UseCase_sad_generation ;
          spec:hasRequirementOrigin  :Domain_ar-02__incentives_for_architects ;
          spec:requirementGroup      "Document generation" ;
          spec:requirementPurpose    "Artifact reusability" .
  
  :DesignPattern_bundling_and_minification
          a                              gen:DesignPattern ;
          rdfs:label                     "Bundling and Minification" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_reduce_overhead ;
          gen:wikiEntry                  "<div class=\"article-title keyline\"><h1><div itemprop=\"name\">Bundling and Minification</div></h1><div class=\"details\"><div class=\"author-header\">\n\t\t  By\n         <a href=\"http://www.asp.net/mvc/overview/performance/bundling-and-minification#author-20106\" itemprop=\"author\" class=\"print-no\" target=\"_blank\">Rick Anderson</a><span class=\"print-only-inline\">Rick Anderson</span><span class=\"separator\">|</span><time datetime=\"2012-08-23\">August 23, 2012</time></div><div class=\"print-bar\"><a href=\"javascript:window.print();\" target=\"_blank\">Print</a></div><div class=\"social-bar\"><span class=\"social-item\"><div class=\"fb-like fb_iframe_widget\" data-send=\"false\" data-layout=\"button_count\" data-width=\"450\" data-show-faces=\"false\" data-font=\"segoe ui\" fb-xfbml-state=\"rendered\" fb-iframe-plugin-query=\"app_id=&amp;container_width=98&amp;font=segoe%20ui&amp;href=http%3A%2F%2Fwww.asp.net%2Fmvc%2Foverview%2Fperformance%2Fbundling-and-minification&amp;layout=button_count&amp;locale=en_US&amp;sdk=joey&amp;send=false&amp;show_faces=false&amp;width=450\"><span style=\"vertical-align: bottom; width: 76px; height: 20px;\"><iframe name=\"f22620ccb4\" width=\"450px\" height=\"1000px\" frameborder=\"0\" allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" title=\"fb:like Facebook Social Plugin\" src=\"http://www.facebook.com/plugins/like.php?app_id=&amp;channel=http%3A%2F%2Fstatic.ak.facebook.com%2Fconnect%2Fxd_arbiter%2F6brUqVNoWO3.js%3Fversion%3D41%23cb%3Df1926bcca4%26domain%3Dwww.asp.net%26origin%3Dhttp%253A%252F%252Fwww.asp.net%252Ff1c282874%26relation%3Dparent.parent&amp;container_width=98&amp;font=segoe%20ui&amp;href=http%3A%2F%2Fwww.asp.net%2Fmvc%2Foverview%2Fperformance%2Fbundling-and-minification&amp;layout=button_count&amp;locale=en_US&amp;sdk=joey&amp;send=false&amp;show_faces=false&amp;width=450\" style=\"border: none; visibility: visible; width: 76px; height: 20px;\" class=\"\"></iframe></span></div></span><span class=\"social-item\"><iframe id=\"twitter-widget-0\" scrolling=\"no\" frameborder=\"0\" allowtransparency=\"true\" class=\"twitter-share-button twitter-share-button-rendered twitter-tweet-button\" title=\"Twitter Tweet Button\" src=\"http://platform.twitter.com/widgets/tweet_button.html#_=1443515871074&amp;count=horizontal&amp;dnt=true&amp;id=twitter-widget-0&amp;lang=en&amp;original_referer=http%3A%2F%2Fwww.asp.net%2Fmvc%2Foverview%2Fperformance%2Fbundling-and-minification&amp;size=m&amp;text=Bundling%20and%20Minification&amp;type=share&amp;url=http%3A%2F%2Fwww.asp.net%2Fmvc%2Foverview%2Fperformance%2Fbundling-and-minification\" style=\"position: static; visibility: visible; width: 81px; height: 19px;\"></iframe></span></div></div></div><div class=\"important important-box-article\"><p>Bundling and minification are two techniques you can use in ASP.NET 4.5 to \nimprove request load time.&nbsp; Bundling and minification improves load time by \nreducing the number of requests to the server and reducing the size of requested \nassets (such as CSS and JavaScript.)</p></div><p>Most of the current major browsers limit the number of \n<a href=\"http://www.browserscope.org/?category=network\" target=\"_blank\">simultaneous connections</a> \nper each hostname to six. That means that while six requests are being \nprocessed, additional requests for assets on a \nhost will be queued by the browser. In the image below, the IE F12 developer \ntools network tabs shows the timing for assets required by the About view of a \nsample application.</p>\n<p><img alt=\"B/M\" src=\"http://i2.asp.net/media/39121/n3.png?cdn_id=2015-08-15-002\" data-original=\"//i2.asp.net/media/39121/n3.png?cdn_id=2015-08-15-002\" style=\"display: inline;\"></p>\n<p>The gray bars show the time the request is queued by the browser waiting on \nthe six connection limit. The yellow bar is the request time to first byte, \nthat is, the time taken to send the request and receive the first response from \nthe server. The blue bars show the time taken to receive the response data from \nthe server. You can double-click on an asset to get detailed timing information. For \nexample, the following image shows the timing details for loading the <em>\n/Scripts/MyScripts/JavaScript6.js</em> file.</p>\n<p><img src=\"http://i1.asp.net/media/39116/detailedTiming.PNG?cdn_id=2015-08-15-002\" data-original=\"//i1.asp.net/media/39116/detailedTiming.PNG?cdn_id=2015-08-15-002\" style=\"display: inline;\"></p>\n<p>The preceding image shows the <strong>Start</strong> event, which gives the time \nthe request was queued because of the browser limit the number of simultaneous \nconnections. In this case, the request was queued for 46 milliseconds waiting \nfor another request to complete.</p>\n<h2>Bundling </h2>\n<p>Bundling is a new feature in ASP.NET 4.5 that makes it easy to combine or \nbundle multiple files into a single file. You can create CSS, JavaScript and \nother \nbundles. Fewer files means fewer HTTP requests and that can improve \nfirst page load&nbsp; performance.</p>\n<p>The following image shows the same timing view of the About view shown \npreviously, but \nthis time with bundling and minification enabled.</p>\n<p><img height=\"327\" src=\"http://i2.asp.net/media/39122/NetCapBM2.PNG?cdn_id=2015-08-15-002\" data-original=\"//i2.asp.net/media/39122/NetCapBM2.PNG?cdn_id=2015-08-15-002\" width=\"401\" style=\"display: inline;\"></p>\n<h2>Minification</h2>\n<p>Minification performs a variety of different code optimizations to scripts or \ncss, such as removing unnecessary white space and comments and shortening \nvariable names to one character. Consider the following JavaScript function.</p>\n<pre class=\"prettyprint prettyprinted\"><span class=\"typ\">AddAltToImg</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">imageTagAndImageID</span><span class=\"pun\">,</span><span class=\"pln\"> imageContext</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n    </span><span class=\"com\">///&lt;signature&gt;</span><span class=\"pln\">\n    </span><span class=\"com\">///&lt;summary&gt; Adds an alt tab to the image</span><span class=\"pln\">\n    </span><span class=\"com\">// &lt;/summary&gt;</span><span class=\"pln\">\n    </span><span class=\"com\">//&lt;param name=\"imgElement\" type=\"String\"&gt;The image selector.&lt;/param&gt;</span><span class=\"pln\">\n    </span><span class=\"com\">//&lt;param name=\"ContextForImage\" type=\"String\"&gt;The image context.&lt;/param&gt;</span><span class=\"pln\">\n    </span><span class=\"com\">///&lt;/signature&gt;</span><span class=\"pln\">\n    </span><span class=\"kwd\">var</span><span class=\"pln\"> imageElement </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">imageTagAndImageID</span><span class=\"pun\">,</span><span class=\"pln\"> imageContext</span><span class=\"pun\">);</span><span class=\"pln\">\n    imageElement</span><span class=\"pun\">.</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">'alt'</span><span class=\"pun\">,</span><span class=\"pln\"> imageElement</span><span class=\"pun\">.</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">'id'</span><span class=\"pun\">).</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">/ID/</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">''</span><span class=\"pun\">));</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>After minification,&nbsp; the function is reduced to the following:</p>\n<pre class=\"prettyprint prettyprinted\"><span class=\"typ\">AddAltToImg</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">,</span><span class=\"pln\"> t</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"kwd\">var</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> $</span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">,</span><span class=\"pln\"> t</span><span class=\"pun\">);</span><span class=\"pln\"> i</span><span class=\"pun\">.</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"alt\"</span><span class=\"pun\">,</span><span class=\"pln\"> i</span><span class=\"pun\">.</span><span class=\"pln\">attr</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">).</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">/ID/</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">}</span></pre>\n<p>In addition to removing the comments and unnecessary whitespace, the following \nparameters and variable names were renamed (shortened) as follows:</p>\n<table border=\"1\" style=\"width: 320px\" class=\"rTable-style \">\n\t<tbody><tr>\n\t\t<td><strong>Original</strong> </td>\n\t\t<td><strong>Renamed</strong></td>\n\t</tr>\n\n\t<tr>\n\t\t<td>imageTagAndImageID</td>\n\t\t<td>n</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageContext</td>\n\t\t<td>t</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageElement </td>\n\t\t<td>i</td>\n\t</tr>\n</tbody></table>\n<h2>Impact of Bundling and Minification</h2>\n<p>The following table shows several important differences between listing all the \nassets individually and using bundling and minification (B/M) in the sample program.</p>\n\n<table border=\"1\" style=\"width: 450px\" class=\"rTable-style \">\t<tbody><tr>\n\t\t<td style=\"width: 137px; height: 25px\">&nbsp;</td>\n\t\t<td style=\"height: 25px; width: 164px;\"><strong>Using B/M</strong></td>\n\t\t<td style=\"height: 25px; width: 186px;\"><strong>Without B/M</strong></td>\n\t\t<td style=\"height: 25px; width: 76px;\"><strong>Change</strong></td>\n\t</tr>\n\n\n\t<tr>\n\t\t<td style=\"width: 137px; height: 25px;\"><strong>File Requests</strong></td>\n\t<td style=\"width: 164px; height: 25px;\">9</td>\n\t<td style=\"width: 186px; height: 25px;\">34</td>\n<td style=\"width: 76px; height: 25px;\">256%</td>\n\t</tr>\n\t<tr>\n\t\t<td style=\"width: 137px; height: 25px;\"><strong>KB Sent</strong></td>\n\t\t<td style=\"width: 164px; height: 25px\">3.26</td>\n\t\t<td style=\"height: 25px; width: 186px\">11.92</td>\n\t\t<td style=\"width: 76px; height: 25px;\">266%</td>\n\t</tr>\n\t<tr>\n\t\t<td style=\"width: 137px\"><strong>KB Received</strong></td>\n\t\t<td style=\"width: 164px\">388.51</td>\n\t\t<td style=\"width: 186px\">530</td>\n\t\t<td style=\"width: 76px\">36%</td>\n\t</tr>\n\t<tr>\n\t\t<td style=\"width: 137px\"><strong>Load Time</strong></td>\n\t\t<td style=\"width: 164px\">510 MS</td>\n\t\t<td style=\"width: 186px\">780 MS</td>\n\t\t<td style=\"width: 76px\">53%</td>\n\t</tr>\n\n</tbody></table>\n<p>The bytes sent had a significant reduction with bundling as browsers are \nfairly verbose with the HTTP headers they apply on requests. The received bytes reduction is not \nas large because the largest files (<em>Scripts\\jquery-ui-1.8.11.min.js\n</em>and<em> Scripts\\jquery-1.7.1.min.js</em>) are already minified. Note: The timings \non the sample program used the <a href=\"http://www.fiddler2.com/fiddler2/\" target=\"_blank\">Fiddler</a> tool to simulate a slow network. (From \nthe Fiddler <strong>Rules</strong> menu, select <strong>Performance</strong> then \n<strong>Simulate Modem Speeds</strong>.)</p>" ;
          spec:hasPatternDomain          :Domain_web_applications .
  
  :DesignPattern_common_compiler_errors
          a                              gen:DesignPattern ;
          rdfs:label                     "Common Compiler Errors" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Common Compiler Errors</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>This section illustrates the typical compiler errors that occur when migrating an existing code base. These examples happen to be from system-level HAL code, although the concepts are directly applicable to user-level code.</p>\n<h2><a id=\"Warning_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4311</h2>\n<p>\n\t\t\t\t'type cast' : pointer truncation from 'void *__ptr64 ' to 'unsigned long\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n<p><code>pPciAddr-&gt;u.AsULONG = (ULONG) CIA_PCI_CONFIG_BASE_QVA;</code></p>\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p><strong>PtrToUlong</strong> is an inline function or macro, depending on your usage. It truncates a pointer to a <strong>ULONG</strong>. Although 32-bit pointers are not affected, the upper half of a 64-bit pointer is truncated.</p>\n<p>CIA_PCI_CONFIG_BASE_QVA is declared as a <strong>PVOID</strong>. The <strong>ULONG</strong> cast works in the 32-bit world, but results in an error in the 64-bit world. The solution is to get a 64-bit pointer to a <strong>ULONG</strong>, because changing the definition of the union that pPciAddr-&gt;u.AsULONG is defined in changes too much code.</p>\n<p>Using the macro <strong>PtrToUlong</strong> to convert the 64-bit <strong>PVOID</strong> to the needed <strong>ULONG</strong> is allowed because we have knowledge about the specific value of CIA_PCI_CONFIG_BASE_QVA. In this case, this pointer will never have data in the upper 32 bits.</p>\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n<p><code>pPciAddr-&gt;u.AsULONG = PtrToUlong(CIA_PCI_CONFIG_BASE_QVA);</code></p>\n</dd>\n</dl>\n<h2><a id=\"Warning_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4311</h2>\n<p>\n\t\t\t\t'type cast' : pointer truncation from 'struct _ERROR_FRAME *__ptr64 ' to 'unsigned long\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n<p><code>KeBugCheckEx( DATA_BUS_ERROR,0,0,0,(ULONG)PUncorrectableError );</code></p>\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p>The problem is that the last parameter to this function is a pointer to a data structure. Because PUncorrectableError is a pointer, it changes size with the programming model. The prototype for <strong>KeBugCheckEx</strong> was changed so that the last parameter is a <strong>ULONG_PTR</strong>. As a result, it's necessary to cast the function pointer to a <strong>ULONG_PTR</strong>.</p>\n<p>You might ask why <strong>PVOID</strong> was not used as the last parameter. Depending on the context of the call, the last parameter may be something other than a pointer or perhaps an error code.</p>\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n<p><code>KeBugCheckEx( DATA_BUS_ERROR,0,0,0,(ULONG_PTR)PUncorrectableError );</code></p>\n</dd>\n</dl>\n<h2><a id=\"Warning_C4244\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4244\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4244\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4244</h2>\n<p>\n\t\t\t\t'=' : conversion from 'struct _CONFIGURATION_COMPONENT *__ptr64 ' to 'struct _CONFIGURATION_COMPONENT *', possible loss of data\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n<p><code>Component = &amp;CurrentEntry-&gt;ComponentEntry;</code></p>\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p>The function declares the variable Component as a PCONFIGURATION_COMPONENT. Later, the variable is used in the following assignment that appears correct:</p>\n<p><code>Component = &amp;CurrentEntry-&gt;ComponentEntry;</code></p>\n<p>However, the type PCONFIGURATION_COMPONENT is defined as:</p>\n\n<div id=\"code-snippet-1\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_832e28d4-e7b7-49b4-b5f4-749acb8ffa35');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_832e28d4-e7b7-49b4-b5f4-749acb8ffa35\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>typedef struct __CONFIGURATION_COMPONENT {\n...\n...\n} CONFIGURATION_COMPONENT, * POINTER_32 PCONFIGURATION_COMPONENT;\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n<p>The type definition for PCONFIGURATION_COMPONENT provides a 32-bit pointer in both 32-bit and 64-bit models because it is declared <strong>POINTER_32</strong>. The original designer of this structure knew it was going to be used in a 32-bit context in the BIOS and expressly defined it for that use. This code works fine in 32-bit Windows because the pointers happen to be 32-bit. In 64-bit Windows, it does not work because the code is in 64-bit context.</p>\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n<p>To work around this problem, use CONFIGURATION_COMPONENT * rather than the 32-bit PCONFIGURATION_COMPONENT . It is important to clearly understand the purpose of the code. If this code is intended to touch 32-bit BIOS or System space, this fix will not work.</p>\n<p><strong>POINTER_32</strong> is defined in Ntdef.h and Winnt.h.</p>\n\n<div id=\"code-snippet-2\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_7bf94763-d3a2-4881-85a3-805995318d0c');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_7bf94763-d3a2-4881-85a3-805995318d0c\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>#ifdef (__AXP64__)\n#define POINTER_32 _ptr32\n#else\n#define POINTER_32\n#endif\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n</dl>\n<h2><a id=\"Warning_C4242\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4242\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4242\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4242</h2>\n<p>\n\t\t\t\t'=' : conversion from '__int64 ' to 'unsigned long ', possible loss of data\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n\n<div id=\"code-snippet-3\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_ce87c525-c89a-4293-a812-3a3e8cc106a7');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_ce87c525-c89a-4293-a812-3a3e8cc106a7\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>ARC_STATUS HalpCopyNVRamBuffer (\nIN PCHAR NvDestPtr,\nIN PCHAR NvSrcPtr,\nIN ULONG Length )\n{\n\nULONG PageSelect1, ByteSelect1;\n\nByteSelect1 = (NvDestPtr - (PUCHAR)HalpCMOSRamBase) &amp; CONFIG_RAM_BYTE_MASK;\n\nByteSelect1 = (NvDestPtr - (PUCHAR)HalpCMOSRamBase) &amp; CONFIG_RAM_BYTE_MASK;\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p>This warning is generated because the calculation is using 64-bit values, in this case pointers, and placing the result in a 32-bit <strong>ULONG</strong>.</p>\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n<p>Type cast the result of the calculation to a <strong>ULONG</strong> as shown here:</p>\n<p><code>ByteSelect1 = (ULONG)(NvDestPtr - (PUCHAR)HalpCMOSRamBase) &amp; CONFIG_RAM_BYTE_MASK;</code></p>\n<p>Typecasting the result lets the compiler know you are sure about the result. That being said, make certain you understand the calculation and really are sure it will fit in a 32-bit <strong>ULONG</strong>.</p>\n<p>If the result may not fit in a 32-bit <strong>ULONG</strong>, change the base type of the variable that will hold the result.</p>\n</dd>\n</dl>\n<h2><a id=\"Warning_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4311</h2>\n<p>\n\t\t\t\t'type cast' : pointer truncation from 'void *__ptr64 ' to 'unsigned long '\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n\n<div id=\"code-snippet-4\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_4a8408cd-31d5-4a0e-b0c0-33b1a1fac20a');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_4a8408cd-31d5-4a0e-b0c0-33b1a1fac20a\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>ULONG HalpMapDebugPort(\nIN ULONG ComPort,\nOUT PULONG ReadQva,\nOUT PULONG WriteQva)\n{\nULONG ComPortAddress;\n\nULONG PortQva;\n\n// Compute the port address, based on the desired com port.\n\nswitch( ComPort ){\ncase 1:\n   ComPortAddress = COM1_ISA_PORT_ADDRESS;\n   break;\n\ncase 2:\ndefault:\n   ComPortAddress = COM2_ISA_PORT_ADDRESS;\n}\nPortQva = (ULONG)HAL_MAKE_QVA(CIA_PCI_SPARSE_IO_PHYSICAL) + ComPortAddress;\n\n// Return the QVAs for read and write access.\n\n*ReadQva = PortQva;\n*WriteQva = PortQva;\n\nreturn ComPortAddress;\n}\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p>This entire function deals with addresses as integers, necessitating the need to type those integers in a portable way. All the local variables, intermediate values in calculations, and return values should be portable types.</p>\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n\n<div id=\"code-snippet-5\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_9f4792e3-a034-45b5-9c89-076b564aaf48');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_9f4792e3-a034-45b5-9c89-076b564aaf48\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>ULONG_PTR HalpMapDebugPort(\nIN ULONG ComPort,\nOUT PULONG_PTR ReadQva,\nOUT PULONG_PTR WriteQva)\n{\nULONG_PTR ComPortAddress;\n\nULONG_PTR PortQva;\n\n// Compute the port address, based on the desired com port.\n\nswitch( ComPort ){\ncase 1:\n   ComPortAddress = COM1_ISA_PORT_ADDRESS;\n   break;\n\ncase 2:\ndefault:\n   ComPortAddress = COM2_ISA_PORT_ADDRESS;\n}\n\nPortQva = (ULONG_PTR)HAL_MAKE_QVA(CIA_PCI_SPARSE_IO_PHYSICAL) + ComPortAddress;\n\n// Return the QVAs for read and write access.\n\n*ReadQva = PortQva;\n*WriteQva = PortQva;\n\nreturn ComPortAddress;\n}\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n<p><strong>PULONG_PTR</strong> is a pointer that is itself 32 bits for 32-bit Windows and 64 bits for 64-bit Windows. It points to an unsigned integer, <strong>ULONG_PTR</strong>, that is 32 bits for 32-bit Windows and 64 bits for 64-bit Windows.</p>\n</dd>\n</dl>\n<h2><a id=\"Warning_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4311</h2>\n<p>\n\t\t\t\t'type cast' : pointer truncation from 'void *__ptr64 ' to 'unsigned long '\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n\n<div id=\"code-snippet-6\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_f7ad9e80-3cef-416c-9976-14dbdd529f1e');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_f7ad9e80-3cef-416c-9976-14dbdd529f1e\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>BOOLEAN\nHalpMapIoSpace (\nVOID\n)\n{\nPVOID PciIoSpaceBase;\nPciIoSpaceBase = HAL_MAKE_QVA( CIA_PCI_SPARSE_IO_PHYSICAL );\n\n//Map base addresses in QVA space.\n\nHalpCMOSRamBase = (PVOID)((ULONG)PciIoSpaceBase + CMOS_ISA_PORT_ADDRESS);\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p>Even though all QVA (Quasi Virtual Address) values are really 32-bit values at this stage and will fit in a <strong>ULONG</strong>, it is more consistent to treat all addresses as <strong>ULONG_PTR</strong> values when possible.</p>\n<p>The pointer PciIoSpaceBase holds the QVA that is created in the macro HAL_MAKE_QVA. This macro returns a 64-bit value with the top 32 bits set to zero so the math will work. We could simply leave the code to truncate the pointer into a <strong>ULONG</strong>, but this practice is discouraged to enhance code maintainability and portability. For example, the contents of a QVA might change in the future to use some of the upper bits at this level, breaking the code.</p>\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n<p>Be safe and use <strong>ULONG_PTR</strong> for all address and pointer math.</p>\n<p><code>HalpCMOSRamBase = (PVOID)((ULONG_PTR)PciIoSpaceBase + CMOS_ISA_PORT_ADDRESS);</code></p>\n</dd>\n</dl>\n<h2><a id=\"Warning_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4311</h2>\n<p>\n\t\t\t\t'type cast' : pointer truncation from 'void *__ptr64 ' to 'unsigned long '\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n\n<div id=\"code-snippet-7\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_38600a9c-6021-44a5-afa4-735b33b1f3a8');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_38600a9c-6021-44a5-afa4-735b33b1f3a8\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>PVOID\nHalDereferenceQva(\nPVOID Qva,\nINTERFACE_TYPE InterfaceType,\nULONG BusNumber)\n\nif ( ((ULONG) Qva &amp; QVA_SELECTORS) == QVA_ENABLE ) {\n\nreturn( (PVOID)( (ULONG)Qva &lt;&lt; IO_BIT_SHIFT ) );\n} \nelse {\nreturn (Qva);\n}\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p>The compiler warns about the address of (&amp;) and left shift (&lt;&lt;) operators if they are applied to pointer types. In the above code, Qva is a <strong>PVOID</strong> value. We need to cast that to an integer type to perform the math. Because the code must be portable, use <strong>ULONG_PTR</strong> instead of <strong>ULONG</strong>.</p>\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n\n<div id=\"code-snippet-8\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_c736b8bd-9c2f-4b83-91bf-cb71d2766a60');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_c736b8bd-9c2f-4b83-91bf-cb71d2766a60\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>if ( ((ULONG_PTR) Qva &amp; QVA_SELECTORS) == QVA_ENABLE ) {\n  return( (PVOID)( (ULONG_PTR)Qva &lt;&lt; IO_BIT_SHIFT ) );\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n</dl>\n<h2><a id=\"Warning_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4311</h2>\n<p>\n\t\t\t\t'type cast' : pointer truncation from 'void *__ptr64 ' to 'unsigned long '\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n\n<div id=\"code-snippet-9\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_d008d135-60bc-4042-9c83-4a012320eb6c');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_d008d135-60bc-4042-9c83-4a012320eb6c\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>TranslatedAddress-&gt;LowPart = (ULONG)HalCreateQva(\n*TranslatedAddress, va);\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p>TranslatedAddress is a union that looks something like the following:</p>\n\n<div id=\"code-snippet-10\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_634bd7b4-de11-45e0-8bee-5063c3792482');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_634bd7b4-de11-45e0-8bee-5063c3792482\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>typedef union\n   Struct {\n      ULONG LowPart;\n      LONG Highpart;\n   }\n   LONGLONG QuadPart;\n}\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n<p>Knowing what the rest of the code might place in Highpart, we can select either of the solutions shown here.</p>\n<p><code>TranslatedAddress-&gt;LowPart = PtrToUlong(HalCreateQva(*TranslatedAddress,va) );</code></p>\n<p>The <strong>PtrToUlong</strong> macro truncates the pointer returned by <strong>HalCreateQva</strong> to 32 bits. We know that the QVA returned by <strong>HalCreateQva</strong> has the upper 32 bits set to zero and the very next line of code sets TranslatedAddress-&gt;Highpart to zero.</p>\n<p>With caution, we could use the following:</p>\n<p><code>TranslatedAddress-&gt;QuadPart = (LONGLONG)HalCreateQva(*TranslatedAddress,va);</code></p>\n<p>This works in this example: the <strong>HalCreateQva</strong> macro is returning 64 bits, with the upper 32 bits set to zero. Just be careful not to leave the upper 32 bits undefined in a 32-bit environment, which this second solution may actually do.</p>\n</dd>\n</dl>\n<h2><a id=\"Warning_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"warning_c4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"WARNING_C4311\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Warning C4311</h2>\n<p>\n\t\t\t\t'type cast' : pointer truncation from 'void *__ptr64 ' to 'unsigned long '\n\t\t\t\t</p>\n<p></p>\n<dl>\n<dt><a id=\"Code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"code\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"CODE\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Code</dt>\n<dd>\n\n<div id=\"code-snippet-11\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_e3691f76-2d30-41aa-8711-b85d0edae991');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_e3691f76-2d30-41aa-8711-b85d0edae991\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>VOID\nHalpCiaProgramDmaWindow(\nPWINDOW_CONTROL_REGISTERS WindowRegisters,\nPVOID MapRegisterBase\n)\n{\nCIA_WBASE Wbase;\n\nWbase.all = 0;\nWbase.Wen = 1;\nWbase.SgEn = 1;\nWbase.Wbase = (ULONG)(WindowRegisters-&gt;WindowBase) &gt;&gt; 20;\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</dd>\n<dt><a id=\"Description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"description\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DESCRIPTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Description</dt>\n<dd>\n<p>WindowRegisters-&gt;WindowBase is a pointer and is now 64 bits. The code says to right-shift this value 20 bits. The compiler will not let us use the right-shift (&gt;&gt;) operator on a pointer; therefore, we need to cast it to some sort of integer.</p>\n</dd>\n<dt><a id=\"Solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"solution\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"SOLUTION\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384160(v=vs.85).aspx\" target=\"_blank\"></a>Solution</dt>\n<dd>\n<p><code>Wbase.Wbase= PtrToUlong ( (PVOID) ((ULONG_PTR) (WindowRegisters-&gt;WindowBase) &gt;&gt; 20));</code></p>\n<p>Casting to a <strong>ULONG_PTR</strong> is just what we need. The next problem is Wbase. Wbase is a <strong>ULONG</strong> and is 32 bits. In this case, we know that the 64-bit pointer WindowRegisters-&gt;WindowBase is valid in the lower 32 bits even after being shifted. This makes use of the <strong>PtrToUlong</strong> macro acceptable, because it will truncate the 64-bit pointer into a 32-bit <strong>ULONG</strong>. The <strong>PVOID</strong> cast is necessary because <strong>PtrToUlong</strong> expects a pointer argument. When you look at the resulting assembler code, all this C code casting becomes just a load quad, shift right, and store long.</p></dd></dl></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignPattern_changing_an_existing_interface
          a                              gen:DesignPattern ;
          rdfs:label                     "Changing an Existing Interface" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Changing an Existing Interface</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>Whenever possible, implement a new interface for your application, rather than making changes to an existing one. If you cannot avoid changing an existing interface, use new data types in new methods only. Introducing a new data type or modifying an existing type is the most common source of incompatibility problems. The RPC run-time model assumes that the receiving application knows about the types of data that it receives, so data is put onto the wire without a generic data description. When the recipient expects a different data type than what the sender has put on the wire, the stub raises an exception (or transmission fails in some other less graceful manner).</p>\n<p>An RPC interface is defined by its UUID and its major and minor version numbers. When you change an existing interface, you should add the new methods at the end of the interface and change the minor version number. If you add methods anywhere else or make any other changes to the interface, you will also need to change the major version number.</p>\n<p>Realistically, there are times when you cannot change even the minor version number, because a new client will not be able to communicate with an old server and you cannot update the server. The RPC run time raises an exception, RPC_S_PROCNUM_OUT_OF_RANGE, when a client calls a method beyond the ones specified for its interface with the server. The workaround is to leave the version numbers unchanged and write your client code to handle this exception gracefully—by the client degrading its performance, for example, or by whatever means are appropriate for your application.</p>\n<p>There is a similar workaround for one special case of changing a data type in an existing method. If you have a \n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa367293(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">union</strong></a> whose branches are pointers and that does not have a default branch for unrecognized types, you can add a new branch that uses the new data type. This will not change the size of the data structure. When your client talks to a new server, it can use the new data type. However, when your client talks to an old server, the run time will raise the exception RPC_S_INVALID_TAG. Again, you will need to write your client code to handle this exception appropriately.</p>\n<p>A DCOM interface is identified by its GUID. In DCOM, interfaces are considered immutable and you can make changes only by creating a new interface that inherits from the old one. These rules ensure that clients and servers remain compatible.</p></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignPattern_messaging_mapper
          a                              gen:DesignPattern ;
          rdfs:label                     "Messaging Mapper" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          gen:wikiEntry                  "[EAI Messaging Mapper 2013] A Messaging Mapper is commonly used totransform requestsinto business objectsfor incoming messages and reverse the process to convert business objects into response messages. The Messaging Mapper accesses one or more domain objects and converts them into a message as required by the messaging channel. It also performs the opposite function creating or updating domain objects based on incoming messages. Since the Messaging Mapper is implemented as a separate class that references the domain object(s) and the messaging layer neither layer is aware of the other. The layers dont even know about theMessaging Mapper." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  gen:sourceURL  a     owl:FunctionalProperty , owl:DatatypeProperty ;
          rdfs:domain  gen:ReferenceDocument ;
          rdfs:range   xsd:string .
  
  gen:uses  a     owl:ObjectProperty .
  
  :Requirement_ar-154__extensibiltiy
          a                          spec:Requirement ;
          rdfs:label                 "AR-154: Extensibiltiy" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Neue Grafiken und Darstellungen samt entsprechender Datenbankabfragen (Queries)\n  sollen jederzeit ohne großen Aufwand und möglichst ohne Anpassung anderer\n  Systemkomponenten hinzugefügt werden können." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Developmental" ;
          spec:requirementPurpose    "Extension support" .
  
  :Requirement_ar-017__reusable_components
          a                          spec:Requirement ;
          rdfs:label                 "AR-017: Reusable components" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "Componentization" .
  
  spec:hasTacticDomain
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:DesignTactic ;
          rdfs:label          "isUsedIn" ;
          rdfs:subPropertyOf  spec:address .
  
  :ArchitecturalQuality_security
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Security" , "security" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_ad-119__multi-tenancy , :DesignPattern_replay_protection , :DesignPattern_public_key_encryption , :DesignPattern_message_validation , :DesignPattern_message_bus , :DesignPattern_routine_audits , :DesignPattern_publish_subscribe , :DesignDecision_ad-126__benchmarks_deployment , :DesignPattern_content-based_router , :DesignDecision_kdd-26 , :DesignPattern_data_logger , :DesignPattern_content_enricher , :DesignTactic_message_protection , :DesignPattern_resource_pooling , :DesignPattern_resource_allocation , :DesignPattern_observer , :DesignPattern_claim_check , :DesignPattern_layered_architecture , :DesignDecision_kdd-19 , :DesignPattern_existing_metrics , :DesignDecision_kdd-42 , :DesignTactic_accounting , :DesignPattern_content_filter , :DesignPattern_identity_credentials , :DesignPattern_exception_shielding , :DesignDecision_ad-01 , :DesignPattern_gatekeeper_pattern , :DesignPattern_federated_identity_pattern , :DesignTactic_message_transformation , :DesignPattern_voting , :DesignPattern_message_transformation , :DesignPattern_envelope_wrapper , :DesignPattern_correcting_audits , :DesignDecision_ad-202__components , :DesignDecision_kdd-41 , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_web_service_proxy , :DesignDecision_ad-001_2__wso2_as_platform , :DesignPattern_minimize_human_intervention , :DesignPattern_private_key_encryption , :DesignPattern_api_gateway , :DesignDecision_ad-012__deployment_schemes , :DesignPattern_information_obscurity , :DesignTactic_limit_access , :DesignTactic_authorization , :DesignDecision_ad-141__data_marts , :DesignDecision_kdd-43 , :DesignTactic_intrusion_detection , :DesignPattern_routine_maintenance , :DesignPattern_software_update , :DesignPattern_demilitarized_zone__dmz_ , :DesignDecision_ad-017__core_services , :DesignPattern_checksum , :DesignPattern_escalation , :DesignPattern_known_partners , :DesignPattern_connection_limitation , :DesignPattern_normalizer , :DesignPattern_valet_key_pattern , :DesignTactic_encryption , :DesignPattern_oauth_2_0_tokens , :DesignDecision_ad-015__aspern_deployment , :DesignPattern_packet_filtering , :DesignDecision_add-06__secret_project_urls , :DesignTactic_auditing , :DesignPattern_limit_retries , :DesignDecision_ad-001_1__ecosystem_components , :DesignPattern_canonical_data_mapper , :DesignPattern_command , :DesignPattern_wso2_distributed_deployment , :DesignPattern_units_of_mitigation , :DesignPattern_folder_data , :DesignPattern_multi-tenant_data_architecture , :DesignPattern_access_control , :DesignPattern_restful_web_api , :DesignTactic_authentication , :DesignTactic_maintain_integrity , :DesignDecision_kdd-20 , :DesignPattern_common_persistent_store , :DesignPattern_message_federation , :DesignDecision_kdd-11__split_header_and_data , :DesignPattern_secure_channels , :DesignDecision_ad-004__token-based_security , :SoftwareEngineeringMethod_built-in_self_test_methods , :DesignPattern_capturing_architectural_requirements ;
          gen:relatedQuality       :ArchitecturalQuality_defensibility , :ArchitecturalQuality_survivability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_auditability , :ArchitecturalQuality_safety , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_trustability , :ArchitecturalQuality_authenticity , :ArchitecturalQuality_accountability , :ArchitecturalQuality_privacy ;
          gen:wikiEntry            "<p><strong>Security</strong></p>\n<p>Security is the capability of a system to prevent malicious or accidental actions outside of the designed usage, and to prevent disclosure or loss of information. A secure system aims to protect assets and prevent unauthorized modification of information.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658094.aspx\">https://msdn.microsoft.com/en-us/library/ee658094.aspx</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_messaging_gateway
          a                              gen:DesignPattern ;
          rdfs:label                     "Messaging Gateway" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_idempotent_receiver
          a                              gen:DesignPattern ;
          rdfs:label                     "Idempotent Receiver" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_queue-based_load_leveling_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Queue-Based Load Leveling Pattern" , "Queue-based Load Leveling Pattern" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_availability , :ArchitecturalQuality_controllability , :ArchitecturalQuality_utility ;
          gen:isAlternativeOf            :DesignTactic_scheduling , :DesignTactic_queueing ;
          gen:wikiEntry                  "Use a queue that acts as a buffer between a task and a service that it invokes in order to smooth intermittent heavy loads that may otherwise cause the service to fail or the task to time out. This pattern can help to minimize the impact of peaks in demand on availability and responsiveness for both the task and the service. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_scalability
          a           cont:AuthorTag ;
          rdfs:label  "scalability" .
  
  :DesignPattern_integer_values_in_double
          a                              gen:DesignPattern ;
          rdfs:label                     "Integer values in double" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Storage of integer values in double</h1>\n\n<p>The type <span class=\" span-i\">double</span> has the capacity of 64 bits and is compatible with the standard IEEE-754 on 32-bit and 64-bit systems.</p>\n<p><span class=\" span-i\">Note. IEEE 754 is a widely spread standard of floating-point number presentation format used both in software and many hardware (CPU and FPU) implementations of arithmetic operations. Many compilers of programming languages use this standard to store and perform mathematical operations.</span></p>\n<p>Some programmers use the type <span class=\" span-i\">double</span> to store and work with integer types:</p>\n<pre class=\"clear cleared\"><code><span class=\"typ\">size_t</span><span class=\"pln\"> a </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pun\">(-</span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"kwd\">double</span><span class=\"pln\"> b </span><span class=\"pun\">=</span><span class=\"pln\"> a</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">--</span><span class=\"pln\">a</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">--</span><span class=\"pln\">b</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> c </span><span class=\"pun\">=</span><span class=\"pln\"> b</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">// x86: a == c</span><span class=\"pln\">\n              </span><span class=\"com\">// x64: a != c</span></code></pre>\n<p>This code may be justified when it is executed on a 32-bit system because the type <span class=\" span-i\">double</span> has 52 significant bits and can store a 32-bit integer value without loss. But when you save a 64-bit integer number into <span class=\" span-i\">double</span>, the exact result will be lost (see Figure 1).</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/18_Pattern_10_Memsize_and_double/image1.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/18_Pattern_10_Memsize_and_double/image1.png\" alt=\"Figure 1 - The number of significant bits in the types size_t and double\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 1 - The number of significant bits in the types size_t and double</span> </p>\n<p>Perhaps an approximate number will do in your program, but I would like to warn you just in case that you may encounter such consequences on the new architecture. And in no case would I advise you to mix integer arithmetic and floating-point arithmetic.</p>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignPattern_connection_limitation
          a                              gen:DesignPattern ;
          rdfs:label                     "Connection limitation" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_traceability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_immunity , :ArchitecturalQuality_trustability , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_limit_access ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-003__traffic_monitoring
          a           spec:Domain ;
          rdfs:label  "ar-003: traffic monitoring" .
  
  :SoftwareEngineeringMethod_core_modeling
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Core Modeling" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_rettner_juliane , :Author_harbich_stefanie , :Author_h_fler_werner ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_architecture , :ProjectPhase_requirements , :ProjectPhase_concept_definition , :ProjectPhase_testing ;
          gen:hasMethodRole        :Role_test_architect , :Role_system_architect ;
          gen:hasMethodTag         :AuthorTag_logical_architecture , :AuthorTag_stakeholder , :AuthorTag_nfr_engineering , :AuthorTag_requirements , :AuthorTag_modeling ;
          gen:wikiEntry            "The Core Modeling provides an agreed core model for every stakeholder, a cooperative systems engineering approach which starts to focus on the customer requirements first and build a model of the user tasks and stakeholder tasks including workflows. Second step is to bring this model in balance with all cross topics / NFRs and derive a component structure out of that balancing." .
  
  :ArchitecturalQuality_manageability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Manageability" , "manageability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_module , :DesignTactic_layering , :DesignPattern_reflection , :DesignPattern_session_failover , :DesignPattern_bridge , :DesignPattern_dynamically-adjustable_configuration , :DesignPattern_composite , :DesignDecision_ad-005__request_throttling , :DesignPattern_mediator , :DesignTactic_white-box_testing , :DesignPattern_encapsulation , :DesignPattern_proxy , :DesignDecision_ad-001_1__ecosystem_components , :DesignPattern_virtual_platform , :DesignDecision_ad-008__wso2_api_registry , :DesignTactic_change_propagation , :DesignPattern_facade , :DesignPattern_model-view-controller , :DesignPattern_layered_architecture , :DesignPattern_swappable_staging_environment , :DesignPattern_throttling_pattern , :DesignTactic_separation_of_concerns , :DesignPattern_service_locator ;
          gen:relatedQuality       :ArchitecturalQuality_maintainability ;
          gen:wikiEntry            "<p><strong>Manageability</strong></p>\n<p>Manageability defines how easy it is for system administrators to manage the application, usually through sufficient and useful instrumentation exposed for use in monitoring systems and for debugging and performance tuning.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658094.aspx\">https://msdn.microsoft.com/en-us/library/ee658094.aspx</a></li>\n</ul>\n<p>&nbsp;</p>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignTactic_reduce_overhead
          a           gen:DesignTactic ;
          rdfs:label  "reduce overhead" .
  
  :Role_requirements_engineer
          a           cont:Role ;
          rdfs:label  "requirements engineer" .
  
  sear:hasSearchResult
          a                   owl:FunctionalProperty , owl:ObjectProperty ;
          rdfs:domain         sear:SearchStep ;
          rdfs:range          sear:SearchResult ;
          rdfs:subPropertyOf  gen:has .
  
  :ProjectPhase_requirements
          a           cont:ProjectPhase ;
          rdfs:label  "requirements" .
  
  :Domain_business_processes
          a           spec:Domain ;
          rdfs:label  "business processes" .
  
  :ArchitecturalQuality_completeness
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "completeness" , "Completeness" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignPattern_replication , :DesignPattern_mirror , :DesignPattern_load_balancing , :DesignPattern_partitioning , :DesignPattern_peripheral_specialist_elements , :DesignPattern_application_server_architecture , :DesignPattern_caching , :DesignPattern_singleton , :DesignTactic_no_single_point_of_failure ;
          gen:relatedQuality       :ArchitecturalQuality_testability , :ArchitecturalQuality_functionality , :ArchitecturalQuality_effectiveness ;
          gen:wikiEntry            "[Wikipedia Completeness Computing 2014] In algorithms the notion of completeness refers to the ability of the algorithm to find a solution if one exists and if not to report that no solution is possible. In software testing completeness has for goal the functional verification of call graph (between software item) and control graph (inside each software item).   Comprehensibility Relations The preferred Design Tactic for Completeness is No Single Point of Failure due to the fact that there has to be a solution to achieve completeness in all functionalities and if no solution exists it has to report that no solution is possible and it only accepts complete solutions." , "<div><span style=\"font-weight: 700;\">Update frequency of Core</span></div><div><br></div>[Wikipedia Completeness Computing 2014] In algorithms the notion of completeness refers to the ability of the algorithm to find a solution if one exists and if not to report that no solution is possible. In software testing completeness has for goal the functional verification of call graph (between software item) and control graph (inside each software item).   Comprehensibility Relations The preferred Design Tactic for Completeness is No Single Point of Failure due to the fact that there has to be a solution to achieve completeness in all functionalities and if no solution exists it has to report that no solution is possible and it only accepts complete solutions." ;
          spec:requiredBy          :Domain_abstract .
  
  :Project_isdwiki  a  cont:Project ;
          rdfs:label  "isdwiki" .
  
  :AuthorTag_deployment
          a           cont:AuthorTag ;
          rdfs:label  "deployment" .
  
  :Requirement_ar-002__version_consistency
          a                          spec:Requirement ;
          rdfs:label                 "AR-002: Version consistency" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall ensure consistency between multiple API implementations and\nversions." ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "Ensure consistency" .
  
  :DesignPattern_fork_and_join
          a                              gen:DesignPattern ;
          rdfs:label                     "Fork and Join" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_generality , :ArchitecturalQuality_versatility , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_utility , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_parallel_computing , :DesignTactic_horizontal_scaling , :DesignTactic_vertical_scaling ;
          gen:wikiEntry                  "[Howtodoinjava Fork/Join 2014] In a Fork and Join pattern work is forked such that several pieces of work are launched asynchronously. That forked work is later joined with in order to ensure that all of the processing has completed and potentially to retrieve the results of that processing if it wasnt utilized entirely for side-effecting behavior. Loops are a prime example of this we fork the processing of loop iterations and we join such that the parallel loop invocation only completes when all concurrent processing is done." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Fork_join_model .
  
  :DesignPattern_visual_semantics
          a                              gen:DesignPattern ;
          rdfs:label                     "Visual Semantics" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_understandability ;
          gen:isAlternativeOf            :DesignTactic_transparency ;
          gen:wikiEntry                  "<div class=\"bs-docs-header\" id=\"content\"><div class=\"container\"><h1>Features</h1>\n\t\t<p>\n\t\t\tAn overview of Camunda and our most adorable features.\n\t\t</p>\n\n\t</div>\n</div>\n\n<div class=\"container bs-docs-container\">\n\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\" role=\"main\">\n\n\t\t\t<div class=\"bs-docs-section\" id=\"automation\">\n\t\t\t\t<h1 class=\"page-header\">Process Automation and Case Management</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>BPMN 2.0</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAs OMG-members, we co-authored the BPMN 2.0 standard and created one of the most sophisticated implementations. Our native BPMN 2.0 process engine covers all the symbols that you (really) need for process execution.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" style=\"max-height:300px; margin-bottom: 10px;\" src=\"http://camunda.org/assets/img/bpmn.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/bpmn20/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">BPMN 2.0 Coverage</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>CMMN 1.0</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tWe also participate in OMG's CMMN 1.0 standard, which allows you to implement unstructured processes using Case Management. With Camunda, you can seamlessly combine BPMN and CMMN.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" style=\"max-height:300px; margin-bottom: 10px; \" src=\"http://camunda.org/assets/img/loan-application.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/cmmn10/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">CMMN 1.0 Coverage</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"java\">\n\t\t\t\t<h1 class=\"page-header\">Perfect for Java</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>Java API</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Camunda process engine provides a native Java API which allows developers to interact with process instances and the process repository. This makes it easy to deploy, start and control process instances from a regular java application. And it works in the other direction as well: the process engine supports invoking plain java classes from BPMN 2.0 service tasks and similar constructs.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/implement-java.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-applications-overview\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Java Process Applications</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>Seamless Spring &amp; Java EE Integration</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Seamless Spring Framework and Java EE 6 programming model integration provide you with the right toolkit for developing complex business applications. <code>\n\t\t\t\t\t\t\t\t@Inject</code>\n\t\t\t\t\t\t\tthe process engine into any Spring / CDI / EJB Bean and invoke Beans from BPMN 2.0 Service Tasks. Infrastructure integration makes sure that the process engine participates in application transactions.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/implement-javaee.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#spring-framework-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Spring Integration</a>\n\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#cdi-and-java-ee-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Java EE / CDI Integration</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"deployment\">\n\t\t\t\t<h1 class=\"page-header\">Various Deployment Models</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>Embedded</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe process engine can be added as a library to any Java application. It can also be installed as a container service inside Tomcat, JBoss etc. This way, it can be used by multiple applications which can be redeployed without shutting down the process engine.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-deployment.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#runtime-container-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Container Integration</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>Standalone</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tUse the process engine as a standalone service and interact with it from remote applications. Use the REST API for remote communication or implement your own access infrastructure using JMS or SOAP Webservices.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-remote.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/rest/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">REST API</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>In a cluster</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tRun the process engine on different cluster nodes on top of a shared database. Use this setup for scaling up or high availability.The process engine supports heterogeneous clusters where different processes are executed on different nodes.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-cluster.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Cluster Deployment</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"tooling\">\n\t\t\t\t<h1 class=\"page-header\">Powerful Tooling for Operations</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t<h3>Find, Inspect and Repair Process Instances</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCamunda Cockpit aggregates the state of all instances of a process definition and visualizes it on the process diagram. This way you can see how many instances are currently waiting in each task / activity. You can filter by clicking on an activity or by using the filter panel. The filter panel supports searching for process instances by variable, business key and process version.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Process Instance View allows you to inspect the state of a running process instance. Browse through active activities by selecting them in the filter tree on the left hand side. Inspect Variables, Incidents (Failures) and User Tasks in the Properties Panel. Drill down into Sub Process Instances.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tRepair a running process instance by changing variables, re-assigning user tasks or retrying failed asynchronous executions. Cancel process instances which cannot complete successfully.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/cockpit-find.png\">\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Cockpit</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"modeler\">\n\t\t\t\t<h1 class=\"page-header\">Easy-to-use BPMN Modeler</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t<h3>Create BPMN 2.0 diagrams inside your Eclipse IDE</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tGet our Eclipse Plugin for creating BPMN 2.0 diagrams using your development environment. It supports the complete BPMN 2.0 standard. Thanks to the integration in Eclipse, you can model BPMN 2.0 processes directly inside your IDE.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/modeler/modeler.png\">\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://camunda.org/bpmn/tool/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Download Modeler</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\">\n\t\t\t\t<h1 class=\"page-header\">... and so much more!</h1>\n\t\t\t\t<h3>Just a few more highlights:</h3>\n\t\t\t\t<ul class=\"list-unstyled\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes\" target=\"_blank\">Transaction Handling</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-history-and-audit-event-log\" target=\"_blank\">Separation of Runtime and History Data</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\" target=\"_blank\">Tasklist for Human Workflows</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-engine-plugins\" target=\"_blank\">Process Engine Plugins</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-supported-environments\" target=\"_blank\">Support for many Runtime Containers and Databases</a></li></ul></div></div></div></div>" ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  :DesignPattern_multi-tenant_data_architecture
          a                              gen:DesignPattern ;
          rdfs:label                     "Multi-Tenant Data Architecture" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernbm , :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_scalability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_authorization , :DesignTactic_data_access , :DesignTactic_isolation ;
          gen:wikiEntry                  "<h1 class=\"title\" style=\"background-color: #ffffff;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Multi-Tenant Data Architecture</span></h1>\n<div id=\"nstext\" style=\"position: relative;\">\n<div id=\"nstext\" style=\"position: relative;\">\n<div id=\"nstext\" style=\"position: relative;\">\n<div id=\"nstext\" style=\"position: relative;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><em>Trust</em>, or the lack thereof, is the number one factor blocking the adoption of software as a service (SaaS). A case could be made that data is the most important asset of any business&mdash;data about products, customers, employees, suppliers, and more. And data, of course, is at the heart of SaaS. SaaS applications provide customers with centralized, network-based access to data with less overhead than is possible when using a locally-installed application. But in order to take advantage of the benefits of SaaS, an organization must surrender a level of control over its own data, trusting the SaaS vendor to keep it safe and away from prying eyes.</span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The distinction between shared data and isolated data isn't binary. Instead, it's more of a continuum, with many variations that are possible between the two extremes.</span></p>\n<p class=\"fig\" style=\"text-align: center;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda01\" title=\"Aa479086.mlttntda01(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC28152.gif\" alt=\"Aa479086.mlttntda01(en-us,MSDN.10).gif\" width=\"300\" /></span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Data architecture is an area in which the optimal degree of isolation for a SaaS application can vary significantly depending on technical and business considerations. Experienced data architects are used to considering a broad spectrum of choices when designing an architecture to meet a specific set of challenges, and SaaS is certainly no exception. We shall examine three broad approaches, each of which lies at a different location in the continuum between isolation and sharing.</span></p>\n<p class=\"fig\" style=\"text-align: center;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda02\" title=\"Aa479086.mlttntda02(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC124001.gif\" alt=\"Aa479086.mlttntda02(en-us,MSDN.10).gif\" width=\"300\" /></span></p>\n<h3 class=\"dtH1\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a id=\"mlttntda_sepdat\" href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\" target=\"_blank\"></a>Separate Databases</span></h3>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Storing tenant data in separate databases is the simplest approach to data isolation.</span></p>\n<p class=\"fig\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda03\" style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"Aa479086.mlttntda03(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC6354.gif\" alt=\"Aa479086.mlttntda03(en-us,MSDN.10).gif\" width=\"350\" /></span></p>\n<p class=\"label\">&nbsp;</p>\n<p class=\"label\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Computing resources and application code are generally shared between all the tenants on a server, but each tenant has its own set of data that remains logically isolated from data that belongs to all other tenants. Metadata associates each database with the correct tenant, and database security prevents any tenant from accidentally or maliciously accessing other tenants' data.</span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Giving each tenant its own database makes it easy to extend the application's data model (discussed later) to meet tenants' individual needs, and restoring a tenant's data from backups in the event of a failure is a relatively simple procedure. Unfortunately, this approach tends to lead to higher costs for maintaining equipment and backing up tenant data. Hardware costs are also higher than they are under alternative approaches, as the number of tenants that can be housed on a given database server is limited by the number of databases that the server can support. (Using autoclose to unload databases from memory when there are no active connections can make an application more scalable by increasing the number of databases each server can support.)</span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Separating tenant data into individual databases is the \"premium\" approach, and the relatively high hardware and maintenance requirements and costs make it appropriate for customers that are willing to pay extra for added security and customizability. For example, customers in fields such as banking or medical records management often have very strong data isolation requirements, and may not even consider an application that does not supply each tenant with its own individual database.</span></p>\n<h3 class=\"dtH1\">&nbsp;</h3>\n<h3 class=\"dtH1\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a id=\"mlttntda_sdss\" href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\" target=\"_blank\"></a>Shared Database, Separate Schemas</span></h3>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Another approach involves housing multiple tenants in the same database, with each tenant having its own set of tables that are grouped into a schema created specifically for the tenant.</span></p>\n<p class=\"fig\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda04\" style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"Aa479086.mlttntda04(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC106518.gif\" alt=\"Aa479086.mlttntda04(en-us,MSDN.10).gif\" /></span></p>\n<p class=\"label\">&nbsp;</p>\n<p class=\"label\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">When a customer first subscribes to the service, the provisioning subsystem creates a discrete set of tables for the tenant and associates it with the tenant's own schema. You can use the SQL CREATE command to create a schema and authorize a user account to access it. For example, in Microsoft SQL Server 2005:</span></p>\n<div id=\"code-snippet-1\" class=\"codeSnippetContainer\" style=\"position: relative;\">\n<div class=\"codeSnippetContainerTabs\" style=\"position: relative;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a id=\"mlttntda_sdshs\" href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\" target=\"_blank\"></a><strong>Shared Database, Shared Schema</strong></span></div>\n</div>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">A third approach involves using the same database&nbsp;<em>and</em>&nbsp;the same set of tables to host multiple tenants' data. A given table can include records from multiple tenants stored in any order; a Tenant ID column associates every record with the appropriate tenant.</span></p>\n<p class=\"fig\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda05\" style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"Aa479086.mlttntda05(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC216.gif\" alt=\"Aa479086.mlttntda05(en-us,MSDN.10).gif\" /></span></p>\n<p class=\"label\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Of the three approaches explained here, the shared schema approach has the lowest hardware and backup costs, because it allows you to serve the largest number of tenants per database server. However, because multiple tenants share the same database tables, this approach may incur additional development effort in the area of security, to ensure that tenants can never access other tenants' data, even in the event of unexpected bugs or attacks.</span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The procedure for restoring data for a tenant is similar to that for the shared-schema approach, with the additional complication that individual rows in the production database must be deleted and then reinserted from the temporary database. If there are a very large number of rows in the affected tables, this can cause performance to suffer noticeably for all the tenants that the database serves.</span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The shared-schema approach is appropriate when it is important that the application be capable of serving a large number of tenants with a small number of servers, and prospective customers are willing to surrender data isolation in exchange for the lower costs that this approach makes possible.</span></p>\n</div>\n</div>\n</div>\n</div>" , "<h1 class=\"title\" style=\"background-color: rgb(255, 255, 255);\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Multi-Tenant Data Architecture</span></h1><div id=\"nstext\" style=\"position: relative;\"><div id=\"nstext\" style=\"position: relative;\"><div id=\"nstext\" data-mce-style=\"position: relative;\" style=\"position: relative;\"><div id=\"nstext\"><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><em>Trust</em>, or the lack thereof, is the number one factor blocking the adoption of software as a service (SaaS). A case could be made that data is the most important asset of any business—data about products, customers, employees, suppliers, and more. And data, of course, is at the heart of SaaS. SaaS applications provide customers with centralized, network-based access to data with less overhead than is possible when using a locally-installed application. But in order to take advantage of the benefits of SaaS, an organization must surrender a level of control over its own data, trusting the SaaS vendor to keep it safe and away from prying eyes.</span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The distinction between shared data and isolated data isn't binary. Instead, it's more of a continuum, with many variations that are possible between the two extremes.</span></p><p class=\"fig\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda01\" title=\"Aa479086.mlttntda01(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC28152.gif\" alt=\"Aa479086.mlttntda01(en-us,MSDN.10).gif\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC28152.gif\"></span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Data architecture is an area in which the optimal degree of isolation for a SaaS application can vary significantly depending on technical and business considerations. Experienced data architects are used to considering a broad spectrum of choices when designing an architecture to meet a specific set of challenges, and SaaS is certainly no exception. We shall examine three broad approaches, each of which lies at a different location in the continuum between isolation and sharing.</span></p><p class=\"fig\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda02\" title=\"Aa479086.mlttntda02(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC124001.gif\" alt=\"Aa479086.mlttntda02(en-us,MSDN.10).gif\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC124001.gif\"></span></p><h3 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a id=\"mlttntda_sepdat\" href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\"></a>Separate Databases</span></h3><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Storing tenant data in separate databases is the simplest approach to data isolation.</span></p><p class=\"fig\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda03\" title=\"Aa479086.mlttntda03(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC6354.gif\" alt=\"Aa479086.mlttntda03(en-us,MSDN.10).gif\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC6354.gif\"></span></p><p class=\"label\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>This approach uses a different database for each tenant</strong></span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Computing resources and application code are generally shared between all the tenants on a server, but each tenant has its own set of data that remains logically isolated from data that belongs to all other tenants. Metadata associates each database with the correct tenant, and database security prevents any tenant from accidentally or maliciously accessing other tenants' data.</span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Giving each tenant its own database makes it easy to extend the application's data model (discussed later) to meet tenants' individual needs, and restoring a tenant's data from backups in the event of a failure is a relatively simple procedure. Unfortunately, this approach tends to lead to higher costs for maintaining equipment and backing up tenant data. Hardware costs are also higher than they are under alternative approaches, as the number of tenants that can be housed on a given database server is limited by the number of databases that the server can support. (Using autoclose to unload databases from memory when there are no active connections can make an application more scalable by increasing the number of databases each server can support.)</span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Separating tenant data into individual databases is the \"premium\" approach, and the relatively high hardware and maintenance requirements and costs make it appropriate for customers that are willing to pay extra for added security and customizability. For example, customers in fields such as banking or medical records management often have very strong data isolation requirements, and may not even consider an application that does not supply each tenant with its own individual database.</span></p><h3 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a id=\"mlttntda_sdss\" href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\"></a>Shared Database, Separate Schemas</span></h3><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Another approach involves housing multiple tenants in the same database, with each tenant having its own set of tables that are grouped into a schema created specifically for the tenant.</span></p><p class=\"fig\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda04\" title=\"Aa479086.mlttntda04(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC106518.gif\" alt=\"Aa479086.mlttntda04(en-us,MSDN.10).gif\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC106518.gif\"></span></p><p class=\"label\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>In this approach each tenant has its own separate set of tables in a common database</strong></span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">When a customer first subscribes to the service, the provisioning subsystem creates a discrete set of tables for the tenant and associates it with the tenant's own schema. You can use the SQL CREATE command to create a schema and authorize a user account to access it. For example, in Microsoft SQL Server 2005:</span></p><div id=\"code-snippet-1\" class=\"codeSnippetContainer\"><div class=\"codeSnippetContainerTabs\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a id=\"mlttntda_sdshs\" href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\"></a><strong>Shared Database, Shared Schema</strong></span></div></div><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">A third approach involves using the same database&nbsp;<em>and</em>&nbsp;the same set of tables to host multiple tenants' data. A given table can include records from multiple tenants stored in any order; a Tenant ID column associates every record with the appropriate tenant.</span></p><p class=\"fig\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda05\" title=\"Aa479086.mlttntda05(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC216.gif\" alt=\"Aa479086.mlttntda05(en-us,MSDN.10).gif\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC216.gif\"></span></p><p class=\"label\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>In this approach, all tenants share the same set of tables, and a Tenant ID associates each tenant with the rows that it owns</strong></span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Of the three approaches explained here, the shared schema approach has the lowest hardware and backup costs, because it allows you to serve the largest number of tenants per database server. However, because multiple tenants share the same database tables, this approach may incur additional development effort in the area of security, to ensure that tenants can never access other tenants' data, even in the event of unexpected bugs or attacks.</span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The procedure for restoring data for a tenant is similar to that for the shared-schema approach, with the additional complication that individual rows in the production database must be deleted and then reinserted from the temporary database. If there are a very large number of rows in the affected tables, this can cause performance to suffer noticeably for all the tenants that the database serves.</span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The shared-schema approach is appropriate when it is important that the application be capable of serving a large number of tenants with a small number of servers, and prospective customers are willing to surrender data isolation in exchange for the lower costs that this approach makes possible.</span></p><h2 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a id=\"mlttntda_topic3\" href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\"></a>Choosing an Approach</span></h2><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Each of the three approaches described above offers its own set of benefits and tradeoffs that make it an appropriate model to follow in some cases and not in others, as determined by a number of business and technical considerations. Some of these considerations are listed below.</span></p><h3 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Economic Considerations</span></h3><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Applications optimized for a shared approach tend to require a larger development effort than applications designed using a more isolated approach (because of the relative complexity of developing a shared architecture), resulting in higher initial costs. Because they can support more tenants per server, however, their ongoing operational costs tend to be lower.</span></p><p class=\"fig\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda06\" title=\"Aa479086.mlttntda06(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC42051.gif\" alt=\"Aa479086.mlttntda06(en-us,MSDN.10).gif\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC42051.gif\"></span></p><p class=\"label\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Cost over time for a hypothetical pair of SaaS applications; one uses a more isolated approach, while the other uses a more shared approach</strong></span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Your development effort can be constrained by business and economic factors, which can influence your choice of approach. The shared schema approach can end up saving you money over the long run, but it does require a larger initial development effort before it can start producing revenue. If you are unable to fund a development effort of the size necessary to build a shared schema application, or if you need to bring your application to market more quickly than a large-scale development effort would allow, you may have to consider a more isolated approach.</span></p><h3 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Security Considerations</span></h3><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">As your application will store sensitive tenant data, prospective customers will have high expectations about security, and your service level agreements (SLAs) will need to provide strong data safety guarantees. A common misconception holds that only physical isolation can provide an appropriate level of security. In fact, data stored using a shared approach can also provide strong data safety, but requires the use of more sophisticated design patterns.</span></p><h3 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Tenant Considerations</span></h3><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The number, nature, and needs of the tenants you expect to serve all affect your data architecture decision in different ways. Some of the following questions may bias you toward a more isolated approach, while others may bias you toward a more shared approach.</span></p><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">How many prospective tenants do you expect to target? You may be nowhere near being able to estimate prospective use with authority, but think in terms of orders of magnitude: are you building an application for hundreds of tenants? Thousands? Tens of thousands? More? The larger you expect your tenant base to be, the more likely you will want to consider a more shared approach.</span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">How much storage space do you expect the average tenant's data to occupy? If you expect some or all tenants to store very large amounts of data, the separate-database approach is probably best. (Indeed, data storage requirements may force you to adopt a separate-database model anyway. If so, it will be much easier to design the application that way from the beginning than to move to a separate-database approach later on.)</span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">How many concurrent end users do you expect the average tenant to support? The larger the number, the more appropriate a more isolated approach will be to meet end-user requirements.</span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Do you expect to offer any per-tenant value-added services, such as per-tenant backup and restore capability? Such services are easier to offer through a more isolated approach.</span></li></ul><p class=\"fig\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img id=\"mlttntda07\" title=\"Aa479086.mlttntda07(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC150005.gif\" alt=\"Aa479086.mlttntda07(en-us,MSDN.10).gif\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC150005.gif\"></span></p><p class=\"label\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Figure 5. Tenant-related factors and how they affect \"isolated versus shared\" data architecture decisions</strong></span></p><h3 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Regulatory Considerations</span></h3><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Companies, organizations, and governments are often subject to regulatory law that can affect their security and record storage needs. Investigate the regulatory environments that your prospective customers occupy in the markets in which you expect to operate, and determine whether they present any considerations that will affect your decision.</span></p><h3 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Skill Set Considerations</span></h3><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Designing single-instance, multi-tenant architecture is still a very new skill, so subject matter expertise can be hard to come by. If your architects and support staff do not have a great deal of experience building SaaS applications, they will need to acquire the necessary knowledge, or you will have to hire people that already have it. In some cases, a more isolated approach may allow your staff to leverage more of its existing knowledge of traditional software development than a more shared approach would.</span></p><h2 class=\"dtH1\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a id=\"mlttntda_topic4\" href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx\"></a>Realizing Multi-Tenant Data Architecture</span></h2><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The remainder of this article details a number of patterns that can help you plan and build your SaaS application. As we discussed in&nbsp;<a href=\"https://msdn.microsoft.com/en-us/library/aa479069.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479069.aspx\">our introductory article</a>, a well-designed SaaS application is distinguished by three qualities:&nbsp;<em>scalability</em>,&nbsp;<em>configurability</em>, and&nbsp;<em>multi-tenant efficiency</em>. The table below lists the patterns appropriate for each of the three approaches, divided into sections representing these three qualities.</span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Optimizing for multi-tenant efficiency in a shared environment must not compromise the level of security safeguarding data access. The security patterns listed below demonstrate how you can design an application with \"virtual isolation\" through mechanisms such as permissions, SQL views, and encryption.</span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Configurability allows SaaS tenants to alter the way the application appears and behaves without requiring a separate application instance for each individual tenant. The extensibility patterns describe possible ways you can implement a data model that tenants can extend and configure individually to meet their needs.</span></p><p><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">The approach you choose for your SaaS application's data architecture will affect the options available to you for scaling it to accommodate more tenants or heavier usage. The scalability patterns address the different challenges posed by scaling shared databases and dedicated databases.</span></p><p class=\"label\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Table 1. Appropriate Patterns for SaaS Application</strong></span></p><div class=\"tablediv\"><br class=\"Apple-interchange-newline\"><table class=\"dtTABLE mce-item-table\" data-mce-style=\"border: 1px dashed #bbbbbb;\" style=\"border: 1px dashed rgb(187, 187, 187);\"><tbody><tr><th data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Approach</span></th><th data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Security Patterns</span></th><th data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Extensibility Patterns</span></th><th data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Scalability Patterns</span></th></tr><tr><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sepdat\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sepdat\">Separate Databases</a></span></td><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tdc\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tdc\">Trusted Database Connections</a></span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sdt\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sdt\">Secure Database Tables</a></span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tde\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tde\">Tenant Data Encryption</a></span></li></ul></td><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_cc\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_cc\">Custom Columns</a></span></li></ul></td><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sts\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sts\">Single Tenant Scaleout</a></span></li></ul></td></tr><tr><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sdss\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sdss\">Shared Database, Separate Schemas</a></span></td><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tdc\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tdc\">Trusted Database Connections</a></span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sdt\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sdt\">Secure Database Tables</a></span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tde\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tde\">Tenant Data Encryption</a></span></li></ul></td><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_cc\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_cc\">Custom Columns</a></span></li></ul></td><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187);\"><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tbhp\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tbhp\">Tenant-Based Horizontal Partitioning</a></span></li></ul></td></tr><tr><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb; background-color: #ffffff;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187); background-color: rgb(255, 255, 255);\"><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sdshs\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_sdshs\">Shared Database, Shared Schema</a></span></td><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb; background-color: #ffffff;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187); background-color: rgb(255, 255, 255);\"><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tdc\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tdc\">Trusted Database Connections</a></span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tvf\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tvf\">Tenant View Filter</a></span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tde\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_tde\">Tenant Data Encryption</a></span></li></ul></td><td data-mce-style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed #bbbbbb; background-color: #ffffff;\" style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; border: 1px dashed rgb(187, 187, 187); background-color: rgb(255, 255, 255);\"><ul><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_paf\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_paf\">Preallocated Fields</a></span></li><li><span data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><a href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_nvp\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/aa479086.aspx#mlttntda_nvp\">Name-Value Pairs</a></span></li></ul></td></tr></tbody></table></div></div></div></div></div>" ;
          spec:hasPatternDomain          :Domain_databases .
  
  :SoftwareEngineeringMethod_engineering_collaboration_optimization
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Engineering Collaboration Optimization" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_foehr_mattias , :Author_fries_edgar , :Author_schertl_andreas , :Author_vollmar_jan ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_efficiency ;
          gen:hasMethodPhase            :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole             :Role_technical_project_manager ;
          gen:hasMethodTag              :AuthorTag_engineering , :AuthorTag_value , :AuthorTag_optimization , :AuthorTag_workflow , :AuthorTag_productivity , :AuthorTag_interface , :AuthorTag_tool ;
          gen:wikiEntry                 "This contribution aims to provide engineering organizations with a framework for optimizing collaboration and thus increasing their effectiveness and efficiency. The framework addresses different optimization views on effectiveness and efficiency which have to be determined together with the engineering organization: Engineering Workflow, Engineering Interfaces, Engineering Tooling, Project Value Stream" .
  
  :DesignPattern_provider_adapter
          a                              gen:DesignPattern ;
          rdfs:label                     "Provider Adapter" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_compatibility ;
          gen:isAlternativeOf            :DesignTactic_system_integration ;
          gen:wikiEntry                  "Provider interfaces are encapsulated and mapped to unified interfaces used in applications to separate concerns of interactions with the provider from application functionality.[Cloud Computing Patterns [date unknown]]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_reusability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Reusability" , "reusability" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_component-based_architecture , :DesignDecision_add-03__concept_linkage , :DesignDecision_ad-202__components , :DesignPattern_layered_architecture , :DesignDecision_kdd-01__high_level_architecture , :DesignDecision_kdd-02__native_code_invocation , :DesignPattern_model-view-controller , :DesignDecision_add-04__map-report_model , :DesignDecision_ad-001_1__ecosystem_components ;
          gen:relatedQuality       :ArchitecturalQuality_reusability ;
          gen:wikiEntry            "<p><strong>Reusability</strong></p>\n<p>Reusability defines the capability for components and subsystems to be suitable for use in other applications and in other scenarios. Reusability minimizes the duplication of components and also the implementation time.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658094.aspx\">https://msdn.microsoft.com/en-us/library/ee658094.aspx</a></li>\n</ul>\n<p>&nbsp;</p>\n<p>Reusability is the extent to which code can be used in different applications with minimal change. As code is reused in a new application, that new application partially inherits the attributes of that code. If the code is maintainable, the application is more maintainable. If it is portable, then the application is more portable.&nbsp;</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a style=\"line-height: 1.3em;\" href=\"http://www.adaic.org/resources/add_content/docs/95style/html/sec_8/\">http://www.adaic.org/resources/add_content/docs/95style/html/sec_8/</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignDecision_kdd-05__main_process
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-05: Main Process" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<p><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><strong>Use Case:</strong> Adaptation</span></p><p><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">In this version of the specification, we focus on an adaptation use case, whereby the adaptation is triggered by a finding obtained through process mining. Such a finding could reflect one of the following situations:</span></p><ul><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">A manual task modeled as a user task in BPMN can be automated and implemented as a service task.</span></li><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">An existing service task does not entirely fulfill the requirements of the productive process and needs to be adapted accordingly.</span></li><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">A potential safety hazard is identified in the production procedure and the productive process needs to be adapted accordingly.</span></li><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">New regulations for the railway industry go into effect and the production process has to be adapted accordingly.</span></li></ul><p style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\" data-mce-style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\"><span lang=\"DE-AT\" style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">In all these cases, the adaptation must be possible without disrupting the main business process.</span><span style=\"line-height: 1.3em; text-indent: 0cm; font-size: small;\" data-mce-style=\"line-height: 1.3em; text-indent: 0cm; font-size: small;\">&nbsp;</span></p><p style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\" data-mce-style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\"><strong><span lang=\"DE-AT\" style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">Target Business &amp;Engineering&nbsp;<span class=\"SpellE\">Process</span> for&nbsp;<span class=\"SpellE\">Use</span> Case</span></strong></p><p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\" data-mce-style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Siemens Mobility</span></span></p><p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\" data-mce-style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">–<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span class=\"SpellE\"><span lang=\"DE-AT\">Process</span></span><span lang=\"DE-AT\"> <span class=\"SpellE\">for</span> „Anlagenbau“</span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">CIRCE</span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">AUTOCAD</span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Excel, CSV, PDFs</span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">File Lists, <span class=\"SpellE\">signal</span> <span class=\"SpellE\">tables</span>, … </span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Email <span class=\"SpellE\">and</span> <span class=\"SpellE\">other</span> <span class=\"SpellE\">communication</span> <span class=\"SpellE\">means</span></span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Legacy <span class=\"SpellE\">technologies</span> (SAMBA, X25 …)</span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">People</span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Standards &amp; <span class=\"SpellE\">Constraints</span> </span><span lang=\"DE-AT\" style=\"font-family: Wingdings; color: black;\" data-mce-style=\"font-family: Wingdings; color: black;\"><span style=\"mso-char-type: symbol; mso-symbol-font-family: Wingdings;\" data-mce-style=\"mso-char-type: symbol; mso-symbol-font-family: Wingdings;\">à</span></span><span lang=\"DE-AT\"> <span class=\"SpellE\">Verification</span></span></span></p><p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\" data-mce-style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">–<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Goal</span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"EN-US\">Automate &amp; optimize (some of) these tasks</span></span></p><p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\" data-mce-style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">–<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span class=\"SpellE\"><span lang=\"DE-AT\">Success</span></span><span lang=\"DE-AT\"> <span class=\"SpellE\">criteria</span></span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"EN-US\">The automated process is really used</span></span></p><p style=\"margin-left: 90pt; text-align: left;\" data-mce-style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\"><span style=\"mso-list: Ignore;\" data-mce-style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"EN-US\">The automated process makes life easier not harder</span></span></p>" , "<p><span style=\"font-size: 12pt;\"><strong>Use Case:</strong> Adaptation</span></p>\n<p><span style=\"font-size: 12pt;\">In this version of the specification, we focus on an adaptation use case, whereby the adaptation is triggered by a finding obtained through process mining. Such a finding could reflect one of the following situations:</span></p>\n<ul>\n<li><span style=\"font-size: 12pt;\">A manual task modeled as a user task in BPMN can be automated and implemented as a service task.</span></li>\n<li><span style=\"font-size: 12pt;\">An existing service task does not entirely fulfill the requirements of the productive process and needs to be adapted accordingly.</span></li>\n<li><span style=\"font-size: 12pt;\">A potential safety hazard is identified in the production procedure and the productive process needs to be adapted accordingly.</span></li>\n<li><span style=\"font-size: 12pt;\">New regulations for the railway industry go into effect and the production process has to be adapted accordingly.</span></li>\n</ul>\n<p style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\"><span lang=\"DE-AT\" style=\"font-size: 12pt;\">In all these cases, the adaptation must be possible without disrupting the main business process.</span><span style=\"line-height: 1.3em; text-indent: 0cm; font-size: small;\">&nbsp;</span></p>\n<p style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\"><strong><span lang=\"DE-AT\" style=\"font-size: 12pt;\">Target Business &amp;Engineering&nbsp;<span class=\"SpellE\">Process</span> for&nbsp;<span class=\"SpellE\">Use</span> Case</span></strong></p>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Siemens Mobility</span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">–<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span class=\"SpellE\"><span lang=\"DE-AT\">Process</span></span><span lang=\"DE-AT\"> <span class=\"SpellE\">for</span> „Anlagenbau“</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">CIRCE</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">AUTOCAD</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Excel, CSV, PDFs</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">File Lists, <span class=\"SpellE\">signal</span> <span class=\"SpellE\">tables</span>, … </span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Email <span class=\"SpellE\">and</span> <span class=\"SpellE\">other</span> <span class=\"SpellE\">communication</span> <span class=\"SpellE\">means</span></span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Legacy <span class=\"SpellE\">technologies</span> (SAMBA, X25 …)</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">People</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Standards &amp; <span class=\"SpellE\">Constraints</span> </span><span lang=\"DE-AT\" style=\"font-family: Wingdings; color: black;\"><span style=\"mso-char-type: symbol; mso-symbol-font-family: Wingdings;\">à</span></span><span lang=\"DE-AT\"> <span class=\"SpellE\">Verification</span></span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">–<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"DE-AT\">Goal</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"EN-US\">Automate &amp; optimize (some of) these tasks</span></span></p>\n<p style=\"margin-left: 58.5pt; text-indent: -22.5pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"DE-AT\"><span style=\"mso-list: Ignore;\">–<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span class=\"SpellE\"><span lang=\"DE-AT\">Success</span></span><span lang=\"DE-AT\"> <span class=\"SpellE\">criteria</span></span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"EN-US\">The automated process is really used</span></span></p>\n<p style=\"margin-left: 90pt; text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\"><span style=\"mso-list: Ignore;\">•<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang=\"EN-US\">The automated process makes life easier not harder</span></span></p>" ;
          spec:decisionArchitecturalView  "1. Use Case View" ;
          spec:hasDecisionDomain          :Domain_ar-01__process_automation ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_safety , :ArchitecturalQuality_interoperability ;
          spec:useDecisionTactic          :DesignTactic_separation_of_concerns , :DesignTactic_abstraction .
  
  :SoftwareEngineeringMethod_automatic_logs_analysis
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Automatic Logs Analysis" ;
          gen:endorsements         "1"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_sobolev_sergey , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdwiki , :Project_isdcatalog , :Project_aspernes ;
          gen:hasMethodPhase       :ProjectPhase_integration , :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole        :Role_operations_engineer , :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_operations , :AuthorTag_deployment ;
          gen:methodContext        "Safety-critical systems (IEC 61508, EN 50128, DO-178)" , "Medium- & Large-scale Systems" ;
          gen:methodInput          "Specifications of event sequences" , "Log files" ;
          gen:methodOutput         "Reports of detected events" , "Reports of detected errors" ;
          gen:methodPurpose        "System testing & analysis" , "Error detection" ;
          gen:wikiEntry            "Automatic logs analysis is particularly useful if a system has many files where the information is stored and/or if the log files contain information which could be later used for system testing or post-mortem analysis. The analysis is usually appropriate for medium and large scale systems where additional background process can be started." , "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>Automatic logs analysis is particularly useful if a system has many files where the information is stored and/or if the log files contain information which could be later used for system testing or post-mortem analysis. The analysis is usually appropriate for medium and large scale systems where additional background process can be started.</p></td>\n</tr>\n</tbody></table><p><em><span style=\"color: rgb(37,37,37);\">Log file processing architecture close to implemented in the showcase</span></em><em><span style=\"color: rgb(37,37,37);\">.</span></em><img class=\"confluence-embedded-image\" src=\"https://wiki.ct.siemens.de/download/attachments/100764913/log-files-7-638.jpg?version=1&amp;modificationDate=1439368084397&amp;api=v2\" data-image-src=\"/download/attachments/100764913/log-files-7-638.jpg?version=1&amp;modificationDate=1439368084397&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"102269119\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"log-files-7-638.jpg\" data-base-url=\"https://wiki.ct.siemens.de\" data-linked-resource-content-type=\"image/jpeg\" data-linked-resource-container-id=\"100764913\" data-linked-resource-container-version=\"15\" style=\"line-height: 1.3em; font-size: small;\"></p><h1 id=\"AutomaticLogsAnalysis-Description\"><span>Description&nbsp;</span></h1><p>Automatic logs processing helps a lot during system testing, commissioning and maintenance. Extraction of events, expected and observed sequences and timing helps to identify system problems and faster localize source of problem. Automatic logs processing helps to automate system black box testing and find quickly unexpected behavior or suspicious deviations in long run tests results.<span style=\"line-height: 1.3em; font-size: small;\">&nbsp;&nbsp;</span></p><p>Implemented tool called Automated Verification of System States (AVSS) was used to automate testing redundancy management of high availability system. The two nodes' behavior was tracked in system logs collected on application server and the AVSS engine extracted planned and observed events chains. The verification block reported about discrepancies.The checks were performed after testing sessions as well as in parallel with long run tests.</p><p><span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image\" width=\"500\" src=\"https://wiki.ct.siemens.de/download/attachments/100764913/avss.png?version=1&amp;modificationDate=1439368632917&amp;api=v2\" data-image-src=\"/download/attachments/100764913/avss.png?version=1&amp;modificationDate=1439368632917&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"102269120\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"avss.png\" data-base-url=\"https://wiki.ct.siemens.de\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"100764913\" data-linked-resource-container-version=\"15\"></span></p><p>The proposed language allows for description of states sequence. It has some built-in keywords (like def, allowed and executed), states (like final state #) and pre-defined operations (like logical addition “|”).</p><p>The AVSS language supports such operations as:</p><ul><li class=\"O1\">Definition of allowed and executed paths</li><li class=\"O1\">Definition of states transitions</li><li class=\"O1\">States grouping in subpaths using square brackets ([])</li><li class=\"O1\">New states definition (using the def keyword)</li><li class=\"O1\">Alternatives definitions (using the “|” (pipe) symbol)</li><li class=\"O1\">Timing properties definition (using brackets (), e.g. (100), time is unitless here)</li></ul><p>Since it is assumed that a system can be only in one state at each moment, logical multiplication with states is not supported.</p><p>For the purpose of identifying events' patterns special language was developed. For test purposes the test engine before each test case writed expected behavior like the following:</p><p>allowed&nbsp; = STATE_1-&gt;STATE_2|[STATE_3-&gt;STATE_2(100)-&gt;#]-&gt;STATE_4-&gt;#;</p><p><strong>Report file (fragment):</strong></p><pre>...</pre><blockquote><p>Tests summary:</p><p>FAILED:</p><p>&nbsp; switch_off_remote executed: 3, failed: 2 (failed 66.7%), warnings: 0</p><p>...</p><p>Total tests 66, total failed 7 (10.6%), total warnings 1</p><p>##Test started at 14:11:14&nbsp; name: switch_off_remote&nbsp;</p><p>Test sequence: &nbsp; INIT-&gt;SYNC-&gt;STANDBY-&gt;SFSTANDBY-&gt;SINGLE-&gt;MASTER|[SYNC-&gt;</p><p>&nbsp; [STANDBY-&gt;SFSTANDBY]|[SINGLE-&gt;MASTER]]-&gt;PASSED-&gt;#</p><p>!!!Sequence INIT(4)-&gt;SYNC(21889)-&gt;STANDBY(2930)-&gt;SFSTANDBY(177399)-&gt;</p><p>&nbsp; SINGLE(61992)-&gt;#(1079000) WRONG!!!&nbsp; Log time: 14:29:13.472</p><p>Test finished at 14:29:13, overall test time (sec): 1079&nbsp; Errors in test: 1<span style=\"line-height: 1.3em; font-size: small;\">&nbsp;</span></p></blockquote><h2 id=\"AutomaticLogsAnalysis-Context\">Context</h2><p>For complicated missing/safety critical software systems exhaustive testing is normal. However, manual tests and polling driven automated tests prone to miss errors since they do not control 100% of events in the system. It is necessary to be able to check all the important system states changes automatically to provide high quality testing/monitoring.</p><p>In addition to that manual testing of a distributed system running on several nodes working in a real-time is very challenging.</p><p>Requirements for the automatic testing/logs analysis tool:</p><ul><li>Ability to run on a target (embedded) system without any modifications of the target system core files and main software code (non-intrusive technique)</li><li>Offline/postmortem logs analysis support</li><li>Online monitoring support (optional)</li><li>Ability to analyze log files of any size</li><li>New states definition support</li><li>States transitions and their timings definition and control support</li><li>Expected states transitions branching support</li><li>Temporary control disable and re-enable support</li><li>Errors summary reports feature</li><li>Ability to be integrated into automated testing software</li><li>Ability to be extended to support more log files formats</li></ul><br><h2 id=\"AutomaticLogsAnalysis-Inputs\">Inputs&nbsp;</h2><p>Events sequences specification, log files.</p><h2 id=\"AutomaticLogsAnalysis-Outputs\">Outputs&nbsp;</h2><p>Report of detected events and errors (if any).</p><h2 id=\"AutomaticLogsAnalysis-Procedure\">Procedure</h2><ol><li>Identify processing goals (test support, system monitoring) and events to be analyzed</li><li>Identify files to be analyzed.</li><li>For certain log files a custom events extracting module should be written</li><li>As soon as steps above done - run the parser and analyze report.</li></ol><h2 id=\"AutomaticLogsAnalysis-Advantagesanddisadvantages\">Advantages and disadvantages</h2><p>Advantage of the system is in its ability to process log files and detect problems even if there are no \"problem/error/bug\" words - by analysis of \"normal\" events and extracting patterns.</p><p>Disadvantage is that the approach still requires some customization for particular log files and information about expected patterns embedded into the same log. This however can be avoided by using predefined patterns.</p><h2 id=\"AutomaticLogsAnalysis-Example\">Example&nbsp;</h2><p>The approach was used for redundancy management subsystem testing in SPPA-T3000 system software.</p><h2 id=\"AutomaticLogsAnalysis-Variants\">Variants</h2><p>Alternative solutions are, for example,</p><ul><li>monit - this is mainly for resources monitoring (processes status), <a href=\"https://mmonit.com/monit/\" class=\"external-link\" rel=\"nofollow\" target=\"_blank\">https://mmonit.com/monit/</a></li><li>swatch - monitoring of Unix log files, but without specifying events patterns, <a href=\"http://sourceforge.net/projects/swatch/\" class=\"external-link\" rel=\"nofollow\" target=\"_blank\">http://sourceforge.net/projects/swatch/</a></li></ul>" .
  
  :Requirement_ar-101_1
          a                          spec:Requirement ;
          rdfs:label                 "AR-101.1" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall ensure&nbsp;the availability of the requested measurement and weather data in the DWH." ;
          spec:containedWithin       :UseCase_benchmarks ;
          spec:hasRequirementOrigin  :Domain_ar-101__dwh_querying , :Domain_ar-104__stepwise_querying ;
          spec:requirementGroup      "Operational" ;
          spec:requirementPurpose    "Quality of service" .
  
  :Requirement_ar-155__generic_components
          a                          spec:Requirement ;
          rdfs:label                 "AR-155: Generic components" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Die\n  Anzahl der Klassen und Systemkomponenten soll <b>nicht</b> mit der Anzahl der\n  unterschiedlichen Datenbankabfragen, Darstellungsarten und Grafiken wachsen." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Developmental" ;
          spec:requirementPurpose    "Genericization" .
  
  :DesignPattern_pubsub
          a                              gen:DesignPattern ;
          rdfs:label                     "Pubsub" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_asperntest ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_complexity ;
          gen:isAlternativeOf            :DesignTactic_distribution ;
          gen:wikiEntry                  "<h1 class=\"title\">Publish/Subscribe</h1>\n  \n\n <div id=\"nstext\">&nbsp;\n <div class=\"alert\">\n   <div class=\"contentTableWrapper\"><table>\n     <tbody><tr><th>Retired Content</th></tr>\n     <tr><td><p>This content is outdated and is no longer being maintained. It is provided as a courtesy for individuals who are still using these technologies.\n       This page may contain URLs that were valid when originally published, but now link to sites or pages that no longer exist.</p>\n       </td></tr>\n   </tbody></table></div>\n </div>\n<p class=\"fig\"></p><p><a href=\"https://www.microsoft.com/practices\" target=\"_blank\"><img id=\"pandp-logo-txt-2009\" alt=\"patterns &amp; practices Developer Center\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC368873.png\" title=\"patterns &amp; practices Developer Center\" xmlns=\"\"></a></p></div>" ;
          spec:hasPatternDomain          :Domain_cloud_computing ;
          owl:sameAs                     <http://dbpedia.org/resource/Publish–subscribe_pattern> .
  
  :DesignDecision_kdd-09
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-09" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><strong>Abfragefilter für Analysejob</strong></span></p><p><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">Im Falle eines Analysejobs besteht der Abfragefilter aus</span></p><ul><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">(1) dem Inhalt eines einfachen Datenabfragefilters (Hauptteil) und</span></li><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">(2) einem zusätzlichen Parameter, der auf die gewünschte Analyse hinweist.</span></li></ul><p><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">Der Hauptteil des Abfragefilters von der angesprochenen Analysekomponente für eine einfache Datenabfrage verwendet.&nbsp;</span></p><p><span lang=\"DE-AT\" style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">Eine&nbsp;Routing-Logik entscheidet anschließend, ob es in der Anfrage um einen Analysejob oder um eine einfache Datenabfrage handelt&nbsp;und&nbsp;bearbeitet gegebenenfalls den Abfragefilter&nbsp;bevor&nbsp;die Anfrage weitergeleitet wird.</span></p>" ;
          spec:decisionArchitecturalView  "II.Logische Sicht" ;
          spec:hasDecisionDomain          :Domain_ar-105__analytics , :Domain_ar-105_1__reports_and_analytics ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_versatility ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_versatility ;
          spec:useDecisionTactic          :DesignTactic_filter-based_queries .
  
  :ArchitecturalQuality_usability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "usability" , "Usability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-25 , :DesignTactic_change_propagation , :DesignPattern_component_configurator , :DesignPattern_encapsulation , :DesignDecision_ad-124__clm_integration , :DesignPattern_async_methods , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_dynamically-adjustable_configuration , :DesignPattern_modal_window , :DesignPattern_breadcrumbs , :DesignPattern_offline_reporting , :DesignDecision_add-02__schemas_for_faceted_search , :DesignPattern_operational_monitoring_and_alerting , :DesignDecision_kdd-16__cached_loading , :DesignDecision_ad-113__faceted_navigation , :DesignDecision_kdd-18 , :DesignPattern_continual_status_reporting , :DesignDecision_kdd-31 , :DesignPattern_facade , :DesignPattern_reflection , :DesignDecision_kdd-13 , :DesignDecision_kdd-14__image_loading_performance , :DesignTactic_infinite_scrolling , :DesignPattern_deferreds_for_caching , :DesignDecision_ad-111__synch_asynch_communication , :DesignDecision_kdd-11 , :DesignDecision_kdd-06__embedded_browser , :DesignPattern_virtual_paging___infinite_scrolling , :DesignPattern_virtual_platform , :DesignPattern_faceted_search_and_navigation , :DesignDecision_kdd-15__prioritized_loading , :DesignDecision_kdd-24 , :DesignPattern_maximize_human_participation , :DesignTactic_barrier-free_access , :DesignPattern_capturing_architectural_requirements , :DesignPattern_faceted_search_navigation , :DesignPattern_session_failover , :DesignDecision_kdd-12 , :DesignTactic_softcoding , :DesignDecision_kdd-04__limiting_results_in_pb , :DesignPattern_layered_architecture , :DesignPattern_swappable_staging_environment , :DesignTactic_self-descriptiveness , :DesignPattern_interpretor , :DesignDecision_add-05__web_page_scraper , :DesignPattern_runtime_reconfiguration_pattern , :DesignDecision_kdd-20 , :DesignDecision_kdd-10__use_performance_patterns , :DesignPattern_embedded_browser ;
          gen:relatedQuality       :ArchitecturalQuality_complexity , :ArchitecturalQuality_testability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_understandability , :ArchitecturalQuality_affordability , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_utility , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_learnability , :ArchitecturalQuality_demonstrability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_likeability , :ArchitecturalQuality_trainability , :ArchitecturalQuality_composability , :ArchitecturalQuality_visibility , :ArchitecturalQuality_legibility , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_uniformity , :ArchitecturalQuality_localizability ;
          gen:wikiEntry            "<p><strong>Usability</strong></p>\n<p>Usability defines how well the application meets the requirements of the user and consumer by being intuitive, easy to localize and globalize, providing good access for disabled users, and resulting in a good overall user experience.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li>https://msdn.microsoft.com/en-us/library/ee658094.aspx</li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_impact  a  cont:AuthorTag ;
          rdfs:label  "impact" .
  
  :DesignPattern_component_configurator
          a                              gen:DesignPattern ;
          rdfs:label                     "Component Configurator" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_controllability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_configurability , :ArchitecturalQuality_serviceability , :ArchitecturalQuality_usability , :ArchitecturalQuality_agility ;
          gen:isAlternativeOf            :DesignTactic_softcoding ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_polling_consumer
          a                              gen:DesignPattern ;
          rdfs:label                     "Polling Consumer" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_ar-007__policy_enforcement
          a                          spec:Requirement ;
          rdfs:label                 "AR-007: Policy enforcement" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall support policy enforcement, for example through\nmonitoring activities for service level agreement (SLA) compliance or rate limiting and throttling policies for APIs on the consumer-level." ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Governance" ;
          spec:requirementPurpose    "Policy enforcement" .
  
  :ArchitecturalQuality_visibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "visibility" , "Visibility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_acknowledgement , :DesignPattern_task_precondition_-_data_existence , :DesignPattern_web_service_proxy , :DesignPattern_microservices , :DesignPattern_representational_state_transfer , :DesignPattern_rest , :DesignPattern_event_message , :DesignPattern_process_manager , :DesignPattern_interpretor , :DesignPattern_environment_data , :DesignTactic_barrier-free_access , :DesignPattern_publish_subscribe , :DesignPattern_secret_url , :DesignPattern_message_federation , :DesignPattern_rest_architecture , :DesignPattern_folder_data , :DesignPattern_maximize_human_participation , :DesignDecision_add-01__zero-footprint_architecture , :DesignPattern_restful_architecture ;
          gen:relatedQuality       :ArchitecturalQuality_usability , :ArchitecturalQuality_testability ;
          gen:wikiEntry            "[Ference and Kevin 2012] Visibility providesthe organization the possibility to make key adjustments based on feedback by clients or marketschanges in technologyand more. Through collaboration ofboth internal and external team members and stakeholdersa provider delivers better software solutions that more accurately meet customer needs and ensures internal and external expectations and is managed closely.    Relations Barrier-free Access To get feedback by clients the clients need access to the software solutions." ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_viability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "viability" , "Viability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_fault_diagnosis , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_concentrated_recovery , :DesignPattern_temporal_analytics , :DesignPattern_restart , :DesignPattern_riding_over_transients , :DesignPattern_compensation , :DesignPattern_return_to_reference_point , :DesignPattern_heartbeat , :DesignPattern_minimize_human_intervention , :DesignPattern_expansive_automatic_controls , :DesignPattern_root_cause_analysis , :DesignTactic_keep_consistent , :DesignPattern_treshold_analysis , :DesignPattern_reproducible_error , :DesignPattern_small_patches , :DesignPattern_protective_automatic_controls , :DesignPattern_maximize_human_participation , :DesignPattern_retry_pattern , :DesignPattern_redundancy , :DesignPattern_quarantine , :DesignPattern_circuit_breaker , :DesignTactic_fault_handling , :DesignPattern_resource_allocation , :DesignPattern_error_correcting_code , :DesignPattern_remote_storage , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_leaky_bucket_counter , :DesignPattern_reinitialization , :DesignPattern_indiviuals_decide_timing , :DesignPattern_error_handler , :DesignTactic_error_handling , :DesignPattern_watchdog , :DesignPattern_queue_for_resources , :DesignPattern_3-category_logging , :DesignPattern_limit_retries , :DesignPattern_failover , :DesignPattern_units_of_mitigation , :DesignPattern_parameter_checking , :DesignPattern_voting , :DesignPattern_rollforward , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_memento , :DesignPattern_escalation , :DesignPattern_recovery_blocks , :DesignPattern_reconfiguration , :DesignPattern_slow_it_down , :DesignPattern_claim_check , :DesignPattern_routine_exercises , :DesignPattern_software_update , :DesignPattern_compensating_transaction_pattern , :DesignPattern_maintenance_interface , :DesignPattern_deferrable_work , :DesignPattern_someone_in_charge , :DesignPattern_realistic_threshold , :DesignTactic_error_detection , :DesignPattern_reintegration , :DesignPattern_checkpoint , :DesignPattern_finish_work_in_progress , :DesignPattern_similarity_detection , :DesignPattern_fault_observer , :DesignPattern_existing_metrics , :DesignPattern_checksum , :DesignPattern_routine_audits , :DesignPattern_error_containment_barrier , :DesignPattern_acknowledgement , :DesignPattern_rollback , :DesignPattern_revise_procedure , :DesignPattern_fresh_work_before_stale , :DesignPattern_fault_isolation , :DesignPattern_marked_data , :DesignPattern_final_handling , :DesignPattern_fault_correlation , :DesignPattern_routine_maintenance , :DesignPattern_correcting_audits ;
          gen:relatedQuality       :ArchitecturalQuality_suitability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_recoverability ;
          gen:wikiEntry            "Viable or viability is the ability of asystem/software to maintain itself or recover from problems." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_data-based_task_trigger
          a                              gen:DesignPattern ;
          rdfs:label                     "Data-Based Task Trigger" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_flexibility ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_controllability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_performance ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_controllability ;
          gen:isAlternativeOf            :DesignTactic_routing , :DesignTactic_scheduling ;
          gen:wikiEntry                  "<h1 align=\"center\">Pattern 39 (Data-Based Task Trigger)</h1>\n<p><a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp39_animation.php\" target=\"_blank\">FLASH animation of Data-based Task Trigger pattern</a></p>\n<h2>Description***</h2>\n<p align=\"justify\">Data-based task triggers provide the ability to trigger a specific task when an expression based on data elements in the process instance evaluates to true. Any data element accessible within a process instance can be used as part of a data-based trigger expression.\n</p><h2>Example</h2>\n<p align=\"justify\">Trigger the <em>Re-balance Portfolio </em> task when the <em>loan margin is less than 85% </em>. \n</p><h2>Motivation</h2>\n<p align=\"justify\">This pattern provides a means of triggering the initiation or resumption of a task instance when a condition based on  data elements in the process instance is satisfied. </p>\n<h2>Overview</h2>\n<p align=\"justify\">This Pattern is analogous to the notion of active rules <a href=\"http://www.workflowpatterns.com/patterns/data/bibliography.php#Har93\" target=\"_blank\">[Har93]</a> or event-condition-action (ECA) rules <a href=\"http://www.workflowpatterns.com/patterns/data/bibliography.php#PD99\" target=\"_blank\">[PD99]</a> found in active databases <a href=\"http://www.workflowpatterns.com/patterns/data/bibliography.php#DGG95\" target=\"_blank\">[DGG95]</a>. A specific data-based trigger expression is associated with a task that is to be enabled in this way. </p>\n<h2 align=\"justify\">Context</h2>\n<p align=\"justify\">There are no specific context conditions associated with this pattern.</p>\n<h2 align=\"justify\">Implementation</h2>\n<p align=\"justify\"> This pattern is directly supported in FLOWer through the specification of a condition corresponding to the required data expression on a milestone construct immediately preceding the to-be-triggered task. When the data condition is met, the task is then triggered. Similarly the pattern can be directly implemented in COSA through the use of transition conditions which incorporate the data condition being monitored for on the incoming edges to the to-be-triggered task. Depending on the semantics required for the triggering, the transition condition may or may not include the CONDITION.TOKEN tool agent (footnote <a href=\"http://www.workflowpatterns.com/patterns/data/footnotes.php#foot13\" name=\"foot13\" class=\"style1\" id=\"foot13\" target=\"_blank\">13)</a>. BPMN supports this pattern via the Rule Event construct. </p>\n<p align=\"justify\">Many PAIS do not directly support this pattern, however in some cases it can be constructed for offerings that support event-based triggering (i.e. WDP38) by simulating event-based triggering within the context of the process instance. This is achieved by nominating an event that the triggered task should be initiated/resumed on and then establishing a data monitoring task that runs (continuously) in parallel with all other  tasks and monitors data values for the occurrence of the required triggers. When one of them is detected, the task that requires triggering is initiated by raising the event that it is waiting on. The only caveat to this approach is that the process environment must not support the <em><a href=\"http://www.workflowpatterns.com/patterns/data/internal/wdp11.php\" target=\"_blank\">Implicit Termination </a></em> Pattern (WDP-11), e.g. Staffware. If the process environment were to support this pattern, then problems would arise for each case when the final task was completed as this would not imply that other outstanding task instances should also terminate. Since the monitoring task could potentially run indefinitely, it could not be guaranteed that it would cease execution at case completion. This scenario is illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp39.php#figure24\" target=\"_blank\">24</a>. Task instance A is to be triggered when<em> trigger condition</em> evaluates to true. A task instance is set up to monitor the status of <em>trigger condition</em> and to complete and pass control to A when it occurs.</p>\n<p align=\"justify\">By adopting the strategy illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp39.php#figure24\" target=\"_blank\">24</a>, the pattern can be indirectly implemented in BPEL. Although it could be similarly constructed in Staffware, WebSphere MQ and XPDL, all of these offerings support Implicit Termination and hence would lead to problematic implementations of this pattern as it would not be clear when the <em>trigger condition</em> task should be complete execution.</p>\n<p align=\"center\"><a name=\"figure24\" id=\"figure24\" href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp39.php\" target=\"_blank\"><img src=\"http://www.workflowpatterns.com/patterns/data/images/workflow-case-39.png\" alt=\"Figure 24: Data-based task trigger\" name=\"figure24\" width=\"328\" height=\"204\" id=\"figure24\"></a></p>\n<p align=\"center\"><strong>Figure 24:</strong> Data-based task trigger </p>\n<h2>Issues</h2>\n<p align=\"justify\">None identified. </p>\n<h2>Solutions</h2>\n<p align=\"justify\">N/A.</p>\n<h2>Evaluation Criteria</h2>\n<p>An offering achieves full support if it has a construct that satisfies the description for the pattern. It achieves a partial support rating if programmatic extensions are required to facilitate the trigger handling.</p>" ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  :DesignPattern_service_orientation
          a                              gen:DesignPattern ;
          rdfs:label                     "Service Orientation" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_resilience ;
          gen:isAlternativeOf            :DesignTactic_error_detection , :DesignTactic_error_handling , :DesignTactic_fault_tolerance , :DesignTactic_no_single_point_of_failure ;
          gen:wikiEntry                  "<p>If you haven’t yet noticed that prioritization of non-functional requirements (NFRs) is changing amongst your user base, you will soon. For decades, we have held to the same familiar set of NFRs. Every team had its own definition and particular spin on NFRs, but the usual suspects are accessibility, availability, extensibility, interoperability, maintainability, performance, reliability, scalability, security, and usability.</p>\n<p>But new priorities have surfaced, as IT has experienced a sea change over the past few years. Some organizations have even adopted completely new NFRs. The rise of DevOps has coincided with these changes, and the movement’s principles enable IT teams to more readily adapt to rapidly changing requirements.</p>\n<h1>Your grandfather’s mainframe was very reliable</h1>\n<p>Historically, IT system designs were praised for reliability. Robust and stable systems could “take a licking and keep on ticking.” As computing became more pervasive, scalability became the watchword. Systems should be able to grow and expand to meet increasing demands.</p>\n<p>Scalability as an NFR priority represents just a slight shift from reliability as an NFR. Both operated off the mindset that the original system design was valid. Reliability ensures that the system continues to provide the stated functionality over time, and scalability ensures that you can do so for an increasing demand set.</p>\n<p>Roughly 10 years ago, things began to shift as more and more organizations embraced movements like agile or XP, and architectural models like Service Oriented Architecture (SOA). These initiatives promoted adaptation and response to change as desirable system qualities. Next, cloud computing introduced us to the notion of elasticity, further promoting the values of flexibility and responsiveness to change.</p>\n<h1>A resilient system is a happy system</h1>\n<p>The state of the art for system design is always evolving, and we see noticeable leaps forward every few years. The current phase of evolution is toward resilient systems.</p>\n<p>Legacy system designs relied upon expensive infrastructure with multiple-redundant-hot-swappable-live-backup-standby-continuity-generators (or whatever vendors are peddling lately). In contrast, resilient system designs embrace failure and promote the use of cheap, commodity hardware, coupled with distributed data management, parallel processing, eventual consistency, and self-healing operational nodes.</p>\n<p>Some portion of your system is likely to go down at some point, and resilient systems are designed with that expectation. Resilient systems and resilient processes are able to continue operation (albeit at diminished capacity) in the face of failure.</p>\n<p>The prioritization of resilience over reliability as an NFR can be seen within the DevOps movement, the development of the Netflix Simian Army, and the rise of NoSQL data management solutions.</p>\n<h2></h2>" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Service-orientation .
  
  :DesignDecision_ad-110__filter-based_queries
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-110: Filter-based queries" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><span style=\"font-size: small;\"><strong style=\"font-size: small;\">Filter-based data queries</strong></span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">The interface to the DWH supports a stateless web-based (e.g., REST , SOAP) request / response mechanism for data queries. So&nbsp;called <em style=\"font-size: small;\">query filters</em> will be used for querying data. A query filter is a data structure that allows to selectively restrict the result set according to a specific set of criteria.</span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">The query filters used by the Smart ICT Benchmarks system have the following structure:</span></p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Main part</span></li>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">A unique name of the query (this can be the name of an SQL query stored on the server or the name of a RESTful POST method) .</span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">A list of parameters as name / value pairs</span></li>\n</ul>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Optional</span></li>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Name/Type of the requested&nbsp;analysis</span></li>\n</ul>\n</ul>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">The unique name of the query is forwarded&nbsp;by the visualization layer to the data layer upon&nbsp;each query. This allows a direct mapping between visualizations and queries.</span></p>\n<p style=\"font-size: small;\">In the case of an analysis job, the query filter is composed of the followng elements:</p>\n<ol style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">The content of the simple data query filter (i.e., the main part of the filter, as described above)</span></li>\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">An additional parameter, which indicates the type of analysis to be performed using the queried data</span></li>\n</ol>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">The main part of the query filter is used in&nbsp;the application layer&nbsp;to perform a simple data query.</span></p>\n<p style=\"font-size: small;\"><span lang=\"DE-AT\" style=\"font-size: small;\">The decsion whether a particular request is to be interpreted as a simple data query or as an analysis request is to be taken by means of a&nbsp;routing logic.&nbsp;</span></p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-158__standard_compatibility , :Domain_ar-153__scalability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_portability , :ArchitecturalQuality_interoperability ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces , :DesignTactic_filter-based_queries .
  
  :DesignTactic_logging
          a                             gen:DesignTactic ;
          rdfs:label                    "logging" , "Logging" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_auditability , :ArchitecturalQuality_repeatability , :ArchitecturalQuality_accountability , :ArchitecturalQuality_defensibility , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_analyzability ;
          gen:wikiEntry                 "[Wikipedia Computer Data Logging 2014] Logging is the process of recording events with a computer program usually an application software. In a certain scope in order to provide an audit trail that can be used to understand the activity of the system and to diagnose problems." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_event_sourcing_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Event Sourcing Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_controllability , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility ;
          gen:isAlternativeOf            :DesignTactic_queueing ;
          gen:wikiEntry                  "Use an append-only store to record the full series of events that describe actions taken on data in a domain rather than storing just the current state so that the store can be used to materialize the domain objects. This pattern can simplify tasks in complex domains by avoiding the requirement to synchronize the data model and the business domain improve performance scalability and responsiveness provide consistency for transactional data and maintain full audit trails and history that may enable compensating actions.[MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_cust-4__web_client_startup
          a           spec:Domain ;
          rdfs:label  "cust-4: web client startup" .
  
  :DesignPattern_traffic_shaping
          a                              gen:DesignPattern ;
          rdfs:label                     "Traffic Shaping" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_affordability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_knowledge_management
          a           cont:AuthorTag ;
          rdfs:label  "knowledge management" .
  
  :ArchitecturalQuality_understandability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Understandability" , "understandability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :SoftwareEngineeringMethod_layer_and_dependency_recovery , :DesignPattern_offline_reporting , :DesignPattern_reflection , :DesignTactic_self-descriptiveness , :DesignPattern_continual_status_reporting , :DesignPattern_breadcrumbs , :DesignPattern_system_overview , :DesignPattern_visual_semantics , :DesignPattern_model-view-controller , :DesignTactic_transparency , :DesignPattern_operational_monitoring_and_alerting ;
          gen:relatedQuality       :ArchitecturalQuality_trainability , :ArchitecturalQuality_learnability , :ArchitecturalQuality_testability , :ArchitecturalQuality_usability ;
          gen:wikiEntry            "[Sap Design Guild Understandability1996] Understandability is an ultimate prerequisite in order for users to perform any task. The better users understand an application the more effectively they can use it because they know a greater portion of the applications functionality. This also leads to more efficiency because they can use functionality that achieves goals faster with fewer steps and fewer errors." ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_problem-solving
          a           cont:AuthorTag ;
          rdfs:label  "problem-solving" .
  
  :SoftwareEngineeringMethod_model_based_testing
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Model Based Testing" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_architecture , :ProjectPhase_verification_and_validation , :ProjectPhase_requirements ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_requirements , :AuthorTag_modeling ;
          gen:wikiEntry            "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>Model-based testing (or MBT) comprises at least one of the two aspects: it is using models within the whole test process and / or is utilizing abstract models for the generation of software quality artifacts like test case specifications for manual test execution and test scripts used for automated test.<br>\ntedeso in particular uses UML modeling to automatically generate black-box system and integration level test cases. These abstract test steps can then be converted into all sorts of executable code or reports. tedeso also offers broad opportunities to interoperate to existing tool chains and to accommodate new features.</p></td>\n</tr>\n</tbody></table>" .
  
  :DesignTactic_keep_consistent
          a                             gen:DesignTactic ;
          rdfs:label                    "Keep Consistent" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_stability , :ArchitecturalQuality_functionality , :ArchitecturalQuality_consistency , :ArchitecturalQuality_replicability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_viability , :ArchitecturalQuality_performance , :ArchitecturalQuality_immunity , :ArchitecturalQuality_correctness , :ArchitecturalQuality_reliability ;
          gen:wikiEntry                 "Consistency is one of the four guarantees that defineACIDtransactions however significant ambiguity exists about the nature of this guarantee. It is defined variously as The guarantee that any transactions started in the future necessarily see the effects of other transactions committed in the past The guarantee thatdatabase constraintsare not violated particularly once a transaction commits The guarantee that operations in transactions are performed accurately correctly and with validity with respect to application semantics As these various definitions are not mutually exclusive it is possible to design a system that guarantees consistency in every sense of the word as mostrelational database management systemsin common use today arguably do.  [Wikipedia Consistency (DB Systems) 2014]" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_extensibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Extensibility" , "extensibility" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-01__high_level_architecture , :DesignDecision_ad-017__core_services , :DesignDecision_kdd-08__adaptation_process , :DesignPattern_bridge , :DesignDecision_kdd-10__adaptation_mechanisms , :DesignPattern_facade , :DesignDecision_kdd-21 , :DesignPattern_external_configuration_store_pattern , :DesignPattern_model-view-controller , :DesignDecision_kdd-09__process_recovery , :DesignDecision_ad-202__components , :DesignDecision_ad-201__camunda_process_engine , :DesignPattern_multi-tenant_data_architecture , :DesignPattern_message_bus_architecture , :DesignDecision_kdd-02__use_camunda_suite , :DesignPattern_mediator , :DesignPattern_proxy , :DesignDecision_kdd-20 , :DesignDecision_kdd-03__platform_architecture , :DesignPattern_component-based_architecture , :DesignTactic_increase_cohesion , :DesignPattern_layered_architecture , :DesignTactic_reduce_coupling , :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_abstract_factory , :DesignDecision_kdd-30 , :DesignPattern_adapter ;
          gen:relatedQuality       :ArchitecturalQuality_maintainability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_usability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_discoverability ;
          gen:wikiEntry            "<p><strong>Extensibility</strong></p>\n<p>Extensibility is a software design principle defined as a system’s ability to have new functionality extended, in which the system’s internal structure and data flow are minimally or not affected, particularly that recompiling or changing the original source code is unnecessary when changing a system’s behavior, either by the creator or other programmers.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Extensibility\">https://en.wikipedia.org/wiki/Extensibility</a></li>\n</ul>" , "<p><strong>Extensibility</strong></p>\n<p>Extensibility is a software design principle defined as a system&rsquo;s ability to have new functionality extended, in which the system&rsquo;s internal structure and data flow are minimally or not affected, particularly that recompiling or changing the original source code is unnecessary when changing a system&rsquo;s behavior, either by the creator or other programmers.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Extensibility\">https://en.wikipedia.org/wiki/Extensibility</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :Project_secopatterns
          a           cont:Project ;
          rdfs:label  "secopatterns" .
  
  :SoftwareEngineeringMethod_tailored_system_integration
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Tailored System Integration" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_complexity ;
          gen:hasMethodPhase            :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole             :Role_system_integrator , :Role_technical_project_manager ;
          gen:hasMethodTag              :AuthorTag_integration ;
          gen:wikiEntry                 "To master the complexity of a project it is important to tailor the process. According to the  4 questions to analyze integration risks the macro phase model for the project will be defined." .
  
  :ArchitecturalQuality_trustability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Trustability" , "trustability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_resource_pooling , :DesignTactic_authentication , :DesignPattern_secure_channels , :DesignPattern_connection_limitation , :DesignTactic_authorization , :DesignPattern_private_key_encryption , :DesignPattern_identity_credentials , :DesignPattern_packet_filtering , :DesignPattern_access_control , :DesignPattern_federated_identity_pattern , :DesignTactic_encryption , :DesignPattern_gatekeeper_pattern , :DesignPattern_valet_key_pattern , :DesignPattern_minimize_human_intervention , :DesignPattern_public_key_encryption , :DesignTactic_limit_access , :DesignPattern_known_partners , :DesignPattern_demilitarized_zone__dmz_ , :DesignPattern_information_obscurity ;
          gen:relatedQuality       :ArchitecturalQuality_security , :ArchitecturalQuality_verifiability ;
          gen:wikiEntry            "[Yoshiharu Ishikawa. et al. 2013]Trustability value can also be regarded as the probability that the house is the same as what it claims." ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_recovery
          a           cont:AuthorTag ;
          rdfs:label  "recovery" .
  
  :Domain_ar-104__stepwise_querying
          a           spec:Domain ;
          rdfs:label  "ar-104: stepwise querying" .
  
  :DesignPattern_restart
          a                              gen:DesignPattern ;
          rdfs:label                     "Restart" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_safety , :ArchitecturalQuality_robustness , :ArchitecturalQuality_durability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_consistency , :ArchitecturalQuality_resilience , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_stability , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_dependability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_viability ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_isolation ;
          gen:wikiEntry                  "When the error is really bad and none of the other mechanisms to recover from the error are appropriate and Escalation has resulted the Restart Pattern must be implemented. When recovery from the error is not possible execution can resume by restarting the program from the beginning. The following Table illustrates the different restart levels [Hanmer 2007]pp 151-153 Phase 1 Software initialization only Phase 2 Hardware initialization only Phase 3 Software and Hardware initialization Phase 4 Only initiated manually. Software and Hardware initialization. All application state is lost.  Relations Error Handling [Hanmer 2007]Error Recovery Patterns pp 151-153. Isolation [Hanmer 2007]Error Recovery Patterns pp 151-153." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_ad-001_1__ecosystem_components
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-001.1: Ecosystem Components" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\" data-mce-style=\"font-size: small;\"><strong style=\"font-size: small;\" data-mce-style=\"font-size: small;\">Smart Cities Information Ecosystem Components</strong>&nbsp;</p><p style=\"font-size: small;\" data-mce-style=\"font-size: small;\">The following diagram shows the component view of the system [<a href=\"javascript:saFiddle();\" data-mce-href=\"#a916552024\" target=\"_blank\">Ecosystem Whitepaper</a>]:</p><p style=\"font-size: small; text-align: center;\" data-mce-style=\"font-size: small; text-align: center;\"><img style=\"display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernES/system_components.png\" alt=\"\" width=\"650\" height=\"349\" data-mce-src=\"p/AspernES/system_components.png\" data-mce-style=\"display: block; margin-left: auto; margin-right: auto; font-size: small;\">Overview of the functional building blocks of the smart city information ecosystem platform.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">API Lifecycle Management</span></h2><p>API management is the process of publishing, promoting and overseeing application programming interfaces (APIs) in a secure, scalable environment. It also includes the creation of end user support resources that define and document the API.&nbsp;The goal of API management is to allow an organization that publishes an API to monitor the interface’s lifecycle and make sure the needs of developers and applications using the API are being met.&nbsp;</p><p><strong>API Store</strong></p><p>An API store secures scales and controls access to APIs to provide a resilient and flexible API runtime infrastructure. It also empowers companies with the insight to change and grow their business in the new web API economy with robust business analytics by rapidly addressing business demands with the creation of new APIs from existing business assets or simple configuration-based cloud services integration. In the end, this nurtures innovation by building a community that attracts developers, entrepreneurs, and partners who will rapidly build new applications and extend the value of your core enterprise assets.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Governance Layer</span></h2><p>The ecosystem&nbsp;is responsible for governing the API lifecycle (publish, deprecate, retire) and track the consumer analytics per API, per API version, per tiers, and per consumer. This also means that platform takes over the role of policy enforcement, for example through monitoring activities for service level agreement (SLA) compliance. Technically, the ecosystem&nbsp;is able to enforce rate limiting and throttling policies for APIs on a consumer-level.</p><p>With the platform governance facilities, it is possible for the platform operator and the data publisher to define, approve, and communicate data strategies, policies, standards, architecture, procedures, and metrics. It also enables data regulators to track and enforce conformance to data policies, standards, architecture, and procedures. Furthermore, data brokers and data merchandisers can sponsor, track, and oversee the delivery of data management projects and services. The developer can use governance tools to manage and resolve data related issues – in the long run contributing to a better understanding of the data and promoting the value of data assets.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Exploration of Data Sources and Business Opportunities</span></h2><p>In order to create a community of developers wishing to exploit the data available in a city, the API Store acts as a public database of available APIs. It provides a platform for developer interactions, where developers can browse through all APIs available in the API database. The browsing experience could be improved by providing a graphical experience similar to the Android Marketplace.</p><p>The database allows developers to browse and search APIs by provider, tags, or name and browse API documentation, download tutorials for easy consumption. Depending on the API and the type of data, it may also be possible to try APIs directly on the front-end. The interaction with the other developers is facilitated by allowing commenting and rating APIs.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Publishing Services</span></h2><p>The first step in driving API usage is related to designing an API and publishing it for consumption in a publicly accessible platform. Together with the API and the service implementation of the API, the publisher also attaches documentation (files, external URLs), and defines the security and privacy policy associated with the API.</p><p>By managing API versions and deployment status, lifecycle of the API (publish, deprecate, and retire) can be governed by the publisher. The publisher also has the possibility to change the privacy requirements, after an API is published which may result in revoking access tokens from developers, who may already be using the API.</p><p>Upon successful deployment, the publisher is able to track consumer analytics per API, per API version, and per consumer. This gives some insights into the reality of how an API is used and may support decision processes in adapting or evolving the API. Such functionality may be provided in the form of alerting or real-time dashboards for publishers.</p><p>Developers who wish to use the API manager and develop new applications on top of this infrastructure must sign-up for API consumption. All developers in the community can communicate with each other through shared forums and comments they post for rating the available APIs.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Community Management</span></h2><p>Simple and frictionless access for developers is the key to the success of any API management system. Minimizing the time it takes for a new developer to complete a transaction with the API is crucial. API Management generates great documentation and provides an interactive console that rapidly increases developer success. In order to accelerate API adoption, it is important to engage business partners and get developers up and running quickly with the API Management platform.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Monitoring Layer</span></h2><p>At runtime, whenever applications demand for data through the ecosystem, the API manager is responsible for end-user authentication and developer/app authentication. The service may only be invoked, if all the security policies are satisfied and the required credentials are provided. Therefore, the platform takes care of developer and end-user authentication, access control to service invocation and enforcement of API-specific privacy settings whenever required. For example, when anonymization must be performed before the data can be delivered to the developer, such tasks can be performed by the platform or the service implementation of the API itself.&nbsp;All the interactions between the different stakeholders (users, application) through the platform are monitored and tracked by a monitoring agent, which can store the data for different analytic functions.</p><ul><li>Monitoring Agent is the component that tracks and records the data about all transactions.</li><li>Error Handler is evoked, whenever the system detects that some kind of problems occurred at runtime.</li><li>An Analytics component takes care analyzing the monitored data and creating different reports for different stakeholders (developers, publishers etc).</li><li>The Dashboard displays different statistics and reports generated by the analytics component and makes these available through a browser.&nbsp;</li></ul><h2>&nbsp;</h2><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Pricing and Billing Services</span></h2><p>Depending on the business models of the individual apps and services, the ecosystem supports different pricing and billing models. Supported by the monitoring services and payment services, pricing and billing mechanisms implemented in the ecosystem do not necessarily have to be fixed building blocks of the platform. Pricing of data consumption and management of associated legal contracts together with service level agreements are key aspects of these services.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Workflow Engine</span></h2><p>Whenever applications use more than one API and wish to monitor and control the state of activities, a platform-owned workflow engine can be used to execute complex tasks. Pre-defined workflows for “standard” and repetitive tasks can be shared with the community and thereby increase community participation and foster citizen involvement in a smart city.&nbsp;</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Third-party Managed Services</span></h2><p>Not all services need to be managed by the platform and ideally the data owners have their own data access services, which are not managed by the information ecosystem- but rather by third parties. Such services can be registered to the platform and can gain added benefit of publicity, invocation services, community management, pricing and billing and lifecycle management of the associated APIs.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Marketplace for Algorithms and Widgets</span></h2><p>The ecosystem also manages a list of reusable component library, which is accessible to developers. Consumers of APIs can add new algorithms, e.g. machine learning or data mining services to the platform and make these available to potential new applications. Visualization components in the form of widgets or chart libraries can also be shared through the platform.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Encryption, Anonymization and other Privacy Services</span></h2><p>To address the privacy concerns of the data owners, and end-users the platform provides a set of standard services for encryption of data, anonymization, aggregation and de-identification of data.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Metadata Management and Data Discovery</span></h2><p>Through automated data discovery and profiling services, it is also possible to find hidden data quality problems, wherever they exist. It is part of the governance structure of the platform to manage the meta-data and establish an authoritative view of data consumer, data sources, and the overall ecosystem. Metadata management also increases visibility and provides tools to manage change effectively in data integration. A data glossary defines standard the data vocabulary to ensure clear communication about available data sources and their potential integration with other sources.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Security and Privacy Management</span></h2><p>On the technical level, security measures must be implemented to ensure that the access to data is granted only to qualified personnel and applications. This means, the platform must apply security policies to APIs (authentication, authorization) and associate API available to system-defined service tiers through API keys. A key functionality is to be able to restrict API Access tokens to domains/IPs and the ability to revoke access tokens.</p><p>A privacy dashboard provides a single-screen view of the entire privacy management program. It is possible to stay on top of ongoing initiatives, access reports, get alerts and updates - and then drill down for more&nbsp;detail.</p><p>Regulations and controls library empowers the ecosystem in allowing it to identify potential issues and provide clear recommendations to address&nbsp;them. Services for monitoring, privacy management and identity management work together, aggregating information that makes it easy to discover potential problems and makes the resolution much quicker than is possible with disjointed&nbsp;solutions.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Merchandising Services</span></h2><p>Data merchandisers can use the built in services of the platform to display APIs and data services to highlight their features and benefits. The purpose of such visual merchandising is to attract, engage, and motivate the consumers towards making a purchase. In general, all marketing and sales stimulation activities around PoS (point of sale) design, creation, promotion, care and training of the sales staff are covered by merchandising services. By offering different licensing models and service packages, not only the consumption but also the data acquisition part can be commercialized.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Transparency and Regulatory Board Management</span></h2><p>The platform also provides specialized services for data and process auditing - systematically discovering how data is collected and handled throughout the ecosystem. This also includes compliance review - comprehensive online review of enterprise data privacy management practices against applicable policies and&nbsp;regulations and gap analysis - quickly see where and why the current practices do not align with regulations and policies, and the path of&nbsp;remediation.</p><h2><span style=\"font-size: 10pt;\" data-mce-style=\"font-size: 10pt;\">Show cases and Demo Applications</span></h2><p>All applications consuming the data through the platform are also part of the smart city information ecosystem (e.g., the benchmarks and grid planning applications).</p>" , "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Smart Cities Information Ecosystem Components</strong>&nbsp;</p>\n<p style=\"font-size: small;\">The following diagram shows the component view of the system [<a href=\"#a916552024\">Ecosystem Whitepaper</a>]:</p>\n<p style=\"font-size: small; text-align: center;\"><img style=\"display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernES/system_components.png\" alt=\"\" width=\"650\" height=\"349\" />Overview of the functional building blocks of the smart city information ecosystem platform.</p>\n<h2><span style=\"font-size: 10pt;\">API Lifecycle Management</span></h2>\n<p>API management is the process of publishing, promoting and overseeing application programming interfaces (APIs) in a secure, scalable environment. It also includes the creation of end user support resources that define and document the API.&nbsp;The goal of API management is to allow an organization that publishes an API to monitor the interface&rsquo;s lifecycle and make sure the needs of developers and applications using the API are being met.&nbsp;</p>\n<p><strong>API Store</strong></p>\n<p>An API store secures scales and controls access to APIs to provide a resilient and flexible API runtime infrastructure. It also empowers companies with the insight to change and grow their business in the new web API economy with robust business analytics by rapidly addressing business demands with the creation of new APIs from existing business assets or simple configuration-based cloud services integration. In the end, this nurtures innovation by building a community that attracts developers, entrepreneurs, and partners who will rapidly build new applications and extend the value of your core enterprise assets.</p>\n<h2><span style=\"font-size: 10pt;\">Governance Layer</span></h2>\n<p>The ecosystem&nbsp;is responsible for governing the API lifecycle (publish, deprecate, retire) and track the consumer analytics per API, per API version, per tiers, and per consumer. This also means that platform takes over the role of policy enforcement, for example through monitoring activities for service level agreement (SLA) compliance. Technically, the ecosystem&nbsp;is able to enforce rate limiting and throttling policies for APIs on a consumer-level.</p>\n<p>With the platform governance facilities, it is possible for the platform operator and the data publisher to define, approve, and communicate data strategies, policies, standards, architecture, procedures, and metrics. It also enables data regulators to track and enforce conformance to data policies, standards, architecture, and procedures. Furthermore, data brokers and data merchandisers can sponsor, track, and oversee the delivery of data management projects and services. The developer can use governance tools to manage and resolve data related issues &ndash; in the long run contributing to a better understanding of the data and promoting the value of data assets.</p>\n<h2><span style=\"font-size: 10pt;\">Exploration of Data Sources and Business Opportunities</span></h2>\n<p>In order to create a community of developers wishing to exploit the data available in a city, the API Store acts as a public database of available APIs. It provides a platform for developer interactions, where developers can browse through all APIs available in the API database. The browsing experience could be improved by providing a graphical experience similar to the Android Marketplace.</p>\n<p>The database allows developers to browse and search APIs by provider, tags, or name and browse API documentation, download tutorials for easy consumption. Depending on the API and the type of data, it may also be possible to try APIs directly on the front-end. The interaction with the other developers is facilitated by allowing commenting and rating APIs.</p>\n<h2><span style=\"font-size: 10pt;\">Publishing Services</span></h2>\n<p>The first step in driving API usage is related to designing an API and publishing it for consumption in a publicly accessible platform. Together with the API and the service implementation of the API, the publisher also attaches documentation (files, external URLs), and defines the security and privacy policy associated with the API.</p>\n<p>By managing API versions and deployment status, lifecycle of the API (publish, deprecate, and retire) can be governed by the publisher. The publisher also has the possibility to change the privacy requirements, after an API is published which may result in revoking access tokens from developers, who may already be using the API.</p>\n<p>Upon successful deployment, the publisher is able to track consumer analytics per API, per API version, and per consumer. This gives some insights into the reality of how an API is used and may support decision processes in adapting or evolving the API. Such functionality may be provided in the form of alerting or real-time dashboards for publishers.</p>\n<p>Developers who wish to use the API manager and develop new applications on top of this infrastructure must sign-up for API consumption. All developers in the community can communicate with each other through shared forums and comments they post for rating the available APIs.</p>\n<h2><span style=\"font-size: 10pt;\">Community Management</span></h2>\n<p>Simple and frictionless access for developers is the key to the success of any API management system. Minimizing the time it takes for a new developer to complete a transaction with the API is crucial. API Management generates great documentation and provides an interactive console that rapidly increases developer success. In order to accelerate API adoption, it is important to engage business partners and get developers up and running quickly with the API Management platform.</p>\n<h2><span style=\"font-size: 10pt;\">Monitoring Layer</span></h2>\n<p>At runtime, whenever applications demand for data through the ecosystem, the API manager is responsible for end-user authentication and developer/app authentication. The service may only be invoked, if all the security policies are satisfied and the required credentials are provided. Therefore, the platform takes care of developer and end-user authentication, access control to service invocation and enforcement of API-specific privacy settings whenever required. For example, when anonymization must be performed before the data can be delivered to the developer, such tasks can be performed by the platform or the service implementation of the API itself.&nbsp;All the interactions between the different stakeholders (users, application) through the platform are monitored and tracked by a monitoring agent, which can store the data for different analytic functions.</p>\n<ul>\n<li>Monitoring Agent is the component that tracks and records the data about all transactions.</li>\n<li>Error Handler is evoked, whenever the system detects that some kind of problems occurred at runtime.</li>\n<li>An Analytics component takes care analyzing the monitored data and creating different reports for different stakeholders (developers, publishers etc).</li>\n<li>The Dashboard displays different statistics and reports generated by the analytics component and makes these available through a browser.&nbsp;</li>\n</ul>\n<h2>&nbsp;</h2>\n<h2><span style=\"font-size: 10pt;\">Pricing and Billing Services</span></h2>\n<p>Depending on the business models of the individual apps and services, the ecosystem supports different pricing and billing models. Supported by the monitoring services and payment services, pricing and billing mechanisms implemented in the ecosystem do not necessarily have to be fixed building blocks of the platform. Pricing of data consumption and management of associated legal contracts together with service level agreements are key aspects of these services.</p>\n<h2><span style=\"font-size: 10pt;\">Workflow Engine</span></h2>\n<p>Whenever applications use more than one API and wish to monitor and control the state of activities, a platform-owned workflow engine can be used to execute complex tasks. Pre-defined workflows for &ldquo;standard&rdquo; and repetitive tasks can be shared with the community and thereby increase community participation and foster citizen involvement in a smart city.&nbsp;</p>\n<h2><span style=\"font-size: 10pt;\">Third-party Managed Services</span></h2>\n<p>Not all services need to be managed by the platform and ideally the data owners have their own data access services, which are not managed by the information ecosystem- but rather by third parties. Such services can be registered to the platform and can gain added benefit of publicity, invocation services, community management, pricing and billing and lifecycle management of the associated APIs.</p>\n<h2><span style=\"font-size: 10pt;\">Marketplace for Algorithms and Widgets</span></h2>\n<p>The ecosystem also manages a list of reusable component library, which is accessible to developers. Consumers of APIs can add new algorithms, e.g. machine learning or data mining services to the platform and make these available to potential new applications. Visualization components in the form of widgets or chart libraries can also be shared through the platform.</p>\n<h2><span style=\"font-size: 10pt;\">Encryption, Anonymization and other Privacy Services</span></h2>\n<p>To address the privacy concerns of the data owners, and end-users the platform provides a set of standard services for encryption of data, anonymization, aggregation and de-identification of data.</p>\n<h2><span style=\"font-size: 10pt;\">Metadata Management and Data Discovery</span></h2>\n<p>Through automated data discovery and profiling services, it is also possible to find hidden data quality problems, wherever they exist. It is part of the governance structure of the platform to manage the meta-data and establish an authoritative view of data consumer, data sources, and the overall ecosystem. Metadata management also increases visibility and provides tools to manage change effectively in data integration. A data glossary defines standard the data vocabulary to ensure clear communication about available data sources and their potential integration with other sources.</p>\n<h2><span style=\"font-size: 10pt;\">Security and Privacy Management</span></h2>\n<p>On the technical level, security measures must be implemented to ensure that the access to data is granted only to qualified personnel and applications. This means, the platform must apply security policies to APIs (authentication, authorization) and associate API available to system-defined service tiers through API keys. A key functionality is to be able to restrict API Access tokens to domains/IPs and the ability to revoke access tokens.</p>\n<p>A privacy dashboard provides a single-screen view of the entire privacy management program. It is possible to stay on top of ongoing initiatives, access reports, get alerts and updates - and then drill down for more&nbsp;detail.</p>\n<p>Regulations and controls library empowers the ecosystem in allowing it to identify potential issues and provide clear recommendations to address&nbsp;them. Services for monitoring, privacy management and identity management work together, aggregating information that makes it easy to discover potential problems and makes the resolution much quicker than is possible with disjointed&nbsp;solutions.</p>\n<h2><span style=\"font-size: 10pt;\">Merchandising Services</span></h2>\n<p>Data merchandisers can use the built in services of the platform to display APIs and data services to highlight their features and benefits. The purpose of such visual merchandising is to attract, engage, and motivate the consumers towards making a purchase. In general, all marketing and sales stimulation activities around PoS (point of sale) design, creation, promotion, care and training of the sales staff are covered by merchandising services. By offering different licensing models and service packages, not only the consumption but also the data acquisition part can be commercialized.</p>\n<h2><span style=\"font-size: 10pt;\">Transparency and Regulatory Board Management</span></h2>\n<p>The platform also provides specialized services for data and process auditing - systematically discovering how data is collected and handled throughout the ecosystem. This also includes compliance review - comprehensive online review of enterprise data privacy management practices against applicable policies and&nbsp;regulations and gap analysis - quickly see where and why the current practices do not align with regulations and policies, and the path of&nbsp;remediation.</p>\n<h2><span style=\"font-size: 10pt;\">Show cases and Demo Applications</span></h2>\n<p>All applications consuming the data through the platform are also part of the smart city information ecosystem (e.g., the benchmarks and grid planning applications).</p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-007__policy_enforcement , :Domain_ar-005__security_and_privacy_policies , :Domain_ar-013__data_access_control , :Domain_ar-014__api_access_control , :Domain_ar-023__integrated_services , :Domain_ar-003__traffic_monitoring , :Domain_ar-021__privacy_monitoring , :Domain_ar-018__privacy_services , :Domain_ar-019__metadata_management , :Domain_ar-011__api_governance , :Domain_ar-022__regulations_and_controls_library , :Domain_ar-024__data_and_process_auditing , :Domain_ar-010__policy_publishing , :Domain_ar-017__reusable_components ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_manageability , :ArchitecturalQuality_composability , :ArchitecturalQuality_auditability , :ArchitecturalQuality_testability , :ArchitecturalQuality_openness , :ArchitecturalQuality_reusability , :ArchitecturalQuality_security , :ArchitecturalQuality_privacy , :ArchitecturalQuality_accountability ;
          spec:useDecisionTactic          :DesignTactic_policy_publishing , :DesignTactic_monitoring , :DesignTactic_auditing , :DesignTactic_loose_coupling , :DesignTactic_policy_enforcement , :DesignTactic_api_protection , :DesignTactic_componentization , :DesignTactic_verification , :DesignTactic_service_orientation , :DesignTactic_privacy_protection , :DesignTactic_access_control , :DesignTactic_metadata .
  
  :DesignPattern_access_control
          a                              gen:DesignPattern ;
          rdfs:label                     "Access Control" ;
          gen:hasKnowledgeAuthor         :Author_edwin_willegger , :Author_ct_sad-sra , :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_verifiability , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_accountability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_immunity , :ArchitecturalQuality_defensibility , :ArchitecturalQuality_provability , :ArchitecturalQuality_trustability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_security , :ArchitecturalQuality_consistency , :ArchitecturalQuality_auditability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_accessibility ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_authenticity ;
          gen:isAlternativeOf            :DesignTactic_bridge , :DesignTactic_limit_access , :DesignTactic_authorization , :DesignTactic_authentication , :DesignTactic_abstraction , :DesignTactic_auditing ;
          gen:wikiEntry                  "<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Factory method pattern</h1>\n\t\t\t\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\">From Wikipedia, the free encyclopedia</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#mw-head\" target=\"_blank\">navigation</a>, \t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#p-search\" target=\"_blank\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"thumb tright\">\n<div class=\"thumbinner\" style=\"width:302px;\"><a href=\"https://en.wikipedia.org/wiki/File:FactoryMethod.svg\" class=\"image\" target=\"_blank\"><img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/FactoryMethod.svg/300px-FactoryMethod.svg.png\" width=\"300\" height=\"177\" class=\"thumbimage\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a3/FactoryMethod.svg/450px-FactoryMethod.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a3/FactoryMethod.svg/600px-FactoryMethod.svg.png 2x\" data-file-width=\"349\" data-file-height=\"206\"></a>\n<div class=\"thumbcaption\">\n<div class=\"magnify\"><a href=\"https://en.wikipedia.org/wiki/File:FactoryMethod.svg\" class=\"internal\" title=\"Enlarge\" target=\"_blank\"></a></div>\nFactory method pattern in <a href=\"https://en.wikipedia.org/wiki/Unified_Modeling_Language\" title=\"Unified Modeling Language\" target=\"_blank\">UML</a></div>\n</div>\n</div>\n<p>In <a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\" target=\"_blank\">class-based programming</a>, the <b>factory method pattern</b> is a <a href=\"https://en.wikipedia.org/wiki/Creational_pattern\" title=\"Creational pattern\" target=\"_blank\">creational pattern</a> which uses factory methods to deal with the problem of <a href=\"https://en.wikipedia.org/wiki/Object_creation\" title=\"Object creation\" class=\"mw-redirect\" target=\"_blank\">creating objects</a> without specifying the exact <a href=\"https://en.wikipedia.org/wiki/Class_(computer_programming)\" title=\"Class (computer programming)\" target=\"_blank\">class</a> of object that will be created. This is done by creating objects via calling a factory method—either specified in an interface and implemented by child classes, or implemented in a base class and optionally overridden by derived classes—rather than by calling a <a href=\"https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)\" title=\"Constructor (object-oriented programming)\" target=\"_blank\">constructor</a>.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#\" id=\"togglelink\" target=\"_blank\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Definition\" target=\"_blank\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Definition</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Example_implementations\" target=\"_blank\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Example implementations</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Java\" target=\"_blank\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">Java</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#PHP\" target=\"_blank\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">PHP</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#C.23\" target=\"_blank\"><span class=\"tocnumber\">2.3</span> <span class=\"toctext\">C#</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Limitations\" target=\"_blank\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">Limitations</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#Uses\" target=\"_blank\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">Uses</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#See_also\" target=\"_blank\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-9\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#References\" target=\"_blank\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-10\"><a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern#External_links\" target=\"_blank\"><span class=\"tocnumber\">7</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Definition\">Definition</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"https://en.wikipedia.org/w/index.php?title=Factory_method_pattern&amp;action=edit&amp;section=1\" title=\"Edit section: Definition\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The factory method pattern should <i>not</i> be co</p></div></div>" , "[Wikipedia Access Controll 2014] Access control is the selective restriction of access to a place or other resource. The act of accessing may mean consuming entering or using. Permission to access a resource is called authorization. Access control is referred to exerting control over who can interact with a resource. This usually follows an access control model. The three most widely recognized models are Discretionary Access Control (DAC) Mandatory Access Control (MAC) and Role Based Access Control (RBAC)." ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_big_data .
  
  :SoftwareEngineeringMethod_software_architecture_recovery
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Software Architecture Recovery" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_system_architect ;
          gen:hasMethodTag         :AuthorTag_software , :AuthorTag_software_analysis , :AuthorTag_logical_architecture , :AuthorTag_architecture ;
          gen:wikiEntry            "Sustainable  software  architecture  is  essential  for  the  success of  your  projects.  In  case  of  architectural  drift,  or  missing  or obsolete  documentation,  a  software  architecture  recovery helps  rediscovering  the  real  architecture  and  design  of  your existing  software  applications  and  products.  The  recovered and documented architecture can then be assessed or used for further development." .
  
  :DesignPattern_similarity_detection
          a                              gen:DesignPattern ;
          rdfs:label                     "Similarity Detection" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_viability , :ArchitecturalQuality_utility , :ArchitecturalQuality_resilience , :ArchitecturalQuality_integrity , :ArchitecturalQuality_robustness , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_availability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_dependability , :ArchitecturalQuality_safety ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "[Zaka 2009] Metrics to measure similarity between data items are used to analyze whether values are plausible under potential different parameter configuration (e.g. configuration of software components or algorithms). After few assuptions and researches the perceived similarity can be inversely associated with the distance in some suitable feature space. In most of the cases it is considered to be a metric space. Many psychological theories assume that closer objects are more similar than the objects that are far apart. Similarity measure (s) can be derived from the distance measure (d) using s  1  d. The most common form of dissimilarity calculation refers to distance calculation in metric space" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_arch-3__replace_atl_server
          a                          spec:Requirement ;
          rdfs:label                 "ARCH-3: Replace ATL Server" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Replace ATL Server\n  with state-of-the-art Web Service</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">The obsolete Web Service technology (ATL Server) is getting hard to\n  maintain. This is also a blocker for 64 bit migration. It would be good to\n  look for state-of-the-art RESTful services as a replacement</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Architecture / Development / Test" ;
          spec:requirementPurpose    "Web interfaces" .
  
  :Requirement_ar-011__api_governance
          a                          spec:Requirement ;
          rdfs:label                 "AR-011: API Governance" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "<div style=\"position: relative; font-size: small;\"><span style=\"font-size: small;\">The system shall provide means for API governance by the publisher, including&nbsp;</span></div>\n<div style=\"position: relative; font-size: small;\">\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">Version, deployment, and life-cycle management (i.e.,&nbsp;</span><span style=\"font-size: small;\">publish, deprecate, and retire),</span></li>\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">Changing the privacy requirements, after an API is published,</span></li>\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">Revoking access tokens from developers, who may already be using the API.</span></li>\n</ul>\n</div>" ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Governance" ;
          spec:requirementPurpose    "API Governance" .
  
  :DesignPattern_layered_architecture
          a                              gen:DesignPattern ;
          rdfs:label                     "Layered Architecture" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernbm , :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_scalability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_usability , :ArchitecturalQuality_security , :ArchitecturalQuality_stability , :ArchitecturalQuality_performance , :ArchitecturalQuality_operability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_functionality , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_reusability , :ArchitecturalQuality_testability ;
          gen:isAlternativeOf            :DesignTactic_loose_coupling , :DesignTactic_encapsulation , :DesignTactic_abstraction , :DesignTactic_layering , :DesignTactic_isolation , :DesignTactic_separation_of_concerns , :DesignTactic_high_cohesion ;
          gen:wikiEntry                  "<h1 class=\"title\">Layered Application&nbsp;Architecture</h1><div id=\"mainSection\"><div id=\"mainBody\"><p>For more details of the topics covered in this guide, see <a target=\"_blank\" href=\"javascript:saFiddle();\">Contents of the Guide</a>.</p><h1 class=\"heading\">Contents</h1><ul><li><a target=\"_blank\" href=\"javascript:closePopup(this);\">Overview</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Layers\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Layers\">Logical Layered Design</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#ServicesLayers\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#ServicesLayers\">Services and Layers</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#DesignSteps\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#DesignSteps\">Design Steps for a Layered Structure</a></li></ul><a id=\"Overview\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h1 class=\"heading\">Overview</h1><p>This chapter discusses the overall structure for applications in terms of the logical grouping of components into separate layers that communicate with each other and with other clients and applications. Layers are concerned with the logical division of components and functionality, and do not take into account the physical location of components. Layers can be located on different tiers, or they may reside on the same tier. In this chapter, you will learn how to divide your applications into separate logical parts, how to choose an appropriate functional layout for your applications, and how applications can support multiple client types. You will also learn about services that you can use to expose logic in your layers.</p><div class=\"alert\"><div class=\"contentTableWrapper\"><table class=\"mce-item-table\"><tbody><tr><th style=\"text-align: left;\" data-mce-style=\"text-align: left;\"><img id=\"note\" class=\"cl_IC101471\" title=\"Ee658109.note(en-us,PandP.10).gif\" src=\"https://i-msdn.sec.s-msft.com/areas/global/content/clear.gif\" alt=\"Ee658109.note(en-us,PandP.10).gif\" data-mce-src=\"https://i-msdn.sec.s-msft.com/areas/global/content/clear.gif\">Note:</th></tr><tr><td>It is important to understand the distinction between layers and tiers. <em>Layers</em> describe the logical groupings of the functionality and components in an application; whereas <em>tiers</em> describe the physical distribution of the functionality and components on separate servers, computers, networks, or remote locations. Although both layers and tiers use the same set of names (presentation, business, services, and data), remember that only tiers imply a physical separation. It is quite common to locate more than one layer on the same physical machine (the same tier). You can think of the term tier as referring to physical distribution patterns such as two-tier, three-tier, and <em>n</em>-tier. For more information about physical tiers and deployment, see Chapter 19 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658120.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658120.aspx\">Physical Tiers and Deployment</a>.\"</td></tr></tbody></table></div><p>&nbsp;</p></div><a id=\"Layers\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h1 class=\"heading\">Logical Layered Design</h1><p>Irrespective of the type of application that you are designing, and whether it has a user interface or it is a services application that only exposes services (not to be confused with services layer of an application), you can decompose the design into logical groupings of software components. These logical groupings are called layers. Layers help to differentiate between the different kinds of tasks performed by the components, making it easier to create a design that supports reusability of components. Each logical layer contains a number of discrete component types grouped into sub layers, with each sub layer performing a specific type of task.</p><p>By identifying the generic types of components that exist in most solutions, you can construct a meaningful map of an application or service, and then use this map as a blueprint for your design. Dividing an application into separate layers that have distinct roles and functionalities helps you to maximize maintainability of the code, optimize the way that the application works when deployed in different ways, and provides a clear delineation between locations where certain technology or design decisions must be made.</p><a id=\"PresentationBusinessDataServices\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Presentation, Business, and Data Layers</h2><p>At the highest and most abstract level, the logical architecture view of any system can be considered as a set of cooperating components grouped into layers. Figure 1 shows a simplified, high level representation of these layers and their relationships with users, other applications that call services implemented within the application’s business layer, data sources such as relational databases or Web services that provide access to data, and external or remote services that are consumed by the application.</p><p><img id=\"a4691b48-1b2c-4102-984d-4fd1233f369d\" title=\"Ee658109.a4691b48-1b2c-4102-984d-4fd1233f369d(en-us,PandP.10).png\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC351011.png\" alt=\"Ee658109.a4691b48-1b2c-4102-984d-4fd1233f369d(en-us,PandP.10).png\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC351011.png\"></p><p><strong>Figure 1</strong></p><div class=\"caption\">The logical architecture view of a layered system</div><p>These layers may be located on the same physical tier, or may be located on separate tiers. If they are located on separate tiers, or separated by physical boundaries, your design must accommodate this. For more information, see <a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#DesignSteps\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#DesignSteps\">Design Steps for a Layered Structure</a> later in this chapter.</p><p>As shown in Figure 1, an application can consist of a number of basic layers. The common three-layer design shown in Figure 1 consists of the following layers :</p><ul><li><strong>Presentation layer</strong>. This layer contains the user oriented functionality responsible for managing user interaction with the system, and generally consists of components that provide a common bridge into the core business logic encapsulated in the business layer. For more information about designing the presentation layer, see Chapter 6 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658081.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658081.aspx\">Presentation Layer Guidelines</a>.\" For more information about designing presentation components, see Chapter 11 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658100.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658100.aspx\">Designing Presentation Components</a>.\"</li><li><strong>Business layer</strong>. This layer implements the core functionality of the system, and encapsulates the relevant business logic. It generally consists of components, some of which may expose service interfaces that other callers can use. For more information about designing the business layer, see Chapter 7 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658103.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658103.aspx\">Business Layer Guidelines</a>.\" For more information about designing business components, see Chapter 12 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658102.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658102.aspx\">Designing Business Components</a>.\"</li><li><strong>Data layer</strong>. This layer provides access to data hosted within the boundaries of the system, and data exposed by other networked systems; perhaps accessed through services. The data layer exposes generic interfaces that the components in the business layer can consume. For more information about designing the data layer, see Chapter 8 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658127.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658127.aspx\">Data Layer Guidelines</a>.\" For more information about designing data components, see Chapter 15 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658119.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658119.aspx\">Designing Data Components</a>.\"</li></ul><a id=\"ServicesLayers\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h1 class=\"heading\">Services and Layers</h1><p>From a high level perspective, a service-based solution can be seen as being composed of multiple services, each communicating with the others by passing messages. Conceptually, the services can be seen as components of the overall solution. However, internally, each service is made up of software components, just like any other application, and these components can be logically grouped into presentation, business, and data layers. Other applications can make use of the services without being aware of the way they are implemented. The layered design principles discussed in the previous section apply equally to service-based solutions.</p><a id=\"ServicesLayer\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Services Layer</h2><p>When an application must provide services to other applications, as well as implementing features to support clients directly, a common approach is to use a services layer that exposes the business functionality of the application, as shown in Figure 2. The services layer effectively provides an alternative view that allows clients to use a different channel to access the application.</p><p><img id=\"4bee4a28-6791-4df2-8c8c-9a45d9afcf6a\" title=\"Ee658109.4bee4a28-6791-4df2-8c8c-9a45d9afcf6a(en-us,PandP.10).png\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC351012.png\" alt=\"Ee658109.4bee4a28-6791-4df2-8c8c-9a45d9afcf6a(en-us,PandP.10).png\" data-mce-src=\"https://i-msdn.sec.s-msft.com/dynimg/IC351012.png\"></p><p><strong>Figure 2</strong></p><div class=\"caption\">Incorporating a services layer in an application</div><p>In this scenario, users can access the application through the presentation layer, which communicates either directly with the components in the business layer; or through an application façade in the business layer if the communication methods require composition of functionality. Meanwhile, external clients and other systems can access the application and make use of its functionality by communicating with the business layer through service interfaces. This allows the application to better support multiple client types, and promotes re-use and higher level composition of functionality across applications.</p><p>In some cases, the presentation layer may communicate with the business layer through the services layer. However, this is not an absolute requirement. If the physical deployment of the application locates the presentation layer and the business layer on the same tier, they may communicate directly. For more information about designing the services layer, see Chapter 9 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658090.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658090.aspx\">Service Layer Guidelines</a>.\" For more information about communication between layers, see Chapter 18 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658118.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658118.aspx\">Communication and Messaging</a>.\"</p><a id=\"DesignSteps\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h1 class=\"heading\">Design Steps for a Layered Structure</h1><p>When starting to design an application, your first task is to focus on the highest level of abstraction and start by grouping functionality into layers. Next, you must define the public interface for each layer, which depends on the type of application you are designing. Once you have defined the layers and interfaces, you must determine how the application will be deployed. Finally, you choose the communication protocols to use for interaction between the layers and tiers of the application. Although your structure and interfaces may evolve over time, especially if you use agile development, these steps will ensure that you consider the important aspects at the start of the process. A typical series of design steps is the following:</p><ul><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step1\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step1\">Step 1 – Choose Your Layering Strategy</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step2\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step2\">Step 2 – Determine the Layers You Require</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step3\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step3\">Step 3 – Decide How to Distribute Layers and Components</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step4\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step4\">Step 4 – Determine If You Need to Collapse Layers</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step5\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step5\">Step 5 – Determine Rules for Interaction between Layers</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step6\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step6\">Step 6 – Identify Cross Cutting Concerns</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step7\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step7\">Step 7 – Define the Interfaces between Layers</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step8\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step8\">Step 8 – Choose Your Deployment Strategy</a></li><li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step9\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step9\">Step 9 – Choose Communication Protocols</a></li></ul><a id=\"Step1\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 1 – Choose Your Layering Strategy</h2><p>Layering represents the logical separation of an application’s components into groups that represent distinct roles and functionality. Using a layered approach can improve the maintainability of your application and make it easier to scale out when necessary to improve performance. There are many different ways to group related functionality into layers. However, separating an application into too few or too many layers can add unnecessary complexity; and can decrease the overall performance, maintainability, and flexibility. Determining the granularity of layering appropriate for your application is a critical first step in determining your layering strategy.</p><p>You must also consider whether you are implementing layering in order to achieve purely logical separation of functionality, or in order to potentially achieve physical separation as well. Crossing layer boundaries imposes a local performance overhead, especially for boundaries between physically remote components. However, the overall increase in the scalability and flexibility of your application can far outweigh this performance overhead. In addition, layering can make it easier to optimize the performance of individual layers without affecting adjacent layers.</p><p>In the case of logical layering, interacting application layers will be deployed on the same tier and operate within the same process, which allows you to take advantage of higher performance communication mechanisms such as direct calls through component interfaces. However, in order to maintain the advantages of logical layering and ensure flexibility for the future, you must be careful to maintain encapsulation and loose coupling between the layers.</p><p>For layers that are deployed to separate tiers (separate physical machines), communication with adjacent layers will occur over a connecting network, and you must ensure that the design you choose supports a suitable communication mechanism that takes account of communication latency and maintains loose coupling between layers.</p><p>Determining which of your application layers are likely to be deployed to separate tiers, and which are likely to be deployed to the same tier, is also an important part of your layering strategy. To maintain flexibility, always ensure that interaction between layers is loosely coupled. This allows you to take advantage of the higher performance available when layers are located on the same tier, while allowing you to deploy them to multiple tiers if and when required.</p><p>Adopting a layered approach can add some complexity, and may increase initial development time, but if implemented correctly will significantly improve the maintainability, extensibility, and flexibility of your application. You must consider the trade off of reusability and loose coupling that layers provide against their impact on performance and the increase in complexity. Carefully considering how your application is layered, and how the layers will interact with each other, will ensure a good balance between performance and flexibility. In general, the gain in flexibility and maintainability provided by a layered design far outweighs the marginal improvement in performance that you might gain from a closely coupled design that does not use layers.</p><p>For a description of the common types of layers, and guidance on deciding which layers you need, see the section \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Layers\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Layers\">Logical Layered Design</a>\" earlier in this chapter.</p><a id=\"ChoosingLayers\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a> <a id=\"Step2\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 2 – Determine the Layers You Require</h2><p>There are many different ways to group related functionality into layers. The most common approach in business applications is to separate presentation, services, business, and data access functionality into separate layers. Some applications also introduce reporting, management, or infrastructure layers.</p><p>Be careful when adding additional layers, and do not add them if they do not provide a logical grouping of related components that manifestly increases the maintainability, scalability, or flexibility of your application. For example, if your application does not expose services, a separate service layer may not be required and you may just have presentation, business, and data access layers.</p><a id=\"Step3\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 3 – Decide How to Distribute Layers and Components</h2><p>You should distribute layers and components across separate physical tiers only where this is necessary. Common reasons for implementing distributed deployment include security policies, physical constraints, shared business logic, and scalability.</p><ul><li>In Web applications, if your presentation components access your business components synchronously, consider deploying the business layer and presentation layer components on the same physical tier to maximize performance and ease operational management, unless security restrictions require a trust boundary between them.</li><li>In rich client applications, where the UI processing occurs on the desktop, you may prefer to deploy the business components in a physically separate business tier for security reasons, and to ease operational management.</li><li>Deploy business entities on the same physical tier as the code that uses them. This may mean deploying them in more than one place; for example, placing copies on a physically separated presentation tier or data tier where that logic makes use of or references the business entities. Deploy service agent components on the same tier as the code that calls the components, unless security restrictions require a trust boundary between them.</li><li>Consider deploying asynchronous business components, workflow components, and services that have similar load and I/O characteristics on a separate physical tier so that you can fine tune that infrastructure to maximize performance and scalability.</li></ul><a id=\"Step4\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 4 – Determine If You Need to Collapse Layers</h2><p>In some cases, it makes sense to collapse or relax layers. For example, an application with very limited business rules, or one that uses rules mainly for validation, might implement both the business and presentation logic in a single layer. In an application that pulls data from a Web service and displays that data, it may make sense to simply add a Web service references directly to the presentation layer and consume the Web service data directly. In this case, you are logically combining the data access and presentation layers.</p><p>These are just some examples of where it might make sense to collapse layers. However, the general rule is that you should always group functionality into layers. In some cases, one layer may act as a proxy or pass-through layer that provides encapsulation and loose coupling without providing a great deal of functionality. However, by separating that functionality, you can extend it later with little or no impact on other layers in the design.</p><a id=\"Step5\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 5 – Determine Rules for Interaction Between Layers</h2><p>When it comes to a layering strategy, you must define rules for how the layers will interact with each other. The main reasons for specifying interaction rules are to minimize dependencies and eliminate circular references. For example, if two layers each have a dependency on components in the other layer you have introduced a circular dependency. As a result, a common rule to follow is to allow only one way interaction between the layers using one of the following approaches:</p><ul><li><strong>Top-down interaction</strong>. Higher level layers can interact with layers below, but a lower level layer should never interact with layers above. This rule will help you to avoid circular dependencies between layers. You can use events to make components in higher layers aware of changes in lower layers without introducing dependencies.</li><li><strong>Strict interaction</strong>. Each layer must interact with only the layer directly below. This rule will enforce strict separation of concerns where each layer knows only about the layer directly below. The benefit of this rule is that modifications to the interface of the layer will only affect the layer directly above. Consider using this approach if you are designing an application that will be modified over time to introduce new functionality and you want to minimize the impact of those changes, or you are designing an application that may be distributed across different physical tiers.</li><li><strong>Loose interaction</strong>. Higher level layers can bypass layers to interact with lower level layers directly. This can improve performance, but will also increase dependencies. In other words, modification to a lower level layer can affect multiple layers above. Consider using this approach if you are designing an application that you know will not be distributed across physical tiers (for example, a stand-alone rich client application), or you are designing a small application where changes that affect multiple layers can be managed with minimal effort.</li></ul><a id=\"Step6\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 6 – Identify Cross Cutting Concerns</h2><p>After you define the layers, you must identify the functionality that spans layers. This functionality is often described as <em>crosscutting concerns</em>, and includes logging, caching, validation, authentication, and exception management. It is important to identify each of the crosscutting concerns in your application, and design separate components to manage these concerns where possible. This approach helps you to achieve of better reusability and maintainability.</p><p>Avoid mixing the crosscutting code with code in the components of each layer, so that the layers and their components only make calls to the crosscutting components when they must carry out an action such as logging, caching, or authentication. As the functionality must be available across layers, you must deploy crosscutting components in such a way that they are accessible to all the layers—even when the layers are located on separate physical tiers.</p><p>There are different approaches to handling crosscutting functionality, from common libraries such as the patterns &amp; practices Enterprise Library to Aspect Oriented Programming (AOP) methods where metadata is used to insert crosscutting code directly into the compiled output. For more information about crosscutting concerns, see Chapter 17 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658105.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658105.aspx\">Crosscutting Concerns</a>.\"</p><a id=\"Step7\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 7 – Define the Interfaces between Layers</h2><p>When you define the interface for a layer, the primary goal is to enforce loose coupling between layers. What this means is that a layer should not expose internal details on which another layer could depend. Instead, the interface to a layer should be designed to minimize dependencies by providing a public interface that hides details of the components within the layer. This hiding is called <em>abstraction</em>, and there are many different ways to implement it. The following design approaches can be used to define the interface to a layer:</p><ul><li><strong>Abstract interface</strong>. This can be accomplished by defining an abstract base class or code interface class that acts as a type definition for concrete classes. The type defines a common interface that all consumers of the layer use to interact with the layer. This approach also improves testability, because you can use test objects (sometimes referred to as mock objects) that implement the abstract interface.</li><li><strong>Common design type</strong>. Many design patterns define concrete object types that represent an interface into different layers. These object types provide an abstraction that hides details related to the layer. For example, the Table Data Gateway pattern defines object types that represent tables in a database and are responsible for implementing the SQL queries required to interact with the data. Consumers of the object have no knowledge of the SQL queries, or the details of how the object connects to the database and executes commands. Many design patterns are based on abstract interfaces but some are based on concrete classes instead, and most of the appropriate patterns such as Table Data Gateway are well documented in this respect. Consider using common design types if you want a fast and easy way to implement the interface to your layer, or if you are implementing a design pattern for the interface to your layer.</li><li><strong>Dependency inversion</strong>. This is a programming style where abstract interfaces are defined external to, or independent of, any layers. Instead of one layer being dependent on another, both layers depend upon common interfaces. The Dependency Injection pattern is a common implementation of dependency inversion. With dependency injection, a container defines mappings that specify how to locate components that another component may depend upon, and the container can create and inject these dependent components automatically. The dependency inversion approach provides flexibility and can help to implement a pluggable design because the dependencies are composed through configuration rather than code. It also maximizes testability because you can easily inject concrete test classes into different layers of the design.</li><li><strong>Message-based</strong>. Instead of interacting directly with components in other layers by calling methods or accessing properties of these objects, you can use message-based communication to implement interfaces and provide interaction between layers. There are several messaging solutions such as Windows Communication Foundation, Web services, and Microsoft Message Queuing that support interaction across physical and process boundaries. However, you can also combine abstract interfaces with a common message type used to define data structures for the interaction. The key difference with a message-based interface is that the interaction between layers uses a common structure that encapsulates all the details of the interaction. This structure can define operations, data schemas, fault contracts, security information, and many other structures related to communication between layers. Consider using a message-based approach if you are implementing a Web application and defining the interface between the presentation layer and business layer, you have an application layer that must support multiple client types, or you want to support interaction across physical and process boundaries. Also, consider a message-based approach if you want to formalize the interaction with a common structure, or you want to interact with a stateless interface where state information is carried with the message.</li></ul><p>To implement the interaction between the presentation layer of a Web application and the business logic layer, the recommendation is to use a message-based interface. If the business layer does not maintain state between calls (in other words, each call between the presentation layer and business layer represents a new context), you can pass context information along with the request and provide a common model for exception and error handling in the presentation layer.</p><a id=\"Step8\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 8 – Choose Your Deployment Strategy</h2><p>There are several common patterns that represent application deployment structures found in most solutions. When it comes to determining the best deployment solution for your application, it helps to first identify the common patterns. Once you have a good understanding of the different patterns, you then consider scenarios, requirements, and security constraints to choose the most appropriate pattern or patterns. For more information on deployment patterns, see Chapter 19 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658120.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658120.aspx\">Physical Tiers and Deployment</a>.\"</p><a id=\"Step9\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\"> </a><h2 class=\"subheading\">Step 9 – Choose Communication Protocols</h2><p>The physical protocols used for communication across layers or tiers in your design play a major role in the performance, security, and reliability of the application. The choice of communication protocol is even more important when considering distributed deployment. When components are located on the same physical tier, you can often rely on direct communication between these components. However, if you deploy components and layers on physically separate servers and client machines—as is likely in most scenarios—you must consider how the components in these layers will communicate with each other efficiently and reliably. For more information on communication protocols and technologies, see Chapter 18 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658118.aspx\" target=\"_blank\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ee658118.aspx\">Communication and Messaging</a>.\"</p></div></div>" , "<h1 class=\"heading\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Layered Architectural Style</span></h1>\n        <p>Layered architecture focuses on the grouping of related functionality within an application into distinct layers that are stacked vertically on top of each other. Functionality within each layer is related by a common role or responsibility. Communication between layers is explicit and loosely coupled. Layering your application appropriately helps to support a strong separation of concerns that, in turn, supports flexibility and maintainability.</p>\n        <p>The layered architectural style has been described as an <em>inverted pyramid of reuse</em> where each layer aggregates the responsibilities and abstractions of the layer directly beneath it. With strict layering, components in one layer can interact only with components in the same layer or with components from the layer directly below it. More relaxed layering allows components in a layer to interact with components in the same layer or with components in any lower layer.</p>\n        <p>The layers of an application may reside on the same physical computer (the same tier) or may be distributed over separate computers (<em>n</em>-tier), and the components in each layer communicate with components in other layers through well-defined interfaces. For example, a typical Web application design consists of a presentation layer (functionality related to the UI), a business layer (business rules processing), and a data layer (functionality related to data access, often almost entirely implemented using high-level data access frameworks). For details of the n-tier application architectural style, see <a href=\"https://msdn.microsoft.com/en-us/library/ee658117.aspx#NTier3TierStyle\" target=\"_blank\">N-Tier / 3-Tier Architectural Style</a> later in this chapter.</p>\n        <p>Common principles for designs that use the layered architectural style include:</p>\n        <ul>\n          <li>\n            <strong>Abstraction</strong>. Layered architecture abstracts the view of the system as whole while providing enough detail to understand the roles and responsibilities of individual layers and the relationship between them.</li>\n          <li>\n            <strong>Encapsulation</strong>. No assumptions need to be made about data types, methods and properties, or implementation during design, as these features are not exposed at layer boundaries.</li>\n          <li>\n            <strong>Clearly defined functional layers</strong>. The separation between functionality in each layer is clear. Upper layers such as the presentation layer send commands to lower layers, such as the business and data layers, and may react to events in these layers, allowing data to flow both up and down between the layers.</li>\n          <li>\n            <strong>High cohesion</strong>. Well-defined responsibility boundaries for each layer, and ensuring that each layer contains functionality directly related to the tasks of that layer, will help to maximize cohesion within the layer.</li>\n          <li>\n            <strong>Reusable</strong>. Lower layers have no dependencies on higher layers, potentially allowing them to be reusable in other scenarios. </li>\n          <li>\n            <strong>Loose coupling</strong>. Communication between layers is based on abstraction and events to provide loose coupling between layers. </li>\n        </ul>\n        <p>Examples of layered applications include line-of-business (LOB) applications such as accounting and customer-management systems; enterprise Web-based applications and Web sites, and enterprise desktop or smart clients with centralized application servers for business logic.</p>\n        <p>A number of design patterns support the layered architectural style. For example, <strong>Separated Presentation </strong>patterns encompass a range of patterns that the handling of the user's interactions from the UI, the presentation and business logic, and the application data with which the user works. Separated Presentation allows graphical designers to create a UI while developers generate the code to drive it. Dividing the functionality into separate roles in this way provides increased opportunities to test the behavior of individual roles. The following are the key principles of the Separated Presentation patterns:</p>\n        <ul>\n          <li>\n            <strong>Separation of concerns</strong>. Separated Presentation patterns divide UI processing concerns into distinct roles; for example, MVC has three roles: the Model, the View, and the Controller. The Model represents data (perhaps a domain model that includes business rules); the View represents the UI; and the Controller handles requests, manipulates the model, and performs other operations.</li>\n          <li>\n            <strong>Event-based notification</strong>. The Observer pattern is commonly used to provide notifications to the View when data managed by the Model changes.</li>\n          <li>\n            <strong>Delegated event handling</strong>. The controller handles events triggered from the UI controls in the View. </li>\n        </ul>\n        <p>Other examples of Separated Presentation patterns are the Passive View pattern and the Supervising Presenter (or Supervising Controller) pattern.</p>\n        <p>The main benefits of the layered architectural style, and the use of a Separated Presentation pattern, are:</p>\n        <ul>\n          <li>\n            <strong>Abstraction</strong>. Layers allow changes to be made at the abstract level. You can increase or decrease the level of abstraction you use in each layer of the hierarchical stack.</li>\n          <li>\n            <strong>Isolation</strong>.  Allows you to isolate technology upgrades to individual layers in order to reduce risk and minimize impact on the overall system.</li>\n          <li>\n            <strong>Manageability</strong>. Separation of core concerns helps to identify dependencies, and organizes the code into more manageable sections. </li>\n          <li>\n            <strong>Performance</strong>. Distributing the layers over multiple physical tiers can improve scalability, fault tolerance, and performance. </li>\n          <li>\n            <strong>Reusability</strong>. Roles promote reusability. For example, in MVC, the Controller can often be reused with other compatible Views in order to provide a role specific or a user-customized view on to the same data and functionality.</li>\n          <li>\n            <strong>Testability</strong>. Increased testability arises from having well-defined layer interfaces, as well as the ability to switch between different implementations of the layer interfaces. Separated Presentation patterns allow you to build mock objects that mimic the behavior of concrete objects such as the Model, Controller, or View during testing.</li>\n        </ul>\n        <p>Consider the layered architectural style if you have existing layers that are suitable for reuse in other applications, you already have applications that expose suitable business processes through service interfaces, or your application is complex and the high-level design demands separation so that teams can focus on different areas of functionality. The layered architectural style is also appropriate if your application must support different client types and different devices, or you want to implement complex and/or configurable business rules and processes.</p>\n        <p>Consider a Separated Presentation pattern if you want improved testability and simplified maintenance of UI functionality, or you want to separate the task of designing the UI from the development of the logic code that drives it. These patterns are also appropriate when your UI view does not contain any request processing code, and does not implement any business logic.</p>" , "<h1 class=\"title\">Layered Application&nbsp;Architecture</h1>\n<div id=\"mainSection\">\n<div id=\"mainBody\">\n<p>For more details of the topics covered in this guide, see <a target=\"_blank\">Contents of the Guide</a>.</p>\n<h1 class=\"heading\">Contents</h1>\n<ul>\n<li><a target=\"_blank\">Overview</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Layers\" target=\"_blank\">Logical Layered Design</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#ServicesLayers\" target=\"_blank\">Services and Layers</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#DesignSteps\" target=\"_blank\">Design Steps for a Layered Structure</a></li>\n</ul>\n<a id=\"Overview\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h1 class=\"heading\">Overview</h1>\n<p>This chapter discusses the overall structure for applications in terms of the logical grouping of components into separate layers that communicate with each other and with other clients and applications. Layers are concerned with the logical division of components and functionality, and do not take into account the physical location of components. Layers can be located on different tiers, or they may reside on the same tier. In this chapter, you will learn how to divide your applications into separate logical parts, how to choose an appropriate functional layout for your applications, and how applications can support multiple client types. You will also learn about services that you can use to expose logic in your layers.</p>\n<div class=\"alert\">\n<div class=\"contentTableWrapper\">\n<table>\n<tbody>\n<tr>\n<th style=\"text-align: left;\"><img id=\"note\" class=\"cl_IC101471\" title=\"Ee658109.note(en-us,PandP.10).gif\" src=\"https://i-msdn.sec.s-msft.com/areas/global/content/clear.gif\" alt=\"Ee658109.note(en-us,PandP.10).gif\" />Note:</th>\n</tr>\n<tr>\n<td>It is important to understand the distinction between layers and tiers. <em>Layers</em> describe the logical groupings of the functionality and components in an application; whereas <em>tiers</em> describe the physical distribution of the functionality and components on separate servers, computers, networks, or remote locations. Although both layers and tiers use the same set of names (presentation, business, services, and data), remember that only tiers imply a physical separation. It is quite common to locate more than one layer on the same physical machine (the same tier). You can think of the term tier as referring to physical distribution patterns such as two-tier, three-tier, and <em>n</em>-tier. For more information about physical tiers and deployment, see Chapter 19 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658120.aspx\" target=\"_blank\">Physical Tiers and Deployment</a>.\"</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>&nbsp;</p>\n</div>\n<a id=\"Layers\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h1 class=\"heading\">Logical Layered Design</h1>\n<p>Irrespective of the type of application that you are designing, and whether it has a user interface or it is a services application that only exposes services (not to be confused with services layer of an application), you can decompose the design into logical groupings of software components. These logical groupings are called layers. Layers help to differentiate between the different kinds of tasks performed by the components, making it easier to create a design that supports reusability of components. Each logical layer contains a number of discrete component types grouped into sub layers, with each sub layer performing a specific type of task.</p>\n<p>By identifying the generic types of components that exist in most solutions, you can construct a meaningful map of an application or service, and then use this map as a blueprint for your design. Dividing an application into separate layers that have distinct roles and functionalities helps you to maximize maintainability of the code, optimize the way that the application works when deployed in different ways, and provides a clear delineation between locations where certain technology or design decisions must be made.</p>\n<a id=\"PresentationBusinessDataServices\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Presentation, Business, and Data Layers</h2>\n<p>At the highest and most abstract level, the logical architecture view of any system can be considered as a set of cooperating components grouped into layers. Figure 1 shows a simplified, high level representation of these layers and their relationships with users, other applications that call services implemented within the application&rsquo;s business layer, data sources such as relational databases or Web services that provide access to data, and external or remote services that are consumed by the application.</p>\n<p><img id=\"a4691b48-1b2c-4102-984d-4fd1233f369d\" title=\"Ee658109.a4691b48-1b2c-4102-984d-4fd1233f369d(en-us,PandP.10).png\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC351011.png\" alt=\"Ee658109.a4691b48-1b2c-4102-984d-4fd1233f369d(en-us,PandP.10).png\" /></p>\n<p><strong>Figure 1</strong></p>\n<div class=\"caption\">The logical architecture view of a layered system</div>\n<p>These layers may be located on the same physical tier, or may be located on separate tiers. If they are located on separate tiers, or separated by physical boundaries, your design must accommodate this. For more information, see <a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#DesignSteps\" target=\"_blank\">Design Steps for a Layered Structure</a> later in this chapter.</p>\n<p>As shown in Figure 1, an application can consist of a number of basic layers. The common three-layer design shown in Figure 1 consists of the following layers :</p>\n<ul>\n<li><strong>Presentation layer</strong>. This layer contains the user oriented functionality responsible for managing user interaction with the system, and generally consists of components that provide a common bridge into the core business logic encapsulated in the business layer. For more information about designing the presentation layer, see Chapter 6 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658081.aspx\" target=\"_blank\">Presentation Layer Guidelines</a>.\" For more information about designing presentation components, see Chapter 11 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658100.aspx\" target=\"_blank\">Designing Presentation Components</a>.\"</li>\n<li><strong>Business layer</strong>. This layer implements the core functionality of the system, and encapsulates the relevant business logic. It generally consists of components, some of which may expose service interfaces that other callers can use. For more information about designing the business layer, see Chapter 7 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658103.aspx\" target=\"_blank\">Business Layer Guidelines</a>.\" For more information about designing business components, see Chapter 12 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658102.aspx\" target=\"_blank\">Designing Business Components</a>.\"</li>\n<li><strong>Data layer</strong>. This layer provides access to data hosted within the boundaries of the system, and data exposed by other networked systems; perhaps accessed through services. The data layer exposes generic interfaces that the components in the business layer can consume. For more information about designing the data layer, see Chapter 8 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658127.aspx\" target=\"_blank\">Data Layer Guidelines</a>.\" For more information about designing data components, see Chapter 15 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658119.aspx\" target=\"_blank\">Designing Data Components</a>.\"</li>\n</ul>\n<a id=\"ServicesLayers\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h1 class=\"heading\">Services and Layers</h1>\n<p>From a high level perspective, a service-based solution can be seen as being composed of multiple services, each communicating with the others by passing messages. Conceptually, the services can be seen as components of the overall solution. However, internally, each service is made up of software components, just like any other application, and these components can be logically grouped into presentation, business, and data layers. Other applications can make use of the services without being aware of the way they are implemented. The layered design principles discussed in the previous section apply equally to service-based solutions.</p>\n<a id=\"ServicesLayer\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Services Layer</h2>\n<p>When an application must provide services to other applications, as well as implementing features to support clients directly, a common approach is to use a services layer that exposes the business functionality of the application, as shown in Figure 2. The services layer effectively provides an alternative view that allows clients to use a different channel to access the application.</p>\n<p><img id=\"4bee4a28-6791-4df2-8c8c-9a45d9afcf6a\" title=\"Ee658109.4bee4a28-6791-4df2-8c8c-9a45d9afcf6a(en-us,PandP.10).png\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC351012.png\" alt=\"Ee658109.4bee4a28-6791-4df2-8c8c-9a45d9afcf6a(en-us,PandP.10).png\" /></p>\n<p><strong>Figure 2</strong></p>\n<div class=\"caption\">Incorporating a services layer in an application</div>\n<p>In this scenario, users can access the application through the presentation layer, which communicates either directly with the components in the business layer; or through an application fa&ccedil;ade in the business layer if the communication methods require composition of functionality. Meanwhile, external clients and other systems can access the application and make use of its functionality by communicating with the business layer through service interfaces. This allows the application to better support multiple client types, and promotes re-use and higher level composition of functionality across applications.</p>\n<p>In some cases, the presentation layer may communicate with the business layer through the services layer. However, this is not an absolute requirement. If the physical deployment of the application locates the presentation layer and the business layer on the same tier, they may communicate directly. For more information about designing the services layer, see Chapter 9 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658090.aspx\" target=\"_blank\">Service Layer Guidelines</a>.\" For more information about communication between layers, see Chapter 18 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658118.aspx\" target=\"_blank\">Communication and Messaging</a>.\"</p>\n<a id=\"DesignSteps\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h1 class=\"heading\">Design Steps for a Layered Structure</h1>\n<p>When starting to design an application, your first task is to focus on the highest level of abstraction and start by grouping functionality into layers. Next, you must define the public interface for each layer, which depends on the type of application you are designing. Once you have defined the layers and interfaces, you must determine how the application will be deployed. Finally, you choose the communication protocols to use for interaction between the layers and tiers of the application. Although your structure and interfaces may evolve over time, especially if you use agile development, these steps will ensure that you consider the important aspects at the start of the process. A typical series of design steps is the following:</p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step1\" target=\"_blank\">Step 1 &ndash; Choose Your Layering Strategy</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step2\" target=\"_blank\">Step 2 &ndash; Determine the Layers You Require</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step3\" target=\"_blank\">Step 3 &ndash; Decide How to Distribute Layers and Components</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step4\" target=\"_blank\">Step 4 &ndash; Determine If You Need to Collapse Layers</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step5\" target=\"_blank\">Step 5 &ndash; Determine Rules for Interaction between Layers</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step6\" target=\"_blank\">Step 6 &ndash; Identify Cross Cutting Concerns</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step7\" target=\"_blank\">Step 7 &ndash; Define the Interfaces between Layers</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step8\" target=\"_blank\">Step 8 &ndash; Choose Your Deployment Strategy</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Step9\" target=\"_blank\">Step 9 &ndash; Choose Communication Protocols</a></li>\n</ul>\n<a id=\"Step1\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 1 &ndash; Choose Your Layering Strategy</h2>\n<p>Layering represents the logical separation of an application&rsquo;s components into groups that represent distinct roles and functionality. Using a layered approach can improve the maintainability of your application and make it easier to scale out when necessary to improve performance. There are many different ways to group related functionality into layers. However, separating an application into too few or too many layers can add unnecessary complexity; and can decrease the overall performance, maintainability, and flexibility. Determining the granularity of layering appropriate for your application is a critical first step in determining your layering strategy.</p>\n<p>You must also consider whether you are implementing layering in order to achieve purely logical separation of functionality, or in order to potentially achieve physical separation as well. Crossing layer boundaries imposes a local performance overhead, especially for boundaries between physically remote components. However, the overall increase in the scalability and flexibility of your application can far outweigh this performance overhead. In addition, layering can make it easier to optimize the performance of individual layers without affecting adjacent layers.</p>\n<p>In the case of logical layering, interacting application layers will be deployed on the same tier and operate within the same process, which allows you to take advantage of higher performance communication mechanisms such as direct calls through component interfaces. However, in order to maintain the advantages of logical layering and ensure flexibility for the future, you must be careful to maintain encapsulation and loose coupling between the layers.</p>\n<p>For layers that are deployed to separate tiers (separate physical machines), communication with adjacent layers will occur over a connecting network, and you must ensure that the design you choose supports a suitable communication mechanism that takes account of communication latency and maintains loose coupling between layers.</p>\n<p>Determining which of your application layers are likely to be deployed to separate tiers, and which are likely to be deployed to the same tier, is also an important part of your layering strategy. To maintain flexibility, always ensure that interaction between layers is loosely coupled. This allows you to take advantage of the higher performance available when layers are located on the same tier, while allowing you to deploy them to multiple tiers if and when required.</p>\n<p>Adopting a layered approach can add some complexity, and may increase initial development time, but if implemented correctly will significantly improve the maintainability, extensibility, and flexibility of your application. You must consider the trade off of reusability and loose coupling that layers provide against their impact on performance and the increase in complexity. Carefully considering how your application is layered, and how the layers will interact with each other, will ensure a good balance between performance and flexibility. In general, the gain in flexibility and maintainability provided by a layered design far outweighs the marginal improvement in performance that you might gain from a closely coupled design that does not use layers.</p>\n<p>For a description of the common types of layers, and guidance on deciding which layers you need, see the section \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx#Layers\" target=\"_blank\">Logical Layered Design</a>\" earlier in this chapter.</p>\n<a id=\"ChoosingLayers\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a> <a id=\"Step2\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 2 &ndash; Determine the Layers You Require</h2>\n<p>There are many different ways to group related functionality into layers. The most common approach in business applications is to separate presentation, services, business, and data access functionality into separate layers. Some applications also introduce reporting, management, or infrastructure layers.</p>\n<p>Be careful when adding additional layers, and do not add them if they do not provide a logical grouping of related components that manifestly increases the maintainability, scalability, or flexibility of your application. For example, if your application does not expose services, a separate service layer may not be required and you may just have presentation, business, and data access layers.</p>\n<a id=\"Step3\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 3 &ndash; Decide How to Distribute Layers and Components</h2>\n<p>You should distribute layers and components across separate physical tiers only where this is necessary. Common reasons for implementing distributed deployment include security policies, physical constraints, shared business logic, and scalability.</p>\n<ul>\n<li>In Web applications, if your presentation components access your business components synchronously, consider deploying the business layer and presentation layer components on the same physical tier to maximize performance and ease operational management, unless security restrictions require a trust boundary between them.</li>\n<li>In rich client applications, where the UI processing occurs on the desktop, you may prefer to deploy the business components in a physically separate business tier for security reasons, and to ease operational management.</li>\n<li>Deploy business entities on the same physical tier as the code that uses them. This may mean deploying them in more than one place; for example, placing copies on a physically separated presentation tier or data tier where that logic makes use of or references the business entities. Deploy service agent components on the same tier as the code that calls the components, unless security restrictions require a trust boundary between them.</li>\n<li>Consider deploying asynchronous business components, workflow components, and services that have similar load and I/O characteristics on a separate physical tier so that you can fine tune that infrastructure to maximize performance and scalability.</li>\n</ul>\n<a id=\"Step4\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 4 &ndash; Determine If You Need to Collapse Layers</h2>\n<p>In some cases, it makes sense to collapse or relax layers. For example, an application with very limited business rules, or one that uses rules mainly for validation, might implement both the business and presentation logic in a single layer. In an application that pulls data from a Web service and displays that data, it may make sense to simply add a Web service references directly to the presentation layer and consume the Web service data directly. In this case, you are logically combining the data access and presentation layers.</p>\n<p>These are just some examples of where it might make sense to collapse layers. However, the general rule is that you should always group functionality into layers. In some cases, one layer may act as a proxy or pass-through layer that provides encapsulation and loose coupling without providing a great deal of functionality. However, by separating that functionality, you can extend it later with little or no impact on other layers in the design.</p>\n<a id=\"Step5\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 5 &ndash; Determine Rules for Interaction Between Layers</h2>\n<p>When it comes to a layering strategy, you must define rules for how the layers will interact with each other. The main reasons for specifying interaction rules are to minimize dependencies and eliminate circular references. For example, if two layers each have a dependency on components in the other layer you have introduced a circular dependency. As a result, a common rule to follow is to allow only one way interaction between the layers using one of the following approaches:</p>\n<ul>\n<li><strong>Top-down interaction</strong>. Higher level layers can interact with layers below, but a lower level layer should never interact with layers above. This rule will help you to avoid circular dependencies between layers. You can use events to make components in higher layers aware of changes in lower layers without introducing dependencies.</li>\n<li><strong>Strict interaction</strong>. Each layer must interact with only the layer directly below. This rule will enforce strict separation of concerns where each layer knows only about the layer directly below. The benefit of this rule is that modifications to the interface of the layer will only affect the layer directly above. Consider using this approach if you are designing an application that will be modified over time to introduce new functionality and you want to minimize the impact of those changes, or you are designing an application that may be distributed across different physical tiers.</li>\n<li><strong>Loose interaction</strong>. Higher level layers can bypass layers to interact with lower level layers directly. This can improve performance, but will also increase dependencies. In other words, modification to a lower level layer can affect multiple layers above. Consider using this approach if you are designing an application that you know will not be distributed across physical tiers (for example, a stand-alone rich client application), or you are designing a small application where changes that affect multiple layers can be managed with minimal effort.</li>\n</ul>\n<a id=\"Step6\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 6 &ndash; Identify Cross Cutting Concerns</h2>\n<p>After you define the layers, you must identify the functionality that spans layers. This functionality is often described as <em>crosscutting concerns</em>, and includes logging, caching, validation, authentication, and exception management. It is important to identify each of the crosscutting concerns in your application, and design separate components to manage these concerns where possible. This approach helps you to achieve of better reusability and maintainability.</p>\n<p>Avoid mixing the crosscutting code with code in the components of each layer, so that the layers and their components only make calls to the crosscutting components when they must carry out an action such as logging, caching, or authentication. As the functionality must be available across layers, you must deploy crosscutting components in such a way that they are accessible to all the layers&mdash;even when the layers are located on separate physical tiers.</p>\n<p>There are different approaches to handling crosscutting functionality, from common libraries such as the patterns &amp; practices Enterprise Library to Aspect Oriented Programming (AOP) methods where metadata is used to insert crosscutting code directly into the compiled output. For more information about crosscutting concerns, see Chapter 17 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658105.aspx\" target=\"_blank\">Crosscutting Concerns</a>.\"</p>\n<a id=\"Step7\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 7 &ndash; Define the Interfaces between Layers</h2>\n<p>When you define the interface for a layer, the primary goal is to enforce loose coupling between layers. What this means is that a layer should not expose internal details on which another layer could depend. Instead, the interface to a layer should be designed to minimize dependencies by providing a public interface that hides details of the components within the layer. This hiding is called <em>abstraction</em>, and there are many different ways to implement it. The following design approaches can be used to define the interface to a layer:</p>\n<ul>\n<li><strong>Abstract interface</strong>. This can be accomplished by defining an abstract base class or code interface class that acts as a type definition for concrete classes. The type defines a common interface that all consumers of the layer use to interact with the layer. This approach also improves testability, because you can use test objects (sometimes referred to as mock objects) that implement the abstract interface.</li>\n<li><strong>Common design type</strong>. Many design patterns define concrete object types that represent an interface into different layers. These object types provide an abstraction that hides details related to the layer. For example, the Table Data Gateway pattern defines object types that represent tables in a database and are responsible for implementing the SQL queries required to interact with the data. Consumers of the object have no knowledge of the SQL queries, or the details of how the object connects to the database and executes commands. Many design patterns are based on abstract interfaces but some are based on concrete classes instead, and most of the appropriate patterns such as Table Data Gateway are well documented in this respect. Consider using common design types if you want a fast and easy way to implement the interface to your layer, or if you are implementing a design pattern for the interface to your layer.</li>\n<li><strong>Dependency inversion</strong>. This is a programming style where abstract interfaces are defined external to, or independent of, any layers. Instead of one layer being dependent on another, both layers depend upon common interfaces. The Dependency Injection pattern is a common implementation of dependency inversion. With dependency injection, a container defines mappings that specify how to locate components that another component may depend upon, and the container can create and inject these dependent components automatically. The dependency inversion approach provides flexibility and can help to implement a pluggable design because the dependencies are composed through configuration rather than code. It also maximizes testability because you can easily inject concrete test classes into different layers of the design.</li>\n<li><strong>Message-based</strong>. Instead of interacting directly with components in other layers by calling methods or accessing properties of these objects, you can use message-based communication to implement interfaces and provide interaction between layers. There are several messaging solutions such as Windows Communication Foundation, Web services, and Microsoft Message Queuing that support interaction across physical and process boundaries. However, you can also combine abstract interfaces with a common message type used to define data structures for the interaction. The key difference with a message-based interface is that the interaction between layers uses a common structure that encapsulates all the details of the interaction. This structure can define operations, data schemas, fault contracts, security information, and many other structures related to communication between layers. Consider using a message-based approach if you are implementing a Web application and defining the interface between the presentation layer and business layer, you have an application layer that must support multiple client types, or you want to support interaction across physical and process boundaries. Also, consider a message-based approach if you want to formalize the interaction with a common structure, or you want to interact with a stateless interface where state information is carried with the message.</li>\n</ul>\n<p>To implement the interaction between the presentation layer of a Web application and the business logic layer, the recommendation is to use a message-based interface. If the business layer does not maintain state between calls (in other words, each call between the presentation layer and business layer represents a new context), you can pass context information along with the request and provide a common model for exception and error handling in the presentation layer.</p>\n<a id=\"Step8\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 8 &ndash; Choose Your Deployment Strategy</h2>\n<p>There are several common patterns that represent application deployment structures found in most solutions. When it comes to determining the best deployment solution for your application, it helps to first identify the common patterns. Once you have a good understanding of the different patterns, you then consider scenarios, requirements, and security constraints to choose the most appropriate pattern or patterns. For more information on deployment patterns, see Chapter 19 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658120.aspx\" target=\"_blank\">Physical Tiers and Deployment</a>.\"</p>\n<a id=\"Step9\" href=\"https://msdn.microsoft.com/en-us/library/ee658109.aspx\" target=\"_blank\"> </a>\n<h2 class=\"subheading\">Step 9 &ndash; Choose Communication Protocols</h2>\n<p>The physical protocols used for communication across layers or tiers in your design play a major role in the performance, security, and reliability of the application. The choice of communication protocol is even more important when considering distributed deployment. When components are located on the same physical tier, you can often rely on direct communication between these components. However, if you deploy components and layers on physically separate servers and client machines&mdash;as is likely in most scenarios&mdash;you must consider how the components in these layers will communicate with each other efficiently and reliably. For more information on communication protocols and technologies, see Chapter 18 \"<a href=\"https://msdn.microsoft.com/en-us/library/ee658118.aspx\" target=\"_blank\">Communication and Messaging</a>.\"</p>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Multitier_architecture .
  
  :AuthorTag_technical_realization_plan
          a           cont:AuthorTag ;
          rdfs:label  "technical realization plan" .
  
  :DesignPattern_adapter
          a                              gen:DesignPattern ;
          rdfs:label                     "Adapter" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki , :Project_shape ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maintainability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_expressiveness , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_installability , :ArchitecturalQuality_portability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_correctness , :ArchitecturalQuality_testability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_operability , :ArchitecturalQuality_availability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_wrappability ;
          gen:isAlternativeOf            :DesignTactic_message_channeling , :DesignTactic_complexity_confinement , :DesignTactic_reduce_coupling , :DesignTactic_increase_cohesion , :DesignTactic_abstraction ;
          gen:wikiEntry                  "<div class=\"bs-docs-header\" id=\"content\"><div class=\"container\"><h1>Features</h1>\n\t\t<p>\n\t\t\tAn overview of Camunda and our most adorable features.\n\t\t</p>\n\n\t</div>\n</div>\n\n<div class=\"container bs-docs-container\">\n\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\" role=\"main\">\n\n\t\t\t<div class=\"bs-docs-section\" id=\"automation\">\n\t\t\t\t<h1 class=\"page-header\">Process Automation and Case Management</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>BPMN 2.0</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAs OMG-members, we co-authored the BPMN 2.0 standard and created one of the most sophisticated implementations. Our native BPMN 2.0 process engine covers all the symbols that you (really) need for process execution.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" style=\"max-height:300px; margin-bottom: 10px;\" src=\"http://camunda.org/assets/img/bpmn.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/bpmn20/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">BPMN 2.0 Coverage</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>CMMN 1.0</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tWe also participate in OMG's CMMN 1.0 standard, which allows you to implement unstructured processes using Case Management. With Camunda, you can seamlessly combine BPMN and CMMN.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" style=\"max-height:300px; margin-bottom: 10px; \" src=\"http://camunda.org/assets/img/loan-application.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/cmmn10/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">CMMN 1.0 Coverage</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"java\">\n\t\t\t\t<h1 class=\"page-header\">Perfect for Java</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>Java API</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Camunda process engine provides a native Java API which allows developers to interact with process instances and the process repository. This makes it easy to deploy, start and control process instances from a regular java application. And it works in the other direction as well: the process engine supports invoking plain java classes from BPMN 2.0 service tasks and similar constructs.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/implement-java.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-applications-overview\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Java Process Applications</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>Seamless Spring &amp; Java EE Integration</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Seamless Spring Framework and Java EE 6 programming model integration provide you with the right toolkit for developing complex business applications. <code>\n\t\t\t\t\t\t\t\t@Inject</code>\n\t\t\t\t\t\t\tthe process engine into any Spring / CDI / EJB Bean and invoke Beans from BPMN 2.0 Service Tasks. Infrastructure integration makes sure that the process engine participates in application transactions.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/implement-javaee.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#spring-framework-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Spring Integration</a>\n\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#cdi-and-java-ee-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Java EE / CDI Integration</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"deployment\">\n\t\t\t\t<h1 class=\"page-header\">Various Deployment Models</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>Embedded</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe process engine can be added as a library to any Java application. It can also be installed as a container service inside Tomcat, JBoss etc. This way, it can be used by multiple applications which can be redeployed without shutting down the process engine.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-deployment.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#runtime-container-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Container Integration</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>Standalone</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tUse the process engine as a standalone service and interact with it from remote applications. Use the REST API for remote communication or implement your own access infrastructure using JMS or SOAP Webservices.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-remote.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/rest/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">REST API</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>In a cluster</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tRun the process engine on different cluster nodes on top of a shared database. Use this setup for scaling up or high availability.The process engine supports heterogeneous clusters where different processes are executed on different nodes.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-cluster.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Cluster Deployment</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"tooling\">\n\t\t\t\t<h1 class=\"page-header\">Powerful Tooling for Operations</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t<h3>Find, Inspect and Repair Process Instances</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCamunda Cockpit aggregates the state of all instances of a process definition and visualizes it on the process diagram. This way you can see how many instances are currently waiting in each task / activity. You can filter by clicking on an activity or by using the filter panel. The filter panel supports searching for process instances by variable, business key and process version.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Process Instance View allows you to inspect the state of a running process instance. Browse through active activities by selecting them in the filter tree on the left hand side. Inspect Variables, Incidents (Failures) and User Tasks in the Properties Panel. Drill down into Sub Process Instances.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tRepair a running process instance by changing variables, re-assigning user tasks or retrying failed asynchronous executions. Cancel process instances which cannot complete successfully.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/cockpit-find.png\">\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Cockpit</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"modeler\">\n\t\t\t\t<h1 class=\"page-header\">Easy-to-use BPMN Modeler</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t<h3>Create BPMN 2.0 diagrams inside your Eclipse IDE</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tGet our Eclipse Plugin for creating BPMN 2.0 diagrams using your development environment. It supports the complete BPMN 2.0 standard. Thanks to the integration in Eclipse, you can model BPMN 2.0 processes directly inside your IDE.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/modeler/modeler.png\">\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://camunda.org/bpmn/tool/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Download Modeler</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\">\n\t\t\t\t<h1 class=\"page-header\">... and so much more!</h1>\n\t\t\t\t<h3>Just a few more highlights:</h3>\n\t\t\t\t<ul class=\"list-unstyled\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes\" target=\"_blank\">Transaction Handling</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-history-and-audit-event-log\" target=\"_blank\">Separation of Runtime and History Data</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\" target=\"_blank\">Tasklist for Human Workflows</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-engine-plugins\" target=\"_blank\">Process Engine Plugins</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-supported-environments\" target=\"_blank\">Support for many Runtime Containers and Databases</a></li></ul></div></div></div></div>" , "<h1 class=\"title\">Adapter Pattern</h1>\n<h3>&nbsp;</h3>\n<h3>Design</h3>\n<p>The Adapter pattern's important contribution is that it promotes programming to interfaces. The <span class=\"code\">Client</span> works to a domain-specific standard, which is specified in the <span class=\"code\">ITarget</span> interface. An <span class=\"code\">Adaptee</span> class provides the required functionality, but with a different interface. The <span class=\"code\">Adapter</span> implements the <span class=\"code\">ITarget</span> interface and routes calls from the <span class=\"code\">Client</span> through to the <span class=\"code\">Adaptee</span>, making whatever changes to parameters and return types are necessary to meet the requirements. A <span class=\"code\">Target</span> class that implements the <span class=\"code\">ITarget</span> interface directly could exist, but this is not a necessary part of the pattern. In any case, the <span class=\"code\">Client</span> is aware only of the<span class=\"code\">ITarget</span> interface, and it relies on that for its correct operation.</p>\n<p>The adapter shown in the Figure below, \"Adapter pattern UML diagram\" is a <em>class adapter</em> because it <em>implements</em> an interface and <em>inherits</em> a class. The alternative to inheriting a class is to <em>aggregate</em> the <span class=\"code\">Adaptee</span>. This creates an <em>object adapter</em>. The design differences are primarily that <em>overriding</em> <span class=\"code\">Adaptee</span> behavior can be done more easily with a class adapter, whereas <em>adding</em> behavior to <span class=\"code\">Adaptee</span>s can be done more easily with an object adapter. As we go along, I will point out different instances.</p>\n<p><strong>Adapter pattern UML diagram</strong></p>\n<p><img id=\"msdn-magicimage-1\" title=\"Adapter pattern UML diagram\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC400935.png\" alt=\"Adapter pattern UML diagram\" width=\"502\" height=\"209\" /></p>\n<p>The purpose of the <span class=\"code\">ITarget</span> interface is to enable objects of adaptee types to be interchangeable with any other objects that might implement the same interface. However, the adaptees might not conform to the operation names and signatures of <span class=\"code\">ITarget</span>, so an interface alone is not a sufficiently powerful mechanism. That is why we need the Adapter pattern. An <span class=\"code\">Adaptee</span> offers similar functionality to <span class=\"code\">Request</span>, but under a different name and with possibly different parameters. The <span class=\"code\">Adaptee</span> is completely independent of the other classes and is oblivious to any naming conventions or signatures that they have. Now, let's consider the roles in the pattern:</p>\n<div class=\"variablelist\">\n<dl>\n<dt><span class=\"term\"><span class=\"code\">ITarget</span></span></dt>\n<dd>\n<p>The interface that the <span class=\"code\">Client</span> wants to use</p>\n</dd>\n<dt><span class=\"term\"><span class=\"code\">Adaptee</span></span></dt>\n<dd>\n<p>An implementation that needs adapting</p>\n</dd>\n<dt><span class=\"term\"><span class=\"code\">Adapter</span></span></dt>\n<dd>\n<p>The class that implements the <span class=\"code\">ITarget</span> interface in terms of the <span class=\"code\">Adaptee</span></p>\n</dd>\n<dt><span class=\"term\"><span class=\"code\">Request</span></span></dt>\n<dd>\n<p>An operation that the <span class=\"code\">Client</span> wants</p>\n</dd>\n<dt><span class=\"term\"><span class=\"code\">SpecificRequest</span></span></dt>\n<dd>\n<p>The implementation of <span class=\"code\">Request</span>'s functionality in the <span class=\"code\">Adaptee</span></p>\n</dd>\n</dl>\n</div>" , "[Wikipedia Adapter Pattern 2014] An Adapter allows classes or components with incompatible interfaces to work together by wrapping its own interface around that of an already existing class. (GoF structural pattern)" ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_workflows__shape_ , :Domain_c___64-bit_windows ;
          owl:sameAs                     dbr:Adapter_pattern .
  
  :Domain_ar-026__caching_and_performance
          a           spec:Domain ;
          rdfs:label  "ar-026: caching and performance" .
  
  :UseCase_cr-01__messdaten_und_kpis_visualisieren
          a           spec:UseCase ;
          rdfs:label  "cr-01: messdaten und kpis visualisieren" .
  
  :DesignPattern_heartbeat
          a                              gen:DesignPattern ;
          rdfs:label                     "Heartbeat" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility , :ArchitecturalQuality_safety , :ArchitecturalQuality_survivability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_resilience ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "The state of nodes in terms of availability and up-time needs to be determined by exchanging periodic message between the monitoring node and the monitored node. Heartbeat messages are sent from the monitored node to the monitor. If heartbeat messages are no longer received and a predefined timeout has expired an error has occurred and is detected [Hanmer 2007] pp 101-103.  Relations Error Detection [Hanmer 2007] Detection Patterns pp 101-103." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_map_reduce
          a                              gen:DesignPattern ;
          rdfs:label                     "Map Reduce" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_mobility , :ArchitecturalQuality_operability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_integratability , :ArchitecturalQuality_utility , :ArchitecturalQuality_automatibility ;
          gen:isAlternativeOf            :DesignTactic_parallel_computing , :DesignTactic_load_distribution ;
          gen:wikiEntry                  "[Weebly Map Reduce [date unknown]] The Map Reduce patternstargets batch jobs where disk I/O is the major bottleneck. It uses a distributed file system so that disk I/O can be done in parallel. This pattern is used in many of Googles internal application as well as implemented in open source Hadoop parallel processing framework.  The following figure illustrates the pattern." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:MapReduce .
  
  :DesignPattern_redundancy
          a                              gen:DesignPattern ;
          rdfs:label                     "Redundancy" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_viability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_survivability , :ArchitecturalQuality_durability , :ArchitecturalQuality_consistency , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_stability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_resilience , :ArchitecturalQuality_safety , :ArchitecturalQuality_isolateability ;
          gen:isAlternativeOf            :DesignTactic_fault_handling , :DesignTactic_isolation , :DesignTactic_error_handling ;
          gen:wikiEntry                  "To reduce the amount of time between error detection and the resumption of normal operation after error recovery redundant capabilities should be provided. This maximizes availability by having alternate hardware or software that can perform the same function.  With the help of Redundancy quick activation to enable error processing to continue in parallel with normal execution is possible [Hanmer 2007]pp 47-52.  Relations Error Handling [Hanmer 2007]Architectural Pattern pp 47-52. Fault Handling [Hanmer 2007]Architectural Pattern pp 47-52. Isolation [Hanmer 2007]Architectural Pattern pp 47-52." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :UseCase_sa_tool_support
          a           spec:UseCase ;
          rdfs:label  "sa tool support" .
  
  :Domain_ar-151__visualization_granularity
          a           spec:Domain ;
          rdfs:label  "ar-151: visualization granularity" .
  
  :DesignPattern_acknowledgement
          a                              gen:DesignPattern ;
          rdfs:label                     "Acknowledgement" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_integrity , :ArchitecturalQuality_availability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_viability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_dependability , :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_safety ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_visibility ;
          gen:isAlternativeOf            :DesignTactic_error_detection , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "In messaging system an Acknowledgement typically refers to a message that confirms receiving a message or the successful completion of a task. These Acknowledgement messages enable error detection in the communication or message loss [Wikipedia Acknowledgement 2014]. Normal operations consist of a request from one task to another. This request might be a query or instruction. The target of the request is the system to be monitored. When there is a dialog between two tasks the easiest way for one task to determine that the other task is alive and functioning is Acknowledgement. All requests should require a reply to acknowledge receipt and to indicate that the monitored system is alive and able to adhere to the protocol [Hanmer 2007]pp 104-106. Relations Error Detection [Hanmer 2007]Detection Patterns pp 104-106." ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_embedded_systems .
  
  :DesignTactic_unknown
          a           gen:DesignTactic ;
          rdfs:label  "unknown" .
  
  :ProjectPhase_verification_and_validation
          a           cont:ProjectPhase ;
          rdfs:label  "verification and validation" .
  
  :DesignPattern_load_balancing
          a                              gen:DesignPattern ;
          rdfs:label                     "Load Balancing" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_completeness , :ArchitecturalQuality_reliability , :ArchitecturalQuality_mobility , :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_operability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_efficiency ;
          gen:isAlternativeOf            :DesignTactic_load_distribution , :DesignTactic_parallel_computing , :DesignTactic_no_single_point_of_failure ;
          gen:wikiEntry                  "[Wikipedia Load Balancing (Computing) 2014] Load Balancing is a method to distribute workload across multiple computers or a computer cluster network links central processing units disk drives or other resources to achieve optimal resource utilization maximize throughput minimize response time and avoid overload. Using multiple components with load balancing instead of a single component may increase reliability through redundancy. The load balancing service is usually provided by dedicated software or hardware such as a multilayer switch or a Domain Name System server. The following figure illustrates thetypical load balancingmodelA dispatcherdetermines which worker instance will handle the request based on different policies. The application should best be stateless so any worker instance can handle the request. This pattern is deployed in almost every medium to large web site setup.  Load Balanced Elements[Dyson and Longshaw 2004] The entire system needs to continue to function when various elements suddently become unavailable and the system load increases beyond the capacity of a single element. A solution would be to use multiple elements of similar capacity and to balance the load continously across them to achieve the required throughput and response. The actual load balancing tends to be across software elements with the load balancing across hardware achieved as a consequence of diverse software elements running on that hardware." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     <http://dbpedia.org/resource/Load_balancing_(computing)> .
  
  :DesignTactic_multiple_views
          a           gen:DesignTactic ;
          rdfs:label  "multiple views" .
  
  :ArchitecturalQuality_controllability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Controllability" , "controllability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignPattern_component_configurator , :DesignPattern_runtime_reconfiguration_pattern , :DesignPattern_task_precondition_-_data_existence , :DesignPattern_queue_for_resources , :DesignPattern_queue-based_load_leveling_pattern , :DesignPattern_queuing , :DesignPattern_data-based_routing , :DesignTactic_queueing , :DesignPattern_priority_queue_pattern , :DesignPattern_task_to_environment_-_push , :DesignPattern_environment_to_task_-_push , :DesignTactic_softcoding , :DesignPattern_event_sourcing_pattern , :DesignPattern_event-based_task_trigger , :DesignPattern_pipes_and_filters_pattern , :DesignPattern_facade , :DesignPattern_data-based_task_trigger , :DesignPattern_environment_to_workflow_-_push ;
          gen:relatedQuality       :ArchitecturalQuality_observability , :ArchitecturalQuality_testability , :ArchitecturalQuality_configurability ;
          gen:wikiEntry            "[Wikipedia Controllability 2014] The concept of controllability denotes the ability to move a system around in its entire configuration space using only certain admissible manipulations." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_component-based_architecture
          a                              gen:DesignPattern ;
          rdfs:label                     "Component-Based Architecture" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_replaceability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_reusability ;
          gen:isAlternativeOf            :DesignTactic_componentization ;
          gen:wikiEntry                  "<h1 class=\"heading\">Component-Based Architectural Style</h1>\n<p>Component-based architecture describes a software engineering approach to system design and development. It focuses on the decomposition of the design into individual functional or logical components that expose well-defined communication interfaces containing methods, events, and properties. This provides a higher level of abstraction than object-oriented design principles, and does not focus on issues such as communication protocols and shared state.</p>\n<p>The key principle of the component-based style is the use of components that are:</p>\n<ul>\n<li><strong>Reusable</strong>. Components are usually designed to be reused in different scenarios in different applications. However, some components may be designed for a specific task.</li>\n<li><strong>Replaceable</strong>. Components may be readily substituted with other similar components.</li>\n<li><strong>Not context specific</strong>. Components are designed to operate in different environments and contexts. Specific information, such as state data, should be passed to the component instead of being included in or accessed by the component.</li>\n<li><strong>Extensible</strong>. A component can be extended from existing components to provide new behavior.</li>\n<li><strong>Encapsulated</strong>. Components expose interfaces that allow the caller to use its functionality, and do not reveal details of the internal processes or any internal variables or state.</li>\n<li><strong>Independent</strong>. Components are designed to have minimal dependencies on other components. Therefore components can be deployed into any appropriate environment without affecting other components or systems.</li>\n</ul>\n<p>&nbsp;</p>\n<p>The following are the main benefits of the component-based architectural style:</p>\n<ul>\n<li><strong>Ease of deployment</strong>. As new compatible versions become available, you can replace existing versions with no impact on the other components or the system as a whole.</li>\n<li><strong>Reduced cost</strong>. The use of third-party components allows you to spread the cost of development and maintenance.</li>\n<li><strong>Ease of development</strong>. Components implement well-known interfaces to provide defined functionality, allowing development without impacting other parts of the system.</li>\n<li><strong>Reusable</strong>. The use of reusable components means that they can be used to spread the development and maintenance cost across several applications or systems.</li>\n<li><strong>Mitigation of technical complexity</strong>. Components mitigate complexity through the use of a component container and its services. Example component services include component activation, lifetime management, method queuing, eventing, and transactions.</li>\n</ul>\n<p>Design patterns such as the Dependency Injection pattern or the Service Locator pattern can be used to manage dependencies between components, and promote loose coupling and reuse. Such patterns are often used to build composite applications that combine and reuse components across multiple applications.</p>\n<p><strong>When to consider this architectural style</strong></p>\n<p>Consider the component-based architectural style if you already have suitable components or can obtain suitable components from third-party suppliers; your application will predominantly execute procedural-style functions, perhaps with little or no data input; or you want to be able to combine components written in different code languages. Also, consider this style if you want to create a pluggable or composite architecture that allows you to easily replace and update individual components.</p>" ;
          spec:hasPatternDomain          :Domain_distributed_computing .
  
  :Requirement_ar-003__traffic_monitoring
          a                          spec:Requirement ;
          rdfs:label                 "AR-003: Traffic monitoring" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall monitor traffic from individual apps." ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "Monitor traffic" .
  
  gen:hasKnowledgeContext
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:ArchitecturalKnowledgeElement ;
          rdfs:subPropertyOf  gen:hasContext .
  
  :Domain_ar-11__api_governance
          a           spec:Domain ;
          rdfs:label  "ar-11: api governance" .
  
  :Requirement_ar-02__safety_assurance
          a                          spec:Requirement ;
          rdfs:label                 "AR-02: Safety Assurance" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_shape ;
          gen:wikiEntry              "The safety of the processes shall be assured using suitable methods and mechanisms." ;
          spec:containedWithin       :UseCase_adaptation ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Safety" ;
          spec:requirementPurpose    "Safety assurance" .
  
  :DesignPattern_federated_identity_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Federated Identity Pattern" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_provability , :ArchitecturalQuality_authenticity , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_accountability , :ArchitecturalQuality_trustability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_immunity , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_authentication , :DesignTactic_authorization ;
          gen:wikiEntry                  "Delegate authentication to an external identity provider. This pattern can simplify development minimize the requirement for user administration and improve the user experience of the application.[MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_software_analysis
          a           cont:AuthorTag ;
          rdfs:label  "software analysis" .
  
  :AuthorTag_opportunity
          a           cont:AuthorTag ;
          rdfs:label  "opportunity" .
  
  :DesignPattern_faceted_search_and_navigation
          a                              gen:DesignPattern ;
          rdfs:label                     "Faceted search and navigation" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_safiddle ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_usability ;
          gen:isAlternativeOf            :DesignTactic_facetization ;
          gen:wikiEntry                  "<p><strong>Faceted Search</strong></p>\n<p>Also called guided navigation and faceted search, the faceted navigation model leverages metadata fields and values to provide users with visible options for clarifying and refining queries. Faceted navigation is arguably the most significant search innovation of the past decade.<a id=\"FNPTR-2\" href=\"http://alistapart.com/article/design-patterns-faceted-navigation\" target=\"_blank\" name=\"FNPTR-2\"></a><a href=\"http://alistapart.com/article/design-patterns-faceted-navigation#FOOTNOTE-2\" target=\"_blank\">[2]</a> It features an integrated, incremental search and browse experience that lets users begin with a classic keyword search and then scan a list of results. It also serves up a custom map (usually to the left of results) that provides insights into the content and its organization and offers a variety of useful next steps. That&rsquo;s where faceted navigation proves its power. In keeping with the principles of progressive disclosure and incremental construction, users can formulate the equivalent of a sophisticated Boolean query by taking a series of small, simple steps. Faceted navigation addresses the universal need to narrow. Consequently, this pattern has become nearly ubiquitous in e-commerce, given the availability of structured metadata and the clear business value of improving product findability. Faceted navigation is being deployed rapidly across an impressively wide variety of contexts and platforms. In the world of search, faceted navigation is everywhere.</p>\n<p><a href=\"http://alistapart.com/article/design-patterns-faceted-navigation#FNPTR-2\" target=\"_blank\">[2]</a> Marti Hearst and her Flamenco project collaborators at UC Berkeley deserve credit for their pioneering research in faceted navigation (<a href=\"http://flamenco.berkeley.edu/\" target=\"_blank\">http://flamenco.berkeley.edu/</a>).</p>\n<p>The following figure&nbsp;illustrates a successful implementation of faceted navigation as a model for interacting with the catalogs of several academic libraries. This is a good example of a federated search in which source (roughly equivalent to location) is deemphasized relative to subject and format. The consortium&rsquo;s goal is to connect students and faculty with the best materials, regardless of which university owns them. This example also hints at the design challenges. Faceted navigation is not simply a feature to check off a list. Success requires painstaking attention to detail and an appreciation for the vast array of possibilities for interaction design. For instance, the libraries run collapsible facets down the left. Only the most relevant facets (subject, format, location) are open. Most are closed by default. Each open facet reveals only the top four or five most heavily populated values. This allows for a small facet footprint that frees up plenty of space on the main stage for the results themselves. The number of matching results for each value (shown within parentheses) is a key element of the map, as is the reformulation of search terms and selected values as stacking breadcrumbs, which let users view and modify their current search parameters. This interface is the result of user research, usability testing, and iterative design. But it&rsquo;s not the only way.</p>\n<div><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://alistapart.com/d/design-patterns-faceted-navigation/SP_CH01_comp_img_0.jpg\" alt=\"Screenshot\" />\n<p style=\"text-align: center;\"><strong>Faceted navigation at the Triangle Research Libraries</strong></p>\n</div>\n<p>&nbsp;</p>\n<p><strong>Faceted&nbsp;Navigation</strong></p>\n<p>Faceted navigation is a master pattern. Its deployment impacts all other search patterns and the information architecture as a whole. To oversimplify, there&rsquo;s the Google model and the faceted navigation model. Choosing between these two is a major strategic decision. Determining whether or not faceted navigation is sensible and feasible is among the earliest steps in design. The infrastructure for faceted navigation can enable a tighter relationship between search and browse. It can shape the structure and navigation of the entire site or application. It also changes how we think about autocomplete and best first. It offers a familiar framework for managing the sources of federated search. Plus, its discriminatory power to clarify intent and refine results may offset the need for personalization and advanced search. That said, faceted navigation won&rsquo;t work everywhere. For starters, it&rsquo;s an expensive proposition. The demands on search software and servers are substantial. Also, the metadata infrastructure involves both initial investment and ongoing expense. For these reasons and more, a simpler search model is sometimes better, but it must often be supplemented by advanced search.</p>\n<h3><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://alistapart.com/d/design-patterns-faceted-navigation/SP_CH01_comp_img_9.jpg\" alt=\"Screenshot\" /></h3>\n<p style=\"text-align: center;\">The faceted navigation design pattern</p>\n<div>&nbsp;</div>" ;
          spec:hasPatternDomain          :Domain_web ;
          owl:sameAs                     dbr:Faceted_search .
  
  :DesignDecision_ad-103__web_interfaces
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-103: Web interfaces" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Web Interfaces</strong></p>\n<p style=\"font-size: small;\">The interfaces between the three functional layers of the system are web-based. The lower layers provide REST interfaces to&nbsp;the upper layers. The user interface is browser based using HTML5 and JavaScript technologies.</p>\n<p style=\"font-size: small;\">&nbsp;</p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-158__standard_compatibility , :Domain_ar-159__web_api , :Domain_ar-101__dwh_querying ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_portability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces .
  
  :DesignTactic_core_services
          a           gen:DesignTactic ;
          rdfs:label  "core services" .
  
  :DesignTactic_off-the-shelf_component
          a           gen:DesignTactic ;
          rdfs:label  "off-the-shelf component" .
  
  :DesignTactic_limit_access
          a                             gen:DesignTactic ;
          rdfs:label                    "Limit Access" , "limit access" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_immunity , :ArchitecturalQuality_trustability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_security , :ArchitecturalQuality_traceability ;
          gen:wikiEntry                 "Firewalls restrict access based on message source or destination port. Messages from unknown sources may be a form of an attack. It is not always possible to limit access to known sources. A public Web site for example can expect to get requests from unknown sources." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_error_handler
          a                              gen:DesignPattern ;
          rdfs:label                     "Error Handler" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_robustness , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_availability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_survivability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_dependability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_viability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_safety ;
          gen:isAlternativeOf            :DesignTactic_etl , :DesignTactic_error_handling ;
          gen:wikiEntry                  "<h2>Challenges to Achieving Sustainable Decisions</h2>\n<p>Many researchers and practitioners consider architectural knowledge (AK) to be an inherent part of software design. They point to the importance of capturing significant architectural design decisions together with other software artifacts because those decisions can ensure that the design rationale doesn’t get lost.<sup>5</sup> Capturing significant decisions and their rationale is difficult and often neglected because doing so requires considerable effort.<sup>6,7</sup> In this context, architects should seek to make and document sustainable decisions. However, various challenges can hinder this desire.</p>\n<h2></h2>" , "The Error Handler provides a controlled manner for handling errors. Note that every error the system detects should be send to an Error Handler except when normal processing can be resumed. Error handling is non-productive work done by the system. It counts as time during which the application is not available. Error processing code should be separated in special handling blocks for easier maintenance and to facilitate new handlers being added in the future[Hanmer 2007]pp 148-150. Relations Error Handling [Hanmer 2007] Error Recovery Patterns pp 148-150." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-106__stakeholder_views
          a           spec:Domain ;
          rdfs:label  "ar-106: stakeholder views" .
  
  :DesignPattern_application_server_architecture
          a                              gen:DesignPattern ;
          rdfs:label                     "Application Server Architecture" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_completeness , :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_no_single_point_of_failure ;
          gen:wikiEntry                  "[Dyson P Longshaw A. 2004] pp. 392-395. Application Server Architecture groups all core system functionality in just one single application. This pattern only relies to Software. Through different functionality whichcan be delivered by different applications each one is a single point of failure. Problems are that differnet applications can scale at different rates and if instructions between different applications are repeated it could increase costs. A management overhead could occure because every application needs to be managed seperately.  Relations No Single Point of Failure [Dyson P Longshaw A. 2004] Each functionality that has been delivered by different applications is a single point of failure pp. 293." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_ar-04__protect_content_confidentiality
          a                          spec:Requirement ;
          rdfs:label                 "AR-04: Protect content confidentiality" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_safiddle ;
          gen:wikiEntry              "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Provide ways of for restricting unwanted access to architectural requirements and design decision. Unrestricted access to design pattern and architectural quality definitions.</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Rationale:</strong>&nbsp;Sharing is made difficult by issues of confidentiality.</span></p>" ;
          spec:containedWithin       :UseCase_sa_collaboration , :UseCase_nfr_repository ;
          spec:hasRequirementOrigin  :Domain_ar-05__effective_collaboration ;
          spec:requirementGroup      "Confidentiality" ;
          spec:requirementPurpose    "Confidentiality protection" .
  
  cont:Role  a             owl:Class ;
          rdfs:label       "Role" ;
          rdfs:subClassOf  cont:ContextInformationElement .
  
  :DesignPattern_external_configuration_store_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "External Configuration Store Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_installability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_operability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_portability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_testability , :ArchitecturalQuality_extensibility ;
          gen:isAlternativeOf            :DesignTactic_reduce_coupling ;
          gen:wikiEntry                  "Move configuration information out of the application deployment package to a centralized location. This pattern can provide opportunities for easier management and control of configuration data and for sharing configuration data across applications and application instances.[MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_association
          a           gen:DesignTactic ;
          rdfs:label  "association" .
  
  :DesignDecision_kdd-01__high_level_architecture
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-01: High Level Architecture" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<h2><span lang=\"DE-AT\">High Level Architecture</span></h2>\n<p><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">The architecture of the system is decomposed in a <strong>Platform Architecture</strong> and a <strong>Process&nbsp;Architecture</strong>.</span></span></p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">The <strong>Platform</strong></span><span lang=\"DE-AT\"><strong>&nbsp;Architecture</strong> is home to&nbsp;the following components:</span></span></p>\n<ul>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\">(Camunda) process engine</span></li>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\">Web server</span></li>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\">Databases</span></li>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\">Applications</span></li>\n</ul>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">The <strong>Process</strong></span><span lang=\"DE-AT\"><strong>&nbsp;Architecture</strong> concerns the functional aspects of the process:</span></span></p>\n<ul>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\">Process</span><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\"> inter-communication</span></li>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\">Accessing</span><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\"> external resources</span></li>\n<li><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">Integration of external process engines (e.g., CIRCE)</span></li>\n<li><span lang=\"DE-AT\" style=\"line-height: 1.3em; font-size: 12pt;\">Access to external file repositories (SAMBA)</span></li>\n<li><span style=\"font-size: 12pt;\">Access to email services (e.g., automatic sending of notification emails)</span></li>\n<li><span style=\"font-size: 12pt;\">Access to file versioning repositories (e.g., automatic check-in/out of files in/from SVN or GIT)</span></li>\n<li><span style=\"font-size: 12pt;\">Consistency checks on file contents (e.g. on XML or Excel files)</span></li>\n<li><span lang=\"DE-AT\" style=\"line-height: 1.3em; font-size: 12pt;\">Coordination of human resources</span></li>\n<li><span lang=\"DE-AT\" style=\"line-height: 1.3em; font-size: 12pt;\">Adaptation of the main process</span></li>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\">Monitoring and mining of the main process</span></li>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\">&hellip;</span></li>\n</ul>\n<p><span lang=\"DE-AT\" style=\"font-size: 12pt; line-height: 1.3em;\"><img src=\"p/Shape/high_level_architecture.png\" alt=\"\" width=\"555\" height=\"375\" /></span></p>" ;
          spec:decisionArchitecturalView  "2. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-01__process_automation ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_extensibility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_reusability , :ArchitecturalQuality_interoperability ;
          spec:useDecisionTactic          :DesignTactic_layering .
  
  :DesignDecision_ad-203__data_storage
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-203: Data Storage" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p>Three alternative configurations for data storage have been considered. The preferred alternative was number X.<br></p><p>Alternative 1:</p><p><img src=\"p/AspernES/uc8_var1.png\" alt=\"\" width=\"600\" height=\"415\"><br data-mce-bogus=\"1\"></p><p>Alternative 2:</p><p><img src=\"p/AspernES/uc8_var2.png\" alt=\"\" width=\"600\" height=\"415\"><br data-mce-bogus=\"1\"></p><p>Alternative 3:</p><p><img src=\"p/AspernES/uc8_var3.png\" alt=\"\" width=\"600\" height=\"402\"></p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_change_me ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_modifiability ;
          spec:useDecisionTactic          :DesignTactic_data_access .
  
  :DesignPattern_dedicated_component
          a                              gen:DesignPattern ;
          rdfs:label                     "Dedicated Component" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_uniformity , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_functionality , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_generality , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_utility , :ArchitecturalQuality_agility , :ArchitecturalQuality_flexibility ;
          gen:isAlternativeOf            :DesignTactic_multitenancy ;
          gen:wikiEntry                  "Components providing critical functionality shall be provided exclusively to tenants while still allowing other components to be shared between tenants.[Cloud Computing Patterns [date unknown]]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_cust-4__web_client_startup
          a                          spec:Requirement ;
          rdfs:label                 "CUST-4: Web Client Startup" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Fast Web Client\n  Start-up and load:</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">It takes between 7 to 10 seconds to launch&nbsp; syngo.plaza web client\n  and display first image in Viewer. In many HIS integrated web clients, this\n  poses a problem for user since web client is shutdown and restarted after\n  each study is closed and opened. The goal is to reduce this time duration to\n  less than 3 seconds.</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Customer / SCM" ;
          spec:requirementPurpose    "Fast start-up" .
  
  :DesignPattern_module
          a                              gen:DesignPattern ;
          rdfs:label                     "Module" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_compatibility , :ArchitecturalQuality_versatility , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_privacy , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_manageability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_portability , :ArchitecturalQuality_replicability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_complexity ;
          gen:isAlternativeOf            :DesignTactic_routing , :DesignTactic_logging , :DesignTactic_accounting , :DesignTactic_layering ;
          gen:wikiEntry                  "[Wikipedia Module Pattern 2014] The Module pattern is used to implement the concept of software modules defined by modular programming in a programming language that does not or only partially supports it. The Module pattern can be considered a creational pattern and a structural pattern. It allows to manage the creation of other elements and organize other elements and group them as the structural pattern does." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Module_pattern .
  
  :ProjectPhase_architecture
          a           cont:ProjectPhase ;
          rdfs:label  "architecture" .
  
  :Domain_ar-101__dwh_querying
          a           spec:Domain ;
          rdfs:label  "ar-101: dwh querying" .
  
  :DesignTactic_message_channeling
          a                             gen:DesignTactic ;
          rdfs:label                    "message channeling" , "Message Channeling" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:wikiEntry                 "Communication between a service and its consumers consists of sending data through a channel. In most cases you will use channels provided by your chosen service infrastructure such as Windows Communication Foundation (WCF). You must understand which patterns your chosen infrastructure supports and determine the appropriate channel for interaction with consumers of the service. Consider the following guidelines when designing message channels Determine appropriate patterns for messaging channels such as Channel Adapter Messaging Bus and Messaging Bridge and choose those appropriate for your scenario. Ensure that you also choose an appropriate service infrastructure compatible with requirements. Determine how you will intercept and inspect the data between endpoints if necessary. Ensure that you handle exception conditions on the channel. Consider how you will provide access to clients that do not support messaging." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Domain_web_applications
          a           spec:Domain ;
          rdfs:label  "web applications" .
  
  :DesignPattern_rest_architecture
          a                        gen:DesignPattern ;
          rdfs:label               "REST Architecture" ;
          gen:hasKnowledgeProject  :Project_aspernes ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_simplicity , :ArchitecturalQuality_visibility , :ArchitecturalQuality_scalability , :ArchitecturalQuality_portability , :ArchitecturalQuality_performance , :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf      :DesignTactic_web_interfaces ;
          gen:wikiEntry            "<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><strong><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">Re</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">presentational&nbsp;</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">S</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">tate&nbsp;</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">T</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">ransfer (REST)</span></strong></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST stands for&nbsp;<strong>Re</strong>presentational&nbsp;<strong>S</strong>tate&nbsp;<strong>T</strong>ransfer. (It is sometimes spelled \"ReST\".) It relies on a stateless, client-server, cacheable communications protocol -- and in virtually all cases, the HTTP protocol is used.</span>&nbsp;</p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST is&nbsp;<em>an architecture style</em>&nbsp;for designing networked applications. The idea is that, rather than using complex mechanisms such as CORBA, RPC or SOAP to connect between machines, simple HTTP is used to make calls between machines.&nbsp;</span><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">In many ways, the World Wide Web itself, based on HTTP, can be viewed as a REST-based architecture.</span></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">RESTful applications use HTTP requests to post data (create and/or update), read data (e.g., make queries), and delete data. Thus, REST uses HTTP for all four CRUD (Create/Read/Update/Delete) operations.</span></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST is a lightweight alternative to mechanisms like RPC (Remote Procedure Calls) and Web Services (SOAP, WSDL, et al.).&nbsp;</span><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Despite being simple, REST is fully-featured; there's basically nothing you can do in Web Services that can't be done with a RESTful architecture.</span></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\">&nbsp;</p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Source:</strong> </span></p>\n<ul>\n<li><a style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" href=\"http://rest.elkstein.org/\">http://rest.elkstein.org/</a></li>\n</ul>" ;
          spec:hasPatternDomain    :Domain_web_services ;
          owl:sameAs               dbr:Resource-oriented_architecture .
  
  :Requirement_perf-1__performance_requirements
          a                          spec:Requirement ;
          rdfs:label                 "PERF-1: Performance Requirements" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span lang=\"EN-US\">Performance Requirements in 3 MBPS line:</span><strong><span lang=\"EN-US\">&nbsp;</span></strong></p>\n<table class=\"MsoTableGrid\" style=\"margin-left: 18.0pt; border-collapse: collapse; border: none;\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td style=\"width: 29.95pt; border: 1pt solid windowtext; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"40\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><strong><span lang=\"EN-GB\">No.</span></strong></p>\n</td>\n<td style=\"width: 361.45pt; border-style: solid solid solid none; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"482\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><strong><span lang=\"EN-GB\">Operation</span></strong></p>\n</td>\n<td style=\"width: 69.4pt; border-style: solid solid solid none; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"93\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><strong><span lang=\"EN-GB\">Time (Sec)</span></strong></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 29.95pt; border-style: none solid solid; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext; border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"40\">\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">1</span></p>\n</td>\n<td style=\"width: 361.45pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"482\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">Time from open to log-in screen</span></p>\n</td>\n<td style=\"width: 69.4pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"93\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">1</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 29.95pt; border-style: none solid solid; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext; border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"40\">\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">2</span></p>\n</td>\n<td style=\"width: 361.45pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"482\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">Time from log-in to having a worklist</span></p>\n</td>\n<td style=\"width: 69.4pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"93\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">1</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 29.95pt; border-style: none solid solid; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext; border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"40\">\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">3 </span></p>\n</td>\n<td style=\"width: 361.45pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"482\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">Time to display 1000 studies in worklist</span></p>\n</td>\n<td style=\"width: 69.4pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"93\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">7</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 29.95pt; border-style: none solid solid; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext; border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"40\">\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">4</span></p>\n</td>\n<td style=\"width: 361.45pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"482\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">Time to display first image in Viewer</span></p>\n</td>\n<td style=\"width: 69.4pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"93\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">2</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 29.95pt; border-style: none solid solid; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext; border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"40\">\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">5</span></p>\n</td>\n<td style=\"width: 361.45pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"482\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">Time to load a CT series with&nbsp; 500 images (JPEG Lossless)</span></p>\n</td>\n<td style=\"width: 69.4pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"93\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">320</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 29.95pt; border-style: none solid solid; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext; border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"40\">\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">6</span></p>\n</td>\n<td style=\"width: 361.45pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"482\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">Time to close an exam</span></p>\n</td>\n<td style=\"width: 69.4pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"93\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">1</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 29.95pt; border-style: none solid solid; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext; border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"40\">\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">7</span></p>\n</td>\n<td style=\"width: 361.45pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"482\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">Time to refresh worklist (1000 studies)</span></p>\n</td>\n<td style=\"width: 69.4pt; border-style: none solid solid none; border-bottom-color: windowtext; border-bottom-width: 1pt; border-right-color: windowtext; border-right-width: 1pt; padding-top: 0cm; padding-right: 5.4pt; padding-bottom: 0cm;\" valign=\"top\" width=\"93\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-GB\">2</span></p>\n</td>\n</tr>\n</tbody>\n</table>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Performance in 3 MBPS line" ;
          spec:requirementPurpose    "Response time" .
  
  :Requirement_ar-104__stepwise_querying
          a                          spec:Requirement ;
          rdfs:label                 "AR-104: Stepwise querying" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes , :Project_aspernbm ;
          gen:wikiEntry              "Datenabfragen\n  sollen schrittweise erfolgen. Dabei werden zuerst Stammdaten, wie etwa\n  verfügbare Typen von Zielgrößen, Messgrößen, KPIs, Gebäuden,\n  Energiekonzepten, Stromverbrauchern, etc. abgefragt. Anschließen werden die\n  tatsächlichen Daten, die einer bestimmten Kombination von Typen, Größen und\n  Visualisierungsmerkmalen entsprechen müssen, abgefragt." , "<p style=\"font-size: small;\">Data queries shall be step-wise. First the available master data, including types of target values, metrics, KPIs, energy concepts, power consumers, etc. shall be queried. Afterward the actual data, which must correspond to a specific combination of types, sizes, and visualization features, shall be queried.</p>" ;
          spec:containedWithin       :UseCase_benchmarks , :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_sr-01_07 ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Adaptive Query Processing" .
  
  :DesignPattern_envelope_wrapper
          a                              gen:DesignPattern ;
          rdfs:label                     "Envelope Wrapper" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_message_transformation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Project_wos2016  a  cont:Project ;
          rdfs:label  "wos2016" .
  
  :AuthorTag_testing  a  cont:AuthorTag ;
          rdfs:label  "testing" .
  
  :DesignDecision_add-05__web_page_scraper
          a                               spec:DesignDecision ;
          rdfs:label                      "ADD-05: Web page scraper" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_safiddle ;
          gen:wikiEntry                   "<p><strong><span style=\"font-size: 18.6667px;\">Web page scraper</span></strong></p>\n<p><span style=\"font-size: 14pt;\">A&nbsp;modal window-based form is used for adding project and repository items (e.g., requirements, design patterns, etc.).&nbsp;<span style=\"line-height: 1.3em;\">The window is activated by a browser bookmark and shown in the upper right corner of the page. The functionality of the window is injected as a JavaScript into the underlying&nbsp;</span><span style=\"line-height: 1.3em;\">web</span><span style=\"line-height: 1.3em;\">&nbsp;page.</span></span></p>\n<p><span style=\"font-size: 14pt;\"><span style=\"line-height: 1.3em;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"p/saFiddle/modal_window.png\" alt=\"\" width=\"750\" height=\"570\"></span></span></p>\n<p><span style=\"font-size: 14pt;\"><strong>Parsing the underlying web page</strong></span></p>\n<p><span style=\"font-size: 14pt;\">The underlying web page is parsed upon opening the modal window-based form. The purpose of parsing is to suggest lists of classifiers, depending on the selected schema.</span></p>\n<p><strong><span style=\"font-size: 14pt;\">Scraping and editing content</span></strong></p>\n<p><span style=\"font-size: 14pt;\">The freetext for the new items is selected using the mouse on the underlying web page (e.g., the definition of a design pattern). This text can be edited afterward using a web-based HTML editor.</span></p>\n<p><strong><span style=\"font-size: 14pt;\">Adding items to the&nbsp;repository</span></strong></p>\n<p><span style=\"font-size: 14pt;\">A new item is added to the repository for each unique combination of classifiers. This way the content in the database will be de-normalized (with the exception of the URI of the free text part), which enables faceted search and navigation.</span></p>\n<p><span style=\"font-size: 14pt;\">In the following example, item 1 and 2 only differ by one classifier value: <span style=\"font-family: 'courier new', courier, monospace;\">nfr_name</span>. The content item is shared by both of them and stored in a separate table.</span></p>\n<p><span style=\"font-family: 'courier new', courier, monospace;\">Item 1: {</span></p>\n<p style=\"padding-left: 30px;\"><em><strong><span style=\"font-family: 'courier new', courier, monospace;\">\"nfr_name\": \"Accessibility\",</span></strong></em><br><span style=\"font-family: 'courier new', courier, monospace;\">\"tactic_name\": \"Barrier-free Access\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"pattern_name\": \"Interpretor\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"context_title\": \"Interpreter pattern\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"context_type\": \"Definition\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"context_url\": \"https://workspace.cee.siemens.com/content/00000102/Wiki/Interpretor.aspx?masterview=nwacollabprint\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"domain\": \"Abstract\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"author\": \"CT SAD-SRA\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"ups\": 0,</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"schema\": \"Design Patterns\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"project\": \"wiki\"</span></p>\n<p><span style=\"font-family: 'courier new', courier, monospace;\">}</span></p>\n<p><span style=\"font-family: 'courier new', courier, monospace;\">Item 2: {</span></p>\n<p style=\"padding-left: 30px;\"><em><strong><span style=\"font-family: 'courier new', courier, monospace;\">\"nfr_name\": \"Compatibility\",</span></strong></em><br><span style=\"font-family: 'courier new', courier, monospace;\">\"tactic_name\": \"Barrier-free Access\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"pattern_name\": \"Interpretor\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"context_title\": \"Interpreter pattern\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"context_type\": \"Definition\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"context_url\": \"https://workspace.cee.siemens.com/content/00000102/Wiki/Interpretor.aspx?masterview=nwacollabprint\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"domain\": \"Abstract\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"author\": \"CT SAD-SRA\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"ups\": 0,</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"schema\": \"Design Patterns\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"project\": \"wiki\"</span></p>\n<p><span style=\"font-family: 'courier new', courier, monospace;\">}</span></p>\n<p><span style=\"font-family: 'courier new', courier, monospace;\">Content for item 1 and 2:&nbsp;{</span></p>\n<p style=\"padding-left: 30px;\"><span style=\"font-family: 'courier new', courier, monospace;\">\"context_url\": \"https://workspace.cee.siemens.com/content/00000102/Wiki/Interpretor.aspx?masterview=nwacollabprint\",</span><br><span style=\"font-family: 'courier new', courier, monospace;\">\"content\": \"In computer programming, the interpreter pattern is a design pattern that specifies how to evaluate sentences in a language. The basic idea is to have a class for each symbol (terminal or nonterminal) in a specialized computer language. The syntax tree of a sentence in the language is an instance of the composite pattern and is used to evaluate (interpret) the sentence for a client.\"</span></p>\n<p><span style=\"font-family: 'courier new', courier, monospace;\">}</span></p>\n<p><strong><span style=\"font-size: 14pt;\">Preparing existing documents&nbsp;for scraping and classification</span></strong></p>\n<p><span style=\"font-size: 18.6667px;\">PDF and MS Word documents can be exported as HTML pages. The modal window form works as previously described for local HTML files as well as for online web pages.</span></p>" ;
          spec:decisionArchitecturalView  "Logical view" ;
          spec:hasDecisionDomain          :Domain_ar-08__rapid_specification_authoring , :Domain_ar-01__tool_support_for_sad , :Domain_ar-06__specialized_tool_misuse_prevention ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability , :ArchitecturalQuality_functionality ;
          spec:useDecisionTactic          :DesignTactic_script_injection , :DesignTactic_scraping .
  
  :DesignPattern_partitioning
          a                              gen:DesignPattern ;
          rdfs:label                     "Partitioning" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_completeness ;
          gen:isAlternativeOf            :DesignTactic_no_single_point_of_failure ;
          gen:wikiEntry                  "[MS Technet Partitioning 2008] Partitioning is the devision into distinct independent parts (segments) using a certain criteria such as ranges or hash values. In particular for databases horizontal and vertical segmentation can be distinguished. Horizontal segmentation (aka shard) segments one table into several with subset of rows while vertical segmentation changes the schema (column defintion) and splits one big table into several with a subset of columns. Partitioning also allows data to be structured hierarchically. Partitioning can be achieved without splitting tables by physically putting tables on individual disk drives. Putting a table on one physical drive and related tables on a separate drive can improve query performance because when queries that involve joins between the tables are run multiple disk heads read data at the same time. SQL Serverfilegroups can be used to specify on which disks to put the tables." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_service_autonomy
          a           gen:DesignTactic ;
          rdfs:label  "service autonomy" .
  
  :DesignTactic_multicasting
          a                             gen:DesignTactic ;
          rdfs:label                    "Multicasting" , "multicasting" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:wikiEntry                 "Multicasting is the delivery of a message or information to a group of recipients simultaneously in a single transmission from the source. Multicast clients usually subscribe their interest in certain types of events by registering to multicast groups. Group members are notified about events by sending messages to all subscribers. Multicast can be implemented via IP multicast or at the application layer using for example overlay networks." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignTactic_caching
          a           gen:DesignTactic ;
          rdfs:label  "caching" .
  
  :DesignPattern_bridge
          a                              gen:DesignPattern ;
          rdfs:label                     "Bridge" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_wrappability , :ArchitecturalQuality_portability , :ArchitecturalQuality_installability , :ArchitecturalQuality_correctness , :ArchitecturalQuality_versatility , :ArchitecturalQuality_replicability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_availability , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_testability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_operability , :ArchitecturalQuality_expressiveness , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_manageability , :ArchitecturalQuality_modifiability ;
          gen:isAlternativeOf            :DesignTactic_increase_cohesion , :DesignTactic_reduce_coupling , :DesignTactic_routing , :DesignTactic_message_channeling , :DesignTactic_abstraction , :DesignTactic_layering , :DesignTactic_monitoring ;
          gen:wikiEntry                  "[Wikipedia Bridge Pattern 2014] A Bridge decouples an abstraction from its implementation so that the two can vary independently. (GoF structural pattern)" ;
          spec:hasPatternDomain          :Domain_embedded_systems , :Domain_abstract ;
          owl:sameAs                     dbr:Bridge_pattern .
  
  :DesignDecision_kdd-12__resource_allocation
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-12: Resource Allocation" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Resource Allocation</strong></p>\n<p style=\"font-size: small;\">Allocating human and material resources (e.g., lab equipment, computers, other hardware, etc.) to different tasks is a known problem in process management. One way of optimizing resource allocation can be done using Answer Set Programming (ASP).&nbsp;One&nbsp;Camunda service task automates the resource planning by means of an ASP program.</p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Answer set programming</strong> (<strong style=\"font-size: small;\">ASP</strong>) is a form of <a title=\"Declarative programming\" target=\"_blank\" style=\"font-size: small;\">declarative programming</a> oriented towards difficult (primarily <a class=\"mw-redirect\" title=\"NP-hard\" target=\"_blank\" style=\"font-size: small;\">NP-hard</a>) <a title=\"Search algorithm\" target=\"_blank\" style=\"font-size: small;\">search problems</a>. It is based on the <a title=\"Stable model semantics\" target=\"_blank\" style=\"font-size: small;\">stable model</a> (answer set) semantics of <a title=\"Logic programming\" target=\"_blank\" style=\"font-size: small;\">logic programming</a>. In ASP, search problems are reduced to computing stable models, and <em style=\"font-size: small;\">answer set solvers</em> — programs for generating stable models—are used to perform search. The computational process employed in the design of many answer set solvers is an enhancement of the <a title=\"DPLL algorithm\" target=\"_blank\" style=\"font-size: small;\">DPLL algorithm</a> and, in principle, it always terminates (unlike <a title=\"Prolog\" href=\"https://en.wikipedia.org/wiki/Prolog\" style=\"font-size: small;\">Prolog</a> query evaluation, which may lead to an <a title=\"Infinite loop\" href=\"https://en.wikipedia.org/wiki/Infinite_loop\" style=\"font-size: small;\">infinite loop</a>).</p>" ;
          spec:decisionArchitecturalView  "2. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-07__seamless_adaptation ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_adaptability .
  
  :DesignPattern_private_key_encryption
          a                              gen:DesignPattern ;
          rdfs:label                     "Private Key Encryption" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_privacy , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_security , :ArchitecturalQuality_immunity , :ArchitecturalQuality_trustability , :ArchitecturalQuality_integrity ;
          gen:isAlternativeOf            :DesignTactic_encryption ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_leaky_bucket_counter
          a                              gen:DesignPattern ;
          rdfs:label                     "Leaky Bucket Counter" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_survivability , :ArchitecturalQuality_availability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_utility , :ArchitecturalQuality_robustness ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "To avoid overuse of resources or overload conditions within the system leaky bucket counters present a solution to measure whether the traffic message flow or task volume conforms the define limits (e.g. SLAs). The leaky bucket counter works in analogy to a bucket that has a hole at the bottom to allow a liquid to pour out at a constant rate. Liquid can be added in a constant rate or larger volumes at a bursty rate. However once the volume of liquid exceeds the volume of the bucket the bucket starts to leak.  The following figure illustrates pattern. A varying flow (top) will be smoothened/limited (bottom) through the leaky bucket.  Relations Error Detection [Hanmer 2007]Detection Patterns p. 86" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Leaky_bucket .
  
  :Domain_cloud_computing
          a           spec:Domain ;
          rdfs:label  "cloud computing" .
  
  :DesignPattern_remote_storage
          a                              gen:DesignPattern ;
          rdfs:label                     "Remote Storage" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_survivability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_robustness , :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability , :ArchitecturalQuality_availability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "The system does not save a copy from the whole system when a Checkpoint is taken. It will only save a part of it. The Remote Storage Pattern decides where to store (location) the Checkpoints so that the time before execution can be resumed after error recovery.  Store the saved checkpoints in a centrally accessible location and consider redundancy. This enables a new processor to access the saved checkpoint which minimizes the period of unavailability [Hanmer 2007]pp 171-173.  Relations Error Handling [Hanmer 2007]Error Recovery Patterns pp 171-173." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_availability
          a           cont:AuthorTag ;
          rdfs:label  "availability" .
  
  :DesignPattern_environment_to_task_-_push
          a                              gen:DesignPattern ;
          rdfs:label                     "Environment to Task - Push" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_availability ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_controllability , :ArchitecturalQuality_availability , :ArchitecturalQuality_configurability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_controllability ;
          gen:isAlternativeOf            :DesignTactic_synchronous_communication , :DesignTactic_asynchronous_communication , :DesignTactic_adaptation ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  :Domain_sr-01_13  a  spec:Domain ;
          rdfs:label  "sr-01.13" .
  
  :DesignPattern_error_correcting_code
          a                              gen:DesignPattern ;
          rdfs:label                     "Error Correcting Code" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_recoverability , :ArchitecturalQuality_availability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_safety , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_survivability , :ArchitecturalQuality_viability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_robustness , :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "Applying to the Error Correcting Codes Pattern means to add redundant information to data so that errors can be detected and also automatically corrected.Checksums work to detect that the item being protected is incorrect but cannot correct the data. The particular design and implementation of a software error correcting code is very context specific [Hanmer 2007] pp 224-225. Relations Error Handling [Hanmer 2007] Error Mitigation Patterns pp 224-225." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_responsive_design
          a           gen:DesignTactic ;
          rdfs:label  "responsive design" .
  
  :DesignPattern_prototype
          a                              gen:DesignPattern ;
          rdfs:label                     "Prototype" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_complexity , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_wrappability ;
          gen:isAlternativeOf            :DesignTactic_abstraction ;
          gen:wikiEntry                  "[Wikipedia Prototype Pattern 2014] A Prototype creates objects by cloning an existing object. (GoF creational pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Prototype_pattern .
  
  :DesignTactic_virtualization
          a           gen:DesignTactic ;
          rdfs:label  "virtualization" .
  
  :ProjectPhase_testing
          a           cont:ProjectPhase ;
          rdfs:label  "testing" .
  
  :ArchitecturalQuality_efficiency
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "efficiency" , "Efficiency" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_event_message , :DesignPattern_dynamically-adjustable_configuration , :DesignPattern_session_failover , :DesignPattern_bulk_synchronous_parallel , :DesignPattern_encapsulation , :DesignTactic_load_distribution , :DesignPattern_caching , :DesignPattern_facade , :DesignPattern_process_manager , :DesignPattern_competing_consumers , :DesignPattern_message_federation , :DesignPattern_virtual_platform , :DesignPattern_load_balancing , :DesignPattern_pipe_and_filter , :DesignPattern_scatter_and_gather , :DesignPattern_sharding_pattern , :DesignPattern_map_reduce , :DesignPattern_reflection , :DesignPattern_swappable_staging_environment , :DesignPattern_shared_space , :DesignPattern_decision_1 , :DesignPattern_execution_orchestrator , :DesignPattern_web_service_proxy , :DesignPattern_peripheral_specialist_elements , :DesignPattern_replication , :SoftwareEngineeringMethod_engineering_collaboration_optimization , :DesignTactic_change_propagation , :DesignPattern_queuing , :DesignPattern_enterprise_integration_patterns , :DesignPattern_static_content_hosting_pattern ;
          gen:relatedQuality       :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_scalability , :ArchitecturalQuality_performance ;
          gen:wikiEntry            "The capability of the software to provide the required performance relative to the amount of resources used under stated conditions. [Fact Guru] The extent to which a product or process can operate using the fewest possible resources  [Gnther Ruhe Claes Wohlin 2014]Efficiency is essentially viewed as an internally oriented productivity metric and method of evaluation as it is concerned with following procedures and prcoesses adhering to constraints or achieving with minimum resources.  [Tomasz Szmuc Marcin Szpyrka Jaroslav Zendulka 2009]Efficiency that describes the degree of achievement of definite parameter values and in fact is close to the notion of productivity.  [Alan Gillies 2011]Efficiency is concerned with the relationship between the software performance and the level of resources used." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_compensation
          a                              gen:DesignPattern ;
          rdfs:label                     "Compensation" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_safety , :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_dependability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_robustness , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_monitoring , :DesignTactic_fault_handling , :DesignTactic_error_handling , :DesignTactic_data_access ;
          gen:wikiEntry                  "[Oracle Understanding Service Compensation [date unknown]] The objective of the Compensation pattern is to alleviate the error effects through repair or error masking mechanisms. A repair strategy in a computational process could be to discard the recently computed erroneous value and replace the erroneous value by the previously computed value. Alternatively to utilize hot standby techniques suppose the system is designed following the simplex architecture approach the decision logic is able to detect errors and to compensate these errors by switching to the safety subsystem." , "<h2>Motivation</h2>\n<p align=\"justify\">The <em>Cancel Task </em>pattern provides the ability to withdraw a task which has been enabled or is already executing. This ensures that it will not commence or complete execution. </p>\n<h2>Overview</h2>\n<p align=\"justify\">The general interpretation of the <em>Cancel Task</em> pattern is illustrated by Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig25\" target=\"_blank\">25</a>. The trigger which has enabled task B is removed, preventing the task from proceeding.</p>\n<a name=\"fig25\" id=\"fig25\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig25.png\" width=\"539\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 25: </strong>Cancel task pattern (variant 1) </p>\n<p align=\"justify\">There is also a second variant of the pattern where the task has already commenced execution but has not yet completed. This scenario is shown in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig26\" target=\"_blank\">26</a>, where a task which has been enabled or is currently executing can be cancelled. It is important to note for both variants that cancellation is not guaranteed and it is possible that the task will continue executing to completion. In effect, the cancellation vs continuation decision operates as a <em>Deferred Choice</em> with a race condition being set up between the cancellation event and the much slower task of resources responding to work assignment. For all practical purposes, it is much more likely that the cancellation will be effected rather than the task being continued.</p>\n<a name=\"fig26\" id=\"fig26\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig26.png\" width=\"620\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 26:</strong> Cancel task pattern (variant 2) </p>\n<p align=\"justify\">Where guaranteed cancellation is required, the implementation of tasks should take the form illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig27\" target=\"_blank\">27</a>. The decision to cancel task B can only be made after it has been enabled and prior to it completing. Once this decision is made, it is not possible for the task to progress any further. For obvious reasons, it is not possible to cancel a task which has not been enabled (i.e. there is no \"memory\" associated with the action of cancelling a task in the way that there is for triggers) nor is it possible to cancel a task which has already completed execution. </p>\n<a name=\"fig27\" id=\"fig27\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig27.png\" width=\"734\" height=\"276\"></p>\n<p align=\"center\"><strong>Figure 27:</strong> Cancel task pattern with guaranteed termination</p>\n<p align=\"justify\">&nbsp;</p>" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_ar-06__specialized_tool_misuse_prevention
          a                          spec:Requirement ;
          rdfs:label                 "AR-06: Specialized tool misuse prevention" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_safiddle ;
          gen:wikiEntry              "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Avoid the misuse of specialized tools by project stakeholders.</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Rationale:</strong> Project stakeholders are magically attracted to Enterprise Architect without really understanding its real utility. Enterprise Architect licenses are expensive and limited.</span></p>" ;
          spec:containedWithin       :UseCase_sa_tool_support ;
          spec:hasRequirementOrigin  :Domain_ar-01__tool_support_for_sad ;
          spec:requirementGroup      "Tool support" ;
          spec:requirementPurpose    "Zero-footprint tool" .
  
  :DesignPattern_restful_architecture
          a                        gen:DesignPattern ;
          rdfs:label               "RESTful architecture" ;
          gen:hasKnowledgeProject  :Project_safiddle ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_scalability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_portability , :ArchitecturalQuality_visibility ;
          gen:isAlternativeOf      :DesignTactic_web_interfaces ;
          gen:wikiEntry            "<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><strong><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">Re</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">presentational&nbsp;</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">S</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">tate&nbsp;</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">T</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">ransfer (REST)</span></strong></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST stands for&nbsp;<strong>Re</strong>presentational&nbsp;<strong>S</strong>tate&nbsp;<strong>T</strong>ransfer. (It is sometimes spelled \"ReST\".) It relies on a stateless, client-server, cacheable communications protocol -- and in virtually all cases, the HTTP protocol is used.</span>&nbsp;</p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST is&nbsp;<em>an architecture style</em>&nbsp;for designing networked applications. The idea is that, rather than using complex mechanisms such as CORBA, RPC or SOAP to connect between machines, simple HTTP is used to make calls between machines.&nbsp;</span><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">In many ways, the World Wide Web itself, based on HTTP, can be viewed as a REST-based architecture.</span></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">RESTful applications use HTTP requests to post data (create and/or update), read data (e.g., make queries), and delete data. Thus, REST uses HTTP for all four CRUD (Create/Read/Update/Delete) operations.</span></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST is a lightweight alternative to mechanisms like RPC (Remote Procedure Calls) and Web Services (SOAP, WSDL, et al.).&nbsp;</span><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Despite being simple, REST is fully-featured; there's basically nothing you can do in Web Services that can't be done with a RESTful architecture.</span></p>" ;
          spec:hasPatternDomain    :Domain_web_services ;
          owl:sameAs               dbr:Resource-oriented_architecture .
  
  gen:endorsements  a  owl:DatatypeProperty ;
          rdfs:domain  gen:SoftwareEngineeringMethod ;
          rdfs:range   xsd:int .
  
  :DesignPattern_routine_exercises
          a                              gen:DesignPattern ;
          rdfs:label                     "Routine Exercises" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_fault_tolerance ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_resilience , :ArchitecturalQuality_integrity , :ArchitecturalQuality_safety , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_survivability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "Routine Exercises are to make sure that redundant elements that will be called into service by a Failover in case of an error will actually work. The system components that have faults will be identified by Routine Exercises. Therefore the faulty elements can then be corrected before a failure occurs that requires the faulty component to be used for real operation [Hanmer 2007]pp 124-126.  Relations Error Detection [Hanmer 2007]Detection Patterns pp 124-126." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_maintainability
          a           cont:AuthorTag ;
          rdfs:label  "maintainability" .
  
  :AuthorTag_test  a  cont:AuthorTag ;
          rdfs:label  "test" .
  
  :DesignDecision_kdd-31
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-31" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Granularität der Ergebnisse</strong></p><p>Die Granularität der Ergebnisse muss mit Rücksicht auf die Zeitspanne, für welche die Ergebnisse angefordert wurden, angepasst werden. Dabei sind folgende Einschränkungen denkbar:<br></p><ul><li><span style=\"line-height: 1.3em;\">Bei einer Zeitspanne von bis zu einer Woche &gt;&gt; beliebige Granularität</span><br></li><li><span style=\"line-height: 1.3em;\">Bei einer Zeitspanne von bis zu einem Monat &gt;&gt;&nbsp;Tag als Integrationseinheit</span><br></li><li><span style=\"line-height: 1.3em;\">Bei einer Zeitspanne von bis zu einem Jahr &gt;&gt;&nbsp;Woche als Integrationseinheit</span><br></li><li><span style=\"line-height: 1.3em;\">Bei einer Zeitspanne von mehreren Jahren &gt;&gt;&nbsp;Monat als Integrationseinheit</span><br></li></ul><p><strong>Anmerkung:</strong> Mit Integrationseinheit wird die für die Aufsummierung oder Mittelung einzelner Messwerte verwendete Zeitspanne bezeichnet.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-151__visualization_granularity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_usability ;
          spec:useDecisionTactic          :DesignTactic_adaptive_query_processing .
  
  :AuthorTag_integration
          a           cont:AuthorTag ;
          rdfs:label  "integration" .
  
  :Requirement_ar-07__pattern-oriented_architecture
          a                          spec:Requirement ;
          rdfs:label                 "AR-07: Pattern-oriented architecture" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_safiddle ;
          gen:wikiEntry              "<p><span style=\"font-size: 18.6667px;\" data-mce-style=\"font-size: 18.6667px;\">Spend less time on formatting and more time on finding suitable design patterns and on comprehensive quality attribute analyses collaboratively.&nbsp;</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Rationale:</strong>&nbsp;MS Word eats up too much time for&nbsp;formatting issues.&nbsp;This time could be spent on finding suitable&nbsp;design patterns and performing quality attribute analyses when writing architecture specifications. Collaboration with other architects is not sufficiently content-oriented.</span></p>" ;
          spec:containedWithin       :UseCase_sa_tool_support ;
          spec:hasRequirementOrigin  :Domain_ar-01__tool_support_for_sad ;
          spec:requirementGroup      "Tool support" ;
          spec:requirementPurpose    "Knowledge orientation" .
  
  :DesignPattern_eventual_consistency
          a                              gen:DesignPattern ;
          rdfs:label                     "Eventual Consistency" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown ;
          gen:isAlternativeOf            :DesignTactic_unknown ;
          gen:wikiEntry                  "If data is stored at different locations (replicas) to improve response time and avoid data loss in case of failures. Performance and the availability of data in case of network partitioning are enabled by ensuring data consistency eventually and not at all times. [Cloud Computing Patterns [date unknown]]" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Eventual_consistency .
  
  :DesignPattern_retry_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Retry Pattern" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki , :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_availability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_dependability , :ArchitecturalQuality_safety , :ArchitecturalQuality_viability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_survivability , :ArchitecturalQuality_autonomy ;
          gen:isAlternativeOf            :DesignTactic_fault_handling , :DesignTactic_failure_handling ;
          gen:wikiEntry                  "<h3 class=\"title\">Retry Pattern</h3>\n<div id=\"mainSection\">\n<div id=\"mainBody\">\n<p>Enables an application to handle anticipated, temporary failures when it attempts to connect to a service or network resource by transparently retrying an operation that has previously failed in the expectation that the cause of the failure is transient. This pattern can improve the stability of the application.</p>\n<h3 class=\"heading\">Context and Problem</h3>\n<p>An application that communicates with elements running in the cloud must be sensitive to the transient faults that can occur in this environment. Such faults include the momentary loss of network connectivity to components and services, the temporary unavailability of a service, or timeouts that arise when a service is busy.&nbsp;These faults are typically self-correcting, and if the action that triggered a fault is repeated after a suitable delay it is likely to be successful. For example, a database service that is processing a large number of concurrent requests may implement a throttling strategy that temporarily rejects any further requests until its workload has eased. An application attempting to access the database may fail to connect, but if it tries again after a suitable delay it may succeed.</p>\n<h3 class=\"heading\">Solution</h3>\n<p>In the cloud, transient faults are not uncommon and an application should be designed to handle them elegantly and transparently, minimizing the effects that such faults might have on the business tasks that the application is performing.</p>\n<p>If an application detects a failure when it attempts to send a request to a remote service, it can handle the failure by using the following strategies:</p>\n<ul>\n<li>If the fault indicates that the failure is not transient or is unlikely to be successful if repeated (for example, an authentication failure caused by providing invalid credentials is unlikely to succeed no matter how many times it is attempted), the application should abort the operation and report a suitable exception.</li>\n<li>If the specific fault reported is unusual or rare, it may have been caused by freak circumstances such as a network packet becoming corrupted while it was being transmitted. In this case, the application could retry the failing request again immediately because the same failure is unlikely to be repeated and the request will probably be successful.</li>\n<li>If the fault is caused by one of the more commonplace connectivity or &ldquo;busy&rdquo; failures, the network or service may require a short period while the connectivity issues are rectified or the backlog of work is cleared. The application should wait for a suitable time before retrying the request.</li>\n</ul>\n<p>For the more common transient failures, the period between retries should be chosen so as to spread requests from multiple instances of the application as evenly as possible. This can reduce the chance of a busy service continuing to be overloaded. If many instances of an application are continually bombarding a service with retry requests, it may take the service longer to recover.</p>\n<p>If the request still fails, the application can wait for a further period and make another attempt. If necessary, this process can be repeated with increasing delays between retry attempts until some maximum number of requests have been attempted and failed. The delay time can be increased incrementally, or a timing strategy such as exponential back-off can be used, depending on the nature of the failure and the likelihood that it will be corrected during this time.</p>\n<p>The figure below&nbsp;illustrates this pattern. If the request is unsuccessful after a predefined number of attempts, the application should treat the fault as an exception and handle it accordingly.</p>\n<p><img id=\"F67C15D0BBD1904BCD7493AE870920A2\" style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"Figure 1 - Invoking an operation in a hosted service using the Retry pattern\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC709538.png\" alt=\"Figure 1 - Invoking an operation in a hosted service using the Retry pattern\" width=\"450\" /></p>\n<p>&nbsp;</p>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_software_ecosystems , :Domain_cloud_computing , :Domain_web_services , :Domain_abstract .
  
  :DesignPattern_virtual_paging___infinite_scrolling
          a                              gen:DesignPattern ;
          rdfs:label                     "Virtual Paging / Infinite Scrolling" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_usability , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_infinite_scrolling , :DesignTactic_virtual_paging ;
          gen:wikiEntry                  "<h2>Virtual Paging / Infinite Scrolling</h2><p>Virtual paging allows the grid to lazy load rows from the server depending on what the scroll position is of the grid.</p><p>If the grid knows how many pages in total at the start, the scroll will be sized to match the entire data set despite the data set not loaded from the server.</p><p>If the grid does not know how many pages at the start, the scroll will extend automatically until the last row is reached. This feature is known in other grids as <strong>infinite scrolling</strong>.</p><p><strong>Note:</strong> Pagination and Virtual Paging are different solutions to the same problem. It is not possible to apply both at the same time.</p><h4>How it Works</h4><p>The following diagram is a high level overview:</p><p><img src=\"http://www.angulargrid.com/angular-grid-virtual-paging/high-level.png\" alt=\"\" data-mce-src=\"http://www.angulargrid.com/angular-grid-virtual-paging/high-level.png\"></p><p>The virtual model behind the grid contains a cache of pages. Each page contains a subset of the entire data set. When the grid scrolls to a position where there is no corresponding page in the cache, the virtual model uses the provided datasource (you provide the datasource) to get the rows for the requested page. In the diagram, the datasource is getting the rows from a database in a remote server.</p>" ;
          spec:hasPatternDomain          :Domain_user_interfaces .
  
  :SoftwareEngineeringMethod_built-in_self-test_methods
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Built-in self-test methods" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdwiki ;
          gen:methodContext        "Dependable systems" ;
          gen:methodInput          "NFR specifications" , "HW/SW specifications" ;
          gen:methodOutput         "HW/SW partial redesign" , "Architecture modifications" , "HW/SW reconfiguration" , "Safe stop" , "System recovery" ;
          gen:methodPurpose        "Runtime diagnostics" ;
          gen:wikiEntry            "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>Built-in self test methods are used to provide required level of runtime diagnostics coverage. They comprise checks of hardware, software, communication, logic invariants. Such checks are usually performed on regular level, check intervals are usually derived from system availability requirements. Outcome of such checks could be system recovery or safe stop.</p></td>\n</tr>\n</tbody></table>Image source: <a href=\"http://www.martinfowler.com/bliki/SelfTestingCode.html\" class=\"external-link\" rel=\"nofollow\" target=\"_blank\">http://www.martinfowler.com/bliki/SelfTestingCode.html</a><p><span class=\"confluence-embedded-file-wrapper\"><img class=\"confluence-embedded-image\" src=\"https://wiki.ct.siemens.de/download/attachments/100764906/sketch.png?version=1&amp;modificationDate=1439444704110&amp;api=v2\" data-image-src=\"/download/attachments/100764906/sketch.png?version=1&amp;modificationDate=1439444704110&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"102269171\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"sketch.png\" data-base-url=\"https://wiki.ct.siemens.de\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"100764906\" data-linked-resource-container-version=\"9\"></span><span><br></span></p><h1 id=\"Built-inselftestmethods-Description\"><span>Description&nbsp;</span></h1><p>Built-in self test (BIST) methods is a generic term which is used to describe set of system features to detect faults, errors and failures autonomously. In addition to that security protection should also be monitored. For BIST implementation can be used software and hardware methods. Main requirement for BIST is diagnostic coverage, it means a degree to which the system can cover its components by self-testing. Depending on system criticality it might be 95% or more.Implementation of BIST methods starts from requirements, certain methods can be derived from standards to which the system must conform. E.g. IEC 61508 standard (e.g. see Part 7, appendixes A) contains number of techniques that should be used for self-testing.</p><p>Available in the team practical knowledge of BIST methods like</p><ul><li><a href=\"https://wiki.ct.siemens.de/display/CTIISD/Coded+processing\" target=\"_blank\">coded processing</a> / modified checksum / monitored outputs / input comparison and voting</li><li>temporal and logical program sequence monitoring / temporal monitoring with on-line check</li><li>watch-dogs</li><li>filesystem integrity monitoring</li><li>test by redundant hardware and software / monitored redundancy / reciprocal comparison by software / dual-rail principle / multi-channel parallel output</li><li>hardware periodic checks implementation (by using hardware self-test features) / RAM tests and monitoring</li><li>invariable memory ranges</li></ul><h2 id=\"Built-inselftestmethods-Context\">Context</h2><p>System that has special demands for reliability, availability, maintainability, safety and security.</p><h2 id=\"Built-inselftestmethods-Inputs\">Inputs&nbsp;</h2><p>System requirements, architecture, hardware and software design specifications, <a href=\"https://wiki.ct.siemens.de/display/CTIISD/FTA+and+HAZOP+for+Software-Intensive+Systems\" target=\"_blank\">FTA, FMEA and/or HAZOP analysis</a>.</p><h2 id=\"Built-inselftestmethods-Outputs\">Outputs&nbsp;</h2><p>Architecture modifications, hardware and software re-configuration or partial re-design.</p><h2 id=\"Built-inselftestmethods-Procedure\">Procedure</h2><p>Investigate requirements and other available documentation from the \"input\" section, derive and rate the techniques, implement selected.</p><h2 id=\"Built-inselftestmethods-Advantagesanddisadvantages\">Advantages and disadvantages</h2><p>Advantages</p><ul><li>automatic errors detection and if possible recovery (fault-tolerance)</li><li>higher safety, security, maintainability and availability of the system</li></ul><p>Disadvantages</p><ul><li>higher complexity</li><li>performance overhead</li></ul><h2 id=\"Built-inselftestmethods-Example\">Example&nbsp;</h2><p>Most of the methods are used in various Siemens products, e.g. redundancy in high-available SIMATICs - H-series, fail-safe SIMATICs - F-series; in plants automation software like SPPA-T3000 and others.</p><h2 id=\"Built-inselftestmethods-Variants\">Variants</h2><p>With limitations an alternative to errors detection could be errors prevention by e.g. applying <a href=\"https://wiki.ct.siemens.de/display/CTIISD/Formal+Verification\" target=\"_blank\">formal methods</a>.</p>" .
  
  :DesignPattern_decorator
          a                              gen:DesignPattern ;
          rdfs:label                     "Decorator" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_composability , :ArchitecturalQuality_structuredness ;
          gen:isAlternativeOf            :DesignTactic_composition ;
          gen:wikiEntry                  "[Wikipedia Decorator Pattern 2014]A Decorator dynamically adds/overrides behaviour in an existing method of an object. (GoF structural pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Decorator_pattern .
  
  :Domain_ar-07__seamless_adaptation
          a           spec:Domain ;
          rdfs:label  "ar-07: seamless adaptation" .
  
  :DesignDecision_kdd-07__mining_process
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-07: Mining Process" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<h2 style=\"text-align: left;\" align=\"center\"><span lang=\"EN-US\">Process Monitoring and Mining</span></h2>\n<p style=\"text-align: left;\"><span lang=\"DE-AT\" style=\"font-size: 12pt;\">The mining process aimes at the following aspects of safety-critical processes:</span></p>\n<p style=\"text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]-->&ndash;&nbsp;&nbsp;&nbsp;&nbsp; <!--[endif]-->Process compliance constraints &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>\n<p style=\"text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\">&ndash;&nbsp;&nbsp;&nbsp;&nbsp; </span><!--[endif]--><span lang=\"EN-US\">Structured querying of streaming event data &nbsp;&nbsp; </span></span></p>\n<p style=\"text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\">&ndash;&nbsp;&nbsp;&nbsp;&nbsp; </span><!--[endif]--><span lang=\"EN-US\">Ensure security in the execution of critical activities and the access to confidential information &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>\n<p style=\"text-align: left;\"><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--><span lang=\"EN-US\">&ndash;&nbsp;&nbsp;&nbsp;&nbsp; </span><!--[endif]--><span lang=\"EN-US\">Mechanisms for automatic compliance checking to enable online monitoring and enforce rules and policies during process execution</span></span></p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">The monitoring and mining process&nbsp;</span><span lang=\"EN-US\">r</span><span lang=\"EN-US\">uns in parallel with the productive business processes.&nbsp;</span></span><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">Its main task consists of mining the unstructured process data.</span></span><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">&nbsp;The&nbsp;r</span><span lang=\"EN-US\">esults (insights) are given either in natural langage or an RDF format:</span></span></p>\n<ul>\n<li><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">Natural language &gt;&gt;</span><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">&nbsp;Expert-driven adaptation (for safety and/or mission critical processes)</span></li>\n<li><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">RDF format (JSON-LD) </span><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">&gt;&gt;</span><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\"> Automated adaptation (for non-critical processes)</span></li>\n</ul>\n<p><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">An insight can be anything that can potentially lead to a new requirement to the main process. For example, they could also show under which circumstances different&nbsp;key performance indicators (KPI) may exceed their designated \"safe\" range. I<span lang=\"EN-US\">nsights are used to inform the adaptation process.</span></span></span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Example Insight</strong></span></p>\n<p><span style=\"font-size: 12pt;\"><em>Mining task:</em> Look into</span><span style=\"font-size: 12pt;\">&nbsp;GIT (versioning system) logs produced by the process</span></p>\n<p><span style=\"font-size: 12pt;\"><em>Result:</em> Reverse engineered Gantt chart. The method for creating this Gantt chart is described in more details in the following publication:&nbsp;</span><em><span style=\"font-size: 12pt;\">BALA, S., CABANILLAS, C., MENDLING, J., ROGGE-SOLTI, A., POLLERES, A. (2015). Mining Project-Oriented Business Processes. Lecture Notes in Computer Science 9253, 425-440.</span></em></p>\n<p><em><span style=\"font-size: 12pt;\"><img src=\"p/Shape/gantt.png\" alt=\"\" width=\"578\" height=\"168\" /></span></em></p>\n<p><em><span style=\"font-size: 12pt;\">Insight: </span></em><span style=\"font-size: 12pt;\">Process can be optimized (see D3.2 for details)</span><em><span style=\"font-size: 12pt;\"><br /></span></em></p>\n<p><em><span style=\"font-size: 12pt;\">Derived requirement: </span></em><span style=\"font-size: 12pt;\">Adapt the processes accordingly.</span></p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-05__compliance_checking ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_safety , :ArchitecturalQuality_adaptability , :ArchitecturalQuality_auditability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_integrity ;
          spec:useDecisionTactic          :DesignTactic_process_mining .
  
  :Requirement_ar-012__protocols_and_formats
          a                          spec:Requirement ;
          rdfs:label                 "AR-012: Protocols and Formats" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "<p style=\"font-size: small;\"><span style=\"font-size: small;\"><span lang=\"EN-US\" style=\"font-size: small;\">The system shall support the&nbsp;</span><span lang=\"EN-US\" style=\"font-size: small;\">publishing of data in the following formats and protocols:</span></span></p>\n<div style=\"position: relative; font-size: small;\">\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">SOAP,&nbsp;</span></li>\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">REST,&nbsp;</span></li>\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">JSON,&nbsp;</span></li>\n<li style=\"font-size: small;\"><span style=\"font-size: small;\">XML</span></li>\n</ul>\n</div>" ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "Multiple protocol support" , "Multiple format support" .
  
  :AuthorTag_performance_engineering
          a           cont:AuthorTag ;
          rdfs:label  "performance engineering" .
  
  :DesignTactic_message_endpoint
          a                             gen:DesignTactic ;
          rdfs:label                    "Message Endpoint" , "message endpoint" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:wikiEntry                 "The message endpoint represents the connection that applications use to interact with your service. The implementation of your service interface represents the message endpoint. When designing the service implementation you must consider the possibility that duplicate or invalid messages can be sent to your service. Consider the following guidelines when designing message endpoints Determine relevant patterns for message endpoints such as Gateway Mapper Competing Consumers and Message Dispatcher and choose those appropriate for your scenario. Determine if you should accept all messages or whether you need to implement a filter to handle specific messages. Design for idempotency in your message interface. Idempotency is the situation where you could receive duplicate messages from the same consumer but should handle only one. In other words an idempotent endpoint will guarantee that only one message will be handled and all duplicate messages will be ignored. Design for commutativity in your message interface. Commutativity is related to the order in which messages are received. In some cases you may need to store inbound messages so that they can be processed in the correct order. Design for disconnected scenarios. For example you might need to support guaranteed delivery by caching or storing messages for later delivery. Ensure you do not attempt to subscribe to endpoints while disconnected." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Requirement_ar-06__failure_recovery
          a                          spec:Requirement ;
          rdfs:label                 "AR-06: Failure recovery" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_shape ;
          gen:wikiEntry              "The system shall have means for recovering from failure during process execution." ;
          spec:containedWithin       :UseCase_adaptation ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Safety" ;
          spec:requirementPurpose    "Failure recovery" .
  
  :DesignTactic_adaptive_query_processing
          a           gen:DesignTactic ;
          rdfs:label  "adaptive query processing" .
  
  :Domain_ara-3  a    spec:Domain ;
          rdfs:label  "ara-3" .
  
  :Domain_ar-158__standard_compatibility
          a           spec:Domain ;
          rdfs:label  "ar-158: standard compatibility" .
  
  :DesignTactic_querying
          a           gen:DesignTactic ;
          rdfs:label  "querying" .
  
  :DesignPattern_separate_system-managed_data
          a                              gen:DesignPattern ;
          rdfs:label                     "Separate system-managed data" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_stability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_durability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_availability , :ArchitecturalQuality_observability , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_consistency ;
          gen:isAlternativeOf            :DesignTactic_isolation , :DesignTactic_monitoring ;
          gen:wikiEntry                  "[Dyson P Longshaw A. 2004] pp. 347-349. This pattern concerns the envolvement of the schema of the application without making it unavailable for a long period of time or risking that the new system malfunctions when it is brought into service. The schema has to be separated for system-managed data from that for externally-managed data. These schemas should be migrated to minimalize the amount of time the system is unavailable and the risk should be reduced of migration failing.   Relations Monitoring To monitor means to be aware of the state of the data. System monitors collect and store state data so it would fit for Separate system-managed data in order to store system-managed data and externally-managed data. The state of the data must be aware according to monitoring and so it would be best to migrate to minimalize the amount of time the system is unavailable and the risk should reduce migration failing. IoslationWith isolation changes that have been made within one operation are visible to the concurrent operation so it would be good at the point of minimalizing time of unavailability and migration failing." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_ad-008__wso2_api_registry
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-008: WSO2 API Registry" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">API Registry</strong></p>\n<p style=\"font-size: small;\">The API Registry is a component of relatively low complexity. It basically consists of an Interface layer, in our case REST-style and a persistence Layer, typically a database. Requests arriving at the API Registry will be forwarded to the database for storing, or updating the information about the concerned APIs.</p>\n<p style=\"font-size: small;\">The information typically stored in the API Registry is shown in the following table:&nbsp;</p>\n<table style=\"width: 100%; border-color: black; font-size: small;\" border=\"1px\">\n<tbody style=\"font-size: small;\">\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p><span style=\"font-size: 12pt;\"><strong>Name</strong></span></p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p><span style=\"font-size: 12pt;\"><strong>Description</strong></span></p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>Creator</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>The user that created the API</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>API Name</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>The name of the API</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>Version</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>The version of the API</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>State</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>e.g. published, in review</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>Description</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>Short description</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>Endpoints</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>Information on local and remote endpoints</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>Documentation</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>Link to extensive documentation</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>Icon</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>Visual image for display in stores and marketplaces</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"211\" style=\"font-size: small;\">\n<p>Endpoint Security</p>\n</td>\n<td width=\"211\" style=\"font-size: small;\">\n<p>Information about the endpoint security patterns and credentials e.g. HTTP basic, OAUTH2 or WS-Trust and required claims and tokens</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p style=\"font-size: small;\">The WSO2 API-Registry that was&nbsp;deployed can be configured to use any relational database. Currently, the&nbsp;H2 database is used, while a different database technology may be considered for the production version of the system.</p>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-014__api_access_control ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_manageability ;
          spec:useDecisionTactic          :DesignTactic_lookup .
  
  :ArchitecturalQuality_generality
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "generality" , "Generality" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_dedicated_component , :DesignTactic_vertical_scaling , :DesignPattern_dynamically-discoverable_elements , :DesignPattern_local_cache , :DesignPattern_tenant-isolated_component , :DesignPattern_replication , :DesignPattern_expendable_hardware , :DesignPattern_fork_and_join , :DesignPattern_shared_component , :DesignTactic_multitenancy ;
          gen:relatedQuality       :ArchitecturalQuality_unknown ;
          gen:wikiEntry            "Generality isthe requirement of a system that tries to asses the degree to which a system or component of a system can perform a variety of purposes [Volney 2011].   Relations Vertical Scaling adds more processors and storage to a computing node and extends it processing capability so it helps to enable a system or a component to perform a variety of purposes through more processing capability." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_serialization
          a                              gen:DesignPattern ;
          rdfs:label                     "Serialization" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Serialization and data interchange</h1>\n\n<ul class=\"content-list-1\">\n<li><a href=\"http://www.viva64.com/en/l/full/#ID0EHHAC\" target=\"_blank\">Using types of changeable capacity</a></li>\n<li><a href=\"http://www.viva64.com/en/l/full/#ID0EULAE\" target=\"_blank\">Ignoring the byte order</a></li>\n<li><a href=\"http://www.viva64.com/en/l/full/#ID0EJXAE\" target=\"_blank\">Diagnosis</a></li>\n</ul>\n<p>Succession to existing data interchange protocols is an important component of the process of porting a program solution to a new platform. You need to provide the capability of reading the existing projects' formats, data interchange between 32-bit and 64-bit processes, etc.</p>\n<p>Basically, the errors of this pattern concern serialization of <a href=\"http://www.viva64.com/en/t/0030/\" class=\"link-inner\" target=\"_blank\">memsize</a>-types and data interchange operations they are used in:</p>\n<pre class=\"clear cleared\"><code><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"typ\">PixelsCount</span><span class=\"pun\">;</span><span class=\"pln\">\n   fread</span><span class=\"pun\">(&amp;</span><span class=\"typ\">PixelsCount</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">sizeof</span><span class=\"pun\">(</span><span class=\"typ\">PixelsCount</span><span class=\"pun\">),</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> inFile</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\"> __int32 value_1</span><span class=\"pun\">;</span><span class=\"pln\">\n   SSIZE_T value_2</span><span class=\"pun\">;</span><span class=\"pln\">\n   inputStream </span><span class=\"pun\">&gt;&gt;</span><span class=\"pln\"> value_1 </span><span class=\"pun\">&gt;&gt;</span><span class=\"pln\"> value_2</span><span class=\"pun\">;</span></code></pre>\n<p>These samples contain errors of two kinds: using types of changeable capacity in binary interfaces and ignoring the byte order.</p>\n<h2>Using types of changeable capacity<a name=\"ID0EHHAC\" href=\"http://www.viva64.com/en/l/full/\" target=\"_blank\"></a></h2>\n<p>Do not use types that change their sizes depending upon the development environment in binary interfaces of data interchange. All the types in C++ do not have a fixed size, so they cannot be used for this purpose. That is why developers of software development tools and programmers themselves create data types that have a strictly fixed size such as __int8, __int16, INT32, word64, etc.</p>\n<p>These types enable data interchange between programs on various platforms although it requires some additional efforts. The two examples shown above are written incorrectly and it will become clear when some data types change their sizes from 32 bits to 64 bits. Keeping in mind the necessity of supporting obsolete data types, you may correct these samples in the following way:</p>\n<pre class=\"clear cleared\"><code><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"typ\">PixelsCount</span><span class=\"pun\">;</span><span class=\"pln\">\n   __uint32 tmp</span><span class=\"pun\">;</span><span class=\"pln\">\n   fread</span><span class=\"pun\">(&amp;</span><span class=\"pln\">tmp</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">sizeof</span><span class=\"pun\">(</span><span class=\"pln\">tmp</span><span class=\"pun\">),</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> inFile</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"typ\">PixelsCount</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">static_cast</span><span class=\"str\">&lt;size_t&gt;</span><span class=\"pun\">(</span><span class=\"pln\">tmp</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\"> __int32 value_1</span><span class=\"pun\">;</span><span class=\"pln\">\n   __int32 value_2</span><span class=\"pun\">;</span><span class=\"pln\">\n   inputStream </span><span class=\"pun\">&gt;&gt;</span><span class=\"pln\"> value_1 </span><span class=\"pun\">&gt;&gt;</span><span class=\"pln\"> value_2</span><span class=\"pun\">;</span></code></pre>\n<p>But this way of correcting the code is not the best. The program may process more data after being ported to a 64-bit system, so 32-bit types in the code may become a great obstacle. In this case you may leave the obsolete code as it is to make it compatible with the obsolete data format but fix the incorrect types. Then you may create a new binary data format taking into consideration the previous errors. One more way out is to refuse to use binary formats and take the text format or other formats provided by various libraries.</p>\n<h2>Ignoring the byte order<a name=\"ID0EULAE\" href=\"http://www.viva64.com/en/l/full/\" target=\"_blank\"></a></h2>\n<p>Even after solving the issue of type sizes, you may encounter the problem of incompatibility of binary formats. The cause lies in a different data representation. It is most often related to a different byte order.</p>\n<p>A byte order is a method of writing the bytes of multibyte numbers (see also Figure 1). The little-endian byte order means that the writing begins with the least-significant byte and ends with the most-significant byte. This writing order is employed in the memory of personal computers with <a href=\"http://www.viva64.com/en/t/0060/\" class=\"link-inner\" target=\"_blank\">x86</a> and <a href=\"http://www.viva64.com/en/t/0059/\" class=\"link-inner\" target=\"_blank\">x86-64</a>-processors. The big-endian byte order means that the writing begins with the most-significant byte and ends with the least-significant byte. This order is a standard for TCP/IP protocols. That is why the big-endian byte order is often called the network byte order. This byte order is used in Motorola 68000 and SPARC processors.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/19_Pattern_11_Serialization/image2.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/19_Pattern_11_Serialization/image1.png\" alt=\"Figure 1 - The byte order in a 64-bit type in little-endian and big-endian systems\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 1 - The byte order in a 64-bit type in little-endian and big-endian systems</span></p>\n<p>While developing a binary interface or data format, you should remember about the byte order. If the 64-bit system you are porting your 32-bit application to has a byte order different from that of your application, you will have to adjust your code to this difference. To convert the big-endian byte order into the little-endian byte order and vice versa you may use the functions htonl(), htons(), bswap_64, etc.</p>\n<p><span class=\" span-i\">Note. Many systems lack functions like bswap_64 while the function ntohl() allows you to reverse only 32-bit values. They forgot to add a version of this function for 64-bit types for some reason. If you need to change the byte order in a 64-bit variable, see the discussion of the topic \"64 bit ntohl() in C++ ?\" on stackoverflow.com site - there are several examples of how to implement this function.</span></p>" ;
          spec:hasPatternDomain          :Domain_visual_c__ ;
          owl:sameAs                     dbr:Serialization .
  
  gen:has  a          owl:ObjectProperty ;
          rdfs:label  "has" .
  
  :DesignPattern_let_sleeping_dogs_lie
          a                              gen:DesignPattern ;
          rdfs:label                     "Let Sleeping Dogs Lie" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_resilience , :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_viability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "This pattern tackles the problem whether a fault should be corrected or left present. The benefits of correcting the known fault and the errors that it causes with the potential unknown faults and errors that might accidentally are introduced must be weighed. Sometimes it will be best to Let Sleeping Dogs Lie and not make the correction. Another thing to consider are the costs associated with with correctingfaults [Hanmer 2007]pp 230-232.  Relations Error Handling [Hanmer 2007]FaultTreatment Patterns pp 230-232. Fault Handling [Hanmer 2007]FaultTreatment Patterns pp 230-232." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_maintainability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "maintainability" , "Maintainability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_fork_and_join , :DesignTactic_horizontal_scaling , :DesignTactic_white-box_testing , :DesignPattern_dynamically-discoverable_elements , :DesignPattern_architectural_requirements_questionnaire , :DesignTactic_separation_of_concerns , :DesignPattern_encapsulation , :DesignPattern_proxy , :DesignPattern_facade , :DesignDecision_ad-101__service-oriented_architecture , :DesignPattern_abstract_factory , :DesignPattern_mediator , :DesignTactic_reduce_coupling , :DesignDecision_kdd-06__embedded_browser , :DesignPattern_swappable_staging_environment , :DesignPattern_layered_architecture , :DesignPattern_virtual_platform , :DesignPattern_message_bus , :DesignPattern_adapter , :DesignPattern_reflection , :DesignTactic_increase_cohesion , :DesignPattern_command , :DesignPattern_local_cache , :DesignTactic_change_propagation , :DesignPattern_observer , :DesignPattern_capturing_architectural_requirements , :DesignDecision_ad-001_2__wso2_as_platform , :DesignDecision_kdd-21 , :DesignPattern_session_failover , :DesignPattern_replication , :DesignPattern_voting , :DesignPattern_dynamically-adjustable_configuration , :DesignPattern_bridge , :DesignDecision_kdd-01 , :DesignPattern_expendable_hardware , :DesignPattern_external_configuration_store_pattern , :DesignDecision_kdd-13__development_environment , :SoftwareEngineeringMethod_layer_and_dependency_recovery , :DesignDecision_kdd-04__process_architecture , :DesignPattern_web_service_proxy , :DesignPattern_model-view-controller , :SoftwareEngineeringMethod_built-in_self_test_methods , :DesignTactic_vertical_scaling ;
          gen:relatedQuality       :ArchitecturalQuality_scalability , :ArchitecturalQuality_analyzability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_operability , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_manageability , :ArchitecturalQuality_performance , :ArchitecturalQuality_portability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_availability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_observability ;
          gen:wikiEntry            "<p><strong>Maintainability </strong></p>\n<p>Maintainability is the ability of the system to undergo changes with a degree of ease. These changes could impact components, services, features, and interfaces when adding or changing the functionality, fixing errors, and meeting new business requirements.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658094.aspx\">https://msdn.microsoft.com/en-us/library/ee658094.aspx</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignTactic_64-bit_ready_code
          a           gen:DesignTactic ;
          rdfs:label  "64-bit ready code" .
  
  :Requirement_ar-001__connection_control
          a                          spec:Requirement ;
          rdfs:label                 "AR-001: Connection control" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall have means to automate and control connections between an API and the\napplications that use it.&nbsp;" ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "Automation and control" .
  
  :DesignPattern_fault_isolation
          a                              gen:DesignPattern ;
          rdfs:label                     "Fault Isolation" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_dependability , :ArchitecturalQuality_availability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_resilience , :ArchitecturalQuality_viability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_robustness ;
          gen:isAlternativeOf            :DesignTactic_fault_handling ;
          gen:wikiEntry                  "[PCMag Fault Isolation [date unknown]] The term may refer to hardware or software but always deals with methods that can isolate the component device or software module causing the error. Fault isolation may be part of hardware design at the circuit level all the way up to the complete system. It is accomplished by building in test circuits and/or by dividing operations into multiple regions or components that can be monitored separately. After fault isolation is accomplished parts can be replaced manually or automatically. In comparison to Fault Detection fault isolation pinpoints the exact cause and location. Fault Isolation refers to the physical or logical exclusion of the faulty device or component from further usage. Isolation makes the fault inactive. Fault detectionand isolation (FDI) are usually combined and broadly accepted approaches include Model-based FDI and Signal processing based FDI." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_quarantine
          a                              gen:DesignPattern ;
          rdfs:label                     "Quarantine" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_dependability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_resilience ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "The location of the errors in the system has been identified. It might be a particular software module that is continually producing errors or it might be a hardware element that is incorrect. The Quarantine prevents errors from spreading using units of mitigation. It establishes a barrier around the component so it isolates and confines a sick element to keep it from corrupting the rest of the system. This pattern not only prevents error spreading but also works contribution e.g. a unsafe state indicator for voter results [Hanmer 2007] pp 143-147. Relations Error Handling [Hanmer 2007] Error Recovery Patterns pp 143-147. Fault Handling [Hanmer 2007] Error Recovery Patterns pp 143-147." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_reliability
          a           cont:AuthorTag ;
          rdfs:label  "reliability" .
  
  :DesignDecision_ad-201__camunda_process_engine
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-201: Camunda Process Engine" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p><strong><span lang=\"DE-AT\">Use the Camunda Process Engine</span></strong></p><p><span lang=\"DE-AT\">The following diagram illustrate how&nbsp;different actors having different roles in the project interact with the Camunda suite during development and deployment.&nbsp;</span></p><p><strong><span lang=\"EN-US\"><img src=\"https://workspace.cee.siemens.com/content/00000102/saFiddle/p/Shape/camunda_development.png\" alt=\"\" width=\"535\" height=\"317\" data-mce-src=\"p/Shape/camunda_development.png\"></span></strong></p><p><strong><span lang=\"EN-US\">Components:</span></strong></p><h4>Process Implementation and Execution</h4><ul><li>camunda engine - The core component responsible for executing BPMN 2.0 processes.</li><li>REST API - The REST API provides remote access to running processes.</li><li>Spring, CDI integration - Programming model integration that allows developers to write Java Applications that interact with running processes.</li></ul><h4><a id=\"user-content-process-design\" class=\"anchor\" href=\"javascript:saFiddle();\" data-mce-href=\"https://github.com/camunda/camunda-bpm-platform#process-design\" target=\"_blank\"></a>Process Design</h4><ul><li>camunda modeler - A <a href=\"javascript:closePopup(this);\" data-mce-href=\"https://github.com/camunda/camunda-modeler\" target=\"_blank\">modeler plugin for eclipse</a> that allows developers to design &amp; refactor processes inside their IDE.</li><li>camunda cycle - Enables BPMN 2.0 based Roundtrip between Business and IT parties involved in a project. Allows to use any BPMN 2.0 modeling tool with camunda BPM.</li></ul><h4><a id=\"user-content-process-operations\" class=\"anchor\" href='javascript:getQualityDefinition(\"Extensibility\");' data-mce-href=\"https://github.com/camunda/camunda-bpm-platform#process-operations\" target=\"_blank\"></a>Process Operations</h4><ul><li>camunda engine - JMX and advanced Runtime Container Integration for process engine monitoring.</li><li>camunda cockpit - Web application tool for process operations.</li></ul><h4><a id=\"user-content-human-task-management\" class=\"anchor\" href='javascript:getQualityDefinition(\"Flexibility\");' data-mce-href=\"https://github.com/camunda/camunda-bpm-platform#human-task-management\" target=\"_blank\"></a>Human Task Management</h4><ul><li>camunda tasklist - Simple web application demonstrating how the process engine task API can be used.</li></ul><p>&nbsp;</p><p><strong><span lang=\"EN-US\">Pros:</span></strong></p><p><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> Addresses all aspects of process management &amp; execution</span></p><p><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> High-quality documentation</span></p><p><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> Sound software architecture (high design pattern density)</span></p><p><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> Uses state of the art technology (JAX-RS, <span class=\"SpellE\">AngularJS</span>, <span class=\"GramE\">Spring</span>, <span class=\"SpellE\">jQuery</span>, etc.)</span></p><p><strong><span lang=\"EN-US\">+</span></strong><span lang=\"EN-US\"> Many supported environments (Tomcat, JBOSS, Glassfish …)</span></p><p><strong><span lang=\"EN-US\">+ </span></strong><span lang=\"EN-US\">Flexibility, extensibility (Community extensions)</span></p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_change_me ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_extensibility ;
          spec:useDecisionTactic          :DesignTactic_off-the-shelf_component .
  
  :DesignPattern_service-oriented_architecture
          a                              gen:DesignPattern ;
          rdfs:label                     "Service-Oriented Architecture" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes , :Project_aspernbm ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_discoverability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_distributability , :ArchitecturalQuality_compatibility ;
          gen:isAlternativeOf            :DesignTactic_distribution , :DesignTactic_loose_coupling , :DesignTactic_domain_alignment , :DesignTactic_rationalization , :DesignTactic_service_autonomy , :DesignTactic_service_orientation ;
          gen:wikiEntry                  "<h1 class=\"heading\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Service-Oriented Architectural Style</span></h1>\n        <p>Service-oriented architecture (SOA) enables application functionality to be provided as a set of services, and the creation of applications that make use of software services. Services are loosely coupled because they use standards-based interfaces that can be invoked, published, and discovered. Services in SOA are focused on providing a schema and message-based interaction with an application through interfaces that are application scoped, and not component or object-based. An SOA service should not be treated as a component-based service provider.</p>\n        <p>The SOA style can package business processes into interoperable services, using a range of protocols and data formats to communicate information. Clients and other services can access local services running on the same tier, or access remote services over a connecting network.</p>\n        <p>The key principles of the SOA architectural style are:</p>\n        <ul>\n          <li>\n            <strong>Services are autonomous</strong>. Each service is maintained, developed, deployed, and versioned independently.</li>\n          <li>\n            <strong>Services are distributable</strong>. Services can be located anywhere on a network, locally or remotely, as long as the network supports the required communication protocols.</li>\n          <li>\n            <strong>Services are loosely coupled</strong>. Each service is independent of others, and can be replaced or updated without breaking applications that use it as long as the interface is still compatible. </li>\n          <li>\n            <strong>Services share schema and contract, not class</strong>. Services share contracts and schemas when they communicate, not internal classes.</li>\n          <li>\n            <strong>Compatibility is based on policy</strong>. Policy in this case means definition of features such as transport, protocol, and security.</li>\n        </ul>\n        <p>Common examples of service-oriented applications include sharing information, handling multistep processes such as reservation systems and online stores, exposing industry specific data or services over an extranet, and creating mashups that combine information from multiple sources.</p>\n        <p>The main benefits of the SOA architectural style are:</p>\n        <ul>\n          <li>\n            <strong>Domain alignment</strong>. Reuse of common services with standard interfaces increases business and technology opportunities and reduces cost.</li>\n          <li>\n            <strong>Abstraction</strong>. Services are autonomous and accessed through a formal contract, which provides loose coupling and abstraction.</li>\n          <li>\n            <strong>Discoverability</strong>. Services can expose descriptions that allow other applications and services to locate them and automatically determine the interface.</li>\n          <li>\n            <strong>Interoperability</strong>. Because the protocols and data formats are based on industry standards, the provider and consumer of the service can be built and deployed on different platforms.</li>\n          <li>\n            <strong>Rationalization</strong>. Services can be granular in order to provide specific functionality, rather than duplicating the functionality in number of applications, which removes duplication.</li>\n        </ul>\n        <p>Consider the SOA style if you have access to suitable services that you wish to reuse; can purchase suitable services provided by a hosting company; want to build applications that compose a variety of services into a single UI; or you are creating Software plus Services (S+S), Software as a Service (SaaS), or cloud-based applications. The SOA style is suitable when you must support message-based communication between segments of the application and expose functionality in a platform independent way, when you want to take advantage of federated services such as authentication, or you want to expose services that are discoverable through directories and can be used by clients that have no prior knowledge of the interfaces.</p>" , "<h1 class=\"heading\">Service-Oriented Architectural Style</h1>\n        <p>Service-oriented architecture (SOA) enables application functionality to be provided as a set of services, and the creation of applications that make use of software services. Services are loosely coupled because they use standards-based interfaces that can be invoked, published, and discovered. Services in SOA are focused on providing a schema and message-based interaction with an application through interfaces that are application scoped, and not component or object-based. An SOA service should not be treated as a component-based service provider.</p>\n        <p>The SOA style can package business processes into interoperable services, using a range of protocols and data formats to communicate information. Clients and other services can access local services running on the same tier, or access remote services over a connecting network.</p>\n        <p>The key principles of the SOA architectural style are:</p>\n        <ul>\n          <li>\n            <strong>Services are autonomous</strong>. Each service is maintained, developed, deployed, and versioned independently.</li>\n          <li>\n            <strong>Services are distributable</strong>. Services can be located anywhere on a network, locally or remotely, as long as the network supports the required communication protocols.</li>\n          <li>\n            <strong>Services are loosely coupled</strong>. Each service is independent of others, and can be replaced or updated without breaking applications that use it as long as the interface is still compatible. </li>\n          <li>\n            <strong>Services share schema and contract, not class</strong>. Services share contracts and schemas when they communicate, not internal classes.</li>\n          <li>\n            <strong>Compatibility is based on policy</strong>. Policy in this case means definition of features such as transport, protocol, and security.</li>\n        </ul>\n        <p>Common examples of service-oriented applications include sharing information, handling multistep processes such as reservation systems and online stores, exposing industry specific data or services over an extranet, and creating mashups that combine information from multiple sources.</p>\n        <p>The main benefits of the SOA architectural style are:</p>\n        <ul>\n          <li>\n            <strong>Domain alignment</strong>. Reuse of common services with standard interfaces increases business and technology opportunities and reduces cost.</li>\n          <li>\n            <strong>Abstraction</strong>. Services are autonomous and accessed through a formal contract, which provides loose coupling and abstraction.</li>\n          <li>\n            <strong>Discoverability</strong>. Services can expose descriptions that allow other applications and services to locate them and automatically determine the interface.</li>\n          <li>\n            <strong>Interoperability</strong>. Because the protocols and data formats are based on industry standards, the provider and consumer of the service can be built and deployed on different platforms.</li>\n          <li>\n            <strong>Rationalization</strong>. Services can be granular in order to provide specific functionality, rather than duplicating the functionality in number of applications, which removes duplication.</li>\n        </ul>\n        <p>Consider the SOA style if you have access to suitable services that you wish to reuse; can purchase suitable services provided by a hosting company; want to build applications that compose a variety of services into a single UI; or you are creating Software plus Services (S+S), Software as a Service (SaaS), or cloud-based applications. The SOA style is suitable when you must support message-based communication between segments of the application and expose functionality in a platform independent way, when you want to take advantage of federated services such as authentication, or you want to expose services that are discoverable through directories and can be used by clients that have no prior knowledge of the interfaces.</p>" ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_soa ;
          owl:sameAs                     dbr:Service-oriented_architecture .
  
  :SoftwareEngineeringMethod_engineering_strategy_development
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Engineering Strategy Development" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_technical_project_manager , :Role_system_architect ;
          gen:hasMethodTag         :AuthorTag_strategy , :AuthorTag_impact , :AuthorTag_engineering , :AuthorTag_business , :AuthorTag_framework ;
          gen:wikiEntry            "This contribution aims to provide engineering organizations with a framework for the development and implementation of a dedicated engineering strategy.<div><br></div><div><div>How can engineering contribute best to achieve the business goals? How can engineering line up its improvement actions to meet the business strategy?&nbsp;</div><div><br></div><div>Those and other questions have to be continuously addressed by engineering departments in order to ensure the desired business success at the end of the day. Our framework provides a structured procedure and best practices in Siemens to reply to these questions in a sustainable way.&nbsp;</div></div>" .
  
  :DesignPattern_routine_audits
          a                              gen:DesignPattern ;
          rdfs:label                     "Routine Audits" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_defensibility , :ArchitecturalQuality_resilience , :ArchitecturalQuality_auditability , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_accountability , :ArchitecturalQuality_safety , :ArchitecturalQuality_traceability , :ArchitecturalQuality_viability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_security , :ArchitecturalQuality_integrity , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_robustness , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_recoverability ;
          gen:isAlternativeOf            :DesignTactic_auditing , :DesignTactic_error_detection ;
          gen:wikiEntry                  "It is worth striving for finding data faults and errors in a controlled way than to encounter them in normal operations. If not the faulty data might propagate to other parts of the system and cause other failures.  Data should be checked routinely to find latent faults. The checking should be done during idle time slots or during the execution of a maintenance task. If faults are round during this audit invoke Correcting Audits to correct and report the fault [Hanmer 2007]pp 127-128.  Relations Auditing [Hanmer 2007]Detection Patterns pp 127-128. Error Detection [Hanmer 2007]Detection Patterns pp 127-128." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_replaceability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "replaceability" , "Replaceability" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_service_locator , :DesignTactic_messaging , :DesignPattern_transaction-based_delivery , :DesignPattern_exactly-once_delivery , :DesignTactic_inheritance , :DesignDecision_kdd-01 , :DesignDecision_kdd-10__adaptation_mechanisms , :DesignPattern_abstract_factory , :DesignPattern_timeout-based_delivery , :DesignDecision_ad-101__service-oriented_architecture , :DesignPattern_at-least-once_delivery , :DesignPattern_component-based_architecture ;
          gen:relatedQuality       :ArchitecturalQuality_flexibility ;
          gen:wikiEntry            "<p><strong>Replaceability</strong></p>\n<p>The capability of the software product to be used in place of another specified software product for the same purpose in the same environment (<a href=\"http://www.isi.edu/natural-language/mteval/refs.html#ISO01\" target=\"other\">ISO 9126: 2001, 6.6.4</a>).</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"http://www.isi.edu/natural-language/mteval/html/224.html\">http://www.isi.edu/natural-language/mteval/html/224.html</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_queue_for_resources
          a                              gen:DesignPattern ;
          rdfs:label                     "Queue for Resources" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_survivability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_controllability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_robustness , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_utility , :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability , :ArchitecturalQuality_availability , :ArchitecturalQuality_safety ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_queueing ;
          gen:wikiEntry                  "The system is mitigation a workload peak and is not otherwise in the midst of processing an error because too many requests are being received. In general the system is able to gracefully handle the excess requests for service. The Queue for Resources stores requests for service that cannot be handled immediately in a queue. The queue should have a finite length to improve the likelihood that the request is still important when it reaches the head of the line. When the requests ar computer generated an must be processed in order the First In First Out (FIFO) queue should be used. When people are generating the requests the queue should use a Last in First Out (LIFO) strategy. This will help people receive good service [Hanmer 2007]pp 193-194. Relations Error Handling [Hanmer 2007] Error Mitigation Patterns pp 193-194. Queueing [Hanmer 2007] Error Mitigation Patterns pp 193-194." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_ad-012__deployment_schemes
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-012: Deployment Schemes" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\">The following table summarizes the possible deployment schemes and their impact upon architectural qualities:</p>\n<p style=\"font-size: small;\">&nbsp;<img src=\"p/AspernES/deployment_schemes.png\" alt=\"\" width=\"650\" height=\"178\" style=\"font-size: small;\"></p>\n<p style=\"font-size: small;\">In the first version of information ecosystem API Manager, we will implement the following sub-components:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><strong style=\"font-size: small;\">API Gateway</strong>: This component is responsible for securing, protecting, managing and scaling API calls. It is implemented as a proxy that intercepts API requests and applies policies.&nbsp;</li>\n</ul>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><strong style=\"font-size: small;\">Key and Identity Management Service: </strong>Responsible for all security and key-related operations. When API calls are sent to the gateway, the key manager server is called and verifies the token that is provided. The Identity Service provides information regarding users and their roles to the key server, key store and publisher.&nbsp;</li>\n</ul>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><strong style=\"font-size: small;\">API Store:</strong> Place for API consumers to self register, discover and subscribe to APIs.&nbsp;</li>\n</ul>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><strong style=\"font-size: small;\">API Publisher:</strong> Enables API providers to create and publish their APIs.&nbsp;</li>\n</ul>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><strong style=\"font-size: small;\">API Monitoring and Analytics Service:</strong> Responsible for collecting and displaying information about API usage and creating access statistics.</li>\n</ul>\n<p style=\"font-size: small;\">&nbsp;</p>\n<h4 style=\"font-size: small;\">Load Balancer</h4>\n<p style=\"font-size: small;\">To cope with high load, i.e., a high rate of service invocations performed via the API gateway, a load balancer can be deployed. The load balancer receives the invocations and passes them on to multiple API gateways that are deployed, e.g., following a round robin scheme. The multiple API gateways would then perform authentication, monitoring, etc.</p>\n<p style=\"font-size: small;\"><img src=\"p/AspernES/load_balancer.png\" alt=\"\" width=\"408\" height=\"224\" style=\"font-size: small;\"></p>\n<p style=\"font-size: small;\">This pattern focuses on distributing load to different API gateway nodes, but not to different backend applications. For this, the gateways can also be configured to either cache static requests or distribute the requests to a cluster of backend nodes.</p>\n<h4 style=\"font-size: small;\">Clustered&nbsp;deployment</h4>\n<p style=\"font-size: small;\">The main objective of the Cluster pattern is to foster reliability and scalability. Different API management components can be configured as a cluster. Failover mechanisms are implemented within each cluster to ensure operation in case of failures.</p>\n<p style=\"font-size: small;\"><img src=\"p/AspernES/cluster.png\" alt=\"\" width=\"311\" height=\"370\" style=\"font-size: small;\"></p>\n<p style=\"font-size: small;\">This also helps scalability in cases of a bottleneck, without the need of scaling all of components at the same time. Using this pattern allows us to have several clusters with different functionalities. As we cluster along the business functionality of the components, which is hidden behind service interfaces, and hence minimize communication between clusters synchronization issues are minimized.</p>\n<h4 style=\"font-size: small;\">Demilitarized Zone (DMZ)</h4>\n<p style=\"font-size: small;\">The API manager can be used to expose internal services to external parties. This requires deploying API management components in the DMZ and in a company intranet.</p>\n<p style=\"font-size: small;\">&nbsp;<img src=\"p/AspernES/dmz.png\" alt=\"\" width=\"503\" height=\"144\" style=\"font-size: small;\"></p>\n<p style=\"font-size: small;\">In this scenario, The API Store and Gateway can be accessed from the outside while requests to Internal Services (i.e., services that are going to be published at the API store) and the Publisher are blocked by a firewall. The API gateway is the only process that allows traffic to the internal network but only for a regulated subset of requests and specific applications.</p>\n<h4 style=\"font-size: small;\">Distributed deployment</h4>\n<p style=\"font-size: small;\">The API gateway can be placed in different physical locations, e.g., different geographical regions. On the one hand, this keeps latency introduced by the API management minimal, and on the other hand, the API gateways can monitor service replies and ensure, for example, that data is anonymized when transmitted to different geographical areas.</p>\n<p style=\"font-size: small;\"><img src=\"p/AspernES/distributed.png\" alt=\"\" width=\"442\" height=\"182\" style=\"font-size: small;\"></p>\n<p style=\"font-size: small;\">This pattern is especially helpful if separate branches of a company need access to data. Local gateways can make sure that performance criteria are met while accessing data.</p>\n<h4 style=\"font-size: small;\">Deployment for&nbsp;Data Collection</h4>\n<p style=\"font-size: small;\">The API manager collects statistics regarding API usage. Such statistics are, for example, the foundation for billing and analytics services. To collect usage data, monitoring components need to be deployed along with the API gateway.</p>\n<p style=\"font-size: small;\"><img src=\"p/AspernES/monitoring.png\" alt=\"\" width=\"412\" height=\"187\" style=\"font-size: small;\"></p>\n<p style=\"font-size: small;\">In this case we apply the strategy to distribute monitoring clients to the gateway nodes to analyze the traffic that is traversing the gateway.</p>" ;
          spec:decisionArchitecturalView  "4. Physical View" ;
          spec:hasDecisionDomain          :Domain_ar-012__protocols_and_formats ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security , :ArchitecturalQuality_privacy , :ArchitecturalQuality_availability , :ArchitecturalQuality_testability , :ArchitecturalQuality_performance , :ArchitecturalQuality_resilience ;
          spec:useDecisionTactic          :DesignTactic_flexible_deployment .
  
  :Domain_ar-011__api_governance
          a           spec:Domain ;
          rdfs:label  "ar-011: api governance" .
  
  :DesignPattern_virtual_functions
          a                              gen:DesignPattern ;
          rdfs:label                     "Virtual functions" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Virtual functions</h1>\n\n<p>Sometimes you may see errors there is nobody's fault about but they are still errors. Imagine that a long-long time ago (in Visual Studio 6.0) a project was developed that contained the class <span class=\" span-i\">CSampleApp</span> which was an derived of <span class=\" span-i\">CWinApp</span>. The base class had the function <span class=\" span-i\">WinHelp</span>. The derived overridden this function and performed all the necessary actions. It looked as shown in Figure 1.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/12_Pattern_04_Virtual_functions/image2.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/12_Pattern_04_Virtual_functions/image1.png\" alt=\"Figure 1 - Correct operable code created in Visual Studio 6.0\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 1 - Correct operable code created in Visual Studio 6.0</span></p>\n<p>Then the project is ported to Visual Studio 2005 where the prototype of the function <span class=\" span-i\">WinHelp</span> has changed. But nobody notices it because the types DWORD and DWORD_PTR coincide in the 32-bit mode and the program still works well (Figure 2).</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/12_Pattern_04_Virtual_functions/image4.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/12_Pattern_04_Virtual_functions/image3.png\" alt=\"Figure 2 - Incorrect yet operable 32-bit code\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 2 - Incorrect yet operable 32-bit code</span></p>\n<p>The error waits to occur on a 64-bit system where the sizes of the types DWORD and DWORD_PTR differ (Figure 3). It turns out that the classes contain two DIFFERENT functions <span class=\" span-i\">WinHelp</span> in the 64-bit mode. Of course it is incorrect. Note that such traps may hide not only in MFC where some functions have different types of the arguments but in the code of your applications and third-party libraries as well.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/12_Pattern_04_Virtual_functions/image6.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/12_Pattern_04_Virtual_functions/image5.png\" alt=\"Figure 3 - The error occurs in the 64-bit code\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 3 - The error occurs in the 64-bit code</span></p>\n<p>Let us consider one more error by an example taken from real life. There is a wonderful component library BCGControlBar. You are likely to have heard about it because some components of BCGSoft Ltd company are included into Microsoft Visual Studio 2008 Feature Pack. Well, if you download the trial version of this library, install it and search for the word \"WinHelp\" through <span class=\" span-i\">.h</span>-files... you will see that wherever this function is supposedly overridden the parameter DWORD is used instead of DWORD_PTR. And it means that Help system will behave incorrectly in these classes when ported to a 64-bit system.</p>\n<p>Why can such an error still exist in the code of so popular a library? We think the point is that the company's clients have access to the source codes of this library and they may always easily correct these codes. Besides, the function <span class=\" span-i\">WinHelp</span> is used very rarely nowadays. <span class=\" span-i\">HtmlHelp</span> is used much more frequently - and it does have the right parameter DWORD_PTR in BCGControlBar. But the fact remains. There is an error in real code and the compiler does not detect it. Such errors may stay hidden for many years.</p>\n<p>Note. This text is being written in December, 2009, and it is most likely that this error will be corrected in the next versions, especially as we have written about it to the developers of the library.</p>" ;
          spec:hasPatternDomain          :Domain_visual_c__ ;
          owl:sameAs                     dbr:Virtual_function .
  
  :DesignTactic_encapsulation
          a           gen:DesignTactic ;
          rdfs:label  "encapsulation" .
  
  :SoftwareEngineeringMethod_combined_mbat
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Combined MBAT" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_ulrich_andreas ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_inspection_test , :AuthorTag_modeling , :AuthorTag_embedded_systems ;
          gen:wikiEntry            "The ARTEMIS MBAT: Combined Model-based Analysis and Testing of Embedded Systems.&nbsp;In the ARTEMIS-project MBAT, a methodology for combining (model-based) analysis and test has been developed. An essential part of this methodology was the detailed description of generic solutions for specific issues and problems, for which the concept of “Analysis and Test Workflow Patterns” was developed." .
  
  :DesignPattern_content_filter
          a                              gen:DesignPattern ;
          rdfs:label                     "Content Filter" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_message_transformation ;
          gen:wikiEntry                  "A Content Filter minimizes network traffic by removing unnecessary data from a message [MSDN Event Message 2014]. It is used when you want to simplify dealing with a large message. The content filter removes unimportant data items from a message leaving only important items.A Content Filterdoes not necessarily just remove data elements it is also useful to simplify the structure of the message. Often times messages are represented as tree structures. Many messages originating from external systems or packaged applications contain many levels of nested repeating groups because they are modeled after generic normalized database structures [EAI Content Filter 2003]." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_ar-016__external_service_integration
          a                          spec:Requirement ;
          rdfs:label                 "AR-016: External service integration" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "Not all services shall be managed by the ecosystem. The system shall provide means for the data owners to have their own data access services managed by third parties." ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "Service integration" .
  
  :DesignTactic_facetization
          a           gen:DesignTactic ;
          rdfs:label  "facetization" .
  
  :Author_foehr_mattias
          a           cont:Author ;
          rdfs:label  "foehr mattias" .
  
  :DesignTactic_resource_orientation
          a           gen:DesignTactic ;
          rdfs:label  "resource orientation" .
  
  :SoftwareEngineeringMethod_classic_risk_based_testing
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Classic Risk Based Testing" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_sauer_horst , :Author_ndem_guy_collins ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_risk ;
          gen:wikiEntry            "Risk-based testing (RBT) addresses these problems by providing methods for:<br>\n(1): Effective allocation of testing efforts to areas of high risk <br>\n(2): Scheduling tests, to execute the most important tests first <br>\n(3): Sound product quality estimations and release decisions" .
  
  :ArchitecturalQuality_suitability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Suitability" , "suitability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_globalization , :DesignPattern_default , :DesignTactic_convention_over_configuration ;
          gen:relatedQuality       :ArchitecturalQuality_viability , :ArchitecturalQuality_feasibility , :ArchitecturalQuality_sustainability , :ArchitecturalQuality_affordability ;
          gen:wikiEntry            "[Wikipedia Suitability 2014]Suitability refers to theability of a system to meet the needs of a stakeholder or other user. Suitability is about creating an appropriate solution for a user or a client    Relations Convention over configuration [Wikipedia Convention over Configuration 2014]" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_riding_over_transients
          a                              gen:DesignPattern ;
          rdfs:label                     "Riding Over Transients" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_survivability , :ArchitecturalQuality_viability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_integrity , :ArchitecturalQuality_robustness , :ArchitecturalQuality_safety , :ArchitecturalQuality_utility , :ArchitecturalQuality_availability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "In a system ther are many potential errors that might occur and faults that can activate. As not oll of them cause permanent failures faults such as transient ones will disappear autonomously over time.  Sometimes the prudent thing to do is to ignore an error if it is something that might be due to a transient situation. The best thing is to monitor the system and conduct Fault Correlation when errors occur. The system should begin error processing immediately if the error or failures is not one of those identified in advance as being transient. If Fault Correlation indicates that it might be a transient fault monitor the frequency of occurrence but take no other action unless it is occurring more than expected [Hanmer 2007]pp 132-134.  Relations Error Detection [Hanmer 2007]Detection Patterns pp 132-134." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_avoiding_information_hiding
          a                              gen:DesignPattern ;
          rdfs:label                     "Avoiding Information Hiding" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Avoiding Information Hiding</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>Occasionally, programs deliberately or inadvertently hide information from the RPC marshaling engine. Some examples are as follows:</p>\n<ul>\n<li>Sending a data structure as an undifferentiated block of bytes</li>\n<li>Leveraging performance by using a side effect from a method to channel additional data across the wire</li>\n<li>Attempting to disguise a handle by passing it as a <strong>DWORD</strong> or a <strong>ULONG</strong></li>\n</ul>\n<p>These techniques are almost guaranteed to introduce compatibility problems even before you port your application to 64-bit Windows.</p>\n<p>Instead of sending a server context as a <strong>DWORD</strong> in a standard remote procedure call, use a context handle to provide an opaque handle to a server context that is held on behalf of a client. Contexts are identified by GUIDs defined by the RPC run time when a server creates a context handle for a client. No pointer is used over the wire and the operation is completely transparent across 32- or 64-bit boundaries. For more information on using context handles, see \n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa373605(v=vs.85).aspx\" target=\"_blank\">Context Handles</a>.</p>\n<p>DCOM interfaces cannot use context handles because COM provides its own context management. Instead of creating a context handle, you can pass an interface pointer to the COM object. Then you can call the methods directly through the interface pointer or place the pointer inside other calls. To release the server object, the client calls the interface's <strong>Release</strong> method through the interface pointer.</p>\n<p>Again, there may be times when you cannot change the original design of the code that you are porting. If there is no way to avoid sending a pointer across the wire as a <strong>DWORD</strong>, you will have to implement some form of server-side mapping between <strong>DWORD</strong> values and pointers. One way to do this is to change the pointers in the client side application to pointer-precision types, such as <strong>ULONG_PTR</strong> or <strong>DWORD_PTR</strong>. Then use the MIDL [<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa366748(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">call_as</strong></a>] attribute to put the pointers on the wire as <strong>DWORD</strong> values. The client-side wrapper need only pass the arguments along. The server-side wrapper handles the mapping between both types. In a similar way, you can use either the [<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa367286(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">transmit_as</strong></a>] attribute or the [<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa367154(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">represent_as</strong></a>] attribute to convert your data to a backward-compatible format for wire representation.</p>\n<p>If backward-wire compatibility is not an issue or if the handle is not used for remote calls and you are sure that remote calls between 32- and 64-bit processes will never happen, you can redefine an argument as a <strong>ULONG64</strong>. If necessary, you can modify the 32-bit application to pass a <strong>DWORD</strong> to the user. Alternatively, you can build separate stubs from separate IDL files for each platform using a <strong>DWORD</strong> on 32-bit Windows and a <strong>ULONG64</strong> on 64-bit Windows.</p></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :Project_syngoplaza
          a           cont:Project ;
          rdfs:label  "syngoplaza" .
  
  :Domain_ar-019__metadata_management
          a           spec:Domain ;
          rdfs:label  "ar-019: metadata management" .
  
  :DesignTactic_scraping
          a           gen:DesignTactic ;
          rdfs:label  "scraping" .
  
  :SoftwareEngineeringMethod_built-in_self_test_methods
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Built-in self test methods" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_sobolev_sergey ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_safety , :ArchitecturalQuality_security , :ArchitecturalQuality_reliability ;
          gen:hasMethodPhase            :ProjectPhase_operational , :ProjectPhase_testing ;
          gen:hasMethodRole             :Role_operations_engineer ;
          gen:hasMethodTag              :AuthorTag_operations , :AuthorTag_inspection_test ;
          gen:wikiEntry                 "Built-in self test methods are used to provide required level of runtime diagnostics coverage. They comprise checks of hardware, software, communication, logic invariants. Such checks are usually performed on regular level, check intervals are usually derived from system availability requirements. Outcome of such checks could be system recovery or safe stop." .
  
  :DesignPattern_process_interoperability
          a                              gen:DesignPattern ;
          rdfs:label                     "Process Interoperability" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Process Interoperability</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>You can run Win32-based applications on 64-bit Windows using an emulation layer. For more information, see \n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384249(v=vs.85).aspx\" target=\"_blank\">Running 32-bit Applications</a>.</p>\n<p>On 64-bit Windows, a 64-bit process cannot load a 32-bit dynamic-link library (DLL). Additionally, a 32-bit process cannot load a 64-bit DLL. However, 64-bit Windows supports remote procedure calls (RPC) between 64-bit and 32-bit processes (both on the same computer and across computers). On 64-bit Windows, an out-of-process 32-bit COM server can communicate with a 64-bit client, and an out-of-process 64-bit COM server can communicate with a 32-bit client. Therefore, if you have a 32-bit DLL that is not COM-aware, you can wrap it in an out-of-process COM server and use COM to marshal calls to and from a 64-bit process.</p>\n<p>In-process servers are currently registered using the <strong>InprocServer</strong> registry entry. On 64-bit Windows, 64- and 32-bit in-process servers should use the <strong>InprocServer32</strong> entry.</p>\n<p>To port handles, which by their nature are local to the computer and would never be used across the 32-bit to 64-bit boundary, use the <strong>HANDLE_PTR</strong> type instead of the <strong>INT_PTR</strong> or <strong>DWORD_PTR</strong> type. This includes porting RPC interfaces passing such handles as <strong>DWORD</strong> values. The 64-bit <strong>HANDLE_PTR</strong> is 64 bits on the wire (not truncated) and thus does not need mapping. (The 32-bit <strong>HANDLE_PTR</strong> is 32 bits on the wire.)</p>\n<p>For more information, see \n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384167(v=vs.85).aspx\" target=\"_blank\">Designing 64-bit-Compatible Interfaces</a>.</p></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :SoftwareEngineeringMethod_fta_and_hazop_for_sw-intensive_systems
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "FTA and HAZOP for SW-Intensive Systems" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_design ;
          gen:hasMethodRole        :Role_operations_engineer , :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_requirements ;
          gen:wikiEntry            "Hazard and Operability Analysis (HAZOP) is a structured and systematic technique for identifying potential hazards and operability problems that are likely to lead to nonconforming products. FTA (Fault Tree Analysis) uses HAZOP findings to assess the effect of multiple deviations and to quantify the likelihood of the failures." .
  
  :Requirement_ar-01__tool_support_for_sad
          a                          spec:Requirement ;
          rdfs:label                 "AR-01: Tool support for SAD" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_safiddle ;
          gen:wikiEntry              "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Provide tool support for software architecture and design specifications.</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Rationale:</strong> MS Word is not the optimal tool for writing software architecture specifications.</span></p>" ;
          spec:containedWithin       :UseCase_sad_generation , :UseCase_nfr_repository , :UseCase_sa_tool_support , :UseCase_sa_collaboration ;
          spec:hasRequirementOrigin  :Domain_ar-02__incentives_for_architects ;
          spec:requirementGroup      "Tool support" ;
          spec:requirementPurpose    "Zero-footprint tool" .
  
  :DesignPattern_api_gateway
          a                              gen:DesignPattern ;
          rdfs:label                     "API Gateway" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_auditability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_accountability , :ArchitecturalQuality_performance , :ArchitecturalQuality_complexity ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_routing ;
          gen:wikiEntry                  "<h2 style=\"font-size: small;\">API Gateway</h2>\n<h3 style=\"font-size: small;\">Problem</h3>\n<p style=\"font-size: small;\">How do the clients of a Microservices-based application access the individual services?</p>\n<h3 style=\"font-size: small;\">Forces</h3>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">\n<p style=\"font-size: small;\">The granularity of APIs provided by microservices is often different than what a client needs. Microservices typically provide fine-grained APIs, which means that clients need to interact with multiple services. For example, as described above, a client needing the details for a product needs to fetch data from numerous services.</p>\n</li>\n<li style=\"font-size: small;\">\n<p style=\"font-size: small;\">Different clients need different data. For example, the desktop browser version of a product details page desktop is typically more elaborate then the mobile version.</p>\n</li>\n<li style=\"font-size: small;\">\n<p style=\"font-size: small;\">Network performance is different for different types of clients. For example, a mobile network is typically much slower and has much higher latency than a non-mobile network. And, of course, any WAN is much slower than a LAN. This means that a native mobile client uses a network that has very difference performance characteristics than a LAN used by a server-side web application. The server-side web application can make multiple requests to backend services without impacting the user experience where as a mobile client can only make a few.</p>\n</li>\n<li style=\"font-size: small;\">\n<p style=\"font-size: small;\">The number of service instances and their locations (host+port) changes dynamically</p>\n</li>\n<li style=\"font-size: small;\">\n<p style=\"font-size: small;\">Partitioning into services can change over time and should be hidden from clients</p>\n</li>\n</ul>\n<h3 style=\"font-size: small;\">Solution</h3>\n<p style=\"font-size: small;\">Implement an API gateway that is the single entry point for all clients. The API gateway handles requests in one of two ways. Some requests are simply proxied/routed to the appropriate service. It handles other requests by fanning out to multiple services.</p>\n<p style=\"font-size: small;\"><img class=\"img-responsive\" src=\"http://microservices.io/i/apigateway.jpg\" alt=\"\" style=\"font-size: small;\"></p>\n<p style=\"font-size: small;\">Rather than provide a one-size-fits-all style API, the API gateway can expose a different API for each client. For example, the <a href=\"http://techblog.netflix.com/2012/07/embracing-differences-inside-netflix.html\" target=\"_blank\" style=\"font-size: small;\">Netflix API</a> gateway runs client-specifc adapter code that provides each client with an API that's best suited to it's requirements.</p>\n<p style=\"font-size: small;\">The API gateway might also implement security, e.g. verify that the client is authorized to perform the request</p>\n<h3 style=\"font-size: small;\">&nbsp;</h3>\n<h3 style=\"font-size: small;\">Resulting context</h3>\n<p style=\"font-size: small;\">Using an API gateway has the following benefits:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">Insulates the clients from how the application is partitioned into microservices</li>\n<li style=\"font-size: small;\">Insulates the clients from the problem of determining the locations of service instances</li>\n<li style=\"font-size: small;\">Provides the optimal API for each client</li>\n<li style=\"font-size: small;\">Reduces the number of requests/roundtrips. For example, the API gateway enables clients to retrieve data from multiple services with a single round-trip. Fewer requests also means less overhead and improves the user experience. An API gateway is essential for mobile applications.</li>\n<li style=\"font-size: small;\">Simplifies the client by moving logic for calling multiple services from the client to API gateway</li>\n</ul>\n<p style=\"font-size: small;\">The API gateway pattern has some drawbacks:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">Increased complexity - the API gateway is yet another moving part that must be developed, deployed and managed</li>\n<li style=\"font-size: small;\">Increased response time due to the additional network hop through the API gateway - however, for most applications the cost of an extra roundtrip is insignificant.</li>\n</ul>" ;
          spec:hasPatternDomain          :Domain_distributed_computing .
  
  spec:hasEffectOnDecision
          a                   owl:ObjectProperty ;
          rdfs:label          "hasEffectOn" ;
          rdfs:range          spec:DesignDecision ;
          rdfs:subPropertyOf  gen:hasEffectOn .
  
  :DesignDecision_ad-119__multi-tenancy
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-119: Multi-tenancy" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<div><strong><span style=\"font-family: arial, helvetica, sans-serif;\">Access control through multi-tenancy</span></strong></div>\n<div>&nbsp;</div>\n<div>&nbsp;</div>\n<div>The control of user access to the data as well as&nbsp;the different views that a stakeholder is allowed to see&nbsp;corresponds to the multi-tenancy&nbsp;model of authentication and authorization. The restriction of the result sets is performed inside the DWH depending on the used authentication and authorization model and the authenticated user who has initiated the query.</div>\n<p>&nbsp;</p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-107__multi-tenancy_support , :Domain_ar-161__access_control , :Domain_ar-159__web_api ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_isolation , :DesignTactic_authorization , :DesignTactic_data_access .
  
  :DesignDecision_ad-111__synch_asynch_communication
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-111: Synch/asynch communication" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Synchronous / Asynchronous Communication</strong></p>\n<p style=\"font-size: small;\">Normally, the communication between the components of two different layers (e.g., data and processing layer) is synchronous. This means that&nbsp;the thread initiating a request to a lower layer will wait for the response as well, without needing any callback mechanism in place. Requests are always initiated by an upper layer.</p>\n<p style=\"font-size: small;\">The communication initiated by the visualization layer is to be performed asychronously. Here, a callback mechanism must be in place, such as the jQuery promise objects combined with the $when() function. This prevents the perceived stalling of the web-based user interface.</p>\n<p style=\"font-size: small;\">&nbsp;</p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-104__stepwise_querying , :Domain_ar-104_1__metadata_interface ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability , :ArchitecturalQuality_interoperability ;
          spec:useDecisionTactic          :DesignTactic_layering , :DesignTactic_synchronous_communication .
  
  :DesignTactic_privacy_protection
          a           gen:DesignTactic ;
          rdfs:label  "privacy protection" .
  
  :Domain_ar-014__api_access_control
          a           spec:Domain ;
          rdfs:label  "ar-014: api access control" .
  
  :ProjectPhase_design
          a           cont:ProjectPhase ;
          rdfs:label  "design" .
  
  :DesignDecision_kdd-12
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-12" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Abfrageschritte</strong></p><p>Die folgenden zwei Diagramme veranschaulichen den generischen Prozess zur Visualisierung von Infrastruktur- und Messdaten sowie der berechneten KPIs (Donald, et al., 2014).</p><p><img src=\"p/AspernBM/Geb_Infra_Vis.png\" alt=\"\" width=\"628\" height=\"84\" style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\" data-mce-style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\"></p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><strong>Abbildung 4</strong> - Gebäude und Infrastruktur visualisieren</p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><img src=\"p/AspernBM/Mess_Kpi_Vis.png\" alt=\"\" width=\"628\" height=\"104\" style=\"border-width: 0px;\" data-mce-style=\"border-width: 0px;\"><br data-mce-bogus=\"1\"></p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><strong>Abbildung 5</strong> - Messdaten und KPIs visualisieren</p><p>Bei den verschiedenen Interaktionsstufen werden die Fragestellungen aus der Tabelle 1 in folgende, teilweise optionale, Schritte zerlegt:</p><ul><li>Was ist die Zielgröße? Welche Messgröße bzw. welches KPI ist von Interesse?</li><li>Wie soll die Zielgröße dargestellt werden? In Abhängigkeit von welcher Variablen, von z.B. der absoluten Zeit (Zeitreihe), der relativen Zeit (z.B. Datums im Jahr), der Temperatur oder Anzahl an Gebäudenutzern?</li><li>Soll die Zielgröße für verschiede Typen/Arten von z.B. Gebäuden/Energiekonzepten/Stromverbrauchern verglichen werden. Welches ist die vergleichende Variable anhand derer eine Kategorisierung vorgenommen werden soll?</li><li>Ist eine Einschränkung der Daten notwendig? Sollen die Daten z.B. nur für einen bestimmten Zeitraum, ein bestimmtes Gebäude, ein bestimmtes Energiekonzept dargestellt werden?</li></ul><p>Im Falle von komplexen Fragestellungen ist eventuell nach der Darstellung der Zielgröße eine weitere Analyse zur vollständigen Beantwortung der Frage notwendig. Hierfür wird der Stakeholder über CLM mit einem Analytics-Service interagieren. Die zugrundeliegende Fragestellung ist in einem solchen Fall z.B.:</p><ul><li>Ist das Verhalten der Zielgröße erwartet bzw. vorhersagbar? Wie korreliert sie zu anderen Zielgrößen bzw. derselben Zielgröße aber für einen anderen Typ Messwerte?<br></li></ul><p>Die verschiedenen Interaktionsstufen zwischen den Stakeholdern, CLM, dem DWH und dem Analytics Server werden in Abbildung 9 dargestellt. Folgende Schritte werden dabei vollzogen:</p><ol><li>Der Stakeholder öffnet das Projekt Aspern in CLM. CLM fragt im DWH die möglichen Zielgrößen zum Projekt Aspern an und präsentiert dem Stakeholder eine Aspern Startseite, mit einer Auswahl an vordefinierten Reports, wie beispielsweise der CO<sub>2</sub>-Ausstoss, oder direkte Messgrößen, wie z.B. der Stromverbrauch.</li><li>Aus der Liste der vordefinierten Reports wählt der Stakeholder einen Report von Interesse aus. Die AE-Komponente ermittelt anschließend, welche Darstellungsformen, Filter und Vergleichsvariablen es für den ausgewählten Report gibt.</li><li>Im Weiteren kann der Stakeholder, bestimmte Darstellungsformen und Vergleichsvariablen auswählen sowie einen oder mehrere Filter auf die Daten anwenden, um die Daten auf den interessanten Bereich (Zeitraum, Gebäudetyp, usw.) einzuschränken. Anschließend fragt die ZV-Komponente die notwendigen Daten zur Darstellung der Zielvariablen im gegebenen Bereich ab und stellt dem Stakeholder den Report dar.</li><li>In einem weiteren, optional Schritt kann der Stakeholder in der ZV eine Analyse für die derzeit ausgewählten Zielgrößen, Vergleichsvariablen und Filter anstoßen. Die AE-Komponente interagiert hierfür mit den Analytics Services und stellt je nach der angeforderten Analyse die notwendigen Daten bereit. Das Ergebnis einer Analyseanfrage ist entweder ein Datensatz, der sich mit einem bestimmten vordefinierten Report überlappen lässt, oder einer, der zur Erstellung einer neuen Visualisierung verwendet werden kann.</li></ol><p>Während das Sequenzdiagramm generisch für alle Stakeholder ist, sind die Auswahl an Zielgrößen, und die dafür relevanten Variablen je nach Stakeholder unterschiedlich. Desweiteren werden auch je nach Stakeholder nicht alle Daten zugänglich gemacht. So sollte zum Beispiel ein Gebäudebewohner nur Zugriff auf die Daten seines eigenen Gebäudes und eventuell zu Daten von öffentlichen Gebäuden haben. Dies wird von dem Mandanten-Modell für die Zugriffskontrolle gewährleistet.</p><p><img src=\"p/AspernBM/sd_Vis.png\" alt=\"\" width=\"641\" height=\"559\" style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\" data-mce-style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\"></p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><strong>Abbildung 6</strong>&nbsp;– Arbeitsablauf zur Visualisierung von vordefinierten Reports und zur Durchführungen von statistischen Analysen. Der Ablauf ist grundsätzlich für alle Stakeholder gleich, wobei die Zielgrößen, Darstellungsmöglichkeiten, Vergleichsvariablen, Datenfilter und statistischen Analysen an verschiedene Stakeholder angepasst sind.</p><p><br data-mce-bogus=\"1\"></p><p></p>" ;
          spec:decisionArchitecturalView  "III.Laufzeitsicht" ;
          spec:hasDecisionDomain          :Domain_ar-104__stepwise_querying , :Domain_ar-104_1__metadata_interface , :Domain_ar-104_2__variable_filtering ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_versatility , :ArchitecturalQuality_usability ;
          spec:useDecisionTactic          :DesignTactic_adaptive_query_processing .
  
  :DesignPattern_memento
          a                              gen:DesignPattern ;
          rdfs:label                     "Memento" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_safety , :ArchitecturalQuality_survivability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "[Wikipedia Memento Pattern 2014] A Memento provides the ability to restore an object to its previous state (undo). (GoF behavioral pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Memento_pattern .
  
  :DesignDecision_ad-015__aspern_deployment
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-015: Aspern Deployment" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Aspern Deployment</strong></p>\n<p style=\"font-size: small;\">In a first version and proof of concept, all API management components can be deployed on a single host between two firewalls, as shown in the figure below. One firewall shields the Ecosystem components from external access, and one firewall allows access to the data warehouse. From current point of view this machine is running in a VMware based virtual environment at ASCR on a Linux Host. The description of the VMWare infrastructure is out of scope of this document.</p>\n<p style=\"font-size: small;\"><img style=\"display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernES/deployment.png\" alt=\"\" width=\"650\" height=\"479\"></p>\n<p style=\"font-size: small;\">The minimal requirements for the machine this system can get deployed to are:</p>\n<table border=\"1px\" style=\"font-size: small;\">\n<tbody style=\"font-size: small;\">\n<tr style=\"font-size: small;\">\n<td style=\"font-size: small;\">\n<p><strong>Memory</strong></p>\n</td>\n<td style=\"font-size: small;\">\n<p>~ 2 GB minimum</p>\n<p>~ 512 MB heap size.</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td style=\"font-size: small;\">\n<p><strong>Disk</strong></p>\n</td>\n<td style=\"font-size: small;\">\n<p>~ 500 MB for a fresh installation, excluding space allocated for data and log files</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td style=\"font-size: small;\">\n<p><strong>OS</strong></p>\n</td>\n<td style=\"font-size: small;\">\n<p>Linux type distribution running Java 1.7.*</p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td style=\"font-size: small;\">\n<p><strong>&nbsp;</strong></p>\n</td>\n<td style=\"font-size: small;\">\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p style=\"font-size: small;\">From a security and performance point of view, it is suggested to move the gateway, the key server and the monitoring server to dedicated machines (implementation of DMZ, cluster, monitoring, and load balancer pattern). Depending on usage scenarios, the key server and the gateway will usually be the components that are under most load. Thus, it is suggested to use load balancer and clustering patterns to scale them first.</p>\n<p style=\"font-size: small;\">While most of the available API management solutions provide all of required components to install our deployment suggestion, we plan to use a specific stack from a middleware company called WSO2 (<a target=\"_blank\" style=\"font-size: small;\">http://wso2.com</a>) for the prototypical implementation. We choose this stack based on the following reasons:&nbsp;</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">General availability thanks to its open source implementation</li>\n<li style=\"font-size: small;\">Industry grade and mature components (e.g., used in Ebay)</li>\n<li style=\"font-size: small;\">Support for modular and distributed deployments</li>\n<li style=\"font-size: small;\">Availability of a suitable identity and analytics server</li>\n</ul>\n<p style=\"font-size: small;\">&nbsp;</p>\n<p style=\"font-size: small;\">The following diagram shows the physical deployment scheme of the system:</p>\n<p style=\"font-size: small;\"><img src=\"p/AspernES/deployment_ea.png\" alt=\"\" width=\"650\" height=\"723\" style=\"font-size: small;\"></p>\n<p style=\"font-size: small;\">One drawback of this deployment scheme is that it lacks hardware redundancy and fault tolerance features, which would increase the availability of the system in case of failure.</p>" ;
          spec:decisionArchitecturalView  "4. Physical View" ;
          spec:hasDecisionDomain          :Domain_ar-012__protocols_and_formats ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_availability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_virtualization .
  
  :DesignTactic_embedded_browsing
          a           gen:DesignTactic ;
          rdfs:label  "embedded browsing" .
  
  :DesignTactic_separated_presentation
          a           gen:DesignTactic ;
          rdfs:label  "separated presentation" .
  
  :Domain_req1  a     spec:Domain ;
          rdfs:label  "req1" .
  
  :Requirement_ar-07__seamless_adaptation
          a                          spec:Requirement ;
          rdfs:label                 "AR-07: Seamless Adaptation" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_shape ;
          gen:wikiEntry              "The system shall support the seamless adaptation of a running process." ;
          spec:containedWithin       :UseCase_adaptation ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Adaptation" .
  
  :Domain_has_changed
          a           spec:Domain ;
          rdfs:label  "has changed" .
  
  :DesignDecision_kdd-02__native_code_invocation
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-02: Native Code Invocation" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "The&nbsp;C++ components for data access&nbsp;will be called from managed code (i.e., the Web API services) using PInvoke (.NET implementation of the native code invokation&nbsp;pattern)." ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_arch-1__client-server_interface , :Domain_arch-3__replace_atl_server ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_reusability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_reusability ;
          spec:useDecisionTactic          :DesignTactic_native_code_invocation , :DesignTactic_type_marshalling .
  
  :DesignTactic_complexity_confinement
          a           gen:DesignTactic ;
          rdfs:label  "complexity confinement" .
  
  :DesignPattern_resource_pooling
          a                              gen:DesignPattern ;
          rdfs:label                     "Resource pooling" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_trustability , :ArchitecturalQuality_immunity , :ArchitecturalQuality_security , :ArchitecturalQuality_traceability , :ArchitecturalQuality_privacy ;
          gen:isAlternativeOf            :DesignTactic_limit_access ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_command_message
          a                              gen:DesignPattern ;
          rdfs:label                     "Command Message" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_complexity ;
          gen:isAlternativeOf            :DesignTactic_message_construction , :DesignTactic_message_type ;
          gen:wikiEntry                  "A Command Message is simply a regular message that happens to contain a command so there is no specific message type for commands. It is used to reliably invoke a procedure in another application. For example a simple Object Access Protocol (SOAP) request is a command message [EAI Command Message 2003]." , "<h3 class=\"dtH1\">Command Message</h3>\n\n<p><em>Problem: </em></p>\n\n<p>How to invoke a procedure in another application? </p>\n\n<p><em>Solution:</em> Use a command message to reliably invoke a procedure in another application as shown in <em>Figure 3</em>. </p>\n\n<p class=\"fig\"><img id=\"aj2mpsoarch03\" alt=\"Aa480027.aj2mpsoarch03(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC122997.gif\" title=\"Aa480027.aj2mpsoarch03(en-us,MSDN.10).gif\" xmlns=\"\"></p>\n\n<p class=\"label\"><strong>Figure 3. Command message</strong></p>\n\n<p><em>Interactions: </em></p>\n\n<p>A <em>command message</em> controls another application, or a series of other applications, by sending a specially formatted message to that system. A command message includes intelligent instructions to perform a specific action, either through headers and attributes, or as part of the message payload. The recipient performs the appropriate action when the message is received. Command messages are closely related to the Command pattern [9]. </p>\n\n<p>A <em>command message</em> is simply a regular message that happens to contain a command. A Simple Object Access Protocol (SOAP) request is a command message. </p>\n\n<p><em>Command messages</em> are usually sent on a point-to-point channel so that each command will only be consumed and invoked once.</p>\n\n<h3 class=\"dtH1\"></h3>" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_message_protection
          a                             gen:DesignTactic ;
          rdfs:label                    "Message Protection" , "message protection" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_immunity ;
          gen:wikiEntry                 "When transmitting sensitive data between a service and its consumer you should design for message protection. You can use transport layer protection (such as IPSec or SSL) or message-based protection (such as encryption and digital signatures). Consider the following guidelines when designing message protection In most cases you should consider using message-based security techniques to protect message content. Message-based security helps to protect sensitive data in messages by encrypting it and a digital signature will help to protect against repudiation and tampering of the messages. However keep in mind that each layer of security will affect performance. If interactions between the service and the consumer are not routed through intermediaries such as other servers and routers you can use transport layer security such as IPSec or SSL. However if the message passes through one or more intermediaries always use message-based security. With transport layer security the message is decrypted and then encrypted at each intermediary through which it passeswhich represents a security risk. For maximum security consider using both transport layer and message-based security in your design. Transport layer security will help to protect the headers information that cannot be encrypted using message based security.  In addition to this classic message-level protection mechanisms the followingconsiderations should be taken into account during design If a message constains information about errorsor exceptions they should not expose details about its internal implementation (Exception Shielding). Consider message aggregation to enable anintegrated view of information distributed across multiple services and consumers (Message Federation). Enforcement message idempotency by preventing an attacker from intercepting a message and executing it multiple times. The classic example is an opteration withdraw(100) vs. setBalance(250) the latter can be executed multiple times without changing the account balance. (Replay Protection) Check the content and values in messages to protect a service from malformed or malicious content (Message Validation)." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :SoftwareEngineeringMethod_risk_simulation
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Risk Simulation" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_technical_project_manager ;
          gen:hasMethodTag         :AuthorTag_risk , :AuthorTag_nfr_engineering , :AuthorTag_systems_engineering ;
          gen:wikiEntry            "The Risk Simulation provides the potential extent of loss in respect to permitted system characteristics. Based on the result of the Risk Simulation the potential damage can be included in the risk contengency/provision." .
  
  :DesignPattern_pipes_and_filters_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Pipes and Filters Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_composability , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_utility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_controllability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_composition , :DesignTactic_queueing ;
          gen:wikiEntry                  "Decompose a task that performs complex processing into a series of discrete elements that can be reused. This pattern can improve performance scalability and reusability by allowing task elements that perform the processing to be deployed and scaled independently. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Role_performance_engineer
          a           cont:Role ;
          rdfs:label  "performance engineer" .
  
  spec:Domain  a           owl:Class ;
          rdfs:label       "Domain" ;
          rdfs:subClassOf  gen:ArchitecturalKnowledgeElement .
  
  :DesignPattern_cancel_task
          a                              gen:DesignPattern ;
          rdfs:label                     "Cancel Task" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_modifiability ;
          gen:isAlternativeOf            :DesignTactic_adaptation , :DesignTactic_monitoring , :DesignTactic_data_access ;
          gen:wikiEntry                  "<h2>Motivation</h2>\n<p align=\"justify\">The <em>Cancel Task </em>pattern provides the ability to withdraw a task which has been enabled or is already executing. This ensures that it will not commence or complete execution. </p>\n<h2>Overview</h2>\n<p align=\"justify\">The general interpretation of the <em>Cancel Task</em> pattern is illustrated by Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig25\" target=\"_blank\">25</a>. The trigger which has enabled task B is removed, preventing the task from proceeding.</p>\n<a name=\"fig25\" id=\"fig25\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig25.png\" width=\"539\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 25: </strong>Cancel task pattern (variant 1) </p>\n<p align=\"justify\">There is also a second variant of the pattern where the task has already commenced execution but has not yet completed. This scenario is shown in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig26\" target=\"_blank\">26</a>, where a task which has been enabled or is currently executing can be cancelled. It is important to note for both variants that cancellation is not guaranteed and it is possible that the task will continue executing to completion. In effect, the cancellation vs continuation decision operates as a <em>Deferred Choice</em> with a race condition being set up between the cancellation event and the much slower task of resources responding to work assignment. For all practical purposes, it is much more likely that the cancellation will be effected rather than the task being continued.</p>\n<a name=\"fig26\" id=\"fig26\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig26.png\" width=\"620\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 26:</strong> Cancel task pattern (variant 2) </p>\n<p align=\"justify\">Where guaranteed cancellation is required, the implementation of tasks should take the form illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig27\" target=\"_blank\">27</a>. The decision to cancel task B can only be made after it has been enabled and prior to it completing. Once this decision is made, it is not possible for the task to progress any further. For obvious reasons, it is not possible to cancel a task which has not been enabled (i.e. there is no \"memory\" associated with the action of cancelling a task in the way that there is for triggers) nor is it possible to cancel a task which has already completed execution. </p>\n<a name=\"fig27\" id=\"fig27\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig27.png\" width=\"734\" height=\"276\"></p>\n<p align=\"center\"><strong>Figure 27:</strong> Cancel task pattern with guaranteed termination</p>\n<p align=\"justify\">&nbsp;</p>" , "<h1 align=\"center\">Pattern 19 (Cancel Task)</h1>\n<p><a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19_animation.php\" target=\"_blank\">FLASH animation of Cancel Task</a><a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19_animation.php\" target=\"_blank\"> pattern</a></p>\n<h2>Description</h2>\n<p align=\"justify\">An enabled task is withdrawn prior to it commencing execution. If the task has started, it is disabled and, where possible, the currently running instance is halted and removed. </p>\n<h2>Synonyms</h2>\n<p>Withdraw task. </p>\n<h2>Examples</h2>\n<p>The <em>access damage</em> task is undertaken by two insurance assessors. Once the first assessor has completed the task, the second is cancelled;</p>\n<p>The purchaser can cancel their <em>building inspection </em>task at any time before it commences. </p>\n<h2>Motivation</h2>\n<p align=\"justify\">The <em>Cancel Task </em>pattern provides the ability to withdraw a task which has been enabled or is already executing. This ensures that it will not commence or complete execution. </p>\n<h2>Overview</h2>\n<p align=\"justify\">The general interpretation of the <em>Cancel Task</em> pattern is illustrated by Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig25\" target=\"_blank\">25</a>. The trigger which has enabled task B is removed, preventing the task from proceeding.</p>\n<a name=\"fig25\" id=\"fig25\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig25.png\" width=\"539\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 25: </strong>Cancel task pattern (variant 1) </p>\n<p align=\"justify\">There is also a second variant of the pattern where the task has already commenced execution but has not yet completed. This scenario is shown in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig26\" target=\"_blank\">26</a>, where a task which has been enabled or is currently executing can be cancelled. It is important to note for both variants that cancellation is not guaranteed and it is possible that the task will continue executing to completion. In effect, the cancellation vs continuation decision operates as a <em>Deferred Choice</em> with a race condition being set up between the cancellation event and the much slower task of resources responding to work assignment. For all practical purposes, it is much more likely that the cancellation will be effected rather than the task being continued.</p>\n<a name=\"fig26\" id=\"fig26\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig26.png\" width=\"620\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 26:</strong> Cancel task pattern (variant 2) </p>\n<p align=\"justify\">Where guaranteed cancellation is required, the implementation of tasks should take the form illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig27\" target=\"_blank\">27</a>. The decision to cancel task B can only be made after it has been enabled and prior to it completing. Once this decision is made, it is not possible for the task to progress any further. For obvious reasons, it is not possible to cancel a task which has not been enabled (i.e. there is no \"memory\" associated with the action of cancelling a task in the way that there is for triggers) nor is it possible to cancel a task which has already completed execution. </p>\n<a name=\"fig27\" id=\"fig27\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig27.png\" width=\"734\" height=\"276\"></p>\n<p align=\"center\"><strong>Figure 27:</strong> Cancel task pattern with guaranteed termination</p>\n<p align=\"justify\">&nbsp;</p>\n<h2>Context</h2>\n<p>There are no specific context conditions associated with the pattern.</p>\n<h2>Implementation</h2>\n<p align=\"justify\">The majority of the offerings examined provide support for this pattern within their process models. Most support the first variant as illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig25\" target=\"_blank\">25</a>: Staffware does so with the withdraw construct, COSA allows tokens to be withdrawn from the places before tasks, iPlanet provides the AbortActivity method, FileNet provides the &lt;Terminate Branch&gt; construct and SAP Workflow provides the process control step for this purpose although it has limited usage. BPEL supports the second variant via fault compensation handlers attached to tasks, as do BPMN and XPDL using error type triggers attached to the boundary of the task to be cancelled. UML 2.0 ADs provide a similiar capability by placing the task to be cancelled in an interruptible region triggered by a signal or another task. FLOWer does not directly support the pattern although tasks can be skipped and redone. </p>\n<h2>Issues</h2>\n<p>None identified. </p>\n<h2>Solutions</h2>\n<p>N/A</p>\n<h2>Evaluation Criteria</h2>\n<p align=\"justify\">An offering achieves full support for this pattern if it provides a construct that satisfies the description for the pattern. If there are any side-effects associated with the cancellation (e.g. forced completion of other tasks, the cancelled task being marked as complete), the offering is rated as having partial support.</p>" ;
          spec:hasPatternDomain          :Domain_workflows__shape_ , :Domain_abstract .
  
  :Domain_ar-152__kpi_on_the_fly
          a           spec:Domain ;
          rdfs:label  "ar-152: kpi on the fly" .
  
  :Domain_ar-012__protocols_and_formats
          a           spec:Domain ;
          rdfs:label  "ar-012: protocols and formats" .
  
  :DesignPattern_session_failover
          a                              gen:DesignPattern ;
          rdfs:label                     "Session failover" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_usability , :ArchitecturalQuality_availability , :ArchitecturalQuality_affordability , :ArchitecturalQuality_transferability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_observability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_manageability ;
          gen:isAlternativeOf            :DesignTactic_monitoring , :DesignTactic_change_propagation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_ad-126__benchmarks_deployment
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-126: Benchmarks deployment" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Benchmarks deployment&nbsp;configuration</strong></p>\n<p style=\"font-size: small;\">The diagram below shows the deployment configuration for the system components depicted in the component diagram.These components will be deployed in the so called ASCR hosting center.</p>\n<p style=\"font-size: small;\">The AV (Additional Visualization) component is a client-sided JavaScript application. The AE (Aspern Extensions) component is a Java web application deployed as a WAR-file, which exposes a JAX-RS RESTful service. The web servers used are Glassfish (for testing purposes) and Apache Tomcat for the productive version.</p>\n<p style=\"text-align: center; font-size: small;\"><img style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernBM/deployment.png\" alt=\"\" width=\"628\" height=\"369\">Benchmarks deployment&nbsp;configuration</p>\n<p style=\"font-size: small;\">The ASCR hosting center hosts a series of virtual machines having various functions and purposes. Two of them are used for the Benchmarks use case:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Teradata appliance (IP:&nbsp;10.50.1.2) and&nbsp;</span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Benchmarks web application (Demo_building, IP:&nbsp;10.50.1.99).</span></li>\n</ul>\n<p style=\"font-size: small;\">The ASCR hosting center is protected by a firewall, which makes it only accessible through a remote desktop connection by authorized users.</p>\n<p style=\"font-size: small;\"><img style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernBM/ascr.png\" alt=\"\" width=\"628\" height=\"329\"></p>\n<p style=\"text-align: center; font-size: small;\">Computation capacities in the ASCR-central.&nbsp;</p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Notes:</strong></p>\n<p style=\"font-size: small;\"><a target=\"_blank\" name=\"_ftn1\" style=\"font-size: small;\"></a>[1] <a href=\"https://glassfish.java.net/\" style=\"font-size: small;\">https://glassfish.java.net/</a></p>" ;
          spec:decisionArchitecturalView  "4. Physical View" ;
          spec:hasDecisionDomain          :Domain_ar-101__dwh_querying , :Domain_ar-102__tool_integration ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security , :ArchitecturalQuality_performance , :ArchitecturalQuality_integratability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_portability ;
          spec:useDecisionTactic          :DesignTactic_horizontal_scaling , :DesignTactic_virtualization .
  
  :DesignPattern_state
          a                              gen:DesignPattern ;
          rdfs:label                     "State" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_accessibility ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_composability , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_privacy ;
          gen:isAlternativeOf            :DesignTactic_composition , :DesignTactic_auditing , :DesignTactic_accounting ;
          gen:wikiEntry                  "[Wikipedia State Pattern 2014] A State allows an object to alter its behavior when its internal state changes. (GoF behavioral pattern)." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:State_pattern .
  
  gen:lastModified  a  owl:FunctionalProperty , owl:DatatypeProperty ;
          rdfs:domain  gen:ReferenceDocument ;
          rdfs:range   xsd:dateTime .
  
  :Domain_sr-01_07  a  spec:Domain ;
          rdfs:label  "sr-01.07" .
  
  :Project_smartscada
          a           cont:Project ;
          rdfs:label  "smartscada" .
  
  :DesignTactic_mapping
          a           gen:DesignTactic ;
          rdfs:label  "mapping" .
  
  :Domain_knowledge_representation
          a           spec:Domain ;
          rdfs:label  "knowledge representation" .
  
  :DesignDecision_kdd-07__replace_atl_and_isapi
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-07: Replace ATL and ISAPI" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span lang=\"EN-US\">The currently used Web Service mechanism has quite a few problems:</span></p>\n<ul>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em;\">Obsolete technology; not supported by Visual Studio anymore</span></li>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em;\">No 64 bit support</span></li>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em;\">Hard to maintain</span></li>\n</ul>\n<p>&nbsp;</p>\n<p><span lang=\"EN-US\">Alternative solutions have&nbsp;been evaluated by taking into account the following architectural qualities:</span></p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">Performance</span></li>\n<li><span style=\"line-height: 1.3em;\">Maintained (Open source or Commercial library),</span></li>\n<li><span style=\"line-height: 1.3em;\">Security</span></li>\n<li><span style=\"line-height: 1.3em;\">Easily pluggable to current design, etc.</span></li>\n</ul>\n<p>&nbsp;</p>\n<p><span lang=\"EN-US\">Certain alternatives were evaluated in the last version, but are not satisfactory:</span></p>\n<table class=\"MsoNormalTable\" style=\"margin-left: 26.7pt; border-collapse: collapse; border: none;\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td style=\"width: 155.9pt; border: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"208\">\n<p class=\"MsoNormal\"><strong><span lang=\"EN-US\">Toolkit / Communication mechanism</span></strong></p>\n</td>\n<td style=\"width: 120.5pt; border: solid windowtext 1.0pt; border-left: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"161\">\n<p class=\"MsoNormal\"><strong><span lang=\"EN-US\">Time to display 14,000 studies in PB</span></strong></p>\n</td>\n<td style=\"width: 175.7pt; border: solid windowtext 1.0pt; border-left: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"234\">\n<p class=\"MsoNormal\"><strong><span lang=\"EN-US\">Remarks</span></strong></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 155.9pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"208\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">Reporting Client</span></p>\n</td>\n<td style=\"width: 120.5pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"161\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">3 &ndash; 4 seconds</span></p>\n</td>\n<td style=\"width: 175.7pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"234\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">Direct ODBC data fetch</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 155.9pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"208\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">Web Client (using ATL Server)</span></p>\n</td>\n<td style=\"width: 120.5pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"161\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">7 seconds</span></p>\n</td>\n<td style=\"width: 175.7pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"234\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">Current mechanism</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 155.9pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"208\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">Web Client (using WWSAPI)</span></p>\n</td>\n<td style=\"width: 120.5pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"161\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">9 to 10 sec.</span></p>\n</td>\n<td style=\"width: 175.7pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"234\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">Open source, but inactive</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 155.9pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"208\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">Web Client (using WCF)</span></p>\n</td>\n<td style=\"width: 120.5pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"161\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">14 seconds</span></p>\n</td>\n<td style=\"width: 175.7pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"234\">\n<p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-size: 10.0pt; line-height: 115%;\">Interops will be hard with C++</span></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin-left: 18.0pt; text-align: justify;\"><span lang=\"EN-US\">&nbsp;</span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify;\"><span lang=\"EN-US\">Certain possible options:</span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 54.0pt; text-align: justify; text-indent: -18.0pt;\"><span lang=\"EN-US\">o<span style=\"font: 7.0pt;\">&nbsp;&nbsp; </span></span><span lang=\"EN-US\">The C++ REST (Casablanca) SDK would be the best, but the server side implementation is still not available.</span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 54.0pt; text-align: justify; text-indent: -18.0pt;\"><span lang=\"EN-US\">o<span style=\"font: 7.0pt;\">&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Good Http server (ex: Boost asio)&nbsp; together with JSON parser (ex: rapidjson).&nbsp;</span><span style=\"line-height: 1.3em;\">On the client side, this can be coupled with C++ REST (Casablanca) SDK</span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 54.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"line-height: 1.3em;\">o<span style=\"font: 7.0pt;\">&nbsp; &nbsp;<strong>Microsoft Web API</strong></span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 54.0pt; text-align: justify;\">&nbsp;</p>" ;
          spec:decisionArchitecturalView  "1. Component View" ;
          spec:hasDecisionDomain          :Domain_arch-3__replace_atl_server ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity , :ArchitecturalQuality_stability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces .
  
  :ArchitecturalQuality_automatibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Automatibility" , "automatibility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_white-box_testing , :DesignPattern_lock , :DesignPattern_fork_and_join , :DesignPattern_separate_system-managed_data , :DesignTactic_atomicity , :DesignPattern_facade , :DesignPattern_composite , :DesignTactic_layering , :DesignPattern_restart , :DesignPattern_redundancy , :DesignPattern_pipe_and_filter , :DesignPattern_encapsulation , :DesignPattern_flyweight , :DesignPattern_proxy , :DesignTactic_parallel_computing , :DesignPattern_load_balancing , :DesignPattern_bulk_synchronous_parallel , :DesignTactic_separation_of_concerns , :DesignPattern_mediator , :DesignPattern_competing_consumers , :DesignPattern_bridge , :DesignPattern_delightfully_parallel_loop , :DesignPattern_chain_of_responsibility , :DesignPattern_execution_orchestrator , :DesignPattern_map_reduce , :DesignPattern_scatter_and_gather , :DesignPattern_gatekeeper_pattern , :DesignPattern_module , :DesignTactic_isolation , :DesignPattern_shared_space ;
          gen:relatedQuality       :ArchitecturalQuality_testability ;
          gen:wikiEntry            "" ;
          spec:requiredBy          :Domain_abstract .
  
  :Role_technical_project_manager
          a           cont:Role ;
          rdfs:label  "technical project manager" .
  
  :DesignDecision_add-01__zero-footprint_architecture
          a                               spec:DesignDecision ;
          rdfs:label                      "ADD-01: Zero-footprint architecture" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_safiddle ;
          gen:wikiEntry                   "<p><span style=\"font-size: 14pt;\"><strong>Zero-footprint architecture</strong></span></p>\n<p><span style=\"font-size: 14pt;\">The user interface to the system is represented by&nbsp;a zero-footprint web application. The data is persisted in a NoSQL database. The access to the database is realized through a REST interface.</span></p>\n<p><span style=\"font-size: 18.6667px;\"><strong>Advantages:</strong></span></p>\n<ul>\n<li><span style=\"font-size: 18.6667px;\">Seamless collaboration of geographically distributed&nbsp;users</span></li>\n<li><span style=\"font-size: 18.6667px;\">White-board like in-meeting collaboration</span></li>\n<li><span style=\"font-size: 18.6667px;\">Seamless server-side persistence of content</span></li>\n<li><span style=\"font-size: 18.6667px;\">No installation overhead</span></li>\n</ul>\n<p><span style=\"font-size: 18.6667px;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"p/saFiddle/components.png\" alt=\"\" width=\"700\" height=\"476\" /></span></p>" , "The user interface to the system is represented by&nbsp;a zero-footprint web application. The data is persisted in a NoSQL database. The access to the database is realized through a REST interface." ;
          spec:decisionArchitecturalView  "Component View" ;
          spec:hasDecisionDomain          :Domain_ar-05__effective_collaboration , :Domain_ar-01__tool_support_for_sad , :Domain_ar-08__rapid_specification_authoring ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_reliability , :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity , :ArchitecturalQuality_visibility , :ArchitecturalQuality_portability ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces .
  
  :DesignPattern_runtime_reconfiguration_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Runtime Reconfiguration Pattern" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_usability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_serviceability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_agility , :ArchitecturalQuality_controllability ;
          gen:isAlternativeOf            :DesignTactic_softcoding ;
          gen:wikiEntry                  "Design an application so that it can be reconfigured without requiring redeployment or restarting the application. This helps to maintain availability and minimize downtime. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Author_ivanov_sergey
          a           cont:Author ;
          rdfs:label  "ivanov sergey" .
  
  :Role_product_owner
          a           cont:Role ;
          rdfs:label  "product owner" .
  
  :ArchitecturalQuality_maturity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Maturity" , "maturity" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignPattern_marked_data , :DesignPattern_quarantine , :DesignPattern_error_handler , :DesignPattern_minimize_human_intervention , :DesignPattern_memento , :DesignPattern_circuit_breaker , :DesignPattern_error_containment_barrier , :DesignPattern_reinitialization , :DesignPattern_reintegration , :DesignPattern_redundancy , :DesignPattern_escalation , :DesignPattern_revise_procedure , :DesignPattern_retry_pattern , :DesignPattern_limit_retries , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_concentrated_recovery , :DesignPattern_rollforward , :DesignPattern_riding_over_transients , :DesignPattern_acknowledgement , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_compensation , :DesignPattern_message_federation , :DesignPattern_compensating_transaction_pattern , :DesignPattern_finish_work_in_progress , :DesignPattern_small_patches , :DesignPattern_realistic_threshold , :DesignPattern_3-category_logging , :DesignPattern_watchdog , :DesignPattern_units_of_mitigation , :DesignPattern_slow_it_down , :DesignPattern_fault_diagnosis , :DesignPattern_routine_audits , :DesignPattern_process_manager , :DesignPattern_leaky_bucket_counter , :DesignPattern_final_handling , :DesignTactic_error_handling , :DesignPattern_maintenance_interface , :DesignPattern_indiviuals_decide_timing , :DesignPattern_fault_observer , :DesignPattern_software_update , :DesignPattern_remote_storage , :DesignPattern_recovery_blocks , :DesignPattern_maximize_human_participation , :DesignPattern_resource_allocation , :DesignPattern_expansive_automatic_controls , :DesignPattern_treshold_analysis , :DesignPattern_failover , :DesignPattern_restart , :DesignPattern_reconfiguration , :DesignPattern_event_message , :DesignPattern_routine_maintenance , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_heartbeat , :DesignPattern_checkpoint , :DesignPattern_similarity_detection , :DesignPattern_deferrable_work , :DesignPattern_caching , :DesignPattern_protective_automatic_controls , :DesignPattern_correcting_audits , :DesignPattern_checksum , :DesignPattern_temporal_analytics , :DesignPattern_return_to_reference_point , :DesignPattern_queue_for_resources , :DesignPattern_message_bus , :DesignTactic_fault_handling , :DesignPattern_existing_metrics , :DesignTactic_error_detection , :DesignPattern_reproducible_error , :DesignPattern_fresh_work_before_stale , :DesignPattern_routine_exercises , :DesignPattern_error_correcting_code , :DesignPattern_rollback , :DesignPattern_fault_correlation , :DesignPattern_parameter_checking , :DesignPattern_someone_in_charge , :DesignPattern_request_response , :DesignPattern_root_cause_analysis , :DesignPattern_voting , :DesignPattern_fault_isolation , :DesignPattern_claim_check ;
          gen:relatedQuality       :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_functionality ;
          gen:wikiEntry            "[Losavio et al.2003] The capability of the software product to avoid failures as a result of faults in the software. It can be refined into an attribute Mean Time To Failure (MTTF) measured on the source code." ;
          spec:requiredBy          :Domain_abstract .
  
  :SoftwareEngineeringMethod_engineering_regionalization_framework
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Engineering Regionalization Framework" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_technical_project_manager ;
          gen:hasMethodTag         :AuthorTag_risk_analysis , :AuthorTag_business_strategy , :AuthorTag_cost-benefit_analysis , :AuthorTag_framework , :AuthorTag_regionalization , :AuthorTag_engineering ;
          gen:wikiEntry            "The Framework for Regionalization of Engineering provides a comprehensive collection of reference guides, best practices, methods, tools and utilities. The framework is intended to support the successful set-up and implementation of regionalization initiatives at engineering units. The focus is on the allocation of engineering tasks, previously carried out only in the headquarters, to a partner abroad." .
  
  :Project_isdcatalog
          a           cont:Project ;
          rdfs:label  "isdcatalog" .
  
  :DesignTactic_native_code_invokation
          a           gen:DesignTactic ;
          rdfs:label  "native code invokation" .
  
  :Requirement_ar-04__data_protection
          a                          spec:Requirement ;
          rdfs:label                 "AR-04: Data Protection" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_shape ;
          gen:wikiEntry              "The system shall ensure security in the execution of critical activities and the access to confidential information. " ;
          spec:containedWithin       :UseCase_adaptation ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Security" ;
          spec:requirementPurpose    "Data protection" .
  
  :DesignTactic_high_cohesion
          a           gen:DesignTactic ;
          rdfs:label  "high cohesion" .
  
  :ArchitecturalQuality_correctness
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "correctness" , "Correctness" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_bridge , :DesignPattern_facade , :DesignTactic_increase_cohesion , :DesignPattern_adapter , :DesignPattern_command , :DesignPattern_proxy , :DesignPattern_breadcrumbs , :DesignTactic_keep_consistent , :DesignPattern_abstract_factory ;
          gen:relatedQuality       :ArchitecturalQuality_functionality , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_verifiability ;
          gen:wikiEntry            "[Wikipedia Correctness (Computer Science) 2013] Correctness of an algorithm is asserted when it is said that the algorithm is correct with respect to a specification. Functional correctness refers to the input-output behaviour of the algorithm (i.e. for each input it produces the correct output).    Relations The goal of Correctness is asserted when the algorithm is correct with respect to a specification. This can be fulfilles by the Increase Cohension-Tactic because it says that it represents a measure of whether a class or componenent has a well-defined role within the system so when they have a well-defines role with the system the algorithms have to be correct at their specification" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_parameter_checking
          a                              gen:DesignPattern ;
          rdfs:label                     "Parameter Checking" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_integrity , :ArchitecturalQuality_viability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_utility , :ArchitecturalQuality_safety ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "Parameter Checking asserts the validity of all kinds of I/O parameters for functions or operations by [Hanmer 2007]pp 94-97 Syntactic and range checks parses the given input and checks for invalid of characters and symbols as well as checks whether given values are within a specified range or boundary. Semantic checks checks whether the specific values and parameters are plausible conform to the expected input diverge from the norm or comply with policies. Relations Error Detection [Hanmer 2007]Detection Patterns pp 94-97." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Project_wiki  a    cont:Project ;
          rdfs:label  "wiki" .
  
  :DesignTactic_white-box_testing
          a                             gen:DesignTactic ;
          rdfs:label                    "White-Box testing" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_functionality , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_utility , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_demonstrability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_heterogeneity ;
          gen:wikiEntry                 "[Williams 2006] White-box testing is a verification technique software engineers can use to examine if their code works as expected. Using the white-box testing techniques a software engineer can design test cases that exercise independent paths within a module or unit exercise logical decisions on both their true and false side execute loops at their boundaries and within their operational bounds and exercise internal data structures to ensure their validity.  There are different types of White box testing Unit testing which is testing of individual hardware or software units or groups of related units Integration testing which is testing in which software components hardware components or both are combined and tested to evaluate the interaction between them Regression testing which is selective retesting of a system or component to verify thatmodifications have not caused unintended effects and that the system or component still complies with its specified requirements" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignTactic_retry
          a           gen:DesignTactic ;
          rdfs:label  "retry" .
  
  :DesignTactic_composition
          a                             gen:DesignTactic ;
          rdfs:label                    "Composition" , "composition" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_composability , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_flexibility ;
          gen:wikiEntry                 "Compostion is a way to combine simple objects or data types into more complex ones." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignDecision_kdd-25
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-25" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Responsive Design (RD) mittels&nbsp;JavaScript und CSS</strong></p><p>Die webbasierte Benutzeroberfläche kann die Größe, die Reihenfolge auf der Seite sowie das Aussehen der angezeigten Elemente (Graphiken, Menus, Buttons, etc.) gemäß des verwendeten Gerätetyps (z.B. PC,&nbsp;Tablet, Smart Phone) automatisch zur Laufzeit gestalten,&nbsp;sodass diese auf Eigenschaften des jeweils benutzten Endgeräts, vor allem Smart Phones und Tablets, reagieren können.</p><p>Dafür bieten sich RD-Frameworks wie etwa Bootstrap<sup>1</sup> an.&nbsp;</p><p>[1] http://getbootstrap.com/</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-165__portability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability ;
          spec:useDecisionTactic          :DesignTactic_responsive_design .
  
  :DesignTactic_error_detection
          a                             gen:DesignTactic ;
          rdfs:label                    "error detection" , "Error Detection" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_dependability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_integrity , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_maturity , :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_autonomy ;
          gen:wikiEntry                 "Error detection aims at identifying the presence of an error during the system normal operation and service delivery or while service delivery is suspended or the system taken offline (e.g. through regular offline audits)." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_competing_consumers
          a                              gen:DesignPattern ;
          rdfs:label                     "Competing Consumers" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_utility , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_mobility , :ArchitecturalQuality_sustainability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_availability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_operability , :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf            :DesignTactic_message_channeling , :DesignTactic_producer_consumer , :DesignTactic_load_distribution , :DesignTactic_message_endpoint , :DesignTactic_parallel_computing ;
          gen:wikiEntry                  "Enable multiple concurrent consumers to process messages received on the same messaging channel. This pattern enables a system to process multiple messages concurrently to optimize throughput to improve scalability and availability and to balance the workload.[MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_kdd-09__process_recovery
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-09: Process Recovery" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<p style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\"><strong><span lang=\"DE-AT\" style=\"font-size: 12pt;\">Forward&nbsp;Recovery of Processes in case of Failures</span></strong></p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">The root of software faults is complexity. However,&nbsp;cost reduction and optimization can only be achieved through process adaptation, which may lead to more complex processes. Because&nbsp;a</span><span lang=\"DE-AT\">d hoc software/process updates may introduce latent software faults, the system must have means to recover from possible failures caused by the activation of latent faults. While o</span></span><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">bvious errors are corrected early during development and testing&nbsp;phases of the project, subtler errors remain in the code and are more difficult to detect. In general,&nbsp;t</span></span><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">he more complex the process,</span><span lang=\"DE-AT\">&nbsp;the harder it is to make it reliable and safe. Also,&nbsp;t</span></span><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">here is always a finite amount of ressources to be spent on testing.</span></span></p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">Safety/mission-critical processes must have means for recovery at runtime (i.e., to switch to a reliable process). To accomplish this, the adaptation process implements a&nbsp;</span></span><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">forward recovery mechanism:&nbsp;</span></span><em><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">Sha, L. (2001). Using simplicity to control complexity. IEEE Software, (4), 20-28.</span></span></em></p>\n<p><span style=\"font-size: 12pt;\">The following diagram depicts the forward&nbsp;recovery process:</span></p>\n<p><span style=\"font-size: 12pt;\"><img src=\"p/Shape/recovery_process.png\" alt=\"\" width=\"554\" height=\"158\" /></span></p>\n<p><span style=\"font-size: 12pt;\">Process dynamics:</span></p>\n<ul>\n<li><span style=\"font-size: 12pt; line-height: 1.3em;\">Detect faulty behavior using an acceptance test or safe output region check</span></li>\n<li><span style=\"font-size: 12pt; line-height: 1.3em;\">Keep/derive an analytic relationship between the outputs of the core and adapted versions of the subprocesses, e.g.</span></li>\n<ul>\n<li><span style=\"font-size: 12pt; line-height: 1.3em;\">DIFF: the modified process should only produce an output that is measurable and differentiable with respect to the old version of the process&nbsp;</span></li>\n</ul>\n<li><span style=\"font-size: 12pt; line-height: 1.3em;\">Camunda @runtime subprocess deployment mechanism</span></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong><span style=\"font-size: 12pt;\">Forward Recovery</span></strong></p>\n<p><span style=\"font-size: 16px;\">The forward recovery method works as follows:</span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Prerequisite:</strong> The forward recovery method uses&nbsp;</span><span style=\"font-size: 12pt;\">a simple and reliable core process that provides the essential service. This process is decomposed in smaller subprocesses, (idealy) such that each process deals with only one aspect of the workflow. This represents a&nbsp;decomposition of</span><span style=\"font-size: 12pt;\">&nbsp;the process into adaptable subprocesses.</span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Tactic:</strong>&nbsp;Only</span><span style=\"font-size: 12pt;\">&nbsp;one subprocess gets to be adapted at a time. The old version of the process denoted version_1 (core) is thereby replaced by an adapted version_2 of the subprocess being adapted. The core version_1 of the subprocess&nbsp;is kept</span><span style=\"font-size: 12pt;\">&nbsp;in stand-by in case the adapted version fails.&nbsp;</span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Detection mechanism:</strong> An acceptance test checks the output of the adapted subprocess after every run using an acceptance test. The acceptance test should be able to detect any abnormalities w.r.t. the expected results of the adaptation. </span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Recovery:</strong> If such an abnormality is detected the acceptance test must fail and the system will automatically switch back to the core version_1 of the subprocess. The state of the process is recovered up to the point of the task that failed. The user is asked to redo that task (and any other tasks depending on it) as required in the version_1 of the subprocess.</span></p>\n<p><span style=\"font-size: 12pt;\">The following diagram shows an example of a subprocess, which has been adapted. The adaptation consists of the automation of a task.</span></p>\n<p><img style=\"border-width: 0px;\" src=\"p/Shape/subprocess_recovery.png\" alt=\"\" width=\"590\" height=\"375\" /></p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-06__failure_recovery , :Domain_ar-02__safety_assurance ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_extensibility , :ArchitecturalQuality_flexibility ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_reliability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_safety ;
          spec:useDecisionTactic          :DesignTactic_adaptation .
  
  :Requirement_ar-151__visualization_granularity
          a                          spec:Requirement ;
          rdfs:label                 "AR-151: Visualization granularity" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "<p>Die Visualisierung soll möglichst ohne Verzögerungen die KPIs in unterschiedlicher Granularität bei Bedarf berechnen und anzeigen können.</p>" ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_sr-01_13 ;
          spec:requirementGroup      "Operational" ;
          spec:requirementPurpose    "Adaptive Query Processing" .
  
  :Author_ndem_guy_collins
          a           cont:Author ;
          rdfs:label  "ndem guy collins" .
  
  :DesignTactic_throttling
          a           gen:DesignTactic ;
          rdfs:label  "throttling" .
  
  :Requirement_ar-105__reports_and_analytics
          a                          spec:Requirement ;
          rdfs:label                 "AR-105: Reports and analytics" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "In addition to the simple filter-based data queries, the system shall support answering complex questions through analyses. Thus, the functionalities of the system are divided into (1) predefined reports and (2) support for individual data exploration towards \"data discovery\" beyond traditional business intelligence. The analysis components shall fetch the data using the same mechanism and components as the visualization components." ;
          spec:containedWithin       :UseCase_benchmarks ;
          spec:hasRequirementOrigin  :Domain_sr-01_09 ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Reporting" , "Data Analytics" .
  
  :DesignPattern_message_transformation
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Transformation" ;
          gen:hasKnowledgeAuthor         :Author_edwin_willegger ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_breadcrumbs ;
          gen:wikiEntry                  "When passing messages between a service and consumer there are many cases where the message must be transformed into a format that the consumer can understand. You can use adapters to provide access to the message channel for clients that do not support messaging and translators to convert the message data into a format that each consumer understands. Consider the following guidelines when designing message transformation Determine the requirements and locations for performing transformations. Take into account the performance overhead of transformation and try to minimize the number of transformations you execute. Determine relevant patterns for message transformation such as Canonical Data Mapper Envelope Wrapper and Normalizer. However use the Canonical Data Mapper model only when this is necessary. Use metadata to define the message format. Consider using an external repository to store the metadata." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_encapsulation
          a                              gen:DesignPattern ;
          rdfs:label                     "Encapsulation" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_durability , :ArchitecturalQuality_stability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_consistency , :ArchitecturalQuality_usability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_transferability , :ArchitecturalQuality_affordability ;
          gen:isAlternativeOf            :DesignTactic_isolation , :DesignTactic_change_propagation ;
          gen:wikiEntry                  "[SOA Patterns Service Encapsulation [date unknown]] In object-oriented programming encapsulation means that the internal representation of anobject is generally hidden from view outside of the objects definition. Typically only the objects own methods can directly inspect or manipulate its fields. Solution logic can be encapsulated by a service so that it is positioned as an enterprise resource capable of functioning beyond the boundary for which it is initially delivered.     Information hiding" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  cont:Author  a           owl:Class ;
          rdfs:label       "Author" ;
          rdfs:subClassOf  cont:ContextInformationElement .
  
  :ArchitecturalQuality_traceability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "traceability" , "Traceability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_logging , :DesignPattern_escalation , :DesignPattern_federated_identity_pattern , :DesignDecision_add-04__map-report_model , :DesignPattern_limit_retries , :DesignDecision_add-02__schemas_for_faceted_search , :DesignPattern_event_message , :DesignDecision_add-03__concept_linkage , :DesignPattern_minimize_human_intervention , :DesignPattern_routine_maintenance , :DesignTactic_authorization , :DesignTactic_authentication , :DesignPattern_inner_join , :DesignPattern_access_control , :DesignPattern_attribute-value_system , :DesignPattern_identity_credentials , :DesignPattern_routine_audits , :DesignPattern_demilitarized_zone__dmz_ , :DesignPattern_capturing_architectural_requirements , :DesignPattern_known_partners , :DesignPattern_public_key_encryption , :DesignPattern_process_manager , :DesignPattern_valet_key_pattern , :DesignPattern_resource_pooling , :DesignTactic_limit_access , :DesignPattern_message_bus , :DesignPattern_resource_allocation , :DesignPattern_information_obscurity , :DesignPattern_data_logger , :DesignTactic_accounting , :DesignPattern_secure_channels , :DesignPattern_web_service_proxy , :DesignTactic_auditing , :DesignPattern_gatekeeper_pattern , :DesignPattern_correcting_audits , :DesignPattern_connection_limitation , :DesignPattern_existing_metrics , :DesignPattern_message_federation , :DesignPattern_packet_filtering ;
          gen:relatedQuality       :ArchitecturalQuality_accountability , :ArchitecturalQuality_security ;
          gen:wikiEntry            "Traceability refers to the completeness of the information about every step in a process/workflow. The formal definition of traceability is the ability to chronologically interrelate uniquely identifiable entities in a way that is verifiable. Traceability is the ability to verify the history location or application of an item by means of documented recorded identification.  [Wikipedia - Tracebility 2015]Tracebility refers to the ability to link product requirements back to stakeholders rationales and forward to corresponding design artifacts code and test cases. [Philip A. Laplante 2007]Traceability is concerned with the relationships between requirements their sources and the system design." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_static_content_hosting_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Static Content Hosting Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_scalability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_mobility , :ArchitecturalQuality_operability , :ArchitecturalQuality_affordability , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_efficiency ;
          gen:isAlternativeOf            :DesignTactic_load_distribution , :DesignTactic_overload_mitigation ;
          gen:wikiEntry                  "Deploy static content to a cloud-based storage service that can deliver these directly to the client. This pattern can reduce the requirement for potentially expensive compute instances. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_performance
          a           cont:AuthorTag ;
          rdfs:label  "performance" .
  
  :AuthorTag_standardization
          a           cont:AuthorTag ;
          rdfs:label  "standardization" .
  
  :SoftwareEngineeringMethod_domain_modeling
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Domain Modeling" , "Domain modeling" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_golm_michael , :Author_stal_michael , :Author_wehrwein_bradley , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdwiki , :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_concept_definition , :ProjectPhase_design , :ProjectPhase_requirements ;
          gen:hasMethodRole        :Role_requirements_engineer , :Role_system_architect ;
          gen:hasMethodTag         :AuthorTag_modeling , :AuthorTag_domain_model , :AuthorTag_stakeholder , :AuthorTag_requirements ;
          gen:methodContext        "Early/explorative system design phase" , "System exploration for decision support" , "Greenfield project" ;
          gen:methodInput          "Domain knowledge" ;
          gen:methodOutput         "Domain model" , "Associations" , "Domain glossary" , "Feature model" , "Use cases" ;
          gen:methodPurpose        "Domain terminology" , "Domain vocabulary" , "Domain semantics" ;
          gen:wikiEntry            "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>Domain  modeling builds a common vocabulary and a deep understanding of the problem domain and its specifics, typically including the important entities, relationships among them, key attributes, and constraints. It does not describe solutions to the problem. By engaging domain experts and stakeholders, the modeling process fosters good communication and builds consensus.</p></td>\n</tr>\n</tbody></table>\n<p>&nbsp;&nbsp;</p><p><em><span style=\"color: rgb(37,37,37);\">&nbsp;</span></em></p><span class=\"image-wrap\" style=\"\"><img src=\"https://wiki.ct.siemens.de/download/attachments/94151517/Domain_Modeling_Title.jpg?version=1&amp;modificationDate=1427312678250&amp;api=v2\" width=\"600\" style=\"border: 0px solid black\"></span><p>&nbsp;</p><h1 id=\"DomainModeling-Description\">Description&nbsp;</h1><p class=\"Caption1\"><span style=\"color: rgb(0,0,0);\">Creating a Domain Model is necessary step when creating an architecture in order to understand how the solution you are building will fit into the customer’s domain. It mitigates the risk against expensive failures </span><span style=\"color: rgb(0,0,0);\">c</span><span style=\"color: rgb(0,0,0);\">aused by using an inappropriate software architecture. </span><span style=\"color: rgb(0,0,0);\">A domain model represents real-world concepts, not software components, and <span style=\"color: rgb(0,0,0);\">consists of <span style=\"color: rgb(0,0,0);\">the most important types of objects in the context of the business and further&nbsp;i</span></span></span>llustrates meaningful conceptual classes of&nbsp;the problem domain.</p><h2 id=\"DomainModeling-Context\">Context</h2><p class=\"Caption1\">Domain modeling are part of the early phases of an iterative development effort and has to be done: once to capture the domain knowledge, and then each time the scope of your products evolves. Whereas, the requirements of a system tend to be evolving and changing, the problem domain remains relatively stable.</p><p class=\"Caption1\">For building a domain model it is crucial to have experience in the domain you are modeling. This experience may come from any team member, the customer, or even users. Often this knowledge is captured in existing products, the terms used in your organization, and in the heads of your architects, developers and product managers.</p><h2 id=\"DomainModeling-Inputs\">Inputs&nbsp;</h2><p class=\"Kastentext\">As part of the domain modeling we mine and document the available domain knowledge. Based on the results reuse of assets, for example software components, will be easier, as you can better exploit commonalities. By this, also the purpose of assets becomes more obvious and it is easier to see how they can be used and varied to fit into a specific product within the domain.</p><p class=\"Fliesstext\">We also establish a common domain vocabulary to support the communication between your product management, development and your customer.</p><p>The domain model should express concepts that are used consistently in the problem domain solution. This helps users, domain experts, management to understand the solution. This consistency should be checked during design and implementation. This helps the communication among the team members and avoids the use of “made up” terms that conflict or mean “nearly then same thing” as what the domain experts mean. Keeping a small gap between the domain model and the solution reduces risk.</p><h2 id=\"DomainModeling-Outputs\">Outputs&nbsp;</h2><p><span>A domain model typically consists of the <span>following</span>:</span></p><ul><li><strong>Scope</strong> – definition of what is in and what is out of the domain.</li><li><strong>Glossary</strong> – definition of the used entities and terms of the domain.</li><li><strong>Associations</strong> – description of the relationships between the entities of the domain.</li><li><strong>Use cases</strong> – collaborations between entities and users of a product within the domain.</li><li><strong>Feature model</strong> – description of the commonalities and variability as they may occur in individual products in the domain.</li></ul><h2 id=\"DomainModeling-Procedure\">Procedure</h2><p class=\"Kastentext\">We follow proven methodology consisting of the following four steps:</p><ul><li><strong>Mine</strong> your domain knowledge in interviews with experts, customers and users.</li><li><strong>Identify </strong>the key abstractions, entities and actors within your domain. This is typically done in the form of interviews with domain experts.</li><li><strong>Document </strong>the knowledge in appropriate prose text, UML- and Entity-Relationship diagrams, and feature models.</li><li><strong>Analyze </strong>the commonalities and variability. In this step we visualize various configurations of existing or planned products.</li><li><strong>(Optionally) Map </strong>features to solution space artifacts. This allows the tracing of consequences when new features are added or existing are changed.</li></ul><p class=\"Kastentext\">The result will be a document describing the commonalities and the degree of variability at the granularity of features.</p><h2 id=\"DomainModeling-Advantagesanddisadvantages\">Advantages and disadvantages</h2><p><span><span style=\"color: rgb(0,0,0);\">Typical situations</span> where Domain Modeling is needed are:</span></p><ul><li>Developing a new or next generation product.</li><li>Developing a Product Line family.</li><li>Knowledge is in the heads of architects, developers and managers.</li><li>Project members have different understanding of Domain concepts.</li><li>Project in crisis – continual and “unexpected” requirement changes. Project not meeting customer needs.</li></ul><p><span>Domain&nbsp;Modeling is most important&nbsp;to address these&nbsp;development issues and therefore it is needed to:</span></p><ul><li><span>&nbsp;</span><span style=\"color: rgb(0,0,0);\">Explicitly document domain knowledge </span><span style=\"color: rgb(0,0,0);\">that represents the </span><span style=\"color: rgb(0,0,0);\">core competenc</span>e.</li><li><span>&nbsp;</span><span>For proper scoping, planning, and development of &nbsp;software products.</span></li><li><span style=\"color: rgb(0,0,0);\">Identify reusable </span><span style=\"color: rgb(0,0,0);\">assets are identified as commonalities to create a stable and sustainable architecture for platforms and product families</span>.</li><li><span style=\"color: rgb(0,0,0);\">Give a conceptual framework of the things in the problem spac</span>e.</li><li><span style=\"color: rgb(0,0,0);\">Enable communication between domain experts and solution provider</span>s.<span>&nbsp;</span></li></ul><h2 id=\"DomainModeling-Example\">Example&nbsp;</h2><p>We have shown that Domain Modeling allows for documenting and communicating domain knowledge in a pragmatic way. We have Domain Modeling experience in several domains:</p><ul><li><strong>Healthcare</strong> - Healthcare Data Exchange</li><li><strong>Energy</strong> - NGDS, Smartgrid -&nbsp;Demand Response Management&nbsp;&amp; Intelligent Load Management</li><li><strong>Building Automation</strong> - TAP5</li><li><strong>Mining</strong> - modeling the domain of our customer's customer</li></ul><p>Domain Modeling as part of an iterative process following the principles of <em>Just Enough Architecture</em> policy through which the development team can reach a clear and common product vision.</p><h2 id=\"DomainModeling-Variants\">Variants</h2><p>We have utilized tools&nbsp;<span style=\"color: rgb(0,0,0);\">such as Enterprise Architect to </span><span style=\"color: rgb(0,0,0);\">capture domain models and produce documentation&nbsp;consisting of&nbsp;correct and consistent domain specific terminology. </span>Enterprise Architect produces a common project model in a database and therefore the entities in the domain can be traced to the design. However, domain modeling need not be done in UML or using a specific tool.</p>" , "<p>Domain modeling builds a common vocabulary and a deep understanding of the problem domain and its specifics, typically including the important entities, relationships among them, key attributes, and constraints. It does not describe solutions to the problem. By engaging domain experts and stakeholders, the modeling process fosters good communication and builds consensus.</p>" .
  
  :Author_stal_michael
          a           cont:Author ;
          rdfs:label  "stal michael" .
  
  :Domain_ar-103__kpi_computation
          a           spec:Domain ;
          rdfs:label  "ar-103: kpi computation" .
  
  :DesignTactic_layering
          a                             gen:DesignTactic ;
          rdfs:label                    "Layering" , "layering" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_replicability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_versatility , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_portability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_complexity ;
          gen:wikiEntry                 "Layeringis concerned with the logical division of components and functionality and do not take into account the physical location of components." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Domain_arch-5__64-bit_code
          a           spec:Domain ;
          rdfs:label  "arch-5: 64-bit code" .
  
  :DesignPattern_decision_1
          a                              gen:DesignPattern ;
          rdfs:label                     "Decision 1" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_efficiency ;
          gen:isAlternativeOf            :DesignTactic_etl ;
          gen:wikiEntry                  "<h2>Decision Documentation Effort</h2>\n<p>A key challenge in various industrial cases is that the relatively high effort needed for design decision documentation<sup>6</sup> often isn’t well accepted. Many decision templates require filling in 10 to 20 fields to document a single design decision. Although each documentation attribute is important, this documentation frequently takes too much effort, so architects on high-pressure projects often neglect it.<sup>7</sup> Therefore, software architects and project managers tend to disregard such practices over time, leading to decision rationale erosion in the long term.</p>\n\t        \n\t        \n\t            <div id=\"lowerFullwidthVCR\"></div>\n\t        \n\t       \t\n<p>Another consequence of strained time for decision documentation is low-quality documentation. For example, if a decision’s rationale is “the end user wants it,” the documentation isn’t likely to be useful over time.</p>\n<h3>Understanding the Links between Decisions and Other Software Artifacts</h3>\n<p>When documenting design decisions, it’s important to establish links to other software artifacts such as requirements and architecture designs. <sup>8</sup> However, although many architectural-decision-capturing templates implicitly mention requirements, establishing and maintaining the right set of traceability links between the decisions and other software artifacts is time-consuming and difficult. But as we’ll see, capturing the right set of links can help increase decisions’ sustainability.<sup>3</sup></p>\n<h3>Avoiding Repetitive Effort</h3>\n<p>Many decisions are based on existing AK in the project or field. For example, in many service-oriented architecture (SOA) projects, service proxies and adapters must integrate legacy systems, each with only a slightly different design. So, each proxy and adapter requires its own decisions, but many of them are similar. Instead of documenting each decision on its own, we would like to reuse the AK and work only with variations of individual decisions, reducing the documentation effort and allowing decisions to be based more on timeproven knowledge.</p>\n<h3>Dealing with Invalid or Bad Rationales</h3>\n<p>Decision drivers and the pros and cons of alternatives, recommendations, and rationales are particularly relevant when you’re capturing design decisions. However, architects sometimes choose bad or invalid rationales, leading to decisions that can be questioned and hence are unsustainable. Consider this valid justification for the external stakeholders’ needs:</p>\n<p><i>Alternative A best meets user expectations and functional requirements as documented in user stories, use cases, and the business process model.</i></p>\n<p>Compare it to this poorly chosen justification:</p>\n<p><i>End users want it, but no evidence exists of a pressing business need.</i></p>" .
  
  :DesignPattern_overload_toolboxes
          a                              gen:DesignPattern ;
          rdfs:label                     "Overload Toolboxes" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_affordability ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_limit_retries
          a                              gen:DesignPattern ;
          rdfs:label                     "Limit Retries" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_auditability , :ArchitecturalQuality_viability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_repeatability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_accountability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_availability , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_defensibility , :ArchitecturalQuality_security , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_safety , :ArchitecturalQuality_analyzability , :ArchitecturalQuality_utility ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_logging , :DesignTactic_accounting ;
          gen:wikiEntry                  "Limit Retries handles the situation when an error occurs and nothing is changed. When the system returns to the scene the error might reoccur. Therefore faults are deterministic when a latent fault is given the same stimuli it will activate in the same way. The first objective is to preserve overall system operation which might only be possible at the expense of individual transactions. Relations Accounting [Hanmer 2007] Error Recovery Patterns pp 160-162. Error Handling [Hanmer 2007] Error Recovery Patterns pp 160-162. Logging [Hanmer 2007] Error Recovery Patterns pp 160-162." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_identity_credentials
          a                              gen:DesignPattern ;
          rdfs:label                     "Identity Credentials" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_trustability , :ArchitecturalQuality_immunity , :ArchitecturalQuality_provability , :ArchitecturalQuality_auditability , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_repeatability , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_analyzability , :ArchitecturalQuality_authenticity , :ArchitecturalQuality_accountability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_security ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_accountability ;
          gen:isAlternativeOf            :DesignTactic_authorization , :DesignTactic_authentication , :DesignTactic_accounting ;
          gen:wikiEntry                  "[Web payments Identity Credentials [date unknown]]An identity is a description of a particular entity such as a person software agent or organization. A credential is a qualification achievement quality or information about an identitys background such as a name government ID home address or university degree. This specification describes mechanisms for reading credentials from and writing credentials to an identity while ensuring that the information is only accessible to authorized applications. Identity credentials provide artifacts that provide an (unique) identity such as username and passwords digital certificatesor biometric identification" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_escalation
          a                              gen:DesignPattern ;
          rdfs:label                     "Escalation" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_accountability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_defensibility , :ArchitecturalQuality_traceability , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_safety , :ArchitecturalQuality_auditability , :ArchitecturalQuality_viability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_auditing , :DesignTactic_error_handling ;
          gen:wikiEntry                  "When error processing steps are not producing the desired effect on the system try a more all-encompassing means. Escalate the action to the next more drastic action when recovery or mitigation is failing. Identifying the steps to escalate through is part of the art of designing a fault tolerant system. Methods like keeping track of the number of actions tried and using a Leaky Bucket Counterto decide when too many attempts have occurred within a certain time are useful [Hanmer 2007] pp 69-72. Relations Auditing[Hanmer 2007]Architectural Patterns pp 69-72. Error Handling [Hanmer 2007] Architectural Patterns pp 69-72." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_add-04__map-report_model
          a                               spec:DesignDecision ;
          rdfs:label                      "ADD-04: Map-report model" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_safiddle ;
          gen:wikiEntry                   "<p><span style=\"font-size: 14pt;\"><strong>Map-report model</strong></span></p>\n<p><span style=\"font-size: 14pt;\">Orchestrate collaboration between users and structure data according to the Map-Report method.</span></p>\n<p><span style=\"font-size: 14pt;\">&nbsp;</span></p>\n<p><span style=\"font-size: 14pt;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"p/saFiddle/map_report.png\" alt=\"\" width=\"700\" height=\"558\" /></span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 14pt;\">Map-Report is inspired by Map-Reduce:</span></p>\n<ul>\n<li><span style=\"font-size: 18.6667px;\">The <strong>mapping function</strong> uses different concept schemas to assign <strong>keys&nbsp;</strong>to different content items (i.e., requirements, design patterns, design decisions, etc.).&nbsp;</span><span style=\"font-size: 14pt;\">The keys are, for example: </span></li>\n<ul>\n<li><span style=\"font-size: 14pt;\"><em>Schema</em> (e.g. \"Requirements\", \"Design Decisions\", \"Design Patterns\", etc.)</span></li>\n<li><span style=\"font-size: 14pt;\"><em>Project</em> (e.g., \"AspernES\", \"saFiddle\", etc.)</span></li>\n<li><span style=\"font-size: 14pt;\">Linked concepts (e.g., \"Design Tactic\" in \"Design Decisions\" and \"Design Patterns\" schemas)</span></li>\n</ul>\n<li><span style=\"font-size: 14pt;\">The <strong>reporting function</strong> use the same schemas as the mapping function to generate content reports and coverage analytics in a similar way as the <em>reduce functions</em> do in Map-Reduce.</span></li>\n<li><span style=\"font-size: 18.6667px;\"><strong>Schema-based mapping</strong>&nbsp;allows for:</span></li>\n<ul>\n<li><span style=\"font-size: 18.6667px;\"><em>Brach-and-bound</em> collaboration between users, who are able to&nbsp;creat, link, and manage items independently of each other</span></li>\n<li><span style=\"font-size: 18.6667px;\">Using a single table (or collection) in a (No)SQL database to store any kind of content items</span></li>\n<li><span style=\"font-size: 18.6667px;\"><em>Design-by-constraint</em>&nbsp;<strong>&gt;&gt;</strong>&nbsp;Schemas have a fixed number of multiple choice and quantitative&nbsp;fields&nbsp;(e.g., 5 multiple choice fields and 1 field for tracking votes). Schemas limit&nbsp;the complexity&nbsp;of the system by providing \"one-fits-all\" schema-dependent user interface, while keeping the semantics (i.e., meaning of different categories of items) and linkage between them unrestricted.</span></li>\n<li><span style=\"font-size: 18.6667px;\"><em>Concept linkage</em> to to create semantic relationships between different schemas.</span></li>\n<li><span style=\"font-size: 18.6667px;\">Extend the types of content items by adding new schemas (e.g. for use cases, business objectives, etc.)</span></li>\n</ul>\n<li><span style=\"font-size: 18.6667px;\"><strong>Schema-based reporting</strong> allows for:</span></li>\n<ul>\n<li><span style=\"font-size: 18.6667px;\">Generating&nbsp;reports that combine items from different schemas grouped around, for example, projects.</span></li>\n<li><span style=\"font-size: 18.6667px;\">Link report sections based on linked concepts from the used schemas.</span></li>\n<li><span style=\"font-size: 18.6667px;\">Auto-include content based on linked concepts (e.g., definitions of Architectural Qualities).</span></li>\n<li><span style=\"font-size: 18.6667px;\">Generate coverage analytics, e.g., coverage of requirements by design decisions wrt. priority, coverage of architectural qualities by design decisions (via design patterns).</span></li>\n<li><span style=\"font-size: 18.6667px;\">Design new types of reports based on combining content from different schemas.</span></li>\n</ul>\n</ul>" ;
          spec:decisionArchitecturalView  "Logical view" ;
          spec:hasDecisionDomain          :Domain_ar-08__rapid_specification_authoring , :Domain_ar-03__reuse_requirements_and_decisions , :Domain_ar-05__effective_collaboration ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity , :ArchitecturalQuality_reusability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_functionality , :ArchitecturalQuality_composability , :ArchitecturalQuality_versatility ;
          spec:useDecisionTactic          :DesignTactic_divide_and_conquer , :DesignTactic_querying , :DesignTactic_mapping .
  
  spec:hasTacticEffectOnDecision
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:DesignTactic ;
          rdfs:label          "hasEffectOn" ;
          rdfs:subPropertyOf  spec:hasEffectOnDecision .
  
  :SoftwareEngineeringMethod_nfr_testing_and_analysis
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "NFR Testing and Analysis" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability ;
          gen:hasMethodPhase            :ProjectPhase_analysis , :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole             :Role_performance_engineer , :Role_test_architect , :Role_requirements_engineer ;
          gen:hasMethodTag              :AuthorTag_performance_engineering , :AuthorTag_load_testing , :AuthorTag_failure , :AuthorTag_systems_engineering , :AuthorTag_testing , :AuthorTag_nfr_engineering ;
          gen:wikiEntry                 "NFR Testing and Analysis checks the system's performance under a range of loads, providing a fully automated analysis of results in terms of the system's non-functional requirements. It can detect NFR specification errors, stability issues, architectural weaknesses, synchronization bugs, and check resource usage levels and scalability. This article presents a systematic methodology." .
  
  :DesignPattern_someone_in_charge
          a                              gen:DesignPattern ;
          rdfs:label                     "Someone in Charge" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_viability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_integrity , :ArchitecturalQuality_safety , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility , :ArchitecturalQuality_dependability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_autonomy ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "Every fault tolerant software action undertaken by the system should have aclearly identified entity controlling and monitoring the action. If a failure occurs this entity will be sure that the new failure doesnt stop the system [Hanmer 2007]pp 66-67.  Relations Error Detection [Hanmer 2007] Architectural Patterns pp 66-67." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_infinite_scrolling
          a                             gen:DesignTactic ;
          rdfs:label                    "infinite scrolling" , "Infinite Scrolling" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_syngoplaza ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_accessibility , :ArchitecturalQuality_usability ;
          gen:wikiEntry                 "<header><div class=\"l-subsection\"><h1>Infinite Scrolling Is Not for Every Website</h1>\n            <div class=\"author-meta\">by\n                \n                \n                    \n                    <a href=\"http://www.nngroup.com/articles/author/hoa-loranger/\" target=\"_blank\">Hoa Loranger</a>\n                    \n                \n                \n                on  February 2, 2014\n            </div>\n            <p class=\"date\">\n                \n            </p>\n\n            \n            <div class=\"topic-links\">Topics:\n                <ul class=\"no-bullet\">\n                    \n                    <li><a href=\"http://www.nngroup.com/topic/e-commerce/\" target=\"_blank\">E-commerce</a></li>\n                    \n                    <li><a href=\"http://www.nngroup.com/topic/information-architecture/\" target=\"_blank\">Information Architecture</a></li>\n                    \n                    <li><a href=\"http://www.nngroup.com/topic/web-usability/\" target=\"_blank\">Web Usability</a></li>\n                    \n                </ul>\n            </div>\n            \n        </div>\n    </header>\n\n    \n    <p class=\"lede\"><strong>Summary:</strong> Endless scrolling saves people from having to attend to the mechanics of pagination in browsing tasks, but is not a good choice for websites that support goal-oriented finding tasks.</p>\n    <br>\n    \n\n    <div class=\"underlinedlink\">\n        <p>If you’re thinking about infinite scrolling for your site, stop and consider whether this feature does more harm than good for your situation. Infinite scrolling is a web-design technique that <strong>loads content continuously</strong> as the user scrolls down the page, eliminating the need for pagination.</p>\n<p>The success of infinite scrolling on social media sites such as Twitter have made this technique popular, but that doesn’t mean you should do it too. Continuous scrolling is advantageous for content that streams constantly and has a relatively flat structure, where each unit of content belongs at the same level of hierarchy and has similar chances of being interesting to users.</p>\n<p>Long, endless pages are good for time-killing activities because users are in the mindset for serendipitous exploration and discovery. The advantage of not having to acquire and click “next page” keeps audiences engaged with the content and less focused on the mechanics of navigating to the next page. (A benefit of lower <a href=\"http://www.nngroup.com/articles/interaction-cost-definition/\" target=\"_blank\">interaction cost</a>.)</p>\n<p>In our <a href=\"http://www.nngroup.com/courses/writing/\" target=\"_blank\">Compelling Web Content</a> course, we tell designers to <strong>determine page length by relevance of information</strong>, not by arbitrary measurements. When browsing people are happy to scroll down long pages when the informational units share the same level of granularity and are highly related, such as when searching for a gift within a specific category. This is why on e-commerce sites we observe people click <a href=\"http://www.nngroup.com/articles/item-list-view-all/\" target=\"_blank\">See All</a> to view all products at once when given the choice.</p>\n<p>Infinite scrolling has advantages, but should be applied with caution. Take into account your site’s content and the user’s motivation. <strong>Endless scrolling is not recommended for goal-oriented finding tasks</strong>, such as those requiring people to locate specific content or compare options. For <a href=\"http://www.nngroup.com/reports/ecommerce-ux-search-including-faceted-search/\" title=\"E-commerce design guidelines: Vol. 05, Search (Including Faceted Search)\" target=\"_blank\">e-commerce sites, finding products by feature</a> might be difficult to accomplish quickly if all of the products are presented linearly on a never-ending page, without sorting or other filtering or navigation techniques to help isolate the intended item.</p>\n<p>In addition, locating a previously found item on an extremely long page is inefficient, especially if that item is placed many scrolling segments down. It’s much easier for people to remember that the item is on page 3 than it is to gauge where the item is positioned on an extremely long page.</p>\n<p>There are <strong>psychological consequences to endless scrolling that can hurt the user experience</strong> as well. For task-driven activities, infinite scrolling can feel like drowning in an information abyss with no end in sight. People who need specific types of information expect content to be grouped and layered according to relevance, by pages. Web users don’t mind clicking links (e.g., a link to the next page) if each click is meaningful and leads them closer to the desired goal.</p>\n<p>(Learn how to <a href=\"http://www.nngroup.com/courses/human-mind/\" target=\"_blank\">apply psychology principles to predict and explain how your customers think and act</a>.)</p>\n<p>With pagination, there is a beginning and an end. People can anticipate the effort required to scan the page. There is a happy <strong>sense of completion</strong> when a page is reviewed. Pagination gives people control to decide whether or not to continue to the next page. The choices on smaller pages are easier to evaluate because fewer options feel less overwhelming.</p>\n<p>With infinitely long pages, people may feel paralyzed by the sheer volume of content or the number of choices and not click anything. People may view but not act. Infinite scrolling may support browsing behavior, but it can cause inaction (and lower conversions), which is the opposite of what most website makers want.</p>\n<p><strong>The worse offense of infinite scrolling on the desktop is that it plays a nasty trick on users</strong>. Infinite scrolling breaks the scroll bar by causing it to display the page length inaccurately. Believe it or not, people still use the scroll bar. People rely on scroll bar to tell them how much “work” is left. It’s not nice to tell people that they’re almost done when they’re not. Play nicely.</p>\n<p>(Learn more about infinite scrolling and other <a href=\"http://www.nngroup.com/courses/emerging-patterns-web-design/\" target=\"_blank\">emerging patterns</a> at our conference.)</p>\n<p><strong>Conclusion</strong>: Infinite scrolling may seem like an elegant replacement for pagination. However, it’s not the answer for most websites. Infinite scrolling is probably not for you if site visitors want to achieve goal-oriented activities, such as when they need to backtrack or find specific information quickly.</p></div>" ;
          spec:hasTacticDomain          :Domain_user_interfaces ;
          skos:altLabel                 "Continuous Scrolling" , "Endless scrolling" .
  
  :DesignPattern_magic_numbers
          a                              gen:DesignPattern ;
          rdfs:label                     "Magic numbers" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Magic numbers</h1>\n\n<p>In a poorly written code you may often see magic numeric constants whose presence is dangerous by itself. When porting code to a 64-bit platform, these constants may make the code inefficient if they participate in address computation, object size computation or bit operations.</p>\n<p>Table 1 presents the basic magic constants that may impact efficiency of an application ported to a new platform.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/09_Pattern_01_Magic_numbers/image2.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/09_Pattern_01_Magic_numbers/image1.png\" alt=\"Table 1 - The basic magic numbers which are dangerous when porting 32-bit applications to a 64-bit platform\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Table 1 - The basic magic numbers which are dangerous when porting 32-bit applications to a 64-bit platform</span></p>\n<p>You should examine your code very attentively to check if it contains magic constants and replace them with safe constants and expressions. You may use the operator <span class=\" span-i\">sizeof()</span> or special values from <span class=\" span-i\">&lt;limits.h&gt;</span>, <span class=\" span-i\">&lt;inttypes.h&gt;</span>, etc. for that.</p>\n<p>Here are examples of some errors related to magic constants. The most common error is writing type sizes in the form of numeric values:</p>\n<pre class=\"clear cleared\"><code><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"typ\">ArraySize</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> N </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">;</span><span class=\"pln\">\n   </span><span class=\"typ\">intptr_t</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"typ\">Array</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">intptr_t</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"pln\">malloc</span><span class=\"pun\">(</span><span class=\"typ\">ArraySize</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> values</span><span class=\"pun\">[</span><span class=\"pln\">ARRAY_SIZE</span><span class=\"pun\">];</span><span class=\"pln\">\n   memset</span><span class=\"pun\">(</span><span class=\"pln\">values</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> ARRAY_SIZE </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"lit\">3</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> n</span><span class=\"pun\">,</span><span class=\"pln\"> r</span><span class=\"pun\">;</span><span class=\"pln\">\n   n </span><span class=\"pun\">=</span><span class=\"pln\"> n </span><span class=\"pun\">&gt;&gt;</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"lit\">32</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> r</span><span class=\"pun\">);</span></code></pre>\n<p>In all these cases we assume that the size of the types used is always 4 bytes. To correct the code we should use the operator <span class=\" span-i\">sizeof()</span>:</p>\n<pre class=\"clear cleared\"><code><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"typ\">ArraySize</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> N </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"kwd\">sizeof</span><span class=\"pun\">(</span><span class=\"typ\">intptr_t</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"typ\">intptr_t</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"typ\">Array</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">intptr_t</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"pln\">malloc</span><span class=\"pun\">(</span><span class=\"typ\">ArraySize</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> values</span><span class=\"pun\">[</span><span class=\"pln\">ARRAY_SIZE</span><span class=\"pun\">];</span><span class=\"pln\">\n   memset</span><span class=\"pun\">(</span><span class=\"pln\">values</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> ARRAY_SIZE </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"kwd\">sizeof</span><span class=\"pun\">(</span><span class=\"typ\">size_t</span><span class=\"pun\">));</span></code></pre>\n<p>or</p>\n<pre class=\"clear cleared\"><code><span class=\"pln\">   memset</span><span class=\"pun\">(</span><span class=\"pln\">values</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">sizeof</span><span class=\"pun\">(</span><span class=\"pln\">values</span><span class=\"pun\">));</span><span class=\"pln\"> </span><span class=\"com\">//preferred alternative</span><span class=\"pln\">\n</span><span class=\"lit\">3</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> n</span><span class=\"pun\">,</span><span class=\"pln\"> r</span><span class=\"pun\">;</span><span class=\"pln\">\n   n </span><span class=\"pun\">=</span><span class=\"pln\"> n </span><span class=\"pun\">&gt;&gt;</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">CHAR_BIT </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"kwd\">sizeof</span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"pln\"> r</span><span class=\"pun\">);</span><span class=\"pln\"> </span></code></pre>\n<p>Sometimes you may need a specific constant. As an example, let us take the value of <a href=\"http://www.viva64.com/en/t/0044/\" class=\"link-inner\" target=\"_blank\">size_t</a> where all the bytes except for the 4 lower bytes must be filled with ones. In a 32-bit program, this constant is defined in this way:</p>\n<pre class=\"clear cleared\"><code><span class=\"com\">// constant '1111..110000'</span><span class=\"pln\">\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> M </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0xFFFFFFF0u</span><span class=\"pun\">;</span></code></pre>\n<p>It is incorrect for a 64-bit system. Such errors are very unpleasant because magic constants may be written in various ways and it takes a lot of time and efforts to find them. Unfortunately, there are no other ways to find and correct such code fragments but to use the directive <span class=\" span-i\">#ifdef</span> or a special macro.</p>\n<pre class=\"clear cleared\"><code><span class=\"com\">#ifdef</span><span class=\"pln\"> _WIN64\n  </span><span class=\"com\">#define</span><span class=\"pln\"> CONST3264</span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"com\">##i64)</span><span class=\"pln\">\n</span><span class=\"com\">#else</span><span class=\"pln\">\n  </span><span class=\"com\">#define</span><span class=\"pln\"> CONST3264</span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"pun\">)</span><span class=\"pln\">  </span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"com\">#endif</span><span class=\"pln\">\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> M </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">~</span><span class=\"pln\">CONST3264</span><span class=\"pun\">(</span><span class=\"lit\">0xFu</span><span class=\"pun\">);</span></code></pre>\n<p>Sometimes the value \"-1\" is used as an error code or other special marker and it is written as \"0xffffffff\". This expression is incorrect on a 64-bit platform, so you should explicitly define the value <span class=\" span-i\">-1</span>. Here is an example of incorrect code that uses the value 0xffffffff as an error marker:</p>\n<pre class=\"clear cleared\"><code><span class=\"com\">#define</span><span class=\"pln\"> INVALID_RESULT </span><span class=\"pun\">(</span><span class=\"lit\">0xFFFFFFFFu</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"typ\">MyStrLen</span><span class=\"pun\">(</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">str</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">str </span><span class=\"pun\">==</span><span class=\"pln\"> NULL</span><span class=\"pun\">)</span><span class=\"pln\">\n    </span><span class=\"kwd\">return</span><span class=\"pln\"> INVALID_RESULT</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"pun\">...</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> n</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> len </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">MyStrLen</span><span class=\"pun\">(</span><span class=\"pln\">str</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">len </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">size_t</span><span class=\"pun\">)(-</span><span class=\"lit\">1</span><span class=\"pun\">))</span><span class=\"pln\">\n  </span><span class=\"typ\">ShowError</span><span class=\"pun\">();</span></code></pre>\n<p>To make it clear, let us explain what the value \"(size_t)(-1)\" is equal to on a 64-bit platform. You will be mistaken saying it is 0x00000000FFFFFFFFu. According to C++ rules, at first value <span class=\" span-i\">-1</span> is converted to a signed equivalent of a larger type and then to an unsigned value:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">int</span><span class=\"pln\"> a </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">           </span><span class=\"com\">// 0xFFFFFFFFi32</span><span class=\"pln\">\n</span><span class=\"typ\">ptrdiff_t</span><span class=\"pln\"> b </span><span class=\"pun\">=</span><span class=\"pln\"> a</span><span class=\"pun\">;</span><span class=\"pln\">      </span><span class=\"com\">// 0xFFFFFFFFFFFFFFFFi64</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> c </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pun\">(</span><span class=\"pln\">b</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">// 0xFFFFFFFFFFFFFFFFui64</span></code></pre>\n<p>Thus, on a 64-bit platform, \"(size_t)(-1)\" equals the value 0xFFFFFFFFFFFFFFFFui64 which is the maximum value for the 64-bit <span class=\" span-i\">size_t</span>.</p>\n<p>Let us return to the error with INVALID_RESULT. When 0xFFFFFFFFu constant is used, the condition \"len == (size_t)(-1)\" is not fulfilled in a 64-bit program. The best solution is to change the code so that it will not need special marker values. If you cannot refuse to use them due to some reason or do not want to significantly edit the code, simply use the explicit value <span class=\" span-i\">-1</span>.</p>\n<pre class=\"clear cleared\"><code><span class=\"com\">#define</span><span class=\"pln\"> INVALID_RESULT </span><span class=\"pun\">(</span><span class=\"typ\">size_t</span><span class=\"pun\">(-</span><span class=\"lit\">1</span><span class=\"pun\">))</span><span class=\"pln\">\n</span><span class=\"pun\">...</span></code></pre>\n<p>Here is one more example related to 0xFFFFFFFF. The code is taken from a real application of 3D modeling:</p>\n<pre class=\"clear cleared\"><code><span class=\"pln\">hFileMapping </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">CreateFileMapping</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n    </span><span class=\"pun\">(</span><span class=\"pln\">HANDLE</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"lit\">0xFFFFFFFF</span><span class=\"pun\">,</span><span class=\"pln\">\n    NULL</span><span class=\"pun\">,</span><span class=\"pln\">\n    PAGE_READWRITE</span><span class=\"pun\">,</span><span class=\"pln\">\n    </span><span class=\"pun\">(</span><span class=\"pln\">DWORD</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\">\n    </span><span class=\"pun\">(</span><span class=\"pln\">DWORD</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">szBufIm</span><span class=\"pun\">),</span><span class=\"pln\">\n    </span><span class=\"pun\">(</span><span class=\"pln\">LPCTSTR</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&amp;</span><span class=\"typ\">FileShareNameMap</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">]);</span></code></pre>\n<p>As you have already guessed, 0xFFFFFFFF here also leads to an error on a 64-bit system. The first argument of the function <span class=\" span-i\">CreateFileMapping</span> may have the value INVALID_HANDLE_VALUE defined in this way:</p>\n<p>#define INVALID_HANDLE_VALUE ((HANDLE)(LONG_PTR)-1)</p>\n<p>As a result, INVALID_HANDLE_VALUE does coincide with the value 0xFFFFFFFF on a 32-bit system. But on a 64-bit system, it is the value 0x00000000FFFFFFFF which is passed into the function <span class=\" span-i\">CreateFileMapping</span>, so the system considers the argument incorrect and returns the code of the error. The cause is that the value 0xFFFFFFFF has an UNSIGNED type (<span class=\" span-i\">unsigned int</span>). The value 0xFFFFFFFF does not fit into the type <span class=\" span-i\">int</span> and therefore is <span class=\" span-i\">usigned</span>. It is a subtle thing that you should consider when moving to 64-bit systems. Let us explain it by an example:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">void</span><span class=\"pln\"> foo</span><span class=\"pun\">(</span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">ptr</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">{</span><span class=\"pln\">\n  cout </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> ptr </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> endl</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">int</span><span class=\"pln\"> _tmain</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pun\">,</span><span class=\"pln\"> _TCHAR </span><span class=\"pun\">*[])</span><span class=\"pln\">\n</span><span class=\"pun\">{</span><span class=\"pln\">\n  cout </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"str\">\"-1\\t\\t\"</span><span class=\"pun\">;</span><span class=\"pln\">\n  foo</span><span class=\"pun\">((</span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"pun\">*)-</span><span class=\"lit\">1</span><span class=\"pun\">);</span><span class=\"pln\">\n  cout </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"str\">\"0xFFFFFFFF\\t\"</span><span class=\"pun\">;</span><span class=\"pln\">\n  foo</span><span class=\"pun\">((</span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"lit\">0xFFFFFFFF</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></code></pre>\n<p>The result of the 32-bit version of the program:</p>\n<pre class=\"clear cleared\"><code><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pln\">              FFFFFFFF\n</span><span class=\"lit\">0xFFFFFFFF</span><span class=\"pln\">      FFFFFFFF</span></code></pre>\n<p>The result of the 64-bit version of the program:</p>\n<pre class=\"clear cleared\"><code><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pln\">              FFFFFFFFFFFFFFFF\n</span><span class=\"lit\">0xFFFFFFFF</span><span class=\"pln\">      </span><span class=\"lit\">00000000FFFFFFFF</span></code></pre>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignPattern_maximize_human_participation
          a                              gen:DesignPattern ;
          rdfs:label                     "Maximize Human Participation" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_visibility , :ArchitecturalQuality_safety , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_usability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_utility , :ArchitecturalQuality_survivability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_viability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_accessibility ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_barrier-free_access ;
          gen:wikiEntry                  "When faults already exist in the system it is Minimizing Human Intervention to reduce the risk of unavailability due to procedural errors. Humans build the system and they understand how it worksor better to sayhow it should work. The expertise of these people can help to resolve problems quickly.  The capability fo knowledgeable people to guide the systems error processing should be provided. The best way is to know the user and their ability. The system should be designed to enable knowledgeable operating personnel to participate in a positive way toward error detection and error processing.  Also appropriate Maintenance Interfacesand Fault Observercapabilities should be provided to give the operators the information that they need to be able to contributeconstructively [Hanmer 2007] pp 60-62.  Relations Barrier-free Access [Hanmer 2007] Architectural Patterns pp 60-62. Error Handling [Hanmer 2007] Architectural Patterns pp 60-62." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  sear:SuggestedQueryElement
          a                owl:Class ;
          rdfs:label       "Suggested Query Element" ;
          rdfs:subClassOf  sear:QueryElement .
  
  :Domain_ar-018__privacy_services
          a           spec:Domain ;
          rdfs:label  "ar-018: privacy services" .
  
  skos:altLabel  a     owl:DatatypeProperty ;
          rdfs:domain  gen:ArchitecturalKnowledgeElement ;
          rdfs:range   xsd:string .
  
  :Domain_user_interfaces
          a           spec:Domain ;
          rdfs:label  "user interfaces" .
  
  sear:executionTime  a  owl:FunctionalProperty , owl:DatatypeProperty ;
          rdfs:domain  sear:SearchResult ;
          rdfs:range   xsd:time .
  
  :ArchitecturalQuality_installability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Installability" , "installability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_architectural_requirements_questionnaire , :DesignTactic_self-descriptiveness , :DesignTactic_reduce_coupling , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_reflection , :DesignPattern_continual_status_reporting , :DesignPattern_capturing_architectural_requirements , :DesignPattern_facade , :DesignPattern_offline_reporting , :DesignPattern_proxy , :DesignPattern_external_configuration_store_pattern , :DesignPattern_mediator , :DesignPattern_breadcrumbs , :DesignPattern_bridge , :DesignPattern_adapter , :DesignPattern_dedicated_web_and_application_servers ;
          gen:relatedQuality       :ArchitecturalQuality_portability ;
          gen:wikiEntry            "[Simmons 2003] The capability of the software to be installed in a specified environment." ;
          spec:requiredBy          :Domain_abstract .
  
  :Domain_ar-159__web_api
          a           spec:Domain ;
          rdfs:label  "ar-159: web api" .
  
  :DesignTactic_delegated_event_handling
          a           gen:DesignTactic ;
          rdfs:label  "delegated event handling" .
  
  spec:hasPosDecisionEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  spec:hasDecisionEffectOnQuality , gen:hasPosEffectOnQuality .
  
  :DesignTactic_versioning
          a           gen:DesignTactic ;
          rdfs:label  "versioning" .
  
  :DesignTactic_native_code_invocation
          a           gen:DesignTactic ;
          rdfs:label  "native code invocation" .
  
  :Author_sobolev_sergey
          a           cont:Author ;
          rdfs:label  "sobolev sergey" .
  
  :DesignDecision_kdd-06
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-06" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>KPIs „On-the-Fly”</strong></p><p>Abhängig vom notwendigen Rechenaufwand, werden die KPIs entweder (1) „On-the-Fly“ als Teil einer Datenabfrage (oder gleich danach) berechnet oder (2) im Vorhinein mittels eines ETL Prozesses angestoßen und in das DWH gespeichert.<br></p><p>Die Berechnung erfolgt bevorzugt On-The-Fly in der Visualisierungsschicht oder datenbankseitig, falls es sich um komplexe und langdauernde Berechnungen handelt, die mehrere Datenquellen benötigen. Im zweiten Fall sollen vorberechnete KPIs in Datenbank-Views gespeichert werden.</p><p>Die Visualisierung soll möglichst ohne Verzögerungen die KPIs in unterschiedlicher Granularität bei Bedarf berechnen und anzeigen können.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-103__kpi_computation , :Domain_ar-152__kpi_on_the_fly ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_performance ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_adaptive_query_processing .
  
  :AuthorTag_requirements
          a           cont:AuthorTag ;
          rdfs:label  "requirements" .
  
  :SoftwareEngineeringMethod_fta_and_hazop
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "FTA and HAZOP" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdwiki ;
          gen:methodContext        "Root cause failure analysis" ;
          gen:methodInput          "Design specifications" , "System requirements" ;
          gen:methodOutput         "Fault tree models" , "Operability problems" , "Identified hazards" , "Recommendations for mitigation" ;
          gen:methodPurpose        "Failure likelihood quantification" , "Potential hazard identification" , "Decision making" , "Operability problem identification" ;
          gen:wikiEntry            "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>Hazard and Operability Analysis (HAZOP) is a structured and systematic technique for system examination and risk management. In particular, HAZOP is often used as a technique for identifying potential hazards in a system and identifying operability problems likely to lead to nonconforming products. Having examined single element/single characteristic deviations by HAZOP, it is possible to assess the effect of multiple deviations using FTA (Fault Tree Analysis), or to quantify the likelihood of the failures, again using FTA.</p></td>\n</tr>\n</tbody></table>\n<p></p><p><span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image\" height=\"250\" src=\"https://wiki.ct.siemens.de/download/attachments/100765144/description_.jpg?version=1&amp;modificationDate=1442320714937&amp;api=v2\" data-image-src=\"/download/attachments/100765144/description_.jpg?version=1&amp;modificationDate=1442320714937&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"104928535\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"description_.jpg\" data-base-url=\"https://wiki.ct.siemens.de\" data-linked-resource-content-type=\"image/jpeg\" data-linked-resource-container-id=\"100765144\" data-linked-resource-container-version=\"19\"></span></p><p>&nbsp;<span><br></span></p><h1 id=\"FTAandHAZOPforSoftware-IntensiveSystems-Description\"><span>Description&nbsp;</span></h1><p>HAZOP is a semi-formalised team based activity that systematically reviews a representation of a system and its operating procedures in order to identify potential hazards. It is based upon the principle that a problem can only arise when there is some deviation from the intent of the system&nbsp;as&nbsp;represented&nbsp;by&nbsp;the&nbsp;model&nbsp;under&nbsp;review.&nbsp;The&nbsp;procedure&nbsp;is&nbsp;to search&nbsp;the representation,&nbsp;element&nbsp;by&nbsp;element&nbsp;(traditionally&nbsp;this&nbsp;has&nbsp;been&nbsp;line&nbsp;by&nbsp;line&nbsp;for&nbsp;Process&nbsp;&amp; Instrumentation&nbsp;diagram&nbsp;models) for&nbsp;every&nbsp;conceivable deviation from&nbsp;its normal&nbsp;operation using a list of guidewords. These are carefully chosen to prompt open, free-ranging thought about all possible system abnormalities. As each deviation is derived,&nbsp;the team then discuss potential&nbsp;causes&nbsp;and&nbsp;consequences&nbsp;and&nbsp;recommend&nbsp;appropriate&nbsp;remedial&nbsp;action&nbsp;or&nbsp;identify emergent requirements.<br>FTA following HAZOP is aiming at in-depth analysis of the most critical hazards identified in the system and allowing for&nbsp;identification, modeling and evaluation of the unique interrelationship of events leading to Failure, Undesired Events/States or Unintended Events (hazards).</p><p>References:</p><ol><li>BS IEC 61882 Hazard and operability studies – Application guide, first edition, 2001.</li><li>IEC 61025, Fault tree analysis (FTA), 2006.</li></ol><h2 id=\"FTAandHAZOPforSoftware-IntensiveSystems-Context\">Context</h2><p>In case a systematic method for acquiring information about a system is needed, and the information so gained can be used in making decisions.<br>Based on experience, the best is to apply HAZOP analysis in conjunction with fault tree models creation to systems, where the effect of multiple deviations needs to be assessed, or root causes of system component failures (hazards) need to be investigated.</p><h2 id=\"FTAandHAZOPforSoftware-IntensiveSystems-Inputs\">Inputs&nbsp;</h2><p></p><ul><li>An accurate and complete design representation of the system&nbsp;under study (descriptive model)</li><li>System requirements</li><li>Physical and/or logical description of the design.</li></ul><h2 id=\"FTAandHAZOPforSoftware-IntensiveSystems-Outputs\">Outputs&nbsp;</h2><p></p><ul><li>Details of identified hazards and operability problems together with details of any provisions for their detection, and/or mitigation;</li><li>Recomendations for mitigation of the problems identified based on the team's knowledge of the system (if within the scope of the study);</li><li>Fault tree models explaining the possible causes of selected hazards (failure modes).</li></ul><h2 id=\"FTAandHAZOPforSoftware-IntensiveSystems-Procedure\">Procedure</h2><p>1. Definition</p><ul><li>define scopes and objectives</li><li>define responsibilities</li><li>select team</li></ul><p>2. Preparation</p><ul><li>plan the study</li><li>collect data</li><li>agree style of recording</li><li>estimate the time</li><li>arrange a schedule</li></ul><p>3. Examination</p><ul><li>divide the systems into parts</li><li>select a part and define design intent</li><li>identify deviation of using guide words on each element</li><li>identify whether a significant problem exists</li><li>identify protection, detection, and indicating mechanism</li><li>identify possible remedial/mitigating measures (optional)</li><li>agree actions h. repeat for each element and then each part of the system</li></ul><p>4. Documentaiton and follow-up</p><ul><li>record the examination</li><li>sign off the documentation</li><li>produce the report of the study</li><li>follow-up that actions are implemented</li><li>re-study any parts of system if necessary</li><li>produce final output report</li></ul><p>5. Fault tree analysis</p><ul><li>take out the most critical hazards associated with software-relevant component of system under analysis</li><li>analyze a software component in the context of its environment and operation to find all credible ways in which the hazard (undesired event) can occur</li><li>bearing in mind the qualitative character of fault tree model, if needed, quantify the likelyhood of failures (hazards/undesired events)</li></ul><h2 id=\"FTAandHAZOPforSoftware-IntensiveSystems-Advantagesanddisadvantages\">Advantages and disadvantages</h2><p>Advantages</p><ul><li>Helpful when confronting&nbsp;hazards that are difficult to quantify<ul><li>Hazards rooted in human performance and behaviors</li><li>Hazards that are difficult to detect, analyze,&nbsp;isolate, count, predict, etc.</li><li>Methodology does not force you to explicitly&nbsp;rate or measure deviation probability of&nbsp;occurrence, severity of impact, or ability to detect</li></ul></li><li>Built-in brainstorming methodology</li><li>Systematic &amp; comprehensive methodology</li><li>More simple and intuitive that other commonly used risk management tools</li><li>Followed by FTA, allows for assessing the effect of multiple deviations in system design.</li></ul><p>Disadvantages</p><ul><li>No means to assess hazards involving interactions between different parts of a systems or process</li><li>No risk ranking or prioritization capability<ul><li>Teams may optionally build-in such capability as required&nbsp;</li></ul></li><li>No means to assess effectiveness of existing or proposed controls (safeguards)</li><li>Requires significant efforts to analyze software source code to model undesired paths (FTA-related).</li></ul><h2 id=\"FTAandHAZOPforSoftware-IntensiveSystems-Example\">Example&nbsp;</h2><p>Applied in&nbsp;customer project&nbsp;with EM LP SNG EF (former IC LMV) on system design analysis of Sentron nG components.&nbsp;Results available on demand.</p><h2 id=\"FTAandHAZOPforSoftware-IntensiveSystems-Variants\">Variants</h2><p>There&nbsp;are&nbsp;many&nbsp;different&nbsp;tools&nbsp;and&nbsp;techniques&nbsp;available&nbsp;for&nbsp;the&nbsp;identification&nbsp;of&nbsp;potential hazards and operability problems, ranging from Checklists, Fault Modes and Effects Analysis (FMEA),&nbsp;Fault&nbsp;Tree&nbsp;Analysis&nbsp;(FTA)&nbsp;to&nbsp;HAZOP.&nbsp;Some&nbsp;techniques,&nbsp;such&nbsp;as Checklists and What-If/analysis, can be used early in the system life cycle when little information is available, or&nbsp;in later phases&nbsp;if a&nbsp;less detailed&nbsp;analysis&nbsp;is&nbsp;needed.&nbsp;HAZOP&nbsp;studies&nbsp;require&nbsp;more&nbsp;details regarding the systems under consideration, but produce more comprehensive&nbsp;information&nbsp;on hazards and errors in the system design.</p>" .
  
  :AuthorTag_complexity
          a           cont:AuthorTag ;
          rdfs:label  "complexity" .
  
  :AuthorTag_safety  a  cont:AuthorTag ;
          rdfs:label  "safety" .
  
  :DesignPattern_health_endpoint_monitoring_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Health Endpoint Monitoring Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown ;
          gen:isAlternativeOf            :DesignTactic_unknown ;
          gen:wikiEntry                  "Implement functional checks within an application that external tools can access through exposed endpoints at regular intervals. This pattern can help to verify that applications and services are performing correctly. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_routing
          a                             gen:DesignTactic ;
          rdfs:label                    "Routing" , "routing" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:wikiEntry                 "Message routing usually defines how or on which path a message is deliveredto its target nodes and/or services. A message router is used to decouple a service consumer from the service implementation. There are three main types of routers that you might use simple composed and pattern-based. Simple routers use a single router to determine the final destination of a message. Composed routers combine multiple simple routers to handle more complex message flows. Architectural patterns are used to describe different routing styles based on simple message routers. Consider the following guidelines when designing message routing Determine relevant patterns for message routing such as Aggregator Content-Based Router Dynamic Router and Message Filter and choose those appropriate for your scenario. If sequential messages are sent from a consumer the router must ensure that they are all delivered to the same endpoint in the required order (commutativity). A message router may inspect information in the message to determine how to route the message. As a result you must ensure that the router can access that information. You may need to add routing information to the header. If you encrypt the message you must ensure that the unencrypted header contains the information required to route the message. Note Routing is one of the most essential scalability mechanisms in IP-based networks. In this context also scheduling plays an important role to prioritize processing based on Quality-of-Service (QoS) models and Service Level Agreements (SLA)." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_reinitialization
          a                              gen:DesignPattern ;
          rdfs:label                     "Reinitialization" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_safety , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_recoverability ;
          gen:isAlternativeOf            :DesignTactic_fault_handling ;
          gen:wikiEntry                  "[Wikitionary Reinitialization 2014]Reinitialization refreshes the system status by establishing a new clean configuration and refreshing caches memory values tables or records. Reinitialization is simply a process of initializing again." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_adaptation
          a           gen:DesignTactic ;
          rdfs:label  "adaptation" .
  
  :DesignDecision_kdd-20
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-20" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Webschnittstelle zur Visualisierung der Daten mittels MVC</strong></p><p>Das&nbsp;<span style=\"line-height: 20.7999992370605px;\">Model-View-Controller (MVC)&nbsp;</span>Pattern ermöglicht einen einfachen Mechanismus zum Abrufen und Visualisieren von Daten aus beliebigen Quellen.</p><p>Dabei wird das Modell im Falle der zusätzlichen Visualisierung durch Messdaten, Netzmodelle, Gebäudemodelle und KPIs bestimmt. Diese werden mittels Abfragefilter aus dem DWH abgefragt.</p><p>Die Präsentation (View) wird durch verschiedene graphische Darstellungsmöglichkeiten realisiert, die beispielsweise von HTML5/JavaScript Bibliotheken wie HighCharts<a href=\"javascript:saFiddle();\" name=\"_ftnref1\" data-mce-href=\"#_ftn1\" target=\"_blank\">[1]</a> oder Google Charts<a href=\"javascript:closePopup(this);\" name=\"_ftnref2\" data-mce-href=\"#_ftn2\" target=\"_blank\">[2]</a> angeboten werden.</p><p>Die Steuerung (Controller) wird durch die Komponenten zum Abrufen der Daten von der DWH sowie durch einen Benutzerrollenorientierten Mechanismus zur Erzeugung von entsprechenden Sichten der Benutzeroberfläche.</p><p><strong>Notes:</strong></p><p><a href=\"#_ftnref1\" name=\"_ftn1\" data-mce-href=\"#_ftnref1\">[1]</a> HighCharts JavaScript charting library: <a href=\"http://www.highcharts.com/\" data-mce-href=\"http://www.highcharts.com/\">http://www.highcharts.com/</a></p><p><a href=\"#_ftnref2\" name=\"_ftn2\" data-mce-href=\"#_ftnref2\">[2]</a> Google JavaScript charting library: <a href=\"https://developers.google.com/chart/\" data-mce-href=\"https://developers.google.com/chart/\">https://developers.google.com/chart/</a></p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-154__extensibiltiy , :Domain_ar-106__stakeholder_views , :Domain_ar-156__usability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_authorization , :DesignTactic_separation_of_concerns , :DesignTactic_multiple_views , :DesignTactic_separated_presentation .
  
  :DesignPattern_platform_invoke
          a                              gen:DesignPattern ;
          rdfs:label                     "Platform invoke" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_interoperability ;
          gen:isAlternativeOf            :DesignTactic_native_code_invokation , :DesignTactic_type_marshalling ;
          gen:wikiEntry                  "<div class=\"introduction\">\n<p><strong>Platform invoke</strong> is a service that enables managed code to call unmanaged functions implemented in dynamic link libraries (DLLs), such as those in the Win32 API. It locates and invokes an exported function and marshals its arguments (integers, strings, arrays, structures, and so on) across the interoperation boundary as needed.&nbsp;Platform invoke relies on metadata to locate exported functions and marshal their arguments at run time. The following illustration shows this process.</p>\n</div>\n<div>\n<div class=\"sectionblock\">\n<div class=\"section\">\n<div class=\"inset\"><img id=\"452bd6c0-6ef6-47d2-bc42-489033e514df\" title=\"Platform invoke\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC86320.jpeg\" alt=\"Platform invoke\" />\n<p><span class=\"caption\">A platform invoke call to an unmanaged DLL function</span></p>\n</div>\n<p>When platform invoke calls an unmanaged function, it performs the following sequence of actions:</p>\n<ol class=\"ordered\">\n<li>\n<p>Locates the DLL containing the function.</p>\n</li>\n<li>\n<p>Loads the DLL into memory.</p>\n</li>\n<li>\n<p>Locates the address of the function in memory and pushes its arguments onto the stack, marshaling data as required.</p>\n<div class=\"alert\">\n<div class=\"contentTableWrapper\">\n<table>\n<tbody>\n<tr>\n<th align=\"left\"><img id=\"s-e6f6a65cf14f462597b64ac058dbe1d0-system-media-system-caps-note\" title=\"System_CAPS_note\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC101471.jpeg\" alt=\"System_CAPS_note\" /><span class=\"alertTitle\">Note </span></th>\n</tr>\n<tr>\n<td>\n<p>Locating and loading the DLL, and locating the address of the function in memory occur only on the first call to the function.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n</li>\n<li>\n<p>Transfers control to the unmanaged function.</p>\n</li>\n</ol>\n<p>Platform invoke throws exceptions generated by the unmanaged function to the managed caller.</p>\n<div class=\"introduction\">\n<p>To consume exported DLL functions</p>\n</div>\n<div class=\"section\">\n<div class=\"section\">\n<div class=\"section\">\n<ol class=\"steps\">\n<li class=\"step\">\n<div class=\"section\">\n<p><a href=\"https://msdn.microsoft.com/en-us/library/31d242h4(v=vs.110).aspx\" target=\"_blank\">Identify functions in DLLs</a>.</p>\n<p>Minimally, you must specify the name of the function and name of the DLL that contains it.</p>\n</div>\n</li>\n<li class=\"step\">\n<div class=\"section\">\n<p><a href=\"https://msdn.microsoft.com/en-us/library/khbsw73t(v=vs.110).aspx\" target=\"_blank\">Create a class to hold DLL functions</a>.</p>\n<p>You can use an existing class, create an individual class for each unmanaged function, or create one class that contains a set of related unmanaged functions.</p>\n</div>\n</li>\n<li class=\"step\">\n<div class=\"section\">\n<p><a href=\"https://msdn.microsoft.com/en-us/library/w4byd5y4(v=vs.110).aspx\" target=\"_blank\">Create prototypes in managed code</a>.</p>\n<p>[Visual Basic] Use the <strong>Declare</strong> statement with the <strong>Function</strong> and <strong>Lib</strong> keywords. In some rare cases, you can use the <strong>DllImportAttribute</strong> with the <strong>Shared Function</strong> keywords. These cases are explained later in this section.</p>\n<p>[C#] Use the <strong>DllImportAttribute</strong> to identify the DLL and function. Mark the method with the <strong>static</strong> and <strong>extern</strong> modifiers.</p>\n<p>[C++] Use the <strong>DllImportAttribute</strong> to identify the DLL and function. Mark the wrapper method or function with <strong>extern \"C\"</strong>.</p>\n</div>\n</li>\n<li class=\"step\">\n<div class=\"section\">\n<p><a href=\"https://msdn.microsoft.com/en-us/library/be80xase(v=vs.110).aspx\" target=\"_blank\">Call a DLL function</a>.</p>\n<p>Call the method on your managed class as you would any other managed method. <a href=\"https://msdn.microsoft.com/en-us/library/awbckfbz(v=vs.110).aspx\" target=\"_blank\">Passing structures</a> and <a href=\"https://msdn.microsoft.com/en-us/library/d186xcf0(v=vs.110).aspx\" target=\"_blank\">implementing callback functions</a> are special cases.</p>\n</div>\n</li>\n</ol>\n<div class=\"section\">\n<div class=\"section\">\n<p>For examples that demonstrate how to construct .NET-based declarations to be used with platform invoke, see <a href=\"https://msdn.microsoft.com/en-us/library/fzhhdwae(v=vs.110).aspx\" target=\"_blank\">Marshaling Data with Platform Invoke</a>.</p>\n<p>The following table lists data types used in the Win32 API (listed in Wtypes.h) and C-style functions. Many unmanaged libraries contain functions that pass these data types as parameters and return values. The third column lists the corresponding .NET Framework built-in value type or class that you use in managed code. In some cases, you can substitute a type of the same size for the type listed in the table.</p>\n<div id=\"sectionSection1\" class=\"seeAlsoNoToggleSection\">\n<div class=\"tableSection\">\n<div class=\"contentTableWrapper\">\n<table style=\"height: 1031px;\" border=\"1px\" width=\"961\">\n<tbody>\n<tr>\n<th>\n<p>Unmanaged type in Wtypes.h</p>\n</th>\n<th>\n<p>Unmanaged C language type</p>\n</th>\n<th>\n<p>Managed class name</p>\n</th>\n<th>\n<p>Description</p>\n</th>\n</tr>\n<tr>\n<td>\n<p><strong>HANDLE</strong></p>\n</td>\n<td>\n<p><strong>void*</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.intptr(v=vs.110).aspx\">System.IntPtr</a></p>\n</td>\n<td>\n<p>32 bits on 32-bit Windows operating systems, 64 bits on 64-bit Windows operating systems.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>BYTE</strong></p>\n</td>\n<td>\n<p><strong>unsigned char</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.byte(v=vs.110).aspx\">System.Byte</a></p>\n</td>\n<td>\n<p>8 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>SHORT</strong></p>\n</td>\n<td>\n<p><strong>short</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.int16(v=vs.110).aspx\">System.Int16</a></p>\n</td>\n<td>\n<p>16 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>WORD</strong></p>\n</td>\n<td>\n<p><strong>unsigned short</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.uint16(v=vs.110).aspx\">System.UInt16</a></p>\n</td>\n<td>\n<p>16 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>INT</strong></p>\n</td>\n<td>\n<p><strong>int</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.int32(v=vs.110).aspx\">System.Int32</a></p>\n</td>\n<td>\n<p>32 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>UINT</strong></p>\n</td>\n<td>\n<p><strong>unsigned int</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.uint32(v=vs.110).aspx\">System.UInt32</a></p>\n</td>\n<td>\n<p>32 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>LONG</strong></p>\n</td>\n<td>\n<p><strong>long</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.int32(v=vs.110).aspx\">System.Int32</a></p>\n</td>\n<td>\n<p>32 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>BOOL</strong></p>\n</td>\n<td>\n<p><strong>long</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.sbyte(v=vs.110).aspx\">System.Int32</a></p>\n</td>\n<td>\n<p>32 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>DWORD</strong></p>\n</td>\n<td>\n<p><strong>unsigned long</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.uint32(v=vs.110).aspx\">System.UInt32</a></p>\n</td>\n<td>\n<p>32 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>ULONG</strong></p>\n</td>\n<td>\n<p><strong>unsigned long</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.uint32(v=vs.110).aspx\">System.UInt32</a></p>\n</td>\n<td>\n<p>32 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>CHAR</strong></p>\n</td>\n<td>\n<p><strong>char</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.char(v=vs.110).aspx\">System.Char</a></p>\n</td>\n<td>\n<p>Decorate with ANSI.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>WCHAR</strong></p>\n</td>\n<td>\n<p><strong>wchar_t</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.char(v=vs.110).aspx\">System.Char</a></p>\n</td>\n<td>\n<p>Decorate with Unicode.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>LPSTR</strong></p>\n</td>\n<td>\n<p><strong>char*</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx\">System.String</a> or <a href=\"https://msdn.microsoft.com/en-us/library/system.text.stringbuilder(v=vs.110).aspx\">System.Text.StringBuilder</a></p>\n</td>\n<td>\n<p>Decorate with ANSI.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>LPCSTR</strong></p>\n</td>\n<td>\n<p><strong>Const char*</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx\">System.String</a> or <a href=\"https://msdn.microsoft.com/en-us/library/system.text.stringbuilder(v=vs.110).aspx\">System.Text.StringBuilder</a></p>\n</td>\n<td>\n<p>Decorate with ANSI.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>LPWSTR</strong></p>\n</td>\n<td>\n<p><strong>wchar_t*</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx\">System.String</a> or <a href=\"https://msdn.microsoft.com/en-us/library/system.text.stringbuilder(v=vs.110).aspx\">System.Text.StringBuilder</a></p>\n</td>\n<td>\n<p>Decorate with Unicode.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>LPCWSTR</strong></p>\n</td>\n<td>\n<p><strong>Const wchar_t*</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx\">System.String</a> or <a href=\"https://msdn.microsoft.com/en-us/library/system.text.stringbuilder(v=vs.110).aspx\">System.Text.StringBuilder</a></p>\n</td>\n<td>\n<p>Decorate with Unicode.</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>FLOAT</strong></p>\n</td>\n<td>\n<p><strong>Float</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.single(v=vs.110).aspx\">System.Single</a></p>\n</td>\n<td>\n<p>32 bits</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>DOUBLE</strong></p>\n</td>\n<td>\n<p><strong>Double</strong></p>\n</td>\n<td>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.double(v=vs.110).aspx\">System.Double</a></p>\n</td>\n<td>\n<p>64 bits</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<p>For corresponding types in Visual Basic 2005, C#, and C++, see the <a href=\"https://msdn.microsoft.com/en-us/library/hfa3fa08(v=vs.110).aspx\">Introduction to the .NET Framework Class Library</a>.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_microsoft__net ;
          owl:sameAs                     dbr:Platform_Invocation_Services .
  
  :DesignTactic_verification
          a           gen:DesignTactic ;
          rdfs:label  "verification" .
  
  :Requirement_ar-158__standard_compatibility
          a                          spec:Requirement ;
          rdfs:label                 "AR-158: Standard compatibility" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes , :Project_aspernbm ;
          gen:wikiEntry              "Der\n  Mechanismus zur Datenabfragung soll jegliche Webservice-Standards (z.B. REST,\n  SOAP) und clientseitige Implementierungen sowohl in höheren Sprachen (z.B.\n  C++, C#, Java) als auch in Browser Scripting-Sprachen (z.B. JavaScript)\n  unterstützen." , "<p style=\"font-size: small;\">The data querying interfaces to the DWH shall support Web service standards such as REST.</p>" ;
          spec:containedWithin       :UseCase_benchmarks , :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none , :Domain_ar-012__protocols_and_formats ;
          spec:requirementGroup      "Operational" , "Developmental" ;
          spec:requirementPurpose    "Web interfaces" .
  
  :DesignPattern_transaction-based_delivery
          a                              gen:DesignPattern ;
          rdfs:label                     "Transaction-based Delivery" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_portability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_operability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_agility , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_interoperability ;
          gen:isAlternativeOf            :DesignTactic_messaging ;
          gen:wikiEntry                  "[Cloud Computing Patterns [date unknown]] Clients retrieve messages under a transactional context to ensure that messages are received by a handling component." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_ad-016__monitoring_agent
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-016: Monitoring Agent" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p><strong><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">Monitoring Service</span></strong></p><p><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">All interactions between different stakeholders will be monitored and tracked by a monitoring service.&nbsp;</span><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">The monitoring service&nbsp;stores the data for different analytic functions.</span></p><p><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">The monitoring service tracks and persists all transactions between different APPs, APIs, and stakeholders. These data can be analyzed by a core analytics component. The analytics data&nbsp;can be presented&nbsp;using&nbsp;a web-based dashboard.</span></p><p><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">The monitoring service is one of the core services.</span></p>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-015__usage_tracking___monitoring ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_auditability , :ArchitecturalQuality_accountability ;
          spec:useDecisionTactic          :DesignTactic_monitoring , :DesignTactic_tracking .
  
  :Requirement_ar-165__portability
          a                          spec:Requirement ;
          rdfs:label                 "AR-165: Portability" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Das\n  System soll die Visualisierung mittels einer Vielfalt von Geräten (z.B. PC,\n  Mac, Tablets, Smart Phones) und Betriebssystemen (z.B. Windows, Linux,\n  Android, iOS) ohne zusätzliche Erweiterungen und Anpassungen unterstützen." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Developmental" ;
          spec:requirementPurpose    "Responsive design" .
  
  :DesignDecision_kdd-05__viewer-server_interface
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-05: Viewer-Server Interface" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p class=\"MsoNormal\" style=\"text-align: justify;\"><span lang=\"EN-US\">Currently, the following </span><span lang=\"EN-US\">functionalities</span><span lang=\"EN-US\"> in the Viewer get data through&nbsp;different server side components.&nbsp;</span><span style=\"line-height: 1.3em;\">With unification, the Viewer needs to go through the web interface to communicate with the server instead of directly plugging to the server component.</span></p>\n<table class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none;\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td style=\"width: 55.05pt; border: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"73\">\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><strong><span lang=\"EN-GB\">No.</span></strong></p>\n</td>\n<td style=\"width: 264.15pt; border: solid windowtext 1.0pt; border-left: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"352\">\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><strong><span lang=\"EN-GB\">Functionality</span></strong></p>\n</td>\n<td style=\"width: 159.6pt; border: solid windowtext 1.0pt; border-left: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"213\">\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin: 0cm; margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><strong><span lang=\"EN-GB\">Server Component</span></strong></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 55.05pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"73\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">1</span></p>\n</td>\n<td style=\"width: 264.15pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"352\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">Save operation</span></p>\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">(Auto Archive (job addition) to be moved to server)</span></p>\n</td>\n<td style=\"width: 159.6pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"213\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">DDI</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 55.05pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"73\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">2</span></p>\n</td>\n<td style=\"width: 264.15pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"352\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">Set Report Status in PJ</span></p>\n</td>\n<td style=\"width: 159.6pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"213\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">DBLib</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 55.05pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"73\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">3</span></p>\n</td>\n<td style=\"width: 264.15pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"352\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">Public DiP creation</span></p>\n</td>\n<td style=\"width: 159.6pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"213\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">CommonLib</span></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 55.05pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"73\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">4</span></p>\n</td>\n<td style=\"width: 264.15pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"352\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">Mammo license related functionalities</span></p>\n</td>\n<td style=\"width: 159.6pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt;\" valign=\"top\" width=\"213\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">LicenseLib</span></p>\n</td>\n</tr>\n<tr style=\"height: 10.9pt;\">\n<td style=\"width: 55.05pt; border: solid windowtext 1.0pt; border-top: none; padding: 0cm 5.4pt 0cm 5.4pt; height: 10.9pt;\" valign=\"top\" width=\"73\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">5</span></p>\n</td>\n<td style=\"width: 264.15pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 10.9pt;\" valign=\"top\" width=\"352\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">Warning Message for Late Image Arrival</span></p>\n</td>\n<td style=\"width: 159.6pt; border-top: none; border-left: none; border-bottom: solid windowtext 1.0pt; border-right: solid windowtext 1.0pt; padding: 0cm 5.4pt 0cm 5.4pt; height: 10.9pt;\" valign=\"top\" width=\"213\">\n<p class=\"MsoNormal\" style=\"margin-bottom: .0001pt; text-align: justify; line-height: normal;\"><span lang=\"EN-US\">DDI</span></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"MsoNormal\" style=\"text-align: justify;\"><span lang=\"EN-US\">&nbsp;</span></p>" ;
          spec:decisionArchitecturalView  "1. Component View" ;
          spec:hasDecisionDomain          :Domain_arch-1__client-server_interface ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces .
  
  :DesignTactic_failure_handling
          a           gen:DesignTactic ;
          rdfs:label  "failure handling" .
  
  :ArchitecturalQuality_robustness
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Robustness" , "robustness" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_compensating_transaction_pattern , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_fresh_work_before_stale , :DesignPattern_routine_maintenance , :DesignPattern_acknowledgement , :DesignPattern_riding_over_transients , :DesignPattern_leaky_bucket_counter , :DesignPattern_rollforward , :DesignPattern_final_handling , :DesignPattern_parameter_checking , :DesignPattern_concentrated_recovery , :DesignTactic_error_detection , :DesignPattern_routine_audits , :DesignPattern_indiviuals_decide_timing , :DesignPattern_restart , :DesignPattern_claim_check , :DesignPattern_return_to_reference_point , :DesignPattern_resource_allocation , :DesignPattern_root_cause_analysis , :DesignPattern_finish_work_in_progress , :DesignPattern_fault_diagnosis , :DesignPattern_remote_storage , :DesignPattern_failover , :DesignPattern_deferrable_work , :DesignPattern_escalation , :DesignPattern_expansive_automatic_controls , :DesignPattern_maximize_human_participation , :DesignPattern_existing_metrics , :DesignPattern_marked_data , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_recovery_blocks , :DesignPattern_someone_in_charge , :DesignPattern_heartbeat , :DesignPattern_voting , :DesignPattern_minimize_human_intervention , :DesignPattern_checksum , :DesignTactic_fault_handling , :DesignPattern_protective_automatic_controls , :DesignPattern_rollback , :DesignPattern_maintenance_interface , :DesignPattern_revise_procedure , :DesignPattern_reintegration , :DesignPattern_error_containment_barrier , :DesignPattern_reconfiguration , :DesignPattern_limit_retries , :DesignPattern_reinitialization , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_checkpoint , :DesignPattern_units_of_mitigation , :DesignPattern_error_correcting_code , :DesignPattern_similarity_detection , :DesignPattern_reproducible_error , :DesignPattern_3-category_logging , :DesignPattern_queue_for_resources , :DesignPattern_small_patches , :DesignPattern_treshold_analysis , :DesignPattern_watchdog , :DesignPattern_fault_correlation , :DesignTactic_error_handling , :DesignPattern_redundancy , :DesignPattern_realistic_threshold , :DesignPattern_compensation , :DesignPattern_circuit_breaker , :DesignPattern_slow_it_down , :DesignPattern_correcting_audits , :DesignPattern_retry_pattern , :DesignPattern_software_update , :DesignPattern_error_handler , :DesignPattern_fault_isolation , :DesignPattern_memento , :DesignPattern_fault_observer , :DesignPattern_quarantine , :DesignPattern_temporal_analytics , :DesignPattern_routine_exercises ;
          gen:relatedQuality       :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience ;
          gen:wikiEntry            "[Wikipedia Robustness (Computer Science) 2014] Robustness is the ability of a system to cope with errors during execution or the ability of an algorithm to continue to operate despite abnormalities in input calculations etc.  [Jen 2002] Robustness is an approach to feature persistence in systems that compels us to focus on perturbations and assemblages of perturbations to the system different from those considered in the design of the system or from those encountered in its prior history. To address feature persistence under these sorts of perturbations we are naturally led to study the coupling of dynamics with organizational architecture implicit rather than explicit assumptions about the environment the role of a systems evolutionary history in determining its current state and thereby its future state the sense in which robustness characterizes the tness of the set of strategic options open to the system the intentionality P of insults directed at and the responses generated by the system and the incorporation of mechanisms for learning innovation and creative problem-solving." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_3-category_logging
          a                              gen:DesignPattern ;
          rdfs:label                     "3-Category Logging" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_integrity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_utility , :ArchitecturalQuality_robustness , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_dependability , :ArchitecturalQuality_availability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_safety ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability ;
          gen:isAlternativeOf            :DesignTactic_error_detection , :DesignTactic_error_handling ;
          gen:wikiEntry                  "[Dyson and Longshaw 2004] pp 324-326.To find out why the system fails or performance degrades we need to know what the elements in the system were doing at the time. It might be possible to determine the cause of failure and enable taking action to prevent it. A mechanism has to be implemented to log information about system status execution and events. It should concist of debug data ( execution trace information which components have been called and with whaz parameters) information (warnings about system condition) error data (documentation of things that go wrong).   Relations Error detection and Error Handling [Dyson and Longshaw 2004] To detect potential errors so we have to know what the elements were doing. It is essential to determine the cause of failure and take action pp. 325." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_kdd-11__document_generation
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-11: Document Generation" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Automated Checklist Generation</strong></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">During Phase265, engineers need to fill out a series of check lists. These tasks are ideal for automation using Camunda and BPMN. Checklists are usually Word documents, which the engineers currently need to fill out manually. Using Apache POI and BPMN user tasks, the system implements automated document generation of these checklists.</span></p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\"><span style=\"font-size: small;\">Implementation Details</span></strong></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">The Document Generator is implemented as a Camunda execution listener and can be triggered after each user task. This can be specified in the BPMN editor by editing the Listeners (Add execution listeners) of each user task.</span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\"><strong style=\"font-size: small;\">Example.docx</strong></span></p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\"><img src=\"p/Shape/docgen.png\" alt=\"\" width=\"605\" height=\"275\" style=\"font-size: small;\"></strong></p>\n<p style=\"font-size: small;\">This example template can be partly filled out and includes annotated regions and placeholder comments of the form (colors indicate cells of different layouts):</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"text-decoration: underline; font-size: small;\">#{\"varname\":\"varvalue\"}</span> --&nbsp;after the # there must be a valid JSON object or array</li>\n</ul>\n<p style=\"font-size: small;\">The use can define custom functions for modifying the document based on the placeholders defined in the template.&nbsp;</p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\">NamedReference(\"pvar\",map)</strong></p>\n<p style=\"font-size: small;\">Takes a hashmap (<strong style=\"font-size: small;\">map</strong>) containing&nbsp;key-value pairs (e.g., process variables), which replace the placeholder in the template document. The<strong style=\"font-size: small;\"> \"pvar\"</strong> parameter is called the <em style=\"font-size: small;\">scope</em> of the search.</p>\n<p style=\"font-size: small;\">For example:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"text-decoration: underline; font-size: small;\">#{\"pvar\":\"some_process_variable\"}</span> will be replaced by the value associated to the key \"some_process_variable\" in the <strong style=\"font-size: small;\">map</strong> paramter.</li>\n</ul>\n<p style=\"font-size: small;\">&nbsp;</p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\">TableExtender(table_name,num_rows)</strong></p>\n<p style=\"font-size: small;\">This function adds a specified number of rows (<strong style=\"font-size: small;\">num_rows</strong>) to a specified table (<strong style=\"font-size: small;\">table_name</strong>).&nbsp;</p>\n<p style=\"font-size: small;\">For example:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"text-decoration: underline; font-size: small;\">#{\"table\":\"table_name\"}</span>&nbsp;-- at this location in the template the TableExtender function adds the specified number of table rows.</li>\n</ul>\n<ul style=\"font-size: small;\"><li style=\"font-size: small;\"><span style=\"text-decoration: underline; font-size: small;\">#{\"table\":\"table_name\", \"col\": 0, \"row\": 1}</span><span style=\"line-height: 1.3em; font-size: small;\">&nbsp;-- at this location in the template the TableExtender function adds the specified number of table rows.</span></li>\n</ul>\n<p style=\"font-size: small;\"><span style=\"line-height: 19.5px; font-weight: 700;\">TableReplacer(table_name)</span><span style=\"line-height: 19.5px;\">&nbsp;{ Anonymous class implementing the cell content replacement operation. }</span>&nbsp;</p><p style=\"font-size: small;\"><span style=\"line-height: 19.5px;\">For example:</span></p>\n<p style=\"font-size: small;\"><span style=\"font-family: 'courier new', courier, monospace; font-size: small;\">new <strong style=\"font-size: small;\">TableReplacer</strong>(table_name) {</span></p>\n<p style=\"padding-left: 30px; font-size: small;\"><span style=\"font-family: 'courier new', courier, monospace; font-size: small;\">public void <strong style=\"font-size: small;\">execute</strong> (XWPFRun r, SpinJsonNode row, SpinJsonNode col)</span></p>\n<p style=\"padding-left: 30px; font-size: small;\"><span style=\"font-family: 'courier new', courier, monospace; font-size: small;\">{</span></p>\n<p style=\"padding-left: 60px; font-size: small;\"><span style=\"font-family: 'courier new', courier, monospace; font-size: small;\">r.setText(\"CELL\" + (col.numberValue().inValue() + row.numberValue().intValue()),0);</span></p>\n<p style=\"padding-left: 30px; font-size: small;\"><span style=\"font-family: 'courier new', courier, monospace; font-size: small;\">}</span></p>\n<p style=\"font-size: small;\"><span style=\"font-family: 'courier new', courier, monospace; font-size: small;\">}</span></p>" ;
          spec:decisionArchitecturalView  "2. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-01__process_automation ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_flexibility .
  
  :ArchitecturalQuality_integrity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "integrity" , "Integrity" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_maintain_integrity , :DesignPattern_claim_check , :DesignPattern_information_obscurity , :DesignPattern_leaky_bucket_counter , :DesignPattern_private_key_encryption , :DesignPattern_routine_exercises , :DesignPattern_acknowledgement , :DesignPattern_temporal_analytics , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_error_containment_barrier , :DesignPattern_common_persistent_store , :DesignPattern_existing_metrics , :DesignPattern_resource_allocation , :DesignPattern_heartbeat , :DesignPattern_3-category_logging , :DesignPattern_secure_channels , :DesignDecision_kdd-13__use_implicit_locking , :DesignPattern_units_of_mitigation , :DesignPattern_routine_maintenance , :DesignPattern_voting , :DesignPattern_riding_over_transients , :DesignTactic_keep_consistent , :DesignPattern_encryption , :DesignPattern_similarity_detection , :DesignPattern_implicit_lock , :DesignPattern_deferrable_work , :DesignPattern_software_update , :DesignPattern_watchdog , :DesignPattern_correcting_audits , :DesignTactic_encryption , :DesignPattern_access_control , :DesignPattern_routine_audits , :DesignPattern_recovery_blocks , :DesignDecision_kdd-07__mining_process , :DesignPattern_public_key_encryption , :DesignPattern_realistic_threshold , :DesignPattern_fault_correlation , :DesignPattern_parameter_checking , :DesignPattern_checksum , :DesignPattern_treshold_analysis , :DesignPattern_someone_in_charge , :DesignTactic_error_detection , :DesignPattern_indiviuals_decide_timing ;
          gen:relatedQuality       :ArchitecturalQuality_accountability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_consistency , :ArchitecturalQuality_security ;
          gen:wikiEntry            "Data should be delivered as intended. It can have redundant information encoded in it such as checksums or hash results which can be encrypted either along with or independently from the original data.  [Safecode - Security Integrity and Authenticity 2009] Integrity The processes for sourcing creating and delivering software contain controls to enhance confidence that the software functions as the supplier intended.  [Alan Gillies 2011]The integrity of a system is a measure of its ability to remain intact whilst under threat." ;
          spec:requiredBy          :Domain_abstract .
  
  :Role_system_architect
          a           cont:Role ;
          rdfs:label  "system architect" .
  
  :Domain_databases  a  spec:Domain ;
          rdfs:label  "databases" .
  
  sear:refinedBy  a    owl:ObjectProperty ;
          rdfs:domain  sear:SearchQuery .
  
  :DesignTactic_barrier-free_access
          a                             gen:DesignTactic ;
          rdfs:label                    "Barrier-free Access" , "barrier-free access" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_usability , :ArchitecturalQuality_utility , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_visibility ;
          gen:wikiEntry                 "The concepttargetssoftware or systems to beusable to the greatest extent possible by everyone regardless of their age ability or status in life." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignTactic_scheduling
          a                             gen:DesignTactic ;
          rdfs:label                    "Scheduling" , "scheduling" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility ;
          gen:wikiEntry                 "Scheduling is deciding how to order tasks and how to commit resources between the variety of possible tasks. In computing scheduling is the method by which tasks are given access to system resources. This is usually done to load balance share system resources effectively or achieve a target quality of service.  The need for a scheduling algorithm arises from the requirement to perform multitasking that means executing more than one process at a time and multiplexing such as transmitting multiple data streams simultaneously across a single physical channel [Adeli and Karim 2001]." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_visitor
          a                              gen:DesignPattern ;
          rdfs:label                     "Visitor" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_structuredness , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_composability ;
          gen:isAlternativeOf            :DesignTactic_composition ;
          gen:wikiEntry                  "[Wikipedia Visitor Pattern 2014] A Visitor separates an algorithm from an object structure by moving the hierarchy of methods into one object. (GoF behavioral pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Visitor_pattern .
  
  :DesignDecision_ad-01
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-01" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:wikiEntry                   "This my first design decision." ;
          spec:decisionArchitecturalView  "Logical view" ;
          spec:hasDecisionDomain          :Domain_req1 ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_access_control .
  
  :Requirement_ar-153__scalability
          a                          spec:Requirement ;
          rdfs:label                 "AR-153: Scalability" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm , :Project_aspernes ;
          gen:wikiEntry              "<p style=\"font-size: small;\">The calculation of KPIs, the visualization of data, and carrying out&nbsp;analyses shall be possible for a growing number of users simultaneously accessing the system without additional latency. The maximum number of concurrent users is expected to be in the range of a few hundreds up to 1000 for the productive version of the system.</p>" , "Die\n  Berechnung der KPIs, die Visualisierung von Daten sowie die Durchführung von\n  Analysen sollen für eine wachsende Anzahl von gleichzeitig zugreifenden\n  Benutzern ohne Verzögerung möglich sein." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren , :UseCase_benchmarks ;
          spec:hasRequirementOrigin  :Domain_none , :Domain_ar-026__caching_and_performance ;
          spec:requirementGroup      "Operational" ;
          spec:requirementPurpose    "Horizontal scalability" .
  
  :AuthorTag_technical_dept
          a           cont:AuthorTag ;
          rdfs:label  "technical dept" .
  
  :Domain_ar-01__process_automation
          a           spec:Domain ;
          rdfs:label  "ar-01: process automation" .
  
  :DesignTactic_synchronous_communication
          a                             gen:DesignTactic ;
          rdfs:label                    "synchronous communication" , "Synchronous Communication" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_utility , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_simplicity ;
          gen:wikiEntry                 "Synchronous communication is direct communication where the communicators are time synchronized. This means that all parties involved in the communication are present at the same time." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Requirement_ar-104_2__variable_filtering
          a                          spec:Requirement ;
          rdfs:label                 "AR-104.2: Variable filtering" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm , :Project_aspernes ;
          gen:wikiEntry              "Die Reihenfolge in der die Auswahl\n  der Zielgrößen, der Darstellungsmöglichkeiten, der Vergleichsvariablen und\n  der Einschränkungsfilter soll variabel sein." , "<p style=\"font-size: small;\">The selection order of different target values, the comparison variables, and the restriction filter shall be variable and configurable.</p>" ;
          spec:containedWithin       :UseCase_benchmarks , :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_ar-104__stepwise_querying ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Adaptive Query Processing" .
  
  :AuthorTag_smart_grid
          a           cont:AuthorTag ;
          rdfs:label  "smart grid" .
  
  gen:SoftwareEngineeringMethod
          a                owl:Class ;
          rdfs:label       "Software Engineering Method" ;
          rdfs:subClassOf  gen:ArchitecturalKnowledgeElement .
  
  :Domain_ar-05__compliance_checking
          a           spec:Domain ;
          rdfs:label  "ar-05: compliance checking" .
  
  :DesignTactic_lookup
          a           gen:DesignTactic ;
          rdfs:label  "lookup" .
  
  :SoftwareEngineeringMethod_technical_debt_management
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Technical Debt Management" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:hasMethodPhase            :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole             :Role_technical_project_manager ;
          gen:hasMethodTag              :AuthorTag_management , :AuthorTag_architecture , :AuthorTag_metrics , :AuthorTag_technical_dept , :AuthorTag_software ;
          gen:useMethodTactic           :DesignTactic_modularization ;
          gen:wikiEntry                 "The Siemens Technical Debt Management methodology is a proactive system of methods for understanding it, recognizing it among known issues, finding metric hot spots that point to it, finding structural evidence to confirm it, prioritizing tasks that pay it down, monitoring KPIs to detect its accumulation, and selecting prevention measures for it." .
  
  sear:QueryElement  a  owl:Class ;
          rdfs:label  "Query Element" .
  
  :ArchitecturalQuality_functionality
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Functionality" , "functionality" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_tenant-isolated_component , :DesignTactic_white-box_testing , :DesignPattern_pattern_name , :DesignTactic_multitenancy , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_shared_component , :DesignTactic_keep_consistent , :DesignPattern_dedicated_component , :DesignDecision_ad-017__core_services , :DesignPattern_layered_architecture , :DesignDecision_ad-000__relevant_use_cases , :DesignPattern_capturing_architectural_requirements , :DesignDecision_add-04__map-report_model , :DesignDecision_add-05__web_page_scraper , :DesignDecision_add-03__concept_linkage ;
          gen:relatedQuality       :ArchitecturalQuality_provability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_replicability , :ArchitecturalQuality_certainty , :ArchitecturalQuality_completeness , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_consistency , :ArchitecturalQuality_correctness ;
          gen:wikiEntry            "<p><strong>Functionality</strong></p>\n<p>Functionality is the ability of the system to do the work for which it was intended. Functionality does not determine architecture. That is, given a set of required functionality, there is no end to the architectures you could create to satisfy that functionality. At the very least, you could divide up the functionality in any number of ways and assign the subpieces to different architectural elements.&nbsp;However, functionality is achieved by assigning responsibilities to architectural elements, resulting in one of the most basic of architectural structures.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"http://www.informit.com/articles/article.aspx?p=1959673&amp;seqNum=2\">http://www.informit.com/articles/article.aspx?p=1959673&amp;seqNum=2</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignTactic_authentication
          a                             gen:DesignTactic ;
          rdfs:label                    "authentication" , "Authentication" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_traceability , :ArchitecturalQuality_immunity , :ArchitecturalQuality_security , :ArchitecturalQuality_trustability , :ArchitecturalQuality_provability , :ArchitecturalQuality_authenticity , :ArchitecturalQuality_accountability ;
          gen:wikiEntry                 "Authentication is ensuring that a user or remote computer is actually who it purports to be. Passwords one-time passwords digital certificates and biometric identifications provide authentication." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :SoftwareEngineeringMethod_health_check
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Health check" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_technical_project_manager ;
          gen:hasMethodTag         :AuthorTag_questions , :AuthorTag_artifacts , :AuthorTag_organization_health ;
          gen:wikiEntry            "The Health Check is designed to determine the health of an engineering or R&amp;D organization indicating action fields and issues where the organization can be improved. It is based on the evaluation of questions and artifacts" .
  
  :DesignDecision_ad-009__restful_api_registry
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-009: RESTful API Registry" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<h2 style=\"font-size: small;\">API Registry REST interface&nbsp;</h2>\n<p style=\"font-size: small;\">The API calls can be clustered in calls that manage the APIs stored in the API registry, namely:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">Add API;</li>\n<li style=\"font-size: small;\">Update API;</li>\n<li style=\"font-size: small;\">Get all APIs;</li>\n<li style=\"font-size: small;\">Get single API;</li>\n<li style=\"font-size: small;\">Remove an API.</li>\n</ul>\n<p style=\"font-size: small;\">And calls that obtain information about registered APIs and manage their lifecycle:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">Check older version (checks if there are older versions available);</li>\n<li style=\"font-size: small;\">Change API status (e.g. to published);</li>\n<li style=\"font-size: small;\">Check If API exists.</li>\n</ul>\n<p style=\"font-size: small;\">WSO2 also provides tooling for backup and migration of the database contents of the API registry<a target=\"_blank\" name=\"_ftnref2\" style=\"font-size: small;\"></a>[2]. This adds two more Service calls to the REST interface:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">Import for importing exported APIs;</li>\n<li style=\"font-size: small;\">Export for exporting APIs.</li></ul>\n<p style=\"font-size: small;\"><a href=\"#_ftnref1\" name=\"_ftn1\" style=\"font-size: small;\">[1]</a> https://docs.wso2.com/display/AM190/Publisher+APIs</p>\n<p style=\"font-size: small;\"><a href=\"#_ftnref2\" name=\"_ftn2\" style=\"font-size: small;\">[2]</a> https://docs.wso2.com/display/AM190/Migrating+the+APIs+to+a+Different+Environment</p>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-011__api_governance ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_performance , :ArchitecturalQuality_portability ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces .
  
  :DesignDecision_ad-121__data_querying
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-121: Data querying" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Generic data querying mechanism&nbsp;</strong></p>\n<p style=\"font-size: small;\">The database queries are controlled by a limited number of generic program units (e.g., classes or simple functions). This way it is avoided that for each new query a new program unit is created. The name of the data query is&nbsp;passed to the relevant program unit&nbsp;as a&nbsp;parameter.</p>\n<p style=\"font-size: small;\">For the purpose of querying data, the query filters consist of a unique query name and a set of&nbsp;parameters, which are structured and passed as a list of name/value pairs. The parameters that are necessary for the production of any graphics should be standardized system-wide.</p>\n<p style=\"font-size: small;\">These include:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">The query name</li>\n<li style=\"font-size: small;\">The timespan for which the requested data is&nbsp;valid</li>\n<li style=\"font-size: small;\">Granularity (e.g., day, week, month, year)</li>\n<li style=\"font-size: small;\">Building type</li>\n<li style=\"font-size: small;\">...</li>\n</ul>\n<p style=\"font-size: small;\">The AE (Aspern Extensions) component from the class diagram&nbsp;below is used for data queries. It is exposed as a web service and accesses the database through a JDBC/ODBC driver or using a REST/SOAP DWH-sided web service.</p>\n<p style=\"font-size: small;\">In the class diagram below the <em style=\"font-size: small;\">QueryManager</em> classes create the query filters by combining a query name with a list of query parameters passed as a list of name-value pairs. These parameters are obtained from the visualization component and can be modified within the AE component for reasons of compatibility (i.e., if a JDBC connection is used, the JSON parameter list needs to be translated into an SQL query).</p>\n<p style=\"font-size: small;\">A <em style=\"font-size: small;\">ResultFormatter</em> is required whenever the database interface does not provide the results in the JSON format. For example, it can convert a SQL ResultTable into an array of JSON objects.</p>\n<p style=\"font-size: small;\"><img style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernBM/QueryManager.png\" alt=\"\" width=\"628\" height=\"314\"></p>\n<p style=\"text-align: center; font-size: small;\">Generic QueryManager classes used for querying the DWH. These classes are part of the AE component from&nbsp;the component view.</p>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-158__standard_compatibility ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_portability , :ArchitecturalQuality_interoperability ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces , :DesignTactic_service_orientation .
  
  :DesignPattern_interpretor
          a                              gen:DesignPattern ;
          rdfs:label                     "Interpretor" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_usability , :ArchitecturalQuality_visibility , :ArchitecturalQuality_utility , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_heterogeneity ;
          gen:isAlternativeOf            :DesignTactic_barrier-free_access ;
          gen:wikiEntry                  "[Wikipedia Interpredator Pattern 2014] An Interpretor implements a specialized language. (GoF behavioral pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Interpreter_pattern .
  
  :DesignTactic_asynchronous_calls
          a           gen:DesignTactic ;
          rdfs:label  "asynchronous calls" .
  
  :ArchitecturalQuality_legibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Legibility" , "legibility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_convention_over_configuration , :DesignPattern_default ;
          gen:relatedQuality       :ArchitecturalQuality_usability ;
          gen:wikiEntry            "Legibility is the quality of being clear enough to read [Oxforddictionaries Legibility 2014]. Enhancing legibility includes eliminating elisions flexible syntaxes and more generally completingincomplete texts.  Readability  Relations The Convention over configuration tactic should be used for Legibility gaining simplicity and eliminatin elisions by decreasing the numbers of decisions that developers should make" ;
          spec:requiredBy          :Domain_abstract .
  
  sear:hasUserRole  a         owl:ObjectProperty ;
          rdfs:domain         sear:UserAccount ;
          rdfs:range          cont:Role ;
          rdfs:subPropertyOf  gen:has .
  
  :Requirement_arr-1  a              spec:Requirement ;
          rdfs:label                 "ARR-1" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_smartscada ;
          gen:wikiEntry              "The system shall support legacy systems." , "<p>Die Berechnung der KPIs soll (soweit m&ouml;glich) innerhalb der DWH erfolgen, unabh&auml;ngig davon, ob sie z.B. von dem Navigator oder einer externen Datenquelle importiert wurden.</p>\n<p>&nbsp;</p>\n<p>dsfsddsf</p>\n<div>&nbsp;</div>\n<div>Version next....</div>" ;
          spec:hasRequirementOrigin  :Domain_changed , :Domain_has_changed ;
          spec:requirementGroup      "Access Control" , "XXX" ;
          spec:requirementPurpose    "Authentication" , "Association" .
  
  :ProjectPhase_all_life-cycle_phases
          a           cont:ProjectPhase ;
          rdfs:label  "all life-cycle phases" .
  
  :Requirement_ar-004__api_protection
          a                          spec:Requirement ;
          rdfs:label                 "AR-004: API Protection" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall protect published APIs from misuse by wrapping it in security\nprocedures and policies." ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "API Protection" .
  
  :DesignDecision_kdd-19
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-19" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Zugriffskontrolle durch Mandantenfähigkeit</strong></p><p>Die Einschränkung der Ergebnissätze erfolgt DWH-seitig abhängig von dem verwendeten Authentifizierungs- und Autorisierungsmodell sowie dem authentifizierten Benutzer, der die Abfrage angestoßen hat.</p><p>Die Kontrolle der Benutzerzugriffe auf Daten sowie der Anzeige in der Benutzeroberfläche entspricht dem Mandanten-Modell für Authentifizierung und Autorisierung.</p><p>Die Autorisierung erfolgt zur Laufzeit, indem in der Benutzeroberfläche alle Sichten und Visualisierungen entsprechen der Daten, die einem Mandanten zur Verfügung stehen, generiert werden.</p>" ;
          spec:decisionArchitecturalView  "III.Laufzeitsicht" ;
          spec:hasDecisionDomain          :Domain_ar-159__generic_api , :Domain_ar-161__access_control , :Domain_ar-107__multi-tenancy_support , :Domain_ar-106__stakeholder_views ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_data_access , :DesignTactic_authorization , :DesignTactic_isolation .
  
  :DesignPattern_storing_a_64-bit_value
          a                              gen:DesignPattern ;
          rdfs:label                     "Storing a 64-bit Value" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Storing a 64-bit Value</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>To store a 64-bit pointer value, use <strong>ULONG_PTR</strong>. A \n    <strong>ULONG_PTR</strong> value is 32 bits when compiled with a 32-bit compiler and 64 bits when \n    compiled with a 64-bit compiler.</p>\n<p>The following examples use real-world code that has been ported to 64-bit Windows. Commentary on the steps to \n     make the code 64-bit compatible is included.</p>\n<h2><a id=\"Example_1__Getting_an_Address\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384255(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"example_1__getting_an_address\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384255(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"EXAMPLE_1__GETTING_AN_ADDRESS\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384255(v=vs.85).aspx\" target=\"_blank\"></a>Example 1: Getting an Address</h2>\n<p>The following code illustrates a portable way to get an address.</p>\n<table>\n<tbody><tr><td>Using ULONG (a 32-bit-only method)</td><td>\n\n<div id=\"code-snippet-1\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_0ee893f4-55ab-4b8f-86e2-09a3aff67487');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_0ee893f4-55ab-4b8f-86e2-09a3aff67487\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>ULONG getAnAddress( )\nInt *somePointer\nReturn( (ULONG) somePointer );\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</td></tr>\n<tr><td>Using ULONG_PTR (the portable method)</td><td>\n\n<div id=\"code-snippet-2\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_5d5ebcef-b041-417e-a5f2-59017ddeea93');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_5d5ebcef-b041-417e-a5f2-59017ddeea93\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>ULONG_PTR getAnAddress( )\nInt *somePointer\nReturn( (ULONG_PTR) somePointer );\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</td></tr>\n</tbody></table>\n<p>&nbsp;</p>\n<h2><a id=\"Example_2__Calculating_an_Address\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384255(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"example_2__calculating_an_address\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384255(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"EXAMPLE_2__CALCULATING_AN_ADDRESS\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384255(v=vs.85).aspx\" target=\"_blank\"></a>Example 2: Calculating an Address</h2>\n<p>The following code illustrates a portable way to calculate an address.</p>\n<table>\n<tbody><tr><td>Using ULONG (a 32-bit-only method)</td><td>\n\n<div id=\"code-snippet-3\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_9a4e1135-9693-46b8-ba6f-6e7fc9ce40a7');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_9a4e1135-9693-46b8-ba6f-6e7fc9ce40a7\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>Int *somePointer;\nInt *someOtherPointer;\nsomePointer = (int *)( (ULONG)someOtherPointer + 0x20 );\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</td></tr>\n<tr><td>Using ULONG_PTR (the portable method)</td><td>\n\n<div id=\"code-snippet-4\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_24ef2162-769f-4507-ac3c-5c07f434cd41');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_24ef2162-769f-4507-ac3c-5c07f434cd41\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>Int *somePointer;\nInt *someOtherPointer;\nsomePointer = (int *)( (ULONG_PTR)someOtherPointer + 0x20 );\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n</td></tr>\n</tbody></table></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  spec:hasRequirementEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:Requirement ;
          rdfs:label          "hasEffectOn" ;
          rdfs:subPropertyOf  gen:hasEffectOnQuality .
  
  gen:hasPosEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:label          "hasPosEffectOnQuality" ;
          rdfs:subPropertyOf  gen:hasPosEffectOn , gen:hasEffectOnQuality .
  
  :DesignPattern_oauth_2_0_tokens
          a                              gen:DesignPattern ;
          rdfs:label                     "OAuth 2.0 Tokens" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_authentication , :DesignTactic_access_control , :DesignTactic_authorization ;
          gen:wikiEntry                  "<p><strong>The OAuth 2.0 Authorization Framework </strong></p>\n<p>In the traditional client-server authentication model, the client requests an access-restricted resource (protected resource) on the server by authenticating with the server using the resource owner's credentials. In order to provide third-party applications access to restricted resources, the resource owner shares its credentials with the third party. This creates several problems and limitations:</p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">Third-party applications are required to store the resource owner's credentials for future use, typically a password in clear-text.</span></li>\n<li><span style=\"line-height: 1.3em;\">Servers are required to support password authentication, despite the security weaknesses inherent in passwords.</span></li>\n<li><span style=\"line-height: 1.3em;\">Third-party applications gain overly broad access to the resource owner's protected resources, leaving resource owners without any ability to restrict duration or access to a limited subset of resources.</span></li>\n<li><span style=\"line-height: 1.3em;\">Resource owners cannot revoke access to an individual third party without revoking access to all third parties, and must do so by changing the third party's password.</span></li>\n<li><span style=\"line-height: 1.3em;\">Compromise of any third-party application results in compromise of the end-user's password and all of the data protected by that password.</span></li>\n</ul>\n<p><br /> OAuth addresses these issues by introducing an authorization layer and separating the role of the client from that of the resource owner. In OAuth, the client requests access to resources controlled by the resource owner and hosted by the resource server, and is issued a different set of credentials than those of the resource owner.<br /><br /> Instead of using the resource owner's credentials to access protected resources, the client obtains an access token -- a string denoting a specific scope, lifetime, and other access attributes. Access tokens are issued to third-party clients by an authorization server with the approval of the resource owner. The client uses the access token to access the protected resources hosted by the resource server.<br /><br /> For example, an end-user (resource owner) can grant a printing service (client) access to her protected photos stored at a photo- sharing service (resource server), without sharing her username and password with the printing service. Instead, she authenticates directly with a server trusted by the photo-sharing service (authorization server), which issues the printing service delegation- specific credentials (access token).</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">OAuth 2.0 Specification&nbsp;(</span><a style=\"line-height: 1.3em;\" href=\"http://oauth.net/2/\">http://oauth.net/2/</a><span style=\"line-height: 1.3em;\">)</span></li>\n</ul>" ;
          spec:hasPatternDomain          :Domain_distributed_computing .
  
  :DesignPattern_embedded_browser
          a                              gen:DesignPattern ;
          rdfs:label                     "Embedded Browser" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_usability , :ArchitecturalQuality_complexity ;
          gen:isAlternativeOf            :DesignTactic_embedded_browsing ;
          gen:wikiEntry                  "<p><strong>Chromium Embedded Framework (CEF)</strong></p>\n<p><em>Homepage:</em>&nbsp;<a href=\"https://bitbucket.org/chromiumembedded/cef\" target=\"_blank\">https://bitbucket.org/chromiumembedded/cef</a></p>\n<p>CEF is a BSD-licensed open source project founded by Marshall Greenblatt in 2008 and based on the <a href=\"http://www.chromium.org/Home\" target=\"_blank\">Google Chromium</a> project. Unlike the Chromium project itself, which focuses mainly on Google Chrome application development, CEF focuses on facilitating embedded browser use cases in third-party applications. CEF insulates the user from the underlying Chromium and Blink code complexity by offering production-quality stable APIs, release branches tracking specific Chromium releases, and binary distributions. Most features in CEF have default implementations that provide rich functionality while requiring little or no integration work from the user. There are currently over 100 million installed instances of CEF around the world embedded in products from a wide range of companies and industries. A partial list of companies and products using CEF is available on the <a href=\"http://en.wikipedia.org/wiki/Chromium_Embedded_Framework#Applications_using_CEF\" target=\"_blank\">CEF Wikipedia page</a>. Some use cases for CEF include:</p>\n<ul>\n<li>Embedding an HTML5-compliant Web browser control in an existing native application.</li>\n<li>Creating a light-weight native &ldquo;shell&rdquo; application that hosts a user interface developed primarily using Web technologies.</li>\n<li>Rendering Web content &ldquo;off-screen&rdquo; in applications that have their own custom drawing frameworks.</li>\n<li>Acting as a host for automated testing of existing Web properties and applications.</li>\n</ul>\n<p>CEF supports a wide range of programming languages and operating systems and can be easily integrated into both new and existing applications. It was designed from the ground up with both performance and ease of use in mind. The base framework includes C and C++ programming interfaces exposed via native libraries that insulate the host application from Chromium and Blink implementation details. It provides close integration between the browser and the host application including support for custom plugins, protocols, JavaScript objects and JavaScript extensions. The host application can optionally control resource loading, navigation, context menus, printing and more, while taking advantage of the same performance and HTML5 technologies available in the Google Chrome Web browser.</p>" ;
          spec:hasPatternDomain          :Domain_user_interfaces .
  
  :DesignPattern_breadcrumbs
          a                              gen:DesignPattern ;
          rdfs:label                     "Breadcrumbs" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_simplicity , :ArchitecturalQuality_likeability , :ArchitecturalQuality_installability , :ArchitecturalQuality_learnability , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_usability , :ArchitecturalQuality_understandability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_affordability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_correctness , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_trainability ;
          gen:isAlternativeOf            :DesignTactic_transparency , :DesignTactic_monitoring , :DesignTactic_self-descriptiveness ;
          gen:wikiEntry                  "[Yahoo Developer Network Breadcrumbs 2009] On the Web the user needs to be able to navigate up (towards the root page) and have an understanding of where she is in relation to the rest of the site." ;
          spec:hasPatternDomain          :Domain_embedded_systems , :Domain_abstract ;
          owl:sameAs                     <http://dbpedia.org/resource/Breadcrumb_(navigation)> .
  
  :DesignTactic_type_marshalling
          a           gen:DesignTactic ;
          rdfs:label  "type marshalling" .
  
  :ArchitecturalQuality_authenticity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "authenticity" , "Authenticity" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_authentication , :DesignPattern_access_control , :DesignPattern_federated_identity_pattern , :DesignPattern_information_obscurity , :DesignPattern_identity_credentials , :DesignPattern_public_key_encryption , :DesignPattern_known_partners , :DesignPattern_secure_channels ;
          gen:relatedQuality       :ArchitecturalQuality_security ;
          gen:wikiEntry            "Authenticity confirms the truth of an attribute of a datum or entity. This might involve confirming the identity of a person or software program tracing the origins of an artifact or ensuring that a product is what its packaging and labeling claims to be.  [Safecode - Security Integrity and Authenticity 2009] Authenticity The software is not counterfeit and customers are able to confirm that they have the real thing." ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_compatibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "compatibility" , "Compatibility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-09__client-server_compatibility , :DesignPattern_external_configuration_store_pattern , :DesignTactic_increase_cohesion , :DesignPattern_command , :DesignPattern_publish_subscribe , :DesignPattern_model-view-controller , :DesignPattern_compliant_data_replication , :DesignPattern_at-least-once_delivery , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_mediator , :DesignPattern_transaction-based_delivery , :DesignPattern_provider_adapter , :DesignTactic_reduce_coupling , :DesignDecision_kdd-22 , :DesignDecision_kdd-10 , :DesignPattern_exactly-once_delivery , :DesignPattern_web_service_proxy , :DesignPattern_forward_compatibility , :DesignTactic_system_integration , :DesignPattern_module , :DesignPattern_application_component_proxy , :DesignPattern_voting , :DesignPattern_bridge , :DesignPattern_integration_provider , :DesignPattern_timeout-based_delivery , :DesignDecision_kdd-21 , :DesignPattern_service-oriented_architecture , :DesignPattern_adapter , :DesignPattern_abstract_factory , :DesignPattern_facade , :DesignPattern_restful_versioning , :DesignPattern_message_broker , :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_message_bus , :DesignPattern_observer , :DesignTactic_messaging , :DesignPattern_proxy , :DesignPattern_capturing_architectural_requirements ;
          gen:relatedQuality       :ArchitecturalQuality_maintainability , :ArchitecturalQuality_usability , :ArchitecturalQuality_interoperability ;
          gen:wikiEntry            "<div><span style=\"font-weight: 700;\">Qualitative Assessment</span></div><div><br></div>Acharacteristic of software components or systems which can operate satisfactorily together.  [MSDN Principles of Accessible Design 2003]Whenever possible build your applications using standard and common user interface elements that are compatible with accessibility aids." , "Acharacteristic of software components or systems which can operate satisfactorily together.  [MSDN Principles of Accessible Design 2003]Whenever possible build your applications using standard and common user interface elements that are compatible with accessibility aids." ;
          spec:requiredBy          :Domain_abstract .
  
  sear:rawKeyword  a   owl:FunctionalProperty , owl:DatatypeProperty ;
          rdfs:domain  sear:Keyword ;
          rdfs:range   xsd:string .
  
  :DesignDecision_kdd-33
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-33" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Berechnung der KPIs</strong></p><p>Die Berechnung der KPIs erfolgt soweit möglich innerhalb des DWH, da hierfür alle Daten vorliegen, unabhängig davon, ob sie von dem Navigator oder einer anderen externen Datenquelle importiert wurden. Alle Daten, die für eine Berechnung eines KPI notwendig sind, müssen zur Nachvollziehbarkeit im DWH hinterlegt werden.<br></p><p>KPIs, die bereits vom Navigator berechnet werden können, werden in ihrer aggregierten Form vom DWH übernommen. Um einen Drill-Down in den Daten zu ermöglichen, soweit das der Datenschutz zulässt, werden auch die Rohdaten importiert, auf denen die Berechnung der KPIs beruht.</p><p>Die Berechnung der KPIs kann entweder im DWH mittels <em>Stored Procedures&nbsp;</em><a href=\"javascript:saFiddle();\" name=\"_ftnref1\" data-mce-href=\"#_ftn1\" target=\"_blank\">[1]</a>, <em>Table Functions&nbsp;</em><a href=\"javascript:closePopup(this);\" name=\"_ftnref2\" data-mce-href=\"#_ftn2\" target=\"_blank\">[2]</a> oder Clientseitig (z.B. in JavaScript oder von einer speziellen Komponente im Rahmen der Aspern-Erweiterungen zum CLM) erfolgen. Je nach KPI, ist diese Entscheidung von folgenden Faktoren abhängig:</p><ul><li>Komplexität der Berechnung</li><li>Erforderlicher Datenverkehr</li><li>Schutz der Berechnungsgrundlage</li><li>Langlebigkeit des KPI</li></ul><p>Dabei sind folgende Kombinationen von Faktoren und entsprechenden Tradeoffs zu beachten:</p><ul><li>Hoher Berechnungsaufwand und geringer Datenverkehr </li><ul><li>Clientseitige Berechnung wird bevorzugt</li></ul><li>Geringer Berechnungsaufwand und großer Datenverkehr </li><ul><li>DWH-seitige Berechnung wird bevorzugt</li></ul><li>Schutz der Berechnungsgrundlage </li><ul><li>DWH-seitige Berechnung oder Clientseitige Berechnung im kompilierten Code (nicht JavaScript) wird bevorzugt</li></ul><li>Kurzlebiges KPI </li><ul><li>Clientseitige Berechnung</li></ul><li>Langlebiges KPI </li><ul><li>DWH-seitige Berechnung</li></ul></ul><p><strong>Notes:</strong></p><p><a href=\"#_ftnref1\" name=\"_ftn1\" data-mce-href=\"#_ftnref1\">[1]</a> Stored Procedures mit Teradata: <a href=\"http://www.info.teradata.com/HTMLPubs/DB_TTU_14_00/index.html#page/Load_and_Unload_Utilities/B035_2414_071A/2414ch03.014.37.html\" data-mce-href=\"http://www.info.teradata.com/HTMLPubs/DB_TTU_14_00/index.html#page/Load_and_Unload_Utilities/B035_2414_071A/2414ch03.014.37.html\">http://www.info.teradata.com/HTMLPubs/ DB_TTU_14_00/index.html#page/Load_and_Unload_Utilities/B035_2414_071A/2414ch03.014.37.html</a></p><p><a href=\"#_ftnref2\" name=\"_ftn2\" data-mce-href=\"#_ftnref2\">[2]</a> Table Functions: <a href=\"https://msdn.microsoft.com/en-us/library/ms186755.aspx\" data-mce-href=\"https://msdn.microsoft.com/en-us/library/ms186755.aspx\">https://msdn.microsoft.com/en-us/library/ms186755.aspx</a></p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-152__kpi_on_the_fly ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_adaptive_query_processing .
  
  :ProjectPhase_operational
          a           cont:ProjectPhase ;
          rdfs:label  "operational" .
  
  :DesignPattern_circuit_breaker
          a                              gen:DesignPattern ;
          rdfs:label                     "Circuit Breaker" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki , :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_safety , :ArchitecturalQuality_robustness , :ArchitecturalQuality_resilience , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_dependability ;
          gen:isAlternativeOf            :DesignTactic_failure_handling , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "Handle faults that may take a variable amount of time to rectify when connecting to a remote service or resource. This pattern can improve the stability and resiliency of an application. [MSDN Cloud Design Patterns 2014]" , "<p><strong>Circuit Braker Pattern</strong></p>\n<p>The basic idea behind the circuit breaker is very simple. You wrap a protected function call in a circuit breaker object, which monitors for failures. Once the failures reach a certain threshold, the circuit breaker trips, and all further calls to the circuit breaker return with an error, without the protected call being made at all. Usually you'll also want some kind of monitor alert if the circuit breaker trips.</p>\n<p>This simple circuit breaker (i.e., picture on the left hand side) avoids making the protected call when the circuit is open, but would need an external intervention to reset it when things are well again. This is a reasonable approach with electrical circuit breakers in buildings, but for software circuit breakers we can have the breaker itself detect if the underlying calls are working again. We can implement this self-resetting behavior by trying the protected call again after a suitable interval, and resetting the breaker should it succeed.</p>\n<table style=\"height: 48px;\" width=\"100%\">\n<tbody>\n<tr>\n<td><img src=\"http://martinfowler.com/bliki/images/circuitBreaker/sketch.png\" alt=\"\" width=\"200\" /></td>\n<td style=\"vertical-align: top;\">\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://martinfowler.com/bliki/images/circuitBreaker/state.png\" alt=\"\" width=\"200\" />Creating this kind of breaker means adding a threshold for trying the reset and setting up a variable to hold the time of the last error.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"figure\" style=\"position: relative;\">&nbsp;</div>\n<p>&nbsp;</p>" ;
          spec:hasPatternDomain          :Domain_web_services , :Domain_cloud_computing , :Domain_abstract , :Domain_software_ecosystems ;
          owl:sameAs                     dbr:Circuit_breaker_design_pattern .
  
  :Project_safiddle  a  cont:Project ;
          rdfs:label  "safiddle" .
  
  :DesignDecision_ad-017__core_services
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-017: Core Services" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\"><span style=\"font-size: small;\">Core Services</span></strong></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">The ecosystem provides a series of core services, which are published as regular APIs within the ecosystem. These core services provide governance, privacy, security, monitoring, and usage tracking functionality.</span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">The core services will work according to the following rules:</span></p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">The core services can be extended or overridden by third-party service providers specialized in the service being offered (e.g., security or privacy).</span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Core services must be reviewed and accredited by the ecosystem owner and/or operator.&nbsp;</span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Third party core service providers are encouraged to approach API publishers to the end of advertising their own version of the core service.</span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Depending on the offered service, API publishers will have to allow access to their own service via&nbsp;a policy-defined subset of the core services, e.g. monitoring and tracking service. Otherwise, their API will not be made available within the ecosystem. They may also invoke additional services, depending on their own needs (e.g., security and privacy), including accredited (or trusted) third-party core services.</span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">The mandatory core services thus act as proxies for the APIs for which they provide their service.</span>&nbsp;</li></ul>\n<p style=\"font-size: small;\"><span style=\"line-height: 20.8px; font-size: small;\">Requests to a particular API (service) thus go through a whole service stack, as depicted in the figure below. In this context, each layer may add additional pay per access fees, which ultimately must be payed by end users.</span></p>\n<p style=\"font-size: small;\"><span style=\"line-height: 20.8px; font-size: small;\"><img style=\"display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernES/core_components.png\" alt=\"\" width=\"650\" height=\"400\"></span></p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Example</span></strong></p>\n<p style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">A publisher wishes to publish APIx in the ecosystem. To do so,&nbsp;it must first grant access to the default monitoring and tracking services offered by the ecosystem. The API publisher may also choose from a list of accredited monitoring and tracking services, which are built on top of the default monitoring and tracking service of the ecosystem.</span></p>\n<p style=\"font-size: small;\"><span style=\"line-height: 20.8px; font-size: small;\">Next, the API publisher may select other services for e.g. security and privacy to enhance their own service. While default security and privacy services are provided by the ecosystem, the API publisher may also choose a third party service build on top of the default services for security and privacy.&nbsp;</span></p><p style=\"font-size: small;\"><b>Additive Cost Model</b></p><p style=\"font-size: small;\"><span style=\"line-height: 20.8px; font-size: small;\">While there is a default cost for using security services, which is automatically billed by the ecosystem, the third party service may add to the price of the default security service for the additional features is offers. Thus, a market for every type of core service is created.&nbsp;</span></p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-021__privacy_monitoring , :Domain_ar-024__data_and_process_auditing , :Domain_ar-003__traffic_monitoring , :Domain_ar-013__data_access_control , :Domain_ar-025__perceived_resillience , :Domain_ar-015__usage_tracking___monitoring , :Domain_ar-007__policy_enforcement , :Domain_ar-016__external_service_integration , :Domain_ar-004__api_protection , :Domain_ar-014__api_access_control ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_auditability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_accountability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_functionality , :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_core_services .
  
  :ArchitecturalQuality_immunity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Immunity" , "immunity" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_federated_identity_pattern , :DesignTactic_encryption , :DesignPattern_secure_channels , :DesignPattern_valet_key_pattern , :DesignPattern_identity_credentials , :DesignPattern_message_federation , :DesignPattern_exception_shielding , :DesignPattern_message_validation , :DesignPattern_connection_limitation , :DesignPattern_known_partners , :DesignPattern_information_obscurity , :DesignTactic_authorization , :DesignTactic_authentication , :DesignPattern_private_key_encryption , :DesignTactic_keep_consistent , :DesignPattern_minimize_human_intervention , :DesignTactic_message_protection , :DesignPattern_packet_filtering , :DesignPattern_demilitarized_zone__dmz_ , :DesignTactic_limit_access , :DesignPattern_public_key_encryption , :DesignPattern_resource_pooling , :DesignPattern_replay_protection , :DesignPattern_access_control , :DesignPattern_gatekeeper_pattern ;
          gen:relatedQuality       :ArchitecturalQuality_unknown ;
          gen:wikiEntry            "Immunity is what the application does to protect itself from undesired use[Hull 2014]. Immunity-aware programming refers to programming techniques which improve the tolerance of transient errors in the program counter or other modules of a program that would otherwise lead to failure [Kaur and Sharma 2014]pp. 534.  Relations Immunity can be enebled by Encryption (encoding messages and information so that it only can be read by certain people) Limit Access which provides access to Information only for certain prople provide message-based security by using the Message Protection-Tactic letting Authentication authenticate all users before accessing information and ensuring that a user or an entity has the right to acces the information with the Authentication Tactic." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignDecision_kdd-01
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-01" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Service-orientierte Schichtenarchitektur</strong></span></p><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Das System baut auf eine Serviceorientierte Architektur mit drei Funktionsschichten auf (siehe Abbildung unten):</span></p><ul><li><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><em>Datenschicht</em>&nbsp;- besteht aus den ETL-Komponenten, die Datenhaltung und die Data-API zur Datenabfrage aus der DWH. Aufgrund der bestehenden DWH-Architektur, wird die Datenschicht in drei weitere Schichten unterteilt.</span><br></li><li><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><em>Verarbeitungsschicht</em>&nbsp;<em>(Business Logik)</em>&nbsp;- besteht aus den Komponenten, deren Funktion auf der Datenschicht beruht und die zur Verarbeitung der aus dem DWH abgerufenen Daten diene. Desweiteren ist es Aufgabe der Komponenten aus dieser Schicht, vordefinierte Reports zu generieren sowie Teile der explorativen Analyse zu ermöglichen. Dabei werden die Abfragefilter geparst und dementsprechend Abfragen an die Datenschicht weitergeleitet. Externe Tools, wie etwa der Analytics Server, werden auch dieser Schicht zugeordnet und von Fassadeklassen gekapselt (siehe auch KDD-22 und Abbildung 6).</span><br></li><li><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><em>Visualisierungsschicht</em>&nbsp;- besteht aus Komponenten, die zur Visualisierung der über die Verarbeitungsschicht abgefragten Daten, dienen. Hier wird bevorzugterweise keine komplexe Verarbeitung getätigt sondern nur für die Visualisierung notwendige Aufgaben.</span></li></ul><div style=\"text-align: center; position: relative;\" data-mce-style=\"text-align: center;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><img src=\"https://workspace.cee.siemens.com/content/00000102/saFiddle/p/AspernBM/Systemkomponenten_v2.png\" alt=\"\" width=\"582\" height=\"665\" data-mce-src=\"p/AspernBM/Systemkomponenten_v2.png\"></span></div><div style=\"text-align: center; position: relative;\" data-mce-style=\"text-align: center;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Abbildung 1:</strong>&nbsp;Komponentensicht</span></div><table style=\"border-color: #f0f0f0; margin-left: auto; margin-right: auto;\" border=\"1px\" cellspacing=\"0\" cellpadding=\"5\" data-mce-style=\"border-color: #f0f0f0; margin-left: auto; margin-right: auto;\"><caption><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">&nbsp;</span></caption><tbody><tr style=\"background-color: #f0f0f0;\" data-mce-style=\"background-color: #f0f0f0;\"><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Komponente</strong></span></p></td><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Beschreibung</strong></span></p></td></tr><tr><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Data Warehouse (DWH)</span></p></td><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Zentrale Datenbank, in der alle aus verschiedenen Quellen (Smart Grid, Smart Buildings, ...) kommenden Daten gespeichert werden.</span></p></td></tr><tr><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Data API</span></p></td><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Programmierschnittstelle zur Bereitstellung von Daten für die Weiterverarbeitung in den höheren Architekturschichten.</span></p></td></tr><tr><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Analytics Services</span></p></td><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Analysesoftware und Programmierschnittstelle zur Durchführung statistischer Analysen.</span></p></td></tr><tr><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Astpern Erweiterungen (AE)</span></p></td><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Business Logik und Programmierschnittstelle für die Verarbeitung der über die Data API abgerufenen Daten hinsichtlich der Visualisierung.&nbsp;</span></p></td></tr><tr><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Zusätzliche Visualisierung (ZV)</span></p></td><td width=\"317\"><p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\" data-mce-style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Web-basierte Benutzeroberfläche und graphische Visualisierungen (Charts) der Messdaten und KPIs.</span></p></td></tr></tbody></table>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-164__modularity , :Domain_ar-101__dwh_querying , :Domain_ar-153__scalability , :Domain_ar-102__tool_integration ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_replaceability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_modularity , :ArchitecturalQuality_scalability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_replaceability ;
          spec:useDecisionTactic          :DesignTactic_modularization , :DesignTactic_loose_coupling , :DesignTactic_layering .
  
  :DesignPattern_architectural_requirements_questionnaire
          a                              gen:DesignPattern ;
          rdfs:label                     "Architectural Requirements Questionnaire" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_edwin_willegger ;
          gen:hasKnowledgeProject        :Project_requirements , :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_adaptability , :ArchitecturalQuality_stability , :ArchitecturalQuality_testability , :ArchitecturalQuality_availability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_usability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_installability , :ArchitecturalQuality_performance , :ArchitecturalQuality_portability , :ArchitecturalQuality_functionality , :ArchitecturalQuality_security , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_configurability , :ArchitecturalQuality_consistency , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_accessibility ;
          gen:isAlternativeOf            :DesignTactic_bridge , :DesignTactic_questionnaire ;
          gen:wikiEntry                  "<div id=\"ibm-leadspace-head\"><div id=\"ibm-leadspace-body\"><h1>Appendix C: Sample Architectural Requirements Questionnaire</h1>\n\t</div>\n\t<!-- LEADSPACE_BODY_END --> \n\t<!-- SUMMARY_BEGIN -->\n\t<div id=\"dw-summary-area\" class=\"dw-summary-columns\">\n\t\t<div class=\"ibm-col-6-4\">\n\t\t<p>from The Rational Edge: Appendix C for the article \"Capturing Architectural Requirements,\" at http://www.ibm.com/developerworks/rational/library/4706.html</p>\n\t\t<p class=\"ibm-no-print ibm-ind-link\">\n\n\t\t\t<a class=\"ibm-pdf-link\" href=\"http://www.ibm.com/developerworks/rational/library/4710-pdf.pdf\" target=\"_blank\">PDF<span class=\"ibm-item-note\"> (206KB)</span></a> (206 KB) <span class=\"dw-summary-bar\">|</span>\n\t\t\t<span id=\"nCmts\"><span>0</span><img class=\"dw-cmts-arrow\" alt=\"\" src=\"http://dw1.s81c.com/developerworks/i/v17/dw-cmts-arrow.png\" height=\"7\" width=\"7\"> <a href=\"http://www.ibm.com/developerworks/rational/library/4710.html#icomments\" class=\"dw-cmt-link\" target=\"_blank\">Comments</a></span>\n\t\t</p>\n\t\t    <div id=\"dw-social-tools-container\" aria-hidden=\"true\"><span class=\"dw-social-lead-in\">Share:</span><div id=\"dw-ibm-social-tools\" style=\"display: block;\"><ul role=\"toolbar\" aria-label=\"Social tool list\"><li style=\"display: none;\"><a class=\"ibm-share-print\" title=\"Print this page\" href=\"http://www.ibm.com/developerworks/rational/library/4710.html#\" rel=\"print\" dojoattrid=\"0\" role=\"button\" tabindex=\"0\" target=\"_blank\">Print this page</a></li><li style=\"display: none;\"><a class=\"ibm-share-email\" title=\"E-mail this page\" href=\"http://www.ibm.com/developerworks/rational/library/4710.html#\" rel=\"email\" dojoattrid=\"1\" role=\"button\" tabindex=\"-1\" target=\"_blank\">E-mail this page</a></li><li style=\"display: none;\"><a class=\"ibm-share-digg\" title=\"Digg\" href=\"http://digg.com/submit?phase=2&amp;url=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Frational%2Flibrary%2F4710.html&amp;title=Appendix%20C%3A%20Sample%20Architectural%20Requirements%20Questionnaire\" rel=\"digg\" dojoattrid=\"2\" role=\"button\" tabindex=\"-1\" target=\"_blank\">Digg</a></li><li><a class=\"ibm-share-facebook\" title=\"Facebook\" href=\"javascript:void(0)\" rel=\"facebook\" dojoattrid=\"3\" role=\"button\" tabindex=\"-1\" onclick=\"trkOBL('http%3A//www.facebook.com/sharer.php%3Fu%3Dhttp%253A%252F%252Fwww.ibm.com%252Fdeveloperworks%252Frational%252Flibrary%252F4710.html%26t%3DAppendix%2520C%253A%2520Sample%2520Architectural%2520Requirements%2520Questionnaire','dwShare-A-facebook');\" target=\"_blank\">Facebook</a></li><li><a class=\"ibm-share-twitter\" title=\"Twitter\" href=\"javascript:void(0)\" rel=\"twitter\" dojoattrid=\"4\" role=\"button\" tabindex=\"-1\" onclick=\"trkOBL('http%3A//twitter.com/%3Fstatus%3DAppendix%2520C%253A%2520Sample%2520Architectural%2520Requirements%2520Questionnaire%2520http%3A//ibm.co/1vjWqzV via IBM @developerWorks','dwShare-A-twitter');\" target=\"_blank\">Twitter</a></li><li style=\"display: none;\"><a class=\"ibm-share-delicious\" title=\"Delicious\" href=\"http://delicious.com/post?url=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Frational%2Flibrary%2F4710.html&amp;title=Appendix%20C%3A%20Sample%20Architectural%20Requirements%20Questionnaire\" rel=\"delicious\" dojoattrid=\"5\" role=\"button\" tabindex=\"-1\" target=\"_blank\">Delicious</a></li><li><a class=\"ibm-share-linkedin\" title=\"Linked In\" href=\"javascript:void(0)\" rel=\"linkedin\" dojoattrid=\"6\" role=\"button\" tabindex=\"-1\" onclick=\"trkOBL('http%3A//www.linkedin.com/shareArticle%3Fmini%3Dtrue%26url%3Dhttp%253A%252F%252Fwww.ibm.com%252Fdeveloperworks%252Frational%252Flibrary%252F4710.html%26title%3DAppendix%2520C%253A%2520Sample%2520Architectural%2520Requirements%2520Questionnaire','dwShare-A-linkedin');\" target=\"_blank\">Linked In</a></li><li style=\"display: none;\"><a class=\"ibm-share-stumble\" title=\"Stumbleupon\" href=\"http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Frational%2Flibrary%2F4710.html&amp;title=Appendix%20C%3A%20Sample%20Architectural%20Requirements%20Questionnaire\" rel=\"stumble\" dojoattrid=\"7\" role=\"button\" tabindex=\"-1\" target=\"_blank\">Stumbleupon</a></li><li><a class=\"ibm-share-googleplus\" title=\"Google+\" href=\"javascript:void(0)\" rel=\"googleplus\" dojoattrid=\"8\" role=\"button\" tabindex=\"-1\" onclick=\"trkOBL('https%3A//plus.google.com/share%3Furl%3Dhttp%253A%252F%252Fwww.ibm.com%252Fdeveloperworks%252Frational%252Flibrary%252F4710.html%26t%3DAppendix%2520C%253A%2520Sample%2520Architectural%2520Requirements%2520Questionnaire','dwShare-A-googleplus');\" target=\"_blank\">Google+</a></li></ul></div></div>\n\t\t</div>\n\t\t<div class=\"ibm-col-6-2 dw-toc-margin\">\n\t\t\t<p class=\"dw-summary-author\"><a href=\"http://www.ibm.com/developerworks/rational/library/4710.html#authorN1001C\" class=\"ibm-popup-link\" onclick=\"ibmweb.overlay.show('authorN1001C',this);return false;\" role=\"button\" target=\"_blank\">Peter Eeles</a>, Senior IT Architect, IBM</p>\n<div id=\"authorN1001C\" class=\"ibm-common-overlay\"><div class=\"ibm-head\"><p><a href=\"http://www.ibm.com/developerworks/rational/library/4710.html#close\" class=\"ibm-common-overlay-close\" target=\"_blank\">Close [x]</a></p></div><div class=\"ibm-body\"><div class=\"ibm-main\"><div class=\"ibm-title\"><!--this is where the h2 usually\n                                    goes--></div><div class=\"ibm-container ibm-alternate\"><div class=\"ibm-container-body\">\n<p><!--.-->\n<img class=\"dw-summary-bio-image-x64\" alt=\"Author Photo\" hspace=\"3\" name=\"Author photo\" src=\"http://www.ibm.com/developerworks/rational/library/content/Authors/A-F/eeles.jpg\" vspace=\"3\" width=\"64\"></p><p>Peter Eeles has over 15 years experience developing software solutions, and has spent the majority of this time architecting and implementing large-scale distributed systems, culminating in the writing of his first book entitled  (John Wiley and Sons).  Peter works as a Process Consultant for IBM Rational (UK), and is the Rational Architecture Practice representative for Northern Europe. In his spare time, Peter enjoys bike racing and playing jazz guitar, although not at the same time.</p><p></p><br><br></div></div></div></div><div class=\"ibm-footer\"><!----></div></div>\n\t\t\t<p class=\"dw-summary-date\">30 April 2004</p>\n\t\t\t\n\t\t\t\t<p></p>\n\n\t\t\t<div aria-hidden=\"true\" class=\"ibm-container\" id=\"dw-toc\"><div class=\"ibm-container-body\"><ul class=\"ibm-twisty\"><li><a href=\"http://www.ibm.com/developerworks/rational/library/4710.html#toggle\" class=\"ibm-twisty-trigger ibm-twisty-trigger-closed\" target=\"_blank\"><img src=\"http://www.ibm.com/i/c.gif\" alt=\"+\"></a><span class=\"ibm-twisty-head\">Table of contents</span><div class=\"ibm-twisty-body\" style=\"display: none;\"><ul style=\"font-size:0.8em\" class=\"ibm-link-list\">\n<li><a class=\"ibm-anchor-down-em-link\" href=\"http://www.ibm.com/developerworks/rational/library/4710.html#icomments\" target=\"_blank\">Comments</a></li></ul></div></li></ul></div></div>\n\t\t</div>\n\t</div>\n\t<!-- SUMMARY_END -->\n</div><div id=\"ibm-pcon\">\n\n<!-- BEGIN_IBM-CONTENT -->\n<div id=\"ibm-content\">\n\n<!-- BEGIN_IBM-CONTENT-BODY -->\n<div id=\"ibm-content-body\">\n\n<!-- BEGIN_IBM-CONTENT-MAIN -->\n<div id=\"ibm-content-main\">\n\n<!-- 1_1_COLUMN_BEGIN -->\n<div class=\"ibm-columns\">\n<div class=\"ibm-col-1-1\"><div class=\"dw-article-sidebar dw-bluemix\" id=\"dwc-exp-a\"><img src=\"http://dw1.s81c.com/developerworks/i/bluemix-graphic.png\" height=\"64\" width=\"64\" alt=\"\"><p>Develop and deploy your next<br>app on the IBM Bluemix<br>cloud platform.</p><p class=\"ibm-button-link-alternate dw-button-green\"><a id=\"tutc-sbar-bmix-home-btn-ABa\" href=\"https://developer.ibm.com/sso/bmregistration?lang=en_US&amp;ca=dw-_-bluemix-_-rational-4710-_-sidebar\" class=\"dw-button-large\" onclick=\"trkOBL('https://developer.ibm.com/sso/bmregistration?lang=en_US&amp;ca=dw-_-bluemix-_-rational-4710-_-sidebar','tutc-sbar-bmix-home-btn-ABa'); return false;\" target=\"_blank\">Start your free trial</a></p></div>\n\n<p>From \"<a href=\"http://www.ibm.com/developerworks/rational/library/4706.html\" target=\"_blank\">Capturing Architectural Requirements</a>\" </p><p>\n\t\t\t\t\tThis section contains a sample Architectural Requirements Questionnaire. The examples shown here exclude the <a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#qa\" target=\"_blank\">answer and priority columns</a>, which are discussed in the main body of my article.\n\t\t\t\t</p><p>\n\t\t\t\t\tThis questionnaire also groups together related items that were previously categorized in separate sections. Consider all aspects of auditing, for example. Auditing manifests itself as a functionality requirement (Is audit capability required?), supportability requirement (What level of auditing is needed?) and design requirement (Are there any design constraints on the mechanism used to provide audit capability?). Such requirements tend to be related to particular analysis mechanisms and are therefore grouped together in the \"Analysis Mechanisms\" section.\n\t\t\t\t</p><h5 id=\"N10052\">Analysis Mechanisms</h5><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th></th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" class=\"ibm-data-table\"><thead><tr><th bgcolor=\"#ffcc99\">Requirement</th><th bgcolor=\"#ffcc99\">Questions</th><th bgcolor=\"#ffcc99\">Impact</th></tr></thead><tbody><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Auditing</strong></p><p>Functionality</p><p>Supportability</p><p>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Is audit capability required?</p><p>What level of auditing is needed?</p><p>Are there any constraints on the mechanism used to provide audit capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the audit mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Authentication</strong></p><p>Functionality</p><p><br>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Is there any requirement for authentication?</p><p>Are there any constraints on the mechanism used to provide authentication capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the authentication mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Communication</strong></p><p>Functionality</p><p><br>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Will inter-process communication be required?</p><p>Are there any constraints on the mechanism used to provide communication capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the communication mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Error management</strong></p><p>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><br>Are there any constraints on the mechanism used to provide error management capability?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the error management mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Event management</strong></p><p>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><br>Are there any constraints on the mechanism used to provide event management capability?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the event management mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Licensing</strong></p><p>Functionality</p><p><br>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Will the system, or parts of the system, be licensed?</p><p>Are there any constraints on the mechanism used to provide licensing capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the licensing mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Localization</strong></p><p>Functionality</p><p><br>Supportability</p><p><br>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Does the system need to support multiple human languages?</p><p>Which human languages need to be supported?</p><p>Are there any constraints on the mechanism used to provide localization capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater \n                        the sophistication of the localization mechanism, the \n                        longer the time to market, and the greater the long-term \n                        maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Online help</strong></p><p>Functionality</p><p>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Will online help be required?</p><p>Are there any constraints on the mechanism used to provide online help?\t</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the online help mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Persistence</strong></p><p>Functionality</p><p>;</p><p>;</p><p>;</p><p>Design requirement\t</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Will data manipulated by the system be written to disk? Are both shared persistent data and user-specific persistent data required? <br>Will shared persistent data need to be made available to a \"traveling\" user who is working offline?</p><p>Are there any constraints on the mechanism used to provide persistence?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the persistence mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Printing</strong></p><p>Functionality</p><p>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Is printing capability required?</p><p>Are there any constraints on the mechanism used to provide printing capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the printing mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Reporting</strong></p><p>Functionality</p><p>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Is reporting capability required?</p><p>Are there any constraints on the mechanism used to provide reporting capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the reporting mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Scheduling</strong></p><p>Functionality</p><p><br>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Will certain system actions need to be scheduled?</p><p>Are there any constraints on the mechanism used to provide scheduling capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the scheduling mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Security</strong></p><p>Functionality</p><p><br>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Will elements of the system need to be secure?</p><p>Are there any constraints on the mechanism used to provide security capability?\t</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the security mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Transaction management</strong></p><p>Functionality</p><p><br>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><br><p>Will transactional capability be required?</p><p>Are there any constraints on the mechanism used to provide transactional capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the transaction management mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><p><strong>Workflow</strong></p><p>Functionality</p><p><br>Design requirement</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\"><p>;</p><p>Will movement of organizational units of work be required?</p><p>Are there any constraints on the mechanism used to provide workflow capability?</p></td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the workflow mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td></tr></tbody></table></td></tr></tbody></table><h3 id=\"N101E9\">Functionality </h3><p>All functional requirements are addressed in the \"Analysis Mechanisms\" section above.</p><h5 id=\"N101F8\">Usability</h5><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th></th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" class=\"ibm-data-table\"><thead><tr><th bgcolor=\"#ffcc99\">Requirement</th><th bgcolor=\"#ffcc99\">Questions</th><th bgcolor=\"#ffcc99\">Impact</th></tr></thead><tbody><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Accessibility</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements that relate to the ease with which the system can be exercised (including by novice users)?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the accessibility, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Aesthetics</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements regarding the \"look and feel\" of the system?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the aesthetic appeal, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Consistency</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements regarding the consistency of the user interface, both within the system and with other systems?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the level of consistency, the longer the time to market.</td></tr></tbody></table></td></tr></tbody></table><h5 id=\"N10246\">Reliability</h5><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th></th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" class=\"ibm-data-table\"><thead><tr><th bgcolor=\"#ffcc99\">Requirement</th><th bgcolor=\"#ffcc99\">Questions</th><th bgcolor=\"#ffcc99\">Impact</th></tr></thead><tbody><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Accuracy</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there particular constraints on the accuracy of any calculations to be performed by the system?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the level of accuracy, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Availability</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any requirements regarding system \"up time\"? This may be specified in terms of Mean Time Between Failures.</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The higher the availability, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Recoverability</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements regarding recovery from a system failure?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the level of recoverability, the longer the time to market.</td></tr></tbody></table></td></tr></tbody></table><h5 id=\"N10294\">Performance</h5><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th></th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" class=\"ibm-data-table\"><thead><tr><th bgcolor=\"#ffcc99\">Requirement</th><th bgcolor=\"#ffcc99\">Questions</th><th bgcolor=\"#ffcc99\">Impact</th></tr></thead><tbody><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Recovery time</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any requirements on the time the system takes to recover from a system failure?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The shorter the recovery time, the more sophisticated the recovery mechanism and the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Response time</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any constraints on the time the system takes to respond to particular events, such as user interaction?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The shorter the response time, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Shutdown time</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any requirements on the time the system takes to shut down?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The shorter the shutdown time, the more sophisticated the shutdown mechanism and the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Start-up time</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any requirements on the time it takes the system to start up?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The shorter the start-up time, the more sophisticated the start-up mechanism and the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Throughput</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements regarding throughput of data supported by the system?\t</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the throughput of data, the longer the time to market.</td></tr></tbody></table></td></tr></tbody></table><h5 id=\"N102FE\">Supportability</h5><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th></th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" class=\"ibm-data-table\"><thead><tr><th bgcolor=\"#ffcc99\">Requirement</th><th bgcolor=\"#ffcc99\">Questions</th><th bgcolor=\"#ffcc99\">Impact</th></tr></thead><tbody><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Adaptability</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements regarding adaptation of the software (including upgrading)?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the system's adaptability, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Compatibility</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any requirements regarding this system and its compatibility with previous versions of this system or legacy systems providing the same capability?\t</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the compatibility, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Configurability</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Will the product be configured after it has been deployed? In what way will the system be configured? </td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the configurability of the system, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Installability</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements regarding system installation?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the installability of the system, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Maintainability</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements regarding system maintenance?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the maintainability of the system, the longer the time to market. The trade-off is between time to market of the first release of the system, and any subsequent releases.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Scalability</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">What volumes of users and data will the system support? This may be expressed as a profile over time.</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the scalability of the system, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Testability</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any special requirements regarding the testability of the system, such as testing \"hooks\" that allow integration with a testing tool?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the testability of the system, the longer the time to market.</td></tr></tbody></table></td></tr></tbody></table><h3 id=\"N1037D\">Design Requirement</h3><p>All design requirements are addressed in the \"Analysis Mechanisms\" section above.</p><h5 id=\"N1038C\">Implementation Requirement</h5><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th></th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" class=\"ibm-data-table\"><thead><tr><th bgcolor=\"#ffcc99\">Requirement</th><th bgcolor=\"#ffcc99\">Questions</th><th bgcolor=\"#ffcc99\">Impact</th></tr></thead><tbody><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Third-party \n                        components</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there \n                        any constraints (including cost) on the use of third-party \n                        components in the system?<br><br>\n                        How important is it for the system to be vendor independent, \n                        in terms of the third-party components it uses?<br><br>\n                        Are there any approved relevant alliances with third- \n                        party vendors? </td><td bgcolor=\"#FFFFFF\" valign=\"top\">The more \n                        third-party components used, the shorter the time to market. \n                        Also, the system is likely to be more maintainable because \n                        these components are effectively subcontracted.<br><br>Existing alliances typically remove the need for contractual negotiations, thereby improving time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Implementation languages</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any constraints on the programming languages used to develop the system?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">Specification of particular programming languages must be reconciled with tool support and available skills. Time to market is increased if either tools or skills are unavailable.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Platform support</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">What platforms must the system support? Which operating system versions must be supported?<br><br>Is Web access required? If so, then which Web browsers and versions must be supported?<br><br>Will the system be ported to new platforms in the future (over and above those explicitly stated for the system)?\t</td><td bgcolor=\"#FFFFFF\" valign=\"top\">Development for a single platform shortens the time to market. It also allows closer integration with platform features.<br><br>Development for multiple platforms lengthens the time to market. Close integration with platform features is lessened, increasing system maintenance. However, deployment on new platforms is quicker.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Resource limits</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any limits on the use of system resources, such as memory or hard disk space?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The more \n                        constrained the available resources, the more efficient \n                        resource use is required. This increases time to market \n                        and lessens maintainability.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Standards compliance\t</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any standards to which the system must conform? This may include coding standards or a user interface style guide.</td><td bgcolor=\"#FFFFFF\" valign=\"top\">Use of available standards can decrease time to market and improve consistency in a number of system areas.</td></tr></tbody></table></td></tr></tbody></table><h5 id=\"N10408\">Interface Requirement</h5><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th></th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" class=\"ibm-data-table\"><thead><tr><th bgcolor=\"#ffcc99\">Requirement</th><th bgcolor=\"#ffcc99\">Questions</th><th bgcolor=\"#ffcc99\">Impact</th></tr></thead><tbody><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>External systems</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any external systems with which this system must interface? Consider both provided and required interfaces.</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the interface to external systems, the longer the time to market, and the greater the long-term maintenance cost.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Interface formats</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any constraints on the nature of the interface between this system and any external system, such as the format of data passed between these systems, and any particular protocol used?\t</td><td bgcolor=\"#FFFFFF\" valign=\"top\">The greater the sophistication of the format of interfaces, the longer the time to market, and the greater the long-term maintenance cost.</td></tr></tbody></table></td></tr></tbody></table><h5 id=\"N10448\">Physical Requirement</h5><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th></th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" class=\"ibm-data-table\"><thead><tr><th bgcolor=\"#ffcc99\">Requirement</th><th bgcolor=\"#ffcc99\">Questions</th><th bgcolor=\"#ffcc99\">Impact</th></tr></thead><tbody><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Shape</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any constraints on the shape of the hardware used to house the resulting system?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">Constraints on the shape of the hardware may impose a specification of physical devices required by the system, such as storage devices or printers. The more constrained the hardware, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Size</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any constraints on the size of the hardware used to house the resulting system?\t</td><td bgcolor=\"#FFFFFF\" valign=\"top\">Constraints on the size of the hardware may impose a specification of physical devices required by the system, such as storage devices or printers. The more constrained the hardware, the longer the time to market.</td></tr><tr><td bgcolor=\"#FFFFFF\" valign=\"top\"><strong>Weight</strong></td><td bgcolor=\"#FFFFFF\" valign=\"top\">Are there any constraints on the weight of the hardware used to house the resulting system?</td><td bgcolor=\"#FFFFFF\" valign=\"top\">Constraints on the weight of the hardware may impose a specification of physical devices required by the system, such as storage devices or printers. The more constrained the hardware, the longer the time to market.</td></tr></tbody></table></td></tr></tbody></table><!--CMA ID: 87625--><!--Site ID: 1--><!--XSLT stylesheet used to transform this file:\n        dw-document-html-7.0.xsl-->\n\n\n</div>\n</div>\n<!-- 1_1_COLUMN_END -->\n\n<!-- SPLIT_COLUMNS_BEGIN -->\n<div class=\"ibm-columns\">\n\n<!-- 6_4_COLUMN_BEGIN -->\n<div class=\"ibm-col-6-4\">\n\n\n\n<!-- INLINE_COMMENTS_BEGIN -->\n<h2 id=\"icomments\" class=\"ibm-alternate-rule ibm-no-print\"></h2></div></div></div></div></div></div>" ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_any .
  
  :ArchitecturalQuality_utility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Utility" , "utility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_identity_credentials , :DesignPattern_bulk_synchronous_parallel , :DesignPattern_fire_and_forget , :DesignPattern_error_containment_barrier , :DesignTactic_barrier-free_access , :DesignPattern_caching , :DesignPattern_temporal_analytics , :DesignPattern_scatter_and_gather , :DesignPattern_singleton , :DesignPattern_fault_correlation , :DesignPattern_leaky_bucket_counter , :DesignPattern_sharding_pattern , :DesignPattern_partitioning , :DesignPattern_riding_over_transients , :DesignPattern_application_server_architecture , :DesignTactic_parallel_computing , :DesignPattern_queue_for_resources , :DesignPattern_treshold_analysis , :DesignPattern_flyweight , :DesignPattern_resource_allocation , :DesignPattern_publish_subscribe , :DesignPattern_mirror , :DesignPattern_pipe_and_filter , :DesignPattern_interpretor , :DesignPattern_recovery_blocks , :DesignPattern_reliable_sessions , :DesignPattern_execution_orchestrator , :DesignPattern_indiviuals_decide_timing , :DesignPattern_observer , :DesignPattern_delightfully_parallel_loop , :DesignPattern_correcting_audits , :DesignPattern_routine_exercises , :DesignPattern_fork_and_join , :DesignPattern_lock , :DesignPattern_limit_retries , :DesignPattern_tenant-isolated_component , :DesignPattern_operational_monitoring_and_alerting , :DesignTactic_error_detection , :DesignPattern_realistic_threshold , :DesignPattern_static_content_hosting_pattern , :DesignPattern_priority_queue_pattern , :DesignPattern_replication , :DesignPattern_maximize_human_participation , :DesignPattern_competing_consumers , :DesignPattern_pipes_and_filters_pattern , :DesignPattern_parameter_checking , :DesignPattern_peripheral_specialist_elements , :DesignPattern_similarity_detection , :DesignPattern_acknowledgement , :DesignPattern_map_reduce , :DesignTactic_synchronous_communication , :DesignTactic_queueing , :DesignPattern_request_response , :DesignTactic_accounting , :DesignPattern_voting , :DesignPattern_3-category_logging , :DesignPattern_queue-based_load_leveling_pattern , :DesignPattern_reflection , :DesignPattern_heartbeat , :DesignPattern_routine_maintenance , :DesignPattern_someone_in_charge , :DesignPattern_existing_metrics , :DesignTactic_dynamic_binding , :DesignTactic_white-box_testing , :DesignTactic_no_single_point_of_failure , :DesignPattern_event_sourcing_pattern , :DesignPattern_watchdog , :DesignTactic_multitenancy , :DesignPattern_checksum , :DesignPattern_deferrable_work , :DesignPattern_shared_component , :DesignPattern_queuing , :DesignPattern_duplex_messaging , :DesignTactic_asynchronous_communication , :DesignTactic_scheduling , :DesignPattern_load_balancing , :DesignPattern_routine_audits , :DesignPattern_shared_space , :DesignPattern_dedicated_component , :DesignPattern_claim_check , :DesignTactic_load_distribution ;
          gen:relatedQuality       :ArchitecturalQuality_usability ;
          gen:wikiEntry            "[Jaspreet Singh 2009]Utility refers to the ability of the product to perfrom tasks." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_treshold_analysis
          a                              gen:DesignPattern ;
          rdfs:label                     "Treshold Analysis" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_recoverability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_availability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_utility , :ArchitecturalQuality_integrity , :ArchitecturalQuality_resilience , :ArchitecturalQuality_safety , :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "Threshold analysis can be applied to indentify values or data items that do not comply with the norm. Statistical analysis and regression models can be applied identify the norm and standard deviation.[Dictionary Central Treshold Analysis [date unknown]]Treshold analysis is astudy of cost-effectiveness or cost-utility analysis study of a project in which estimates are made of the maximum costs or minimum benefits that would have to be yielded by a technology if it were to meet a predetermined threshold (minimum for acceptability) incremental cost-effectiveness ratio." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_parallel_computing
          a                             gen:DesignTactic ;
          rdfs:label                    "parallel computing" , "Parallel Computing" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility , :ArchitecturalQuality_automatibility ;
          gen:wikiEntry                 "In general parallel computing is a form of computation in which many calculations are carried out simultaneously.Parallel computing as a design tactic emphasizesthe principle that large problems can often be divided into smaller ones which are then solved concurrently (in parallel) e.g. by worker node.  The actual processof convertingsequential processing to parallel processing is usually referred to as parallelization. Usually sequential code is being multithreaded or vectorized (or even both) in order to utilize multiple processors (or cores). Usually the goal is to reduce execution time or enable large-scale computing at all." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_message_bridge
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Bridge" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_message_channeling ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_rollback
          a                              gen:DesignPattern ;
          rdfs:label                     "Rollback" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_maturity , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_survivability , :ArchitecturalQuality_safety , :ArchitecturalQuality_viability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_availability , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_limit_access ;
          gen:wikiEntry                  "<h2 style=\"text-align:justify\"><a name=\"_Toc421874391\" href=\"https://workspace.cee.siemens.com/content/00000102/saFiddle/sad/WAN_Enabled_Client.htm\" target=\"_blank\"><span lang=\"EN-US\">Option 1: Minimal porting of ‘Reporting Functionality’ to Web Client</span></a></h2>\n\n<p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;\">In this option, only key\nfunctionalities for WAN Enabled Reporting will be brought in to Web client. The\nfunctionalities and existence of Reporting client will remain unaltered.</span></p>\n\n<p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-family:&quot;Arial&quot;,&quot;sans-serif&quot;\">The key functionalities that need to\nbe brought in to web client are:</span></p>\n\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin-left:18.0pt;text-align:justify;\ntext-indent:-18.0pt\"><span lang=\"EN-US\">A.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;\n</span></span><span lang=\"EN-US\">Patient Browser:</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align:justify;text-indent:-18.0pt\"><span lang=\"EN-US\">1.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Report Status Change</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify;\ntext-indent:-18.0pt\"><span lang=\"EN-US\">B.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;\n</span></span><span lang=\"EN-US\">Viewer:</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align:justify;text-indent:-18.0pt\"><span lang=\"EN-US\">1.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Save operation</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align:justify;text-indent:-18.0pt\"><span lang=\"EN-US\">2.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Mammo license related functionalities</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align:justify;text-indent:-18.0pt\"><span lang=\"EN-US\">3.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Warning Message for Late Image Arrival</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify\"><span lang=\"EN-US\">&nbsp;</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:0cm;text-align:justify\"><b><span lang=\"EN-US\">Pros:</span></b></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify;\ntext-indent:-18.0pt\"><span lang=\"EN-US\">1.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;\n</span></span><span lang=\"EN-US\">Relatively low risk – since this is an extension\nof the current design</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify;\ntext-indent:-18.0pt\"><span lang=\"EN-US\">2.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;\n</span></span><span lang=\"EN-US\">Relatively lower effort for the current version</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify\"><span lang=\"EN-US\">&nbsp;</span></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:0cm;text-align:justify\"><b><span lang=\"EN-US\">Cons:</span></b></p>\n\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:18.0pt;text-align:justify;\ntext-indent:-18.0pt\"><span lang=\"EN-US\">1.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;\n</span></span><span lang=\"EN-US\">Technical debt will continue (and increase)\nfurther to future versions</span></p>\n\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:18.0pt;text-align:justify;\ntext-indent:-18.0pt\"><span lang=\"EN-US\">2.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;\n</span></span><span lang=\"EN-US\">Testing effort will increase since Reporting\nfeature will have to be tested on Web client as well as reporting client</span></p>" , "A rollback is an operation which returns to a previously stored state. The underlying assumption is that (1) checkpoints are defined where the systems state is stored and (2) the system is able to restore to these checkpoints (recovery).  Consequently once an error occurs the systems state is reverted to prior checkpoint [Hanmer 2007]pp 154-155.  Relations Error Handling [Hanmer 2007]pp 154-155." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_secure_channels
          a                              gen:DesignPattern ;
          rdfs:label                     "Secure channels" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_immunity , :ArchitecturalQuality_scalability , :ArchitecturalQuality_security , :ArchitecturalQuality_privacy , :ArchitecturalQuality_traceability , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_authenticity , :ArchitecturalQuality_accountability , :ArchitecturalQuality_provability , :ArchitecturalQuality_trustability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_encryption , :DesignTactic_message_channeling , :DesignTactic_authentication ;
          gen:wikiEntry                  "[Dyson and Longshaw 2004] pp. 335-337. Secure channels ensure that data being passed across public and semi-public space is secure to transit. Secure channels have to be created that obscure sensitive data in transit using encryption and client-server authentication. This pattern applies to software but hardware acceleration is desired in some cases.   Relations Message Chanelling[Dyson and Longshaw 2004] Data being passed across public and semi-public space is secure to transit. Data is transferred through channels pp.336. Authentification and Encryption Data can be prevented from misuse by unauthorized access by Authentification and Encryption." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Secure_channel .
  
  :Domain_ar-010__publishing_services
          a           spec:Domain ;
          rdfs:label  "ar-010: publishing services" .
  
  :ArchitecturalQuality_certainty
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "certainty" , "Certainty" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_reflection , :DesignTactic_dynamic_binding ;
          gen:relatedQuality       :ArchitecturalQuality_accuracy , :ArchitecturalQuality_functionality ;
          gen:wikiEntry            "[Wikipedia Certainity 2014] Certainty is perfect knowledge that has total security from error or the mental state of being without doubt.    Validity Predictability" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_observer
          a                              gen:DesignPattern ;
          rdfs:label                     "Observer" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_security , :ArchitecturalQuality_scalability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_utility , :ArchitecturalQuality_performance , :ArchitecturalQuality_compatibility ;
          gen:isAlternativeOf            :DesignTactic_monitoring , :DesignTactic_asynchronous_communication , :DesignTactic_routing ;
          gen:wikiEntry                  "[Wikipedia Observer Pattern 2014] An Observer is a publish/subscribe pattern which allows a number of observer objects to see an event. (GoF behavioral pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Observer_pattern .
  
  :DesignPattern_operational_monitoring_and_alerting
          a                              gen:DesignPattern ;
          rdfs:label                     "Operational Monitoring and Alerting" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_learnability , :ArchitecturalQuality_viability , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_resilience , :ArchitecturalQuality_dependability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_trainability , :ArchitecturalQuality_likeability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_understandability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_usability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_integrity , :ArchitecturalQuality_availability , :ArchitecturalQuality_installability , :ArchitecturalQuality_utility , :ArchitecturalQuality_robustness ;
          gen:isAlternativeOf            :DesignTactic_error_detection , :DesignTactic_self-descriptiveness ;
          gen:wikiEntry                  "[Dysonand Longshaw 2004] pp. 322-324. It must be possible for human operators to find out potential problems in a large amount of information generated by status reporting from a complex or high-volume Internet-technology system. The Internet-technology system uses different hardware and software servers. A failure of the system could impact a level of capability in these areas. Continual Status Reporting should be used and an operational Monitoring and alerting process that watches for indicators of a failing system and warns the operators should be implemented.  Relations Error Detection [Dyson and Longshaw 2004]It must be possible for human operators to find out potential problems pp.232. Self-descriptiveness Information has to be generated by status reporting from a complex or high-volume Internet-technology system so Self-descriptiveness would describe the system." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_workflows__shape_
          a           spec:Domain ;
          rdfs:label  "workflows (shape)" .
  
  :ArchitecturalQuality_learnability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "learnability" , "Learnability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_offline_reporting , :DesignPattern_reflection , :DesignPattern_environment_data , :DesignPattern_continual_status_reporting , :DesignPattern_breadcrumbs , :DesignTactic_self-descriptiveness , :DesignPattern_operational_monitoring_and_alerting ;
          gen:relatedQuality       :ArchitecturalQuality_understandability , :ArchitecturalQuality_usability ;
          gen:wikiEntry            "Learnability is the capability of the software product to make it possible for the user to learn its application [Malich 2008].    Relations To provide Learnability self-descriptiveness is a useful tactic because it requires a system to describe itself and makes it easier for users to learn the application." ;
          spec:requiredBy          :Domain_abstract .
  
  :Role_systems_engineer
          a           cont:Role ;
          rdfs:label  "systems engineer" .
  
  :Requirement_ar-159__web_api
          a                          spec:Requirement ;
          rdfs:label                 "AR-159: Web API" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes , :Project_aspernbm ;
          gen:wikiEntry              "<p style=\"font-size: small;\">The system shall support accessing the DWH through a web-based API (e.g., a REST service), whereby&nbsp;security, privacy, and other non-functional requirements shall be addressed using appropriate solutions.</p>" , "Das\n  CLM soll über eine generische API-Schnittstelle auf das DWH zugreifen. Dabei\n  werden Security, Privacy und andere nichtfunktionale Eigenschaften genutzt." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren , :UseCase_benchmarks ;
          spec:hasRequirementOrigin  :Domain_none , :Domain_ar-012__protocols_and_formats ;
          spec:requirementGroup      "Operational" ;
          spec:requirementPurpose    "Web interfaces" .
  
  :DesignPattern_template_method
          a                              gen:DesignPattern ;
          rdfs:label                     "Template Method" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_composability , :ArchitecturalQuality_structuredness ;
          gen:isAlternativeOf            :DesignTactic_composition ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Template_method_pattern .
  
  :DesignPattern_inner_join
          a                              gen:DesignPattern ;
          rdfs:label                     "Inner join" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_safiddle ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_composability , :ArchitecturalQuality_traceability ;
          gen:isAlternativeOf            :DesignTactic_querying ;
          gen:wikiEntry                  "<p><strong>Inner join</strong></p>\n<p>An inner join is a join in which the values in the columns being joined are compared using a comparison operator.</p>\n<p>Inner join is considered a MapReduce design pattern: <a href=\"https://courses.cs.washington.edu/courses/cse490h/08au/lectures/MapReduceDesignPatterns-UW2.pdf\" target=\"_blank\">https://courses.cs.washington.edu/courses/cse490h/08au/lectures/MapReduceDesignPatterns-UW2.pdf</a></p>\n<p>In the ISO standard, inner joins can be specified in either the FROM or WHERE clause. This is the only type of join that ISO supports in the WHERE clause. Inner joins specified in the WHERE clause are known as old-style inner joins.</p>\n<p>The following Transact-SQL query is an example of an inner join:</p>\n<div id=\"code-snippet-1\" class=\"codeSnippetContainer\" style=\"position: relative;\">\n<div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">&nbsp;</div>\n<div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n<div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n<div class=\"codeSnippetToolBarText\" style=\"position: relative;\"><a style=\"display: none;\" title=\"Copy to clipboard.\" target=\"_blank\" name=\"CodeSnippetCopyLink\"></a>Copy</div>\n</div>\n<div id=\"CodeSnippetContainerCode_7399a5a7-e932-4d5f-b6ed-2dd3652afa06\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n<div style=\"color: black; position: relative;\">\n<pre>USE AdventureWorks2008R2;\nGO\nSELECT *\nFROM HumanResources.Employee AS e\n    INNER JOIN Person.Person AS p\n    ON e.BusinessEntityID = p.BusinessEntityID\nORDER BY p.LastName\n</pre>\n</div>\n</div>\n</div>\n</div>\n<p>This inner join is known as an equi-join. It returns all the columns in both tables, and returns only the rows for which there is an equal value in the join column.</p>" ;
          spec:hasPatternDomain          :Domain_information_retrieval .
  
  :AuthorTag_architecture
          a           cont:AuthorTag ;
          rdfs:label  "architecture" .
  
  :DesignPattern_fault_diagnosis
          a                              gen:DesignPattern ;
          rdfs:label                     "Fault Diagnosis" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_recoverability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_safety , :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_robustness , :ArchitecturalQuality_survivability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_affordability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_resilience ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "[Greg Stanley and Associates 2010-2013] Fault Diagnosis in a general sense is the identification of the nature and cause of faults.Fault diagnosis is typically used to determine the causes of symptoms mitigations for problems and solutions to issues." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_regionalization
          a           cont:AuthorTag ;
          rdfs:label  "regionalization" .
  
  :DesignTactic_tool_integration
          a           gen:DesignTactic ;
          rdfs:label  "tool integration" .
  
  gen:ArchitecturalKnowledgeElement
          a           owl:Class ;
          rdfs:label  "Architectural Knowledge Element" .
  
  :Domain_distributed_computing
          a           spec:Domain ;
          rdfs:label  "distributed computing" .
  
  :DesignPattern_compliant_data_replication
          a                              gen:DesignPattern ;
          rdfs:label                     "Compliant Data Replication" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_compatibility , :ArchitecturalQuality_portability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_heterogeneity ;
          gen:isAlternativeOf            :DesignTactic_system_integration ;
          gen:wikiEntry                  "Data is replicated among multiple environments that may handle different data subsets. During replication data is obfuscated and deleted depending on laws and security regulations. Data updates are adjusted automatically to reflect the different data structures handled by environments.[Cloud Computing Patterns]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_kdd-15__prioritized_loading
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-15: Prioritized Loading" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Problem: Prioritized Loading</strong></span></p><p>The current image loading mechanism in Viewer downloads images based on the layout selected in a multi-threaded mode. Though it is fast (in LAN), it doesn’t change the sequence of image download based on user inputs. This mechanism can be a visible issue in a low bandwidth environment.</p><p>‘Prioritized loading’ is an advanced loading mechanism wherein the image download can be dynamically adjusted intelligently based on user actions (scroll, layout change, etc).</p><p><strong>Pros:</strong></p><ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Loading is more responsive to user actions. So reduced time to complete reading a study.</span></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">If designed properly, memory consumption by Viewer can be lower</span></li></ul><p><strong>Cons:</strong></p><ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">A big design change required in Viewer and web server components</span></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Effort is likely to be high</span></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Achieving stability could be a challenge</span></li></ul><p>&nbsp;</p><p><span style=\"line-height: 1.3em; font-size: 14pt;\" data-mce-style=\"line-height: 1.3em; font-size: 14pt;\"><strong><span lang=\"EN-US\">Proposed alternative solutions:</span></strong></span></p><ul><li><span style=\"line-height: 1.3em; font-size: 14pt;\" data-mce-style=\"line-height: 1.3em; font-size: 14pt;\">Focus on the Viewport (i.e., what the user sees at a particular time). Use Lazy Loading of images based on the viewport. Load images depending on Viewport position mapped to the positions of the images in the list.</span></li></ul>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_perf-2__performance_optimization ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_usability ;
          spec:useDecisionTactic          :DesignTactic_lazy_loading , :DesignTactic_caching .
  
  :DesignPattern_message_aggregator
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Aggregator" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_routing ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_cust-5__web-based_client
          a           spec:Domain ;
          rdfs:label  "cust-5: web-based client" .
  
  :SoftwareEngineeringMethod_keyword-driven_test_automation
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Keyword-driven Test Automation" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_requirements , :AuthorTag_inspection_test ;
          gen:wikiEntry            "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>This method uses keywords as parameters to a toolchain for model-based test automation for Stufe 3 of the TrainSIM project at Siemens IC RL.</p></td>\n</tr>\n</tbody></table>\n<p>The purpose of this document is to provide a detailed overview of the concept used for keyword-driven model-based test automation for Stufe 3 of the TrainSIM project at Siemens IC RL.<br>It outlines the abstraction levels used for the keyword definition and describes the toolchain supporting this approach by considering the workflow within the toolchain and the tool integration of all involved engineering disciplines.</p>" .
  
  :Role_quality_manager_in_project
          a           cont:Role ;
          rdfs:label  "quality manager in project" .
  
  :Requirement_ar-026__caching_and_performance
          a                          spec:Requirement ;
          rdfs:label                 "AR-026: Caching and performance" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "Caching and performance" .
  
  :Domain_ar-102__tool_integration
          a           spec:Domain ;
          rdfs:label  "ar-102: tool integration" .
  
  :Requirement_ar-01__process_automation
          a                          spec:Requirement ;
          rdfs:label                 "AR-01: Process Automation" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_shape ;
          gen:wikiEntry              "The system shall enable the automation of business and engineering processes for the railway domain." ;
          spec:containedWithin       :UseCase_adaptation ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Process automation" .
  
  :AuthorTag_framework
          a           cont:AuthorTag ;
          rdfs:label  "framework" .
  
  :Domain_ar-161__access_control
          a           spec:Domain ;
          rdfs:label  "ar-161: access control" .
  
  :Domain_sr-01_10  a  spec:Domain ;
          rdfs:label  "sr-01.10" .
  
  :DesignPattern_cache-aside_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Cache-Aside Pattern" , "Cache-aside Pattern" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki , :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown , :ArchitecturalQuality_performance , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_unknown , :DesignTactic_caching ;
          gen:wikiEntry                  "Load data on demand into a cache from a data store. This pattern can improve performance and also helps to maintain consistency between data held in the cache and the data in the underlying data store. [MSDN Cloud Design Patterns 2014]" , "<h3 class=\"title\">Cache-Aside Pattern</h3>\n<div id=\"mainSection\">\n<div id=\"mainBody\">\n<p>Load data on demand into a cache from a data store. This pattern can improve performance and also helps to maintain consistency between data held in the cache and the data in the underlying data store.</p>\n<p><strong>Context and Problem</strong></p>\n<p>Applications use a cache to optimize repeated access to information held in a data store. However, it is usually impractical to expect that cached data will always be completely consistent with the data in the data store. Applications should implement a strategy that helps to ensure that the data in the cache is up to date as far as possible, but can also detect and handle situations that arise when the data in the cache has become stale.</p>\n<p><strong>Solution</strong></p>\n<p>Many commercial caching systems provide read-through and write-through/write-behind operations. In these systems, an application retrieves data by referencing the cache. If the data is not in the cache, it is transparently retrieved from the data store and added to the cache. Any modifications to data held in the cache are automatically written back to the data store as well.</p>\n<p>For caches that do not provide this functionality, it is the responsibility of the applications that use the cache to maintain the data in the cache.</p>\n<p>An application can emulate the functionality of read-through caching by implementing the cache-aside strategy. This strategy effectively loads data into the cache on demand.&nbsp;</p>\n<p><img id=\"55B56FD8930E405C5BF9580E455A16C1\" title=\"Figure 1 - Using the Cache-Aside pattern to store data in the cache\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC709568.png\" alt=\"Figure 1 - Using the Cache-Aside pattern to store data in the cache\" /></p>\n<p>If an application updates information, it can emulate the write-through strategy as follows:</p>\n<ol>\n<li>Make the modification to the data store</li>\n<li>Invalidate the corresponding item in the cache.</li>\n</ol>\n<p>When the item is next required, using the cache-aside strategy will cause the updated data to be retrieved from the data store and added back into the cache.</p>\n<p><strong>When to Use this Pattern</strong></p>\n<p>Use this pattern when:</p>\n<ul>\n<li>A cache does not provide native read-through and write-through operations.</li>\n<li>Resource demand is unpredictable. This pattern enables applications to load data on demand. It makes no assumptions about which data an application will require in advance.</li>\n</ul>\n<p>This pattern might not be suitable:</p>\n<ul>\n<li>When the cached data set is static. If the data will fit into the available cache space, prime the cache with the data on startup and apply a policy that prevents the data from expiring.</li>\n<li>For caching session state information in a web application hosted in a web farm. In this environment, you should avoid introducing dependencies based on client-server affinity.</li>\n</ul>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_web_services , :Domain_abstract .
  
  :AuthorTag_organization_health
          a           cont:AuthorTag ;
          rdfs:label  "organization health" .
  
  :ArchitecturalQuality_modifiability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Modifiability" , "modifiability" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignTactic_messaging , :DesignTactic_separation_of_concerns , :DesignPattern_reflection , :DesignTactic_dynamic_binding , :DesignPattern_timeout-based_delivery , :DesignPattern_external_configuration_store_pattern , :DesignPattern_transaction-based_delivery , :DesignPattern_bridge , :DesignPattern_exactly-once_delivery , :DesignTactic_increase_cohesion , :DesignPattern_cancel_task , :DesignPattern_compensation , :DesignDecision_add-04__map-report_model , :DesignPattern_facade , :DesignPattern_abstract_factory , :DesignPattern_at-least-once_delivery , :DesignDecision_ad-203__data_storage , :DesignPattern_adapter , :DesignPattern_mediator , :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_system_overview , :DesignPattern_representational_state_transfer , :DesignDecision_kdd-03 , :DesignPattern_proxy , :DesignDecision_ad-103__web_interfaces , :DesignPattern_command , :DesignTactic_reduce_coupling ;
          gen:relatedQuality       :ArchitecturalQuality_extensibility , :ArchitecturalQuality_testability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_agility , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_portability ;
          gen:wikiEntry            "<p><strong>Modifiability</strong></p>\n<p>Modifiability is a quality attribute of the software architecture that relates to “the cost of change&nbsp;and refers to the ease with which a software system can accommodate changes”.&nbsp;<span style=\"line-height: 1.3em;\">It brings up four concerns: </span></p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">1) Who makes the change?</span></li>\n<li><span style=\"line-height: 1.3em;\">2) When is the change made?</span></li>\n<li><span style=\"line-height: 1.3em;\">3)&nbsp;What can change? and</span></li>\n<li><span style=\"line-height: 1.3em;\">4) How is the cost of change measured?</span></li>\n</ul>\n<p><strong><span style=\"line-height: 1.3em;\">Source:</span></strong></p>\n<ul>\n<li><a href=\"http://www.sei.cmu.edu/reports/07tr002.pdf\">http://www.sei.cmu.edu/reports/07tr002.pdf</a></li>\n</ul>" , "<p><strong>Modifiability</strong></p>\n<p>Modifiability is a quality attribute of the software architecture that relates to &ldquo;the cost of change&nbsp;and refers to the ease with which a software system can accommodate changes&rdquo;.&nbsp;<span style=\"line-height: 1.3em;\">It brings up four concerns: </span></p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">1) Who makes the change?</span></li>\n<li><span style=\"line-height: 1.3em;\">2) When is the change made?</span></li>\n<li><span style=\"line-height: 1.3em;\">3)&nbsp;What can change? and</span></li>\n<li><span style=\"line-height: 1.3em;\">4) How is the cost of change measured?</span></li>\n</ul>\n<p><strong><span style=\"line-height: 1.3em;\">Source:</span></strong></p>\n<ul>\n<li><a href=\"http://www.sei.cmu.edu/reports/07tr002.pdf\">http://www.sei.cmu.edu/reports/07tr002.pdf</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_innovation
          a           cont:AuthorTag ;
          rdfs:label  "innovation" .
  
  :Domain_big_data  a  spec:Domain ;
          rdfs:label  "big data" .
  
  :Requirement_ar-159__generic_api
          a                          spec:Requirement ;
          rdfs:label                 "AR-159: Generic API" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:wikiEntry              "Das\n  CLM soll über eine generische API-Schnittstelle auf das DWH zugreifen. Dabei\n  werden Security, Privacy und andere nichtfunktionale Eigenschaften genutzt." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Operational" ;
          spec:requirementPurpose    "Web interfaces" .
  
  :DesignDecision_kdd-13__use_implicit_locking
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-13: Use Implicit Locking" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span lang=\"EN-US\">Implicit Locking used in quite a few of the above functionalities (ex: QA Operations in PB, Save in Viewer, etc) in Reporting Client. This has to be either brought into web interface or completely moved to server side (so that client is not directly exposed to Locking / Unlocking)</span></p>\n<p><span lang=\"EN-US\">A general Design decision needs to be taken on this which will </span></p>\n<ul>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em;\">Reduce the complexity in client</span></li>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em;\">Reduce the chattiness of server &ndash; client communication</span></li>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em;\">Improve robustness of the client operations in a WAN environment (which could have intermittent network issues)</span></li>\n</ul>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_cust-5__web-based_client ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_integrity ;
          spec:useDecisionTactic          :DesignTactic_locking .
  
  :DesignDecision_kdd-14__image_loading_performance
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-14: Image Loading Performance" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\">Problem: Image Loading Performance</span></strong></span></p><p><span lang=\"EN-US\">As of VB20A, Viewer has some minor differences in loading strategy in Web client and Reporting client. Following are the areas to improve in Web Viewer:</span></p><p><span lang=\"EN-US\">a)&nbsp;</span><span lang=\"EN-US\">The image download mechanism in Reporting client uses Boost asio whereas in Web Client, ISAPI is used for Image download. Since ISAPI is obsolete, it would be preferable to use the http version of Boost asio for Web Interface, since replacement will be fairly simple. Some other alternatives could also be checked (like IIS 7.0 Resource Toolkit) for Image download.</span></p><p><span lang=\"EN-US\">b)&nbsp;</span><span lang=\"EN-US\">JIT Loading is not enabled in web client by default, it is enabled only in Reporting client. JIT Loading should be turned on in Web client to gain performance during image loading.</span></p><p><strong><span lang=\"EN-US\" style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Proposed alternative solutions:</span></strong></p><ul><li><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Store compressed images and decompress in client.</span></li><li><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Provide thumbnail version of all images. Create thumbnails when saving new images \"on the fly\".</span></li><li><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Use client-side caching (jQuery deferred objects caching).</span></li></ul>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_perf-2__performance_optimization ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_caching .
  
  :ArchitecturalQuality_affordability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Affordability" , "affordability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_change_propagation , :DesignPattern_finish_work_in_progress , :DesignPattern_protective_automatic_controls , :DesignPattern_flyweight , :DesignPattern_fault_diagnosis , :DesignPattern_slow_it_down , :DesignTactic_transparency , :DesignPattern_breadcrumbs , :DesignPattern_throttling_pattern , :DesignPattern_facade , :DesignPattern_system_overview , :DesignPattern_workload_sharing , :DesignPattern_dynamically-adjustable_configuration , :DesignPattern_reassess_overload_decision , :DesignPattern_swappable_staging_environment , :DesignPattern_virtual_platform , :DesignTactic_feasibility_study , :DesignPattern_traffic_shaping , :DesignPattern_session_failover , :DesignPattern_overload_toolboxes , :DesignTactic_overload_mitigation , :DesignPattern_encapsulation , :DesignPattern_load_shedding , :DesignPattern_reflection , :DesignPattern_static_content_hosting_pattern ;
          gen:relatedQuality       :ArchitecturalQuality_usability , :ArchitecturalQuality_suitability ;
          gen:wikiEntry            "[Wiktionary Affordability 2014] The extent to which something is affordable as measured by its cost relative to the amount that the purchaser is able to pay.  [Businessdictionary Affordability [date unknown]] Conclusion drawn from the analysis of the life cycle cost of a proposed acquisition that the purchase is in accord with the resources and long term requirements of the acquirer.    Relations" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_chain_of_responsibility
          a                              gen:DesignPattern ;
          rdfs:label                     "Chain of Responsibility" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_durability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_composability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_consistency , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_stability , :ArchitecturalQuality_structuredness ;
          gen:isAlternativeOf            :DesignTactic_composition , :DesignTactic_isolation ;
          gen:wikiEntry                  "[Wikipedia Chain of Responsibility Pattern 2014] A Chain of Responsibility delegates commands to a chain of processing objects. (GoF behavioral pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Chain-of-responsibility_pattern .
  
  :DesignDecision_ad-102__ecosystem_integration
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-102: Ecosystem integration" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Smart ICT Ecosystem Integration</strong></p>\n<p style=\"font-size: small;\">The Benchmarks application components is integrated into the Smart ICT information ecosystem as follows:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\">The Data API and the components of the application layer (i.e., AE and Analytics Server) need to be registered and published using the Ecosystem's API registry.</li>\n<li style=\"font-size: small;\">The AV component needs to be subscribed as a consumer APP using the Ecosystem's API store. This way, the AV component will access the Data API, the AE component, and the Analytics Server components (Trend and Correlation analyses components) via the ecosystem's API Gateway.</li>\n</ul>\n<p style=\"font-size: small;\">The following figure illustrated the integration of the Benchmarks application components into the Smart ICT Ecosystem:</p>\n<p style=\"text-align: center;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"p/AspernES/benchmarks_ecosystem_integration.png\" alt=\"\" width=\"650\" height=\"371\" />Benchmarks Ecosystem Integration.</p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-011__api_governance , :Domain_ar-014__api_access_control , :Domain_ar-015__usage_tracking___monitoring , :Domain_ar-004__api_protection ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_integratability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_integratability ;
          spec:useDecisionTactic          :DesignTactic_service_orientation .
  
  :ArchitecturalQuality_observability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "observability" , "Observability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_push_monitor , :DesignPattern_separate_system-managed_data , :DesignPattern_active_redundant_elements , :DesignPattern_poll_monitor , :DesignPattern_task_to_environment_-_push , :DesignPattern_session_failover , :DesignPattern_task_precondition_-_data_existence , :DesignPattern_data_logger , :DesignTactic_monitoring , :DesignPattern_logging_facade , :DesignPattern_folder_data ;
          gen:relatedQuality       :ArchitecturalQuality_configurability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_controllability , :ArchitecturalQuality_testability ;
          gen:wikiEntry            "[Wikipedia Observability 2014] In control theory observability is a measure for how well internal states of a system can be inferred by knowledge of its external outputs. The observability and controllability of a system are mathematical duals.   [Kalman 1961] The concept of observability was introduced by American-Hungarian scientist Rudolf E. Kalman for linear dynamic systems." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_rest
          a                        gen:DesignPattern ;
          rdfs:label               "REST" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_aspernbm ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_portability , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_visibility , :ArchitecturalQuality_scalability , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf      :DesignTactic_web_interfaces ;
          gen:wikiEntry            "<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><strong><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">Re</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">presentational&nbsp;</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">S</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">tate&nbsp;</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">T</span><span style=\"font-size: 16px; font-family: arial, helvetica, sans-serif;\">ransfer (REST)</span></strong></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST stands for&nbsp;<strong>Re</strong>presentational&nbsp;<strong>S</strong>tate&nbsp;<strong>T</strong>ransfer. (It is sometimes spelled \"ReST\".) It relies on a stateless, client-server, cacheable communications protocol -- and in virtually all cases, the HTTP protocol is used.</span>&nbsp;</p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST is&nbsp;<em>an architecture style</em>&nbsp;for designing networked applications. The idea is that, rather than using complex mechanisms such as CORBA, RPC or SOAP to connect between machines, simple HTTP is used to make calls between machines.&nbsp;</span><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">In many ways, the World Wide Web itself, based on HTTP, can be viewed as a REST-based architecture.</span></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">RESTful applications use HTTP requests to post data (create and/or update), read data (e.g., make queries), and delete data. Thus, REST uses HTTP for all four CRUD (Create/Read/Update/Delete) operations.</span></p>\n<p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px; line-height: normal;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">REST is a lightweight alternative to mechanisms like RPC (Remote Procedure Calls) and Web Services (SOAP, WSDL, et al.).&nbsp;</span><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Despite being simple, REST is fully-featured; there's basically nothing you can do in Web Services that can't be done with a RESTful architecture.</span></p>" ;
          spec:hasPatternDomain    :Domain_web_services .
  
  :Domain_soa  a      spec:Domain ;
          rdfs:label  "soa" .
  
  :Domain_change_me  a  spec:Domain ;
          rdfs:label  "change me" .
  
  :Requirement_ar-02__incentives_for_architects
          a                          spec:Requirement ;
          rdfs:label                 "AR-02: Incentives for architects" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_safiddle ;
          gen:wikiEntry              "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Provide architects with incentives to enrich and use the NFR Engineering Repository.&nbsp;</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Rationale:</strong> There are currently no real incentives for architects to enrich and use the Sharepoint-based NFR Engineering Repository.</span></p>" ;
          spec:containedWithin       :UseCase_sa_collaboration , :UseCase_nfr_repository ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Collaboration and incentives" ;
          spec:requirementPurpose    "Incentive provision" .
  
  :SoftwareEngineeringMethod_nfr_engineering_repository
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "NFR Engineering Repository" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_design , :ProjectPhase_testing , :ProjectPhase_requirements , :ProjectPhase_architecture , :ProjectPhase_analysis ;
          gen:hasMethodRole        :Role_requirements_engineer , :Role_performance_engineer , :Role_test_architect , :Role_system_architect , :Role_technical_project_manager ;
          gen:hasMethodTag         :AuthorTag_performance_engineering , :AuthorTag_knowledge_management , :AuthorTag_requiremetns_engineering , :AuthorTag_nfr_engineering ;
          gen:wikiEntry            "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>This repository provides definitions of the most common NFRs (non-functional requirements) and how to address them in software architecture.</p></td>\n</tr>\n</tbody></table>" .
  
  sear:SearchStep  a  owl:Class ;
          rdfs:label  "Search Step" .
  
  :ArchitecturalQuality_simplicity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Simplicity" , "simplicity" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_default , :DesignPattern_microservices , :DesignPattern_model-view-controller , :DesignPattern_reliable_sessions , :DesignPattern_breadcrumbs , :DesignPattern_restful_architecture , :DesignTactic_inheritance , :DesignPattern_proxy , :DesignDecision_kdd-30 , :DesignPattern_rest , :DesignTactic_globalization , :DesignPattern_system_overview , :DesignTactic_abstraction , :DesignPattern_bridge , :DesignPattern_prototype , :DesignPattern_request_response , :DesignTactic_transparency , :DesignTactic_synchronous_communication , :DesignPattern_facade , :DesignPattern_rest_architecture , :DesignTactic_convention_over_configuration , :DesignPattern_message_bus_architecture , :DesignPattern_abstract_factory , :DesignPattern_factory_method , :DesignDecision_kdd-03 ;
          gen:relatedQuality       :ArchitecturalQuality_complexity ;
          gen:wikiEntry            "[Jim Highsmith 2002]Do less do better do swarms." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignDecision_kdd-11__split_header_and_data
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-11: Split Header and Data" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span lang=\"EN-US\">Web client uses https for fetching metadata from server. </span></p>\n<p><span lang=\"EN-US\">However, it uses http or https for image download (based on client side configuration). By default, http is used. Currently using https for image download reduces the performance drastically. In order to improve security, </span></p>\n<p><span lang=\"EN-US\">a)&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">it could be a good idea to split image header and pixel data of the image, wherein image header is transferred to client using https and pixel data using http. This will balance the security and performance to a good extent.</span></p>\n<p><span lang=\"EN-US\">b)&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Consider DICOM defined header encryption</span></p>" ;
          spec:decisionArchitecturalView  "5. Data View" ;
          spec:hasDecisionDomain          :Domain_perf-2__performance_optimization ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_asynchronous_calls .
  
  gen:hasMethodPhase  a       owl:ObjectProperty ;
          rdfs:domain         gen:SoftwareEngineeringMethod ;
          rdfs:label          "isUsedDuring" ;
          rdfs:range          cont:ProjectPhase ;
          rdfs:subPropertyOf  gen:hasKnowledgeContext .
  
  sear:conductedBy  a  owl:FunctionalProperty , owl:ObjectProperty ;
          rdfs:domain  sear:SearchQuery ;
          rdfs:range   sear:UserAccount .
  
  :DesignDecision_ad-09__restful_api_registry
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-09: RESTful API Registry" ;
          gen:hasKnowledgeAuthor          :Author_willegger_edwin ;
          gen:wikiEntry                   "<h2>API Registry REST interface&nbsp;</h2>\n<p>The API calls can be clustered in calls that manage the APIs stored in the API registry, namely:</p>\n<ul>\n<li>Add API;</li>\n<li>Update API;</li>\n<li>Get all APIs;</li>\n<li>Get single API;</li>\n<li>Remove an API.</li>\n</ul>\n<p>And calls that obtain information about registered APIs and manage their lifecycle:</p>\n<ul>\n<li>Check older version (checks if there are older versions available);</li>\n<li>Change API status (e.g. to published);</li>\n<li>Check If API exists.</li>\n</ul>\n<p>WSO2 also provides tooling for backup and migration of the database contents of the API registry<a target=\"_blank\" name=\"_ftnref2\"></a>[2]. This adds two more Service calls to the REST interface:</p>\n<ul>\n<li>Import for importing exported APIs;</li>\n<li>Export for exporting APIs.</li>\n</ul>\n<p><br> The export call creates a zip file containing the information about an API in the database and its structure is seen here:</p>\n<p><img src=\"p/AspernES/api_registry_files.png\" alt=\"\" width=\"188\" height=\"246\"></p>\n<p>As it can be seen, not only API-information, but also information about the deployed ESB-sequences that are attached to an API are exported and get automatically redeployed without reconfiguration of the ESB on import.</p>\n<p><a href=\"#_ftnref1\" name=\"_ftn1\">[1]</a> https://docs.wso2.com/display/AM190/Publisher+APIs</p>\n<p><a href=\"#_ftnref2\" name=\"_ftn2\">[2]</a> https://docs.wso2.com/display/AM190/Migrating+the+APIs+to+a+Different+Environment</p>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-11__api_governance ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_scalability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces .
  
  :ArchitecturalQuality_serviceability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "serviceability" , "Serviceability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_component_configurator , :DesignPattern_runtime_reconfiguration_pattern , :DesignTactic_softcoding , :DesignPattern_facade ;
          gen:relatedQuality       :ArchitecturalQuality_configurability , :ArchitecturalQuality_debuggability ;
          gen:wikiEntry            "[Wikipedia Serviceability (Computer Science) 2014] Serviceability refers to the ability of technical support personnel to install configure and monitor computer products identify exceptions or faults debug or isolate faults to root cause analysis and provide hardware or software maintenance in pursuit of solving a problem and restoring the product into service.  [Donald G. Firesmith et al. 2008]Serviceability the external quality characteristic that is the degree of ease of servicing the system or architctural component (such as adding or replacing consumable materials such as fueling an aircraft).   Supportability" ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_modularization
          a           cont:AuthorTag ;
          rdfs:label  "modularization" .
  
  :Domain_ar-024__data_and_process_auditing
          a           spec:Domain ;
          rdfs:label  "ar-024: data and process auditing" .
  
  :DesignPattern_return_to_reference_point
          a                              gen:DesignPattern ;
          rdfs:label                     "Return to Reference Point" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_dependability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_fault_handling ;
          gen:wikiEntry                  "Return to ReferencePoint   is used when an error occurs that can be recovered but for which the recovery does not provide appropriate Rollback or Rollforward. Execution is resumed by returning to a specific known state. That place might not have been in the execution path that led to the error but it is known to be safe [Hanmer 2007]pp 158-159.  Relations Fault Handling [Hanmer 2007]Error Recovery Patterns pp 158-159." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_continual_status_reporting
          a                              gen:DesignPattern ;
          rdfs:label                     "Continual Status reporting" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_learnability , :ArchitecturalQuality_installability , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_understandability , :ArchitecturalQuality_likeability , :ArchitecturalQuality_usability , :ArchitecturalQuality_trainability ;
          gen:isAlternativeOf            :DesignTactic_self-descriptiveness ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_arr-1  a    spec:Domain ;
          rdfs:label  "arr-1" .
  
  :DesignPattern_request_response
          a                              gen:DesignPattern ;
          rdfs:label                     "Request Response" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_consistency , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility , :ArchitecturalQuality_scalability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_routing , :DesignTactic_synchronous_communication , :DesignTactic_message_construction ;
          gen:wikiEntry                  "[SDP Request Response [date unknown]] Request response or request reply is one of the basic methods how system entities talk to each other. When using request response the first entity requests some data and the second entity responds to the request. Usually there is a series of such interchanges until the complete message is sent. Browsing a web page is an example of a request response communication. Request/Response is the most basic and common of the client-service interaction patterns. It is used when the client must have an immediate response or wants the service to complete a task without delay. Request/Response begins when the client establishes a connection to the service. Once a connection has been established the client sends its request and waits for a response. The service processes the request as soon as it is received and returns a response over the same connection." ;
          spec:hasPatternDomain          :Domain_web_services , :Domain_abstract ;
          owl:sameAs                     dbr:Request-response .
  
  :DesignTactic_message_transformation
          a                             gen:DesignTactic ;
          rdfs:label                    "message transformation" , "Message Transformation" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_security , :ArchitecturalQuality_portability ;
          gen:wikiEntry                 "When passing messages between a service and consumer there are many cases where the message must be transformed into a format that the consumer can understand. You can use adapters to provide access to the message channel for clients that do not support messaging and translators to convert the message data into a format that each consumer understands. Consider the following guidelines when designing message transformation Determine the requirements and locations for performing transformations. Take into account the performance overhead of transformation and try to minimize the number of transformations you execute. Determine relevant patterns for message transformation such as Canonical Data Mapper Envelope Wrapper and Normalizer. However use the Canonical Data Mapper model only when this is necessary. Use metadata to define the message format. Consider using an external repository to store the metadata." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Requirement_ar-156__usability
          a                          spec:Requirement ;
          rdfs:label                 "AR-156: Usability" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Das\n  System soll leicht zu bedienen sein." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Developmental" ;
          spec:requirementPurpose    "Multiple views" , "Separate GUI" .
  
  :DesignPattern_encryption
          a                              gen:DesignPattern ;
          rdfs:label                     "Encryption" ;
          gen:hasKnowledgeAuthor         :Author_edwin_willegger ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_integrity ;
          gen:isAlternativeOf            :DesignTactic_breadcrumbs ;
          gen:wikiEntry                  "[Goldreich 2004] Encryption is the process of encoding messages (or information) in such a way that eavesdroppers or hackers cannot read it but that authorized parties can.The process of encryption and decryption can be detailed as follows The message or information (referred to as plaintext) is encrypted using an encryption algorithm turning it into an unreadable ciphertext. This is usually done with the use of an encryption key which specifies how the message is to be encoded. Any adversary that can see the ciphertext should not be able to determine anything about the original message. An authorized party however is able to decode the ciphertext using a decryption algorithm that usually requires a secret decryption key that adversaries do not have access to." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_http_proxy_caching
          a                              gen:DesignPattern ;
          rdfs:label                     "HTTP Proxy Caching" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_caching ;
          gen:wikiEntry                  "<h1>HTTP Proxy Caching</h1>\n<p>Web proxy caching enables you to store copies of frequently-accessed web objects (such as documents, images, and articles) and then serve this information to users on demand. It improves performance and frees up Internet bandwidth for other tasks.</p>\n<div class=\"toctree-wrapper compound\">&nbsp;</div>\n<div id=\"understanding-http-web-proxy-caching\" class=\"section\">\n<h2>Understanding HTTP Web Proxy Caching</h2>\n<p>Internet users direct their requests to web servers all over the Internet. A caching server must act as a <strong>web proxy server</strong> so it can serve those requests. After a web proxy server receives requests for web objects, it either serves the requests or forwards them to the <strong>origin server</strong> (the web server that contains the original copy of the requested information). The Traffic Server proxy supports <strong>explicit proxy caching</strong>, in which the user&rsquo;s client software must be configured to send requests directly to the Traffic Server proxy. The following overview illustrates how Traffic Server serves a request.</p>\n<ol class=\"arabic\">\n<li>\n<p class=\"first\">Traffic Server receives a client request for a web object.</p>\n</li>\n<li>\n<p class=\"first\">Using the object address, Traffic Server tries to locate the requested object in its object database (<strong>cache</strong>).</p>\n</li>\n<li>\n<p class=\"first\">If the object is in the cache, then Traffic Server checks to see if the object is fresh enough to serve. If it is fresh, then Traffic Server serves it to the client as a <strong>cache hit</strong> (see the figure below).</p>\n<div id=\"id6\" class=\"figure align-center\"><img src=\"https://docs.trafficserver.apache.org/en/4.2.x/_images/cache_hit.jpg\" alt=\"A cache hit\" width=\"750px\" />\n<p class=\"caption\"><span class=\"caption-text\">A cache hit</span></p>\n</div>\n</li>\n<li>\n<p class=\"first\">If the data in the cache is stale, then Traffic Server connects to the origin server and checks if the object is still fresh (a <a class=\"reference internal\" href=\"https://docs.trafficserver.apache.org/en/4.2.x/glossary.en.html#term-revalidation\"><span class=\"xref std std-term\">revalidation</span></a>). If it is, then Traffic Server immediately sends the cached copy to the client.</p>\n</li>\n<li>\n<p class=\"first\">If the object is not in the cache (a <strong>cache miss</strong>) or if the server indicates the cached copy is no longer valid, then Traffic Server obtains the object from the origin server. The object is then simultaneously streamed to the client and the Traffic Server local cache (see the figure below). Subsequent requests for the object can be served faster because the object is retrieved directly from cache.</p>\n<div id=\"id7\" class=\"figure align-center\"><img src=\"https://docs.trafficserver.apache.org/en/4.2.x/_images/cache_miss.jpg\" alt=\"A cache miss\" width=\"750px\" />\n<p class=\"caption\"><span class=\"caption-text\">A cache miss</span></p>\n</div>\n</li>\n</ol>\n<p>Caching is typically more complex than the preceding overview suggests. In particular, the overview does not discuss how Traffic Server ensures freshness, serves correct HTTP alternates, and treats requests for objects that cannot/should not be cached. The following sections discuss these issues in greater detail.</p>\n</div>\n<p>To avoid serving outdated (stale) content, the caching server can refresh the cache at a predetermined interval or in response to a certain event such as a user refreshing the web page. This ensures that the user always receives the freshest content available, such as the latest headlines on a news site or the current bid on an auction site.</p>\n<h2>How Can NGINX Plus Help?</h2>\n<p><a href=\"https://www.nginx.com/products/\" target=\"_blank\">NGINX Plus</a> and <a href=\"http://nginx.org/en\" target=\"_blank\">NGINX</a> are the best-in-class web server and application delivery solutions used by high-traffic websites such as Dropbox, Netflix, and Zynga. More than <a href=\"http://news.netcraft.com/archives/2015/02/24/february-2015-web-server-survey.html\" target=\"_blank\">130 million websites worldwide</a> and over <a href=\"http://w3techs.com/technologies/cross/web_server/ranking\" target=\"_blank\">40% of the world&rsquo;s 10,000 busiest websites</a> use NGINX Plus and NGINX to deliver content quickly and reliably.</p>\n<ul>\n<li>NGINX Plus was developed specifically to solve the speed limitations inherent in web applications and platforms.</li>\n<li>NGINX Plus delivers a massively-scalable caching solution to serve up static and infrequently changing content to a wide variety of clients in an optimized and reliable manner.</li>\n<li>The NGINX Plus caching server can also handle dynamic responses returned from scripting languages using protocols such as FastCGI, SCGI, and uwsgi.</li>\n<li>The <a href=\"https://www.nginx.com/products/live-activity-monitoring/\" target=\"_blank\">live activity monitoring</a> feature in NGINX Plus reports a broad range of statistics you can use to monitor and measure the utilization and effectiveness of your content caches.</li>\n</ul>" ;
          spec:hasPatternDomain          :Domain_web_applications .
  
  :DesignPattern_durable_subscriber
          a                              gen:DesignPattern ;
          rdfs:label                     "Durable Subscriber" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          spec:hasPatternDomain          :Domain_abstract .
  
  spec:containedWithin
          a            owl:ObjectProperty ;
          rdfs:domain  spec:Requirement ;
          rdfs:label   "containedWithin" ;
          rdfs:range   spec:UseCase .
  
  :ArchitecturalQuality_complexity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "complexity" , "Complexity" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-02__use_camunda_suite , :DesignPattern_module , :DesignPattern_failover , :DesignTactic_abstraction , :DesignPattern_bridge , :SoftwareEngineeringMethod_theory_of_constraints__toc_ , :DesignDecision_kdd-07__replace_atl_and_isapi , :DesignPattern_embedded_browser , :DesignPattern_secret_url , :DesignDecision_kdd-01__layered_architecture , :DesignTactic_layering , :DesignPattern_abstract_factory , :DesignDecision_ad-009__restful_api_registry , :DesignPattern_api_gateway , :DesignPattern_request_response , :DesignPattern_deferreds_for_caching , :DesignPattern_event_message , :DesignPattern_layered_architecture , :DesignPattern_command_message , :DesignDecision_ad-103__web_interfaces , :DesignPattern_process_manager , :DesignDecision_ad-007__wso2_caching , :DesignPattern_caching , :DesignDecision_add-04__map-report_model , :DesignDecision_kdd-08__adaptation_process , :DesignDecision_kdd-05__viewer-server_interface , :DesignTactic_inheritance , :DesignPattern_factory_method , :DesignPattern_model-view-controller , :DesignPattern_document_message , :DesignPattern_command , :DesignPattern_restful_web_api , :DesignPattern_prototype , :DesignPattern_proxy , :DesignDecision_kdd-04__limiting_results_in_pb , :DesignPattern_composite , :DesignDecision_kdd-03__pb-server_interface , :DesignPattern_pubsub , :DesignDecision_kdd-09__process_recovery , :SoftwareEngineeringMethod_tailored_system_integration , :DesignPattern_message_broker , :DesignDecision_ad-010__use_wso2_eip , :DesignPattern_facade , :DesignDecision_add-01__zero-footprint_architecture , :DesignDecision_kdd-04__process_architecture , :DesignPattern_microservices , :DesignDecision_add-06__secret_project_urls , :DesignPattern_publish_subscribe , :DesignPattern_mediator , :DesignDecision_kdd-06__embedded_browser ;
          gen:relatedQuality       :ArchitecturalQuality_structuredness , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_usability ;
          gen:wikiEntry            "<p><strong>Complexity</strong></p>\n<p>Architectural complexity reflects the use of code, components, architectural styles, best practices, design patterns, etc. beyond the minimum needed to fulfill the functional requirements to the system. Architectural complexity can be measured in terms of code size, number of components and classes, and entaglement (i.e., lack of separation of concerns).</p>\n<p>Architectural complexity is not necessarily induced by programming complexity, as defined in software engineering literature (e.g., cyclomatic complexity). Rather, it is a measure of how much effort and money has to be spent&nbsp;at present and in the future for keeping the system running and fulfilling its function.</p>" ;
          spec:requiredBy          :Domain_abstract .
  
  sear:SearchQuery  a  owl:Class ;
          rdfs:label  "Search Query" .
  
  :Author_h_fig_kai  a  cont:Author ;
          rdfs:label  "höfig kai" .
  
  :ArchitecturalQuality_expressiveness
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "expressiveness" , "Expressiveness" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_adapter , :DesignPattern_bridge , :DesignPattern_abstract_factory , :DesignPattern_proxy , :DesignTactic_increase_cohesion , :DesignPattern_facade ;
          gen:relatedQuality       :ArchitecturalQuality_unknown ;
          gen:wikiEntry            "Expressiveness is a requirement wich is oriented toward capturing the major structural constituents of a system and its interconnections. Within the field of Software Architecture the vocabulary is used for describing architectures including components and connectors [Hillard and Rice 2014].   Relations Expressiveness captures the major structural constituets of a system and its interconnections so the Design Tactic Increase Cohension ould be the right because it measues how closely related all the responsibilities data and methods of a class or component are to each other." ;
          spec:requiredBy          :Domain_abstract .
  
  :Requirement_sr-01_01__aktualit_t_der_messwerte
          a                          spec:Requirement ;
          rdfs:label                 "SR-01.01: Aktualität der Messwerte" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:wikiEntry              "<span style=\"line-height: 20.8px;\">Modularity is designing a system that is divided into a set of functional units (named modules) that can be composed into a larger application. A module represents a set of related concerns. It can include a collection of related components, such as features, views, or business logic, and pieces of infrastructure, such as services for logging or authenticating users. Modules are independent of one another but can communicate with each other in a loosely coupled fashion.</span>" ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_cr-01 ;
          spec:requirementGroup      "Datenimport" ;
          spec:requirementPurpose    "Change me" .
  
  :Requirement_ar-107__multi-tenancy_support
          a                          spec:Requirement ;
          rdfs:label                 "AR-107: Multi-tenancy support" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes , :Project_aspernbm ;
          gen:wikiEntry              "<p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\" data-mce-style=\"margin-bottom: .0001pt; line-height: 150%;\"><span style=\"line-height: 16.5px;\">Je nach Stakeholder werden nicht alle Daten zugänglich gemacht. So sollte zum Beispiel ein Gebäudebewohner nur Zugriff auf die Daten seines eigenen Gebäudes und eventuell auf Daten von öffentlichen Gebäuden haben.&nbsp;</span></p><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\" data-mce-style=\"margin-bottom: .0001pt; line-height: 150%;\"><span style=\"line-height: 16.5px;\"><strong>Anmerkung:</strong> Obwohl diese Anforderung hauptsächlich für das DWH relevant ist, muss das gewählte Zugriffskontrollmodell (z.B. Mandantenfähigkeit) auch den Visualisierungskomponenten bekannt sein.</span></p>" , "<p style=\"font-size: small;\">Depending on the requesting stakeholder not all data should be accessible. For example, a building resident should only have access to the data of her own building and (possibly) to the data about public buildings.&nbsp;The choice of the target values and that of the relevant variables shall be different depending on the requesting stakeholder.</p>" ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren , :UseCase_benchmarks ;
          spec:hasRequirementOrigin  :Domain_none , :Domain_ar-161__access_control ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Multitenancy" .
  
  :Domain_sr-01_09  a  spec:Domain ;
          rdfs:label  "sr-01.09" .
  
  :ArchitecturalQuality_isolateability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Isolateability" , "isolateability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_separate_system-managed_data , :DesignTactic_separation_of_concerns , :DesignPattern_proxy , :DesignPattern_encapsulation , :DesignPattern_external_configuration_store_pattern , :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_gatekeeper_pattern , :DesignPattern_redundancy , :DesignTactic_transparency , :DesignPattern_restart , :DesignPattern_breadcrumbs , :DesignPattern_mediator , :DesignPattern_lock , :DesignPattern_adapter , :DesignTactic_isolation , :DesignPattern_facade , :DesignTactic_white-box_testing , :DesignPattern_module , :DesignTactic_reduce_coupling , :DesignPattern_chain_of_responsibility , :DesignPattern_composite , :DesignPattern_bridge , :DesignPattern_system_overview , :DesignTactic_layering ;
          gen:relatedQuality       :ArchitecturalQuality_testability , :ArchitecturalQuality_heterogeneity ;
          gen:wikiEntry            "[Wikipedia - Testability 2015]The degree to which the component under test (CUT) can be tested in isolation." ;
          spec:requiredBy          :Domain_abstract .
  
  :UseCase_adaptation
          a           spec:UseCase ;
          rdfs:label  "adaptation" .
  
  :SoftwareEngineeringMethod_test_driven_development
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Test Driven Development" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_system_architect , :Role_technical_project_manager , :Role_systems_engineer ;
          gen:hasMethodTag         :AuthorTag_failure , :AuthorTag_refactoring , :AuthorTag_test ;
          gen:wikiEntry            "Test-driven development (TDD) is a software development process that asks developers to start<br>\ndeveloping a new feature from programming its test case, then make failed test<br>\ncase successful, and refactor the code. TDD is used by development teams to<br>\nreduce defect numbers and make the software tending to be better designed." .
  
  :Author_fries_edgar
          a           cont:Author ;
          rdfs:label  "fries edgar" .
  
  :DesignPattern_workload_sharing
          a                              gen:DesignPattern ;
          rdfs:label                     "Workload Sharing" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_affordability , :ArchitecturalQuality_availability , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_proxy
          a                              gen:DesignPattern ;
          rdfs:label                     "Proxy" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_correctness , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_testability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_portability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_installability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_replicability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_composability , :ArchitecturalQuality_expressiveness , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_manageability , :ArchitecturalQuality_versatility , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_operability ;
          gen:isAlternativeOf            :DesignTactic_increase_cohesion , :DesignTactic_reduce_coupling , :DesignTactic_composition , :DesignTactic_abstraction , :DesignTactic_layering ;
          gen:wikiEntry                  "[Wikipedia Proxy Pattern 2014] A Proxy provides a placeholder for another object to control access reduce cost and reduce complexity. (GoF structural pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Proxy_pattern .
  
  :DesignTactic_network_tolerance
          a           gen:DesignTactic ;
          rdfs:label  "network tolerance" .
  
  :ArchitecturalQuality_likeability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "likeability" , "Likeability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_self-descriptiveness , :DesignPattern_reflection , :DesignPattern_offline_reporting , :DesignPattern_continual_status_reporting , :DesignPattern_breadcrumbs , :DesignPattern_operational_monitoring_and_alerting ;
          gen:relatedQuality       :ArchitecturalQuality_usability ;
          gen:wikiEntry            "Likeablity   desribes the degree of desire to use or recommend a product or system.  [Jaspreet Singh 2009]If people likea product they are more likely to use it and to recommend it to others.  [Alan Gillies 2011]Likeability is a measure of how well people like the system.    Attractiveness" ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_configurability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Configurability" , "configurability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignPattern_at-least-once_delivery , :DesignTactic_layering , :DesignPattern_capturing_architectural_requirements , :DesignPattern_bridge , :DesignPattern_mediator , :DesignPattern_component_configurator , :DesignPattern_task_precondition_-_data_existence , :DesignPattern_timeout-based_delivery , :DesignPattern_environment_to_task_-_push , :DesignPattern_data-based_routing , :DesignPattern_composite , :DesignPattern_facade , :DesignTactic_convention_over_configuration , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_proxy , :DesignPattern_module , :DesignTactic_softcoding , :DesignPattern_transaction-based_delivery , :DesignPattern_runtime_reconfiguration_pattern , :DesignPattern_exactly-once_delivery , :DesignPattern_default , :DesignTactic_messaging ;
          gen:relatedQuality       :ArchitecturalQuality_controllability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_usability , :ArchitecturalQuality_serviceability , :ArchitecturalQuality_observability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_composability ;
          gen:wikiEntry            "<p><strong>Configurability</strong></p>\n<p>Configurability describes theability of a system or component to be customized to specific environments or user settings.&nbsp;</p>" ;
          spec:requiredBy          :Domain_abstract .
  
  cont:Project  a          owl:Class ;
          rdfs:label       "Project" ;
          rdfs:subClassOf  cont:ContextInformationElement .
  
  :DesignPattern_aggregated_routing
          a                              gen:DesignPattern ;
          rdfs:label                     "Aggregated Routing" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_routing ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_system_integration
          a                             gen:DesignTactic ;
          rdfs:label                    "system integration" , "System Integration" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_portability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_interoperability ;
          gen:wikiEntry                 "Inengineeringsystem integrationis defined as the process of bringing together the componentsubsystemsinto one system and ensuring that the subsystems function together as a system.Ininformation technologysystems integrationis the process of linking together different computing systems and software applications physically or functionallyto act as a coordinated whole. Thesystem integratorbrings together discrete systems utilizing a variety of techniques such ascomputer networkingenterprise application integrationbusiness process managementor manualprogramming.[Wikipedia System Integration 2014]" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignDecision_kdd-03__pb-server_interface
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-03: PB-Server Interface" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span lang=\"EN-US\">Currently, the following </span><span lang=\"EN-US\">functionalities</span><span lang=\"EN-US\"> in the Patient Browser (PB) go through different server side components.&nbsp;</span>With the unification of the client-server interfaces, the PB needs to go through the web interface to communicate with the server, instead of directly plugging to the server component.</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><strong><span lang=\"EN-GB\">No.</span></strong></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><strong><span lang=\"EN-GB\">Functionality</span></strong></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><strong><span lang=\"EN-GB\">Server Component</span></strong></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">1</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">QA Functionalities :</span></p>\n<p><span lang=\"EN-US\">a.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Patient / Study Rename</span></p>\n<p><span lang=\"EN-US\">b.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Save as</span></p>\n<p><span lang=\"EN-US\">c.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Series Move</span></p>\n<p><span lang=\"EN-US\">d.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Study Merge</span></p>\n<p><span lang=\"EN-US\">e.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Study Move</span></p>\n<p><span lang=\"EN-US\">f.&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Delete</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">QAWfMgr</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">2</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">Patient/Study/Series lock / unlock</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">DBLib</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">3</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">Set/Reset Global Access</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">DBLib</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">4</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">Patient/Study/Series delete protect / unprotect</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">DBLib</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">5</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">Set / Reset Emergency flag</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">DBLib</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">6</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">Copy to Auto archive</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">DBLib</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">7</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">OEM operations available in Reporting client, but not in web client</span></p>\n<p><span lang=\"EN-US\">a.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Update Report Status</span></p>\n<p><span lang=\"EN-US\">b.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\">Close Exam and Update Report Status</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">DBLib</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">8</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">Manual / Demo Worklist</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">DDM</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">9</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">Copy To Filming (Add-on)</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">DBLib</span></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"73\">\n<p><span lang=\"EN-US\">10</span></p>\n</td>\n<td valign=\"top\" width=\"352\">\n<p><span lang=\"EN-US\">Modaility Worklist Query for QA</span></p>\n</td>\n<td valign=\"top\" width=\"213\">\n<p><span lang=\"EN-US\">NI</span></p></td></tr></tbody></table><p><br></p>" ;
          spec:decisionArchitecturalView  "1. Component View" ;
          spec:hasDecisionDomain          :Domain_arch-1__client-server_interface , :Domain_arch-3__replace_atl_server ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces .
  
  :Domain_any  a      spec:Domain ;
          rdfs:label  "any" .
  
  :Author_golm_michael
          a           cont:Author ;
          rdfs:label  "golm michael" .
  
  :DesignTactic_access_control
          a           gen:DesignTactic ;
          rdfs:label  "access control" .
  
  :DesignPattern_maintenance_interface
          a                              gen:DesignPattern ;
          rdfs:label                     "Maintenance Interface" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_safety , :ArchitecturalQuality_maturity , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_resilience , :ArchitecturalQuality_viability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_dependability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_kdd-04__process_architecture
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-04: Process Architecture" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<h2 style=\"text-align: left;\" align=\"center\">Process Architecture</h2>\n<p><span lang=\"EN-US\" style=\"font-size: 12pt;\">The process architecture covers the following design concerns:</span></p>\n<ul>\n<li><span style=\"font-size: 12pt;\">The way in which the&nbsp;Camunda processes act upon external resources (e.g., SAMBA, CIRCE, AUTOCAD, ...)</span></li>\n<li><span lang=\"DE-AT\" style=\"font-size: 12pt;\">Data handling, communication, synchronization, &hellip;</span></li>\n<li><span style=\"font-size: 12pt;\">The number of types of processes needed to implement process monitoring, mining, and adaptation</span></li>\n</ul>\n<p><span style=\"font-size: 12pt;\"><!-- [if !supportLists]--></span></p>\n<p><strong><span style=\"font-size: 12pt;\">Proposed Solution:&nbsp;</span></strong></p>\n<p><span style=\"font-size: 12pt;\">Separate application concerns from process monitoring, mining, and adaptation using three different processes:</span></p>\n<ul>\n<li><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">A</span><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">&nbsp;use case-based process (henceforth denoted <strong>Main Productive (Business) Process</strong>)</span></li>\n<li><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">An <strong>Adaptation Process</strong> which deals with the runtime</span><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">&nbsp;adaption of&nbsp;the main process</span></li>\n<li><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\">A&nbsp;</span><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em;\"><strong>Monitoring and Mining Process</strong> that monitors and mines the process database informs the adaptation processes</span></li>\n</ul>\n<p><span style=\"font-size: 12pt;\"><span lang=\"EN-US\"><img src=\"p/Shape/process_architecture.png\" alt=\"\" width=\"593\" height=\"401\" /></span></span></p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-02__safety_assurance ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_composability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity , :ArchitecturalQuality_safety , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_maintainability ;
          spec:useDecisionTactic          :DesignTactic_separation_of_concerns .
  
  :DesignTactic_asynchronous_communication
          a                             gen:DesignTactic ;
          rdfs:label                    "Asynchronous Communication" , "asynchronous communication" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_performance , :ArchitecturalQuality_reliability , :ArchitecturalQuality_utility , :ArchitecturalQuality_scalability ;
          gen:wikiEntry                 "Asynchronous communication is the exchange of messages among the hosts on a network or devices in a computer by reading and responding as schedules permit rather than according to some clock that is synchronized for both the sender and receiver or in real time. It is usually used to describe communications in which data can be transmitted intermittently rather than in a steady stream. Asynchronous communications also include computer-based exchanges of messages for which the participants need not be available or online at the same time but rather read and respond as their schedules (and desires) permit (Taken from Linux Information Project)." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignDecision_kdd-41
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-41" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Data-Marts</strong><br></p><p>Das Aggregieren und Partitionieren der Daten wird nach dem Data-Mart-Konzept realisiert. Ein Data-Mart ist eine Kopie eines Teildatenbestandes aus dem DWH, die für einen bestimmten Organisationsbereich oder eine bestimmte Anwendung oder Analyse erstellt wird.</p><p><strong>Anmerkung:</strong> Diese Architekturentscheidung stammt aus dem DWH-Design und wird hier nur informativ vollständigkeitshalber aufgeführt.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-107__multi-tenancy_support , :Domain_ar-161__access_control , :Domain_ar-101__dwh_querying ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_aggregation , :DesignTactic_multitenancy , :DesignTactic_authorization .
  
  :Domain_ar-025__perceived_resillience
          a           spec:Domain ;
          rdfs:label  "ar-025: perceived resillience" .
  
  :ArchitecturalQuality_sustainability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Sustainability" , "sustainability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_reflection , :DesignPattern_competing_consumers , :DesignTactic_dynamic_binding , :DesignTactic_producer_consumer , :DesignTactic_feasibility_study , :DesignPattern_pipe_and_filter , :DesignPattern_publish_subscribe ;
          gen:relatedQuality       :ArchitecturalQuality_suitability ;
          gen:wikiEntry            "[Computational Sustainability [date unknown]] Sustainability is an interdisciplinary field thatrefers to apply techniques from areas such as computer science information science operations research applied mathematics and statistics for balancing environmental economic and societal needsto createsustainable development. Sustainable engineering refers to the design or the operation of systems so that theyuse energy and resources sustainably [Wikipedia Sustainable Engineering 2014].   Relations" ;
          spec:requiredBy          :Domain_abstract .
  
  :Domain_none  a     spec:Domain ;
          rdfs:label  "none" .
  
  sear:UserQueryElement
          a                owl:Class ;
          rdfs:label       "User Query Element" ;
          rdfs:subClassOf  sear:QueryElement .
  
  :DesignTactic_load_balancing
          a           gen:DesignTactic ;
          rdfs:label  "load balancing" .
  
  spec:hasPatternDomain
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:DesignPattern ;
          rdfs:label          "isUsedIn" ;
          rdfs:subPropertyOf  spec:address .
  
  :AuthorTag_metrics  a  cont:AuthorTag ;
          rdfs:label  "metrics" .
  
  :Domain_ar-004__api_protection
          a           spec:Domain ;
          rdfs:label  "ar-004: api protection" .
  
  :DesignPattern_strategy
          a                              gen:DesignPattern ;
          rdfs:label                     "Strategy" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_composability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_structuredness ;
          gen:isAlternativeOf            :DesignTactic_composition ;
          gen:wikiEntry                  "[Wikipedia Strategy Pattern 2014] A Strategy allows one of a family of algorithms to be selected on-the-fly at runtime. (GoF behavioral pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Strategy_pattern .
  
  :DesignPattern_esb  a                  gen:DesignPattern ;
          rdfs:label                     "ESB" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_secopatterns ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf            :DesignTactic_routing ;
          gen:wikiEntry                  "<h2>Enterprise Service Bus <span class=\"title_small\">(Erl, Little, Rischbeck, Simon)</span></h2>\t\t\t\t<div class=\"content_box\"><!--BEGIN CONTENT-->\t\n\n\n\t\n\t<p>An enterprise service bus represents an environment designed to foster sophisticated interconnectivity between services. It establishes an intermediate layer of processing that can help overcome common problems associated with reliability, scalability, and communications disparity.</p>\n\t\n\t<p class=\"podcast\">Listen to the podcasts that accompany this site\n\t\t<br><a target=\"_blank\" href=\"http://www.informit.com/podcasts/episode.aspx?e=ff4c8bed-3552-4e2c-a3ed-28c5039e2da5\">The ESB and Related Messaging Patterns</a>\n\t\t<br><a target=\"_blank\" href=\"http://www.informit.com/podcasts/episode.aspx?e=91d14490-7697-40a0-bdc3-e9704f008a29\">Versioning in SOA</a>\n\t</p>\n\t\n\t<div class=\"figure\">\n\t\t<img alt=\"Enterprise Service Bus\" title=\"Enterprise Service Bus\" src=\"http://soapatterns.org/static/images/figures/enterprise_service_bus/fig1.png\" class=\"error\"></div></div>" ;
          spec:hasPatternDomain          :Domain_soa ;
          owl:sameAs                     dbr:Enterprise_service_bus .
  
  :DesignPattern_failover
          a                              gen:DesignPattern ;
          rdfs:label                     "Failover" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_scalability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_complexity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_availability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_resilience ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_dependability ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "<p style=\"line-height:normal;margin:0cm 0cm 0pt;vertical-align:top\" class=\"MsoNormal\"><span style=\"font-family:'Verdana','sans-serif';color:black;font-size:13.5pt\" lang=\"EN-US\">Failover</span></p>\n<p style=\"line-height:normal;margin:0cm 0cm 0pt;vertical-align:top\" class=\"MsoNormal\"><span style=\"color:black;font-size:10pt\" lang=\"EN-US\"><font face=\"Arial\"></font></span>&nbsp;</p><span style=\"color:black;font-size:10pt\" lang=\"EN-US\"><font face=\"Arial\">\n<p style=\"margin:0cm 0cm 10pt\" class=\"MsoNormal\"><span style=\"line-height:115%;font-size:10pt\" lang=\"EN-US\">The <i>Failover</i> <i>Pattern </i>is used when the system has detected an error in one of the redundant elements that unfortunately is the active element. None of the recovery or mitigation techniques did succeed in restoring error-free execution. </span></p>\n<p style=\"margin:0cm 0cm 10pt\" class=\"MsoNormal\"><span style=\"line-height:115%;font-size:10pt\" lang=\"EN-US\">The <i>Failover Pattern </i>provides the solution to add redundant elements to the system so that when an active element fails, execution can continue on the redundant element. This redundant element is based on <a href=\"https://workspace.cee.siemens.com/content/00000102/Wiki/Replication.aspx\" target=\"_blank\">Replication</a>.</span></p>\n<p style=\"margin:0cm 0cm 10pt\" class=\"MsoNormal\"><span style=\"line-height:115%;font-size:10pt\" lang=\"EN-US\">Important factors are failover time and common data access. The system must establish someone in charge for steering and needs proper quarantine for the faulty system part <a href=\"https://workspace.cee.siemens.com/content/00000102/Lists/References/DispForm.aspx?ID=149\" target=\"_blank\">[Hanmer 2007]</a>&nbsp;pp 163-165.</span></p>\n</font><p style=\"line-height:normal;margin:0cm 0cm 10pt;vertical-align:top\" class=\"MsoNormal\"><font face=\"Arial\"></font><span style=\"line-height:150%;color:black;font-size:12pt\" lang=\"EN-US\"><font face=\"Arial\">Relations</font></span></p></span>" , "The Failover Pattern is used when the system has detected an error in one of the redundant elements that unfortunately is the active element. None of the recovery or mitigation techniques did succeed in restoring error-free execution. The Failover Pattern provides the solution to add redundant elements to the system so that when an active element fails execution can continue on the redundant element. This redundant element is based on Replication. Important factors are failover time and common data access. The system must establish someone in charge for steering and needs proper quarantine for the faulty system part [Hanmer 2007]pp 163-165. Relations Error Handling [Hanmer 2007] Error Recovery Patterns pp 163-165. Fault Handling [Hanmer 2007] Error Recovery Patterns pp 163-165." , "<p style=\"line-height:normal;margin:0cm 0cm 0pt;vertical-align:top\" class=\"MsoNormal\"><span style=\"font-family:'Verdana','sans-serif';color:black;font-size:13.5pt\" lang=\"EN-US\">Failover</span></p>\n<p style=\"line-height:normal;margin:0cm 0cm 0pt;vertical-align:top\" class=\"MsoNormal\"><span style=\"color:black;font-size:10pt\" lang=\"EN-US\"><font face=\"Arial\"></font></span>&nbsp;</p><span style=\"color:black;font-size:10pt\" lang=\"EN-US\"><font face=\"Arial\">\n<p style=\"margin:0cm 0cm 10pt\" class=\"MsoNormal\"><span style=\"line-height:115%;font-size:10pt\" lang=\"EN-US\">The <i>Failover</i> <i>Pattern </i>is used when the system has detected an error in one of the redundant elements that unfortunately is the active element. None of the recovery or mitigation techniques did succeed in restoring error-free execution. </span></p>\n<p style=\"margin:0cm 0cm 10pt\" class=\"MsoNormal\"><span style=\"line-height:115%;font-size:10pt\" lang=\"EN-US\">The <i>Failover Pattern </i>provides the solution to add redundant elements to the system so that when an active element fails, execution can continue on the redundant element. This redundant element is based on <a href=\"https://workspace.cee.siemens.com/content/00000102/Wiki/Replication.aspx\" target=\"_blank\">Replication</a>.</span></p>\n<p style=\"margin:0cm 0cm 10pt\" class=\"MsoNormal\"><span style=\"line-height:115%;font-size:10pt\" lang=\"EN-US\">Important factors are failover time and common data access. The system must establish someone in charge for steering and needs proper quarantine for the faulty system part <a href=\"https://workspace.cee.siemens.com/content/00000102/Lists/References/DispForm.aspx?ID=149\" target=\"_blank\">[Hanmer 2007]</a>&nbsp;pp 163-165.</span></p>\n</font><p style=\"line-height:normal;margin:0cm 0cm 10pt;vertical-align:top\" class=\"MsoNormal\"><font face=\"Arial\"></font><span style=\"line-height:150%;color:black;font-size:12pt\" lang=\"EN-US\"><font face=\"Arial\">Relations</font></span></p><span style=\"color:#333333;font-size:10pt\" lang=\"EN-US\"><font face=\"Arial\">\n<p style=\"line-height:normal;margin:0cm 0cm 10pt;vertical-align:top\" class=\"MsoNormal\"><span style=\"color:#333333;font-size:10pt\" lang=\"EN-US\"><font face=\"Arial\">Error Handling: <a href=\"https://workspace.cee.siemens.com/content/00000102/Lists/References/DispForm.aspx?ID=149\" target=\"_blank\">[Hanmer 2007]</a> Error Recovery Patterns, pp 163-165.</font></span></p><span style=\"color:#333333;font-size:10pt\" lang=\"EN-US\"><font face=\"Arial\">\n<p style=\"line-height:normal;margin:0cm 0cm 10pt;vertical-align:top\" class=\"MsoNormal\"><span style=\"color:#333333;font-size:10pt\" lang=\"EN-US\"><font face=\"Arial\">Fault Handling: <a href=\"https://workspace.cee.siemens.com/content/00000102/Lists/References/DispForm.aspx?ID=149\" target=\"_blank\">[Hanmer 2007]</a> Error Recovery Patterns, pp 163-165.</font></span></p></font></span></font></span></span>" ;
          spec:hasPatternDomain          :Domain_safety_critical , :Domain_abstract .
  
  :SoftwareEngineeringMethod_systemic_structural_constellation__ssc_
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Systemic Structural Constellation (SSC)" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_system_architect , :Role_technical_project_manager , :Role_systems_engineer ;
          gen:hasMethodTag         :AuthorTag_goals , :AuthorTag_value , :AuthorTag_stakeholder ;
          gen:wikiEntry            "The goal of the method is to make complex topics visible and to get different views on the topic. In addition you can find solutions or test solutions you have thought about. This method is also helpful for situations or conflicts you don't understand at all." .
  
  :Project_repository
          a           cont:Project ;
          rdfs:label  "repository" .
  
  :DesignTactic_separation_of_concerns
          a                             gen:DesignTactic ;
          rdfs:label                    "separation of concerns" , "Separation of concerns" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_testability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_analyzability , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_modifiability ;
          gen:wikiEntry                 "Separation of concerns The degree to which the component under test has a single well defined responsibility.  [Wikipedia Separation of Concerns - 2015]In computer science separatioin of concerns (SoC) is a design principle for separating a computer program into distinct sections such that each section addresses a separate concern. A concern is a set of information that affects the code of a computer program." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  cont:ProjectPhase  a     owl:Class ;
          rdfs:label       "Project Phase" ;
          rdfs:subClassOf  cont:ContextInformationElement .
  
  :AuthorTag_risk_analysis
          a           cont:AuthorTag ;
          rdfs:label  "risk analysis" .
  
  :Requirement_req1  a               spec:Requirement ;
          rdfs:label                 "Req1" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_bpadapt ;
          gen:wikiEntry              "This is my first requirement" , "Requirement ...&nbsp;" , "This is my first requirement.&nbsp;" ;
          spec:containedWithin       :UseCase_adaptation ;
          spec:hasRequirementOrigin  :Domain_none , :Domain_ar-001__connection_control ;
          spec:requirementGroup      "G1" , "Security" ;
          spec:requirementPurpose    "Access control" , "Adapt SP2" .
  
  :DesignPattern_compute_resource_consolidation_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Compute Resource Consolidation Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown ;
          gen:isAlternativeOf            :DesignTactic_unknown ;
          gen:wikiEntry                  "Consolidate multiple tasks or operations into a single computational unit. This pattern can increase compute resource utilization and reduce the costs and management overhead associated with performing compute processing in cloud-hosted applications.[MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_aggregation
          a           gen:DesignTactic ;
          rdfs:label  "aggregation" .
  
  :AuthorTag_business
          a           cont:AuthorTag ;
          rdfs:label  "business" .
  
  :DesignPattern_task_to_environment_-_push
          a                              gen:DesignPattern ;
          rdfs:label                     "Task to Environment - Push" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_observability , :ArchitecturalQuality_availability , :ArchitecturalQuality_performance , :ArchitecturalQuality_controllability ;
          gen:isAlternativeOf            :DesignTactic_synchronous_communication , :DesignTactic_asynchronous_communication ;
          gen:wikiEntry                  "<h1 align=\"center\">Pattern 15 (Task to Environment - Push)</h1>\n<p><a href=\"http://www.workflowpatterns.com/patterns/data/external/wdp15_animation.php\" target=\"_blank\">FLASH animation of Data Interaction - Task to Environment - Push-Oriented pattern</a></p>\n<h2>Description</h2>\n<p align=\"justify\">The ability of a task to initiate the passing of data elements to a resource or service in the operating environment. \n</p><h2>Example</h2>\n<p align=\"justify\">The <em>Calculate Mileage </em> task passes the <em>mileage data </em> to the <em>Corporate Logbook </em> database for permanent recording. \n</p><h2>Motivation</h2>\n<p align=\"justify\">The passing of data from a  task to an external resource is most likely to be initiated by the task itself during its execution. Depending on the specific requirements of the data passing interaction, it may connect to an existing API or service interface in the operating environment or it may actually invoke the application or service to which it is forwarding the data. \n</p><h2 align=\"justify\">Overview</h2>\n<p align=\"justify\">Figure <a href=\"http://www.workflowpatterns.com/patterns/data/external/wdp15.php#figure14\" target=\"_blank\">14 </a> illustrates the various data passing scenarios between  tasks and the operating environment. \n</p><p align=\"center\"><a name=\"figure14\" id=\"figure14\" href=\"http://www.workflowpatterns.com/patterns/data/external/wdp15.php\" target=\"_blank\"><img src=\"http://www.workflowpatterns.com/patterns/data/images/workflow-case-15.png\" alt=\"Figure 14: Data interaction between workflow tasks and the operating environment\" name=\"figure14\" width=\"588\" height=\"268\" id=\"figure14\"></a>\n</p><p align=\"center\"><strong>Figure 14:</strong> Data interaction between workflow tasks and the operating environment \n</p><h2>&nbsp;</h2>\n<p align=\"justify\">There are a wide range of ways in which this pattern can be achieved, however these tend to divide into two categories:\n</p><div align=\"justify\">\n  <ul>\n    <li><em>Explicit integration mechanisms </em> - where the process environment provides specific constructs for passing data to the external environment.\n    </li><li><em>Implicit integration mechanisms </em> - where the data passing occurs implicitly within the programmatic implementations that make up tasks in the  process and is not directly supported by the process environment. </li>\n  </ul>\n</div>\n<p align=\"justify\">In both cases, the data passing activity is initiated by the task and occurs synchronously with task execution. Although, it is typically task-level data elements that are trafficked, any data items that are accessible to the task (i.e.&nbsp;parameters, scope block, case, folder and global data) may be transferred. </p>\n<h2 align=\"justify\">Context</h2>\n<p align=\"justify\">There are no specific context conditions associated with this pattern. </p>\n<h2 align=\"justify\">Implementation</h2>\n<p align=\"justify\">Staffware provides the Automatic Step construct for passing data elements from task instances to external programs. FLOWer enables data to be passed to external applications using the Operation Action construct and to external databases using Mapping Objects. COSA provides a broad number of Tool Agents which facilitate the passing of data to external applications and databases. Similarly iPlanet provides a range of XML and HTTP-based mechanisms that can be incorporated in task implementations for passing data to external applications. Websphere MQ  is more limited in its support and delegates the passing of data elements to user-defined program implementations. BPMN supports the pattern via a Message Flow from a Task to the boundary of a Pool representing the environment. XPDL and BPEL are limited to passing data elements to web services. </p>\n<h2>Issues</h2>\n<p align=\"justify\">One difficulty that can arise when sending data to an external application is knowing whether it was successfully delivered. This is particularly a problem when the external application does not provide immediate feedback on delivery status. </p>\n<h2>Solutions</h2>\n<p align=\"justify\">The most general solution to this problem is for a subsequent task in the case to request an update on the status of the delivery using a construct which conforms to the <em><a href=\"http://www.workflowpatterns.com/patterns/data/external/wdp16.php\" target=\"_blank\">Data Interaction - Environment to Task - Pull Oriented</a> </em>pattern (WDP-16) and requires an answer to be provided by the external application. Alternatively, the external application can lodge a notification of the delivery using some form of <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp38.php\" target=\"_blank\"><em>Event-based Task Trigger</em></a> (i.e pattern WDP 38) or by passing data back to the process (e.g. using the <em><a href=\"http://www.workflowpatterns.com/patterns/data/external/wdp17.php\" target=\"_blank\">Data Interaction - Environment to Task - Push-Oriented </a></em><a href=\"http://www.workflowpatterns.com/patterns/data/external/wdp17.php\" target=\"_blank\">pattern</a> (WDP-17) ). This is analogous to the messaging notion of asynchronous callback.</p>\n<h2>Evaluation Criteria</h2>\n<p>An offering achieves full support if it has a construct that satisfies the description for the pattern. It achieves a partial support rating if programmatic extensions are required to facilitate the data passing.</p>" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :SoftwareEngineeringMethod_theory_of_inventive_problems_solving__triz_
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Theory of Inventive Problems Solving (TRIZ)" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_technical_project_manager ;
          gen:hasMethodTag         :AuthorTag_problem-solving ;
          gen:wikiEntry            "there is a problem for which no easy solution exists, brainstorming doesn't help. The problem has rather technical background and ideally contains a contradiction - improvements of some parameters results to increasing problems with others." .
  
  :DesignPattern_push_monitor
          a                              gen:DesignPattern ;
          rdfs:label                     "Push Monitor" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_debuggability , :ArchitecturalQuality_observability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_monitoring ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_address_arithmetic
          a                              gen:DesignPattern ;
          rdfs:label                     "Address arithmetic" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Address arithmetic</h1>\n\n<ul class=\"content-list-1\">\n<li><a href=\"http://www.viva64.com/en/l/full/#ID0EPNAG\" target=\"_blank\">Array indexing</a></li>\n<li><a href=\"http://www.viva64.com/en/l/full/#ID0ETYBI\" target=\"_blank\">Diagnosis</a></li>\n</ul>\n<p>We have chosen the 13-th lesson to discuss the errors related to <a href=\"http://www.viva64.com/en/t/0005/\" class=\"link-inner\" target=\"_blank\">address arithmetic</a> deliberately. The errors related to pointer arithmetic in 64-bit systems are the most insidious and it would be good that number 13 made you more attentive.</p>\n<p>The main idea of the pattern is - use only <a href=\"http://www.viva64.com/en/t/0030/\" class=\"link-inner\" target=\"_blank\">memsize</a>-types in address arithmetic to avoid errors in 64-bit code.</p>\n<p>Consider this code:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">unsigned</span><span class=\"pln\"> </span><span class=\"kwd\">short</span><span class=\"pln\"> a16</span><span class=\"pun\">,</span><span class=\"pln\"> b16</span><span class=\"pun\">,</span><span class=\"pln\"> c16</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">pointer</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">...</span><span class=\"pln\">\npointer </span><span class=\"pun\">+=</span><span class=\"pln\"> a16 </span><span class=\"pun\">*</span><span class=\"pln\"> b16 </span><span class=\"pun\">*</span><span class=\"pln\"> c16</span><span class=\"pun\">;</span></code></pre>\n<p>This sample works correctly with pointers if the result of the expression \"a16 * b16 * c16\" does not exceed INT_MAX (2147483647). This code could always work correctly on a 32-bit platform, because on the 32-bit architecture a program does not have so much memory to create an array of such a size. On the 64-bit architecture, this limitation has been removed and the size of the array may well get larger than INT_MAX items. Suppose we want to shift the value of the pointer in 6.000.000.000 bytes, so the variables <span class=\" span-i\">a16</span>, <span class=\" span-i\">b16</span> and <span class=\" span-i\">c16</span> have the values 3000, 2000 and 1000 respectively. When calculating the expression \"a16 * b16 * c16\", all the variables will be cast to \"int\" type at first, according to C++ rules, and only then they will be multiplied. An overflow will occur during the multiplication. The incorrect result will be extended to the type <a href=\"http://www.viva64.com/en/t/0041/\" class=\"link-inner\" target=\"_blank\">ptrdiff_t</a> and the pointer will be calculated incorrectly.</p>\n<p>You should be very attentive and avoid possible overflows when dealing with pointer arithmetic. It is good to use memsize-types or explicit type conversions in those expressions that contain pointers. Using an explicit type conversion we may rewrite our code sample in the following way:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">short</span><span class=\"pln\"> a16</span><span class=\"pun\">,</span><span class=\"pln\"> b16</span><span class=\"pun\">,</span><span class=\"pln\"> c16</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">pointer</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">...</span><span class=\"pln\">\npointer </span><span class=\"pun\">+=</span><span class=\"pln\"> </span><span class=\"kwd\">static_cast</span><span class=\"str\">&lt;ptrdiff_t&gt;</span><span class=\"pun\">(</span><span class=\"pln\">a16</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">\n           </span><span class=\"kwd\">static_cast</span><span class=\"str\">&lt;ptrdiff_t&gt;</span><span class=\"pun\">(</span><span class=\"pln\">b16</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">\n           </span><span class=\"kwd\">static_cast</span><span class=\"str\">&lt;ptrdiff_t&gt;</span><span class=\"pun\">(</span><span class=\"pln\">c16</span><span class=\"pun\">);</span></code></pre>\n<p>If you think that inaccurately written programs encounter troubles only when dealing with large data amounts, we have to disappoint you. Consider an interesting code sample working with an array that contains just 5 items. This code works in the 32-bit version and does not work in the 64-bit one:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">int</span><span class=\"pln\"> A </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">unsigned</span><span class=\"pln\"> B </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">int</span><span class=\"pln\"> array</span><span class=\"pun\">[</span><span class=\"lit\">5</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pln\"> </span><span class=\"pun\">};</span><span class=\"pln\">\n</span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">ptr </span><span class=\"pun\">=</span><span class=\"pln\"> array </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pun\">;</span><span class=\"pln\">\nptr </span><span class=\"pun\">=</span><span class=\"pln\"> ptr </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">A </span><span class=\"pun\">+</span><span class=\"pln\"> B</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">//Invalid pointer value on 64-bit platform</span><span class=\"pln\">\nprintf</span><span class=\"pun\">(</span><span class=\"str\">\"%i\\n\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">ptr</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">//Access violation on 64-bit platform</span></code></pre>\n<p>Let us follow the algorithm of calculating the expression \"ptr + (A + B)\":</p>\n<ul class=\" list-level0 list-bullet\">\n<li>According to C++ rules, the variable A of the type <span class=\" span-i\">int</span> is converted to <span class=\" span-i\">unsigned</span>.</li>\n<li>A and B are summed and we get the value 0xFFFFFFFF of <span class=\" span-i\">unsigned</span> type.</li>\n<li>The expression \"ptr + 0xFFFFFFFFu\" is calculated.</li>\n</ul>\n<p>The result of this process depends upon the size of the pointer on a particular architecture. If the addition takes place in the 32-bit program, the expression is equivalent to \"ptr - 1\" and the program successfully prints the value \"3\". In the 64-bit program, the value 0xFFFFFFFFu is fairly added to the pointer. As a result, the pointer gets far outside the array while we encounter some troubles when trying to get access to the item by this pointer.</p>\n<p>Like in the first case, we recommend you to use only memsize-types in pointer arithmetic to avoid the situation described above. Here are two ways to correct the code:</p>\n<pre class=\"clear cleared\"><code><span class=\"pln\">ptr </span><span class=\"pun\">=</span><span class=\"pln\"> ptr </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"pln\">A</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"pln\">B</span><span class=\"pun\">));</span><span class=\"pln\">\n</span><span class=\"typ\">ptrdiff_t</span><span class=\"pln\"> A </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> B </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">...</span><span class=\"pln\">\nptr </span><span class=\"pun\">=</span><span class=\"pln\"> ptr </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">A </span><span class=\"pun\">+</span><span class=\"pln\"> B</span><span class=\"pun\">);</span></code></pre>\n<p>You may argue and propose this way:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">int</span><span class=\"pln\"> A </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">2</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">int</span><span class=\"pln\"> B </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">...</span><span class=\"pln\">\nptr </span><span class=\"pun\">=</span><span class=\"pln\"> ptr </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">A </span><span class=\"pun\">+</span><span class=\"pln\"> B</span><span class=\"pun\">);</span></code></pre>\n<p>Yes, this code can work but it is bad due to some reasons:</p>\n<ul class=\" list-level0 list-bullet\">\n<li>It trains programmers to be inaccurate when working with pointers. You might forget all the details of the code some time later and again redefine one of the variables with <span class=\" span-i\">unsigned</span> type by mistake.</li>\n<li>It is potentially dangerous to use non-memsize types together with the pointers. Suppose the variable Delta of <span class=\" span-i\">int</span> type participates in an expression with a pointer. This expression is quite correct. But an error may hide in the process of calculating the variable Delta because 32 bits might be not enough to perform the necessary calculations while working with large data arrays. You can automatically avoid this danger by using a memsize-type for the variable Delta.</li>\n<li>A code that uses the types <span class=\" span-i\">size_t</span>, <span class=\" span-i\">ptrdiff_t</span> and other memsize-types when working with pointers leads to a more appropriate binary code. We will speak about it in one of the following lessons.</li>\n</ul>\n<h2>Array indexing<a name=\"ID0EPNAG\" href=\"http://www.viva64.com/en/l/full/\" target=\"_blank\"></a></h2>\n<p>We single out this type of errors to make our description more structured because array indexing with the use of square brackets is just another way of writing the address arithmetic we have discussed above.</p>\n<p>You may encounter errors related to indexing large arrays or eternal loops in programs that process large amounts of data. The following example contains 2 errors at once:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pln\"> size </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">...;</span><span class=\"pln\">\n</span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">array </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">...;</span><span class=\"pln\">\n</span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"kwd\">end</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> array </span><span class=\"pun\">+</span><span class=\"pln\"> size</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">unsigned</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">!=</span><span class=\"pln\"> size</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"pun\">++</span><span class=\"pln\">i</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> one </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"kwd\">end</span><span class=\"pun\">[-</span><span class=\"pln\">i </span><span class=\"pun\">-</span><span class=\"pln\"> one</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></code></pre>\n<p>The first error lies in the fact that an eternal loop may occur if the size of the processed data exceeds 4 Gbytes (0xFFFFFFFF), because the variable \"i\" has \"unsigned\" type and will never reach a value larger than 0xFFFFFFFF. It is possible but not certain - it depends upon the code the compiler will build. For example, there will be no eternal loop in the debug mode while it will completely disappear in the release version, because the compiler will decide to optimize the code using the 64-bit register for the counter and the loop will become correct. All this adds confusion and a code that was good yesterday stops working today.</p>\n<p>The second error is related to negative values of the indexes serving to walk the array from end to beginning. This code works in the 32-bit mode but crashes in the 64-bit one right with the first iteration of the loop as an access outside the array's bounds occurs. Let us consider the cause of this behavior.</p>\n<p>Although everything written below is the same as in the example with \"ptr = ptr + (A + B)\", we resort to this repetition deliberately. We need to show you that a danger may hide even in simple constructs and take various forms.</p>\n<p>According to C++ rules, the expression \"-i - one\" will be calculated on a 32-bit system in the following way (i = 0 at the first step):</p>\n<ul class=\" list-level0 list-decimal\">\n<li>The expression \"-i\" has \"unsigned\" type and equals 0x00000000u.</li>\n<li>The variable \"one\" is extended from the type \"int\" to the type \"unsigned\" and equals 0x00000001u. Note: the type \"int\" is extended (according to C++ standard) to the type \"unsigned\" if it participates in an operation where the second argument has the type \"unsigned\".</li>\n<li>Two values of the type \"unsigned\" participate in a subtraction operation and its result equals 0x00000000u - 0x00000001u = 0xFFFFFFFFu. Note that the result has \"unsigned\" type.</li>\n</ul>\n<p>On a 32-bit system, calling an array by the index 0xFFFFFFFFu is equivalent to using the index \"-1\". I.e. end[0xFFFFFFFFu] is analogous to end[-1]. As a result, the array's item is processed correctly. But the picture will be different in a 64-bit system: the type \"unsigned\" will be extended to the signed \"ptrdiff_t\" and the array's index will equal 0x00000000FFFFFFFFi64. It results in an overflow.</p>\n<p>To correct the code you need to use such types as <span class=\" span-i\">ptrdiff_t</span> and <span class=\" span-i\">size_t</span>.</p>\n<p>To completely convince you that you should use only memsize-types for indexing and in address arithmetic expressions, here is the code sample for you to consider.</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Region</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">float</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">array</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"typ\">Width</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Height</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Depth</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"kwd\">float</span><span class=\"pln\"> </span><span class=\"typ\">Region</span><span class=\"pun\">::</span><span class=\"typ\">GetCell</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> x</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> y</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> z</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"pun\">...</span><span class=\"pln\">\n</span><span class=\"pun\">};</span><span class=\"pln\">\n</span><span class=\"kwd\">float</span><span class=\"pln\"> </span><span class=\"typ\">Region</span><span class=\"pun\">::</span><span class=\"typ\">GetCell</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> x</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> y</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> z</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> array</span><span class=\"pun\">[</span><span class=\"pln\">x </span><span class=\"pun\">+</span><span class=\"pln\"> y </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Width</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> z </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Width</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Height</span><span class=\"pun\">];</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></code></pre>\n<p>This code is taken from a real program of mathematical modeling where the amount of memory is the most important resource, so the capability of using more than 4 Gbytes on a 64-bit architecture significantly increases the computational power. Programmers often use one-dimensional arrays in programs like this to save memory while treating them as three-dimensional arrays. For this purpose, they use functions analogous to <span class=\" span-i\">GetCell</span> which provide access to the necessary items. But the code above will work correctly only with arrays that contain less than INT_MAX items because it is 32-bit \"int\" types that are used to calculate the item's index.</p>\n<p>Programmers often make a mistake trying to correct the code in this way:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">float</span><span class=\"pln\"> </span><span class=\"typ\">Region</span><span class=\"pun\">::</span><span class=\"typ\">GetCell</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> x</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> y</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> z</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> array</span><span class=\"pun\">[</span><span class=\"kwd\">static_cast</span><span class=\"str\">&lt;ptrdiff_t&gt;</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> y </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Width</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\">\n               z </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Width</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Height</span><span class=\"pun\">];</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></code></pre>\n<p>They know that, according to C++ rules, the expression to calculate the index has the type \"ptrdiff_t\" and hope to avoid an overflow thereby. But the overflow may occur inside the expression \"y * Width\" or \"z * Width * Height\" because it is still the type \"int\" which is used to calculate them.</p>\n<p>If you want to correct the code without changing the types of the variables participating in the expression, you may explicitly convert each variable to a memsize-type:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">float</span><span class=\"pln\"> </span><span class=\"typ\">Region</span><span class=\"pun\">::</span><span class=\"typ\">GetCell</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> x</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> y</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> z</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> array</span><span class=\"pun\">[</span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\">\n               </span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"pln\">y</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"typ\">Width</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\">\n               </span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"pln\">z</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"typ\">Width</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">\n               </span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"typ\">Height</span><span class=\"pun\">)];</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></code></pre>\n<p>Another - better - solution is to change the types of the variables to a memsize-type:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">typedef</span><span class=\"pln\"> </span><span class=\"typ\">ptrdiff_t</span><span class=\"pln\"> </span><span class=\"typ\">TCoord</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Region</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">float</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">array</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"typ\">TCoord</span><span class=\"pln\"> </span><span class=\"typ\">Width</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Height</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Depth</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"kwd\">float</span><span class=\"pln\"> </span><span class=\"typ\">Region</span><span class=\"pun\">::</span><span class=\"typ\">GetCell</span><span class=\"pun\">(</span><span class=\"typ\">TCoord</span><span class=\"pln\"> x</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">TCoord</span><span class=\"pln\"> y</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">TCoord</span><span class=\"pln\"> z</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"pun\">...</span><span class=\"pln\">\n</span><span class=\"pun\">};</span><span class=\"pln\">\n</span><span class=\"kwd\">float</span><span class=\"pln\"> </span><span class=\"typ\">Region</span><span class=\"pun\">::</span><span class=\"typ\">GetCell</span><span class=\"pun\">(</span><span class=\"typ\">TCoord</span><span class=\"pln\"> x</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">TCoord</span><span class=\"pln\"> y</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">TCoord</span><span class=\"pln\"> z</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> array</span><span class=\"pun\">[</span><span class=\"pln\">x </span><span class=\"pun\">+</span><span class=\"pln\"> y </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Width</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> z </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Width</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\"> </span><span class=\"typ\">Height</span><span class=\"pun\">];</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></code></pre>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignPattern_watchdog
          a                              gen:DesignPattern ;
          rdfs:label                     "Watchdog" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_dependability , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility , :ArchitecturalQuality_viability , :ArchitecturalQuality_safety , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_maturity , :ArchitecturalQuality_integrity , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience , :ArchitecturalQuality_robustness , :ArchitecturalQuality_survivability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "A Watchdog is a timer that triggers an event after a predefined time interval. For example if an operation fails to finish its execution after a predefined time the watchdog is able to report an error upon which repair actions such as resting the state can be performed [Hanmer 2007]pp 107-109.   This pattern shares great ressemblance with the monitor patterns. A key difference is that a monitor watches a number of tasks whereas a Watchdog is assigned to monitor only one.  Relations Error Detection [Hanmer 2007]Detection Patterns pp 107-109." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_event_message
          a                              gen:DesignPattern ;
          rdfs:label                     "Event Message" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_consistency , :ArchitecturalQuality_scalability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_maturity , :ArchitecturalQuality_traceability , :ArchitecturalQuality_visibility , :ArchitecturalQuality_complexity , :ArchitecturalQuality_efficiency ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_visibility ;
          gen:isAlternativeOf            :DesignTactic_message_construction , :DesignTactic_isolation , :DesignTactic_fault_handling ;
          spec:hasPatternDomain          :Domain_software_ecosystems , :Domain_embedded_systems , :Domain_abstract .
  
  :Domain_ar-107__multi-tenancy_support
          a           spec:Domain ;
          rdfs:label  "ar-107: multi-tenancy support" .
  
  :DesignDecision_kdd-08__32_64-bit_portability
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-08: 32/64-Bit Portability" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p>Take into account the guidelines from&nbsp;the following websites:</p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">Programming Guide for 64-bit Windows: <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/bb427430(v=vs.85).aspx\">https://msdn.microsoft.com/en-us/library/windows/desktop/bb427430(v=vs.85).aspx</a></span></li>\n<li><span style=\"line-height: 1.3em;\">VIVA64&nbsp;Lessons on development of 64-bit C/C++ applications: <a href=\"http://www.viva64.com/en/l/full/#710073812\">http://www.viva64.com/en/l/full/#710073812</a></span></li>\n</ul>\n<p><strong>Benefits of 64-bit Windows</strong></p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">A 64-bit operating system supports far more physical memory than a 32-bit operating system. For example, most 32-bit Windows systems support a maximum of 4 gigabytes of physical memory, with up to 3 gigabytes of address space for each process, while 64-bit Windows supports up to 2 terabytes of physical memory with 8 terabytes of address space for each process. The increased physical memory includes the following benefits for applications:</span></li>\n<li><span style=\"line-height: 1.3em;\">Each application can support more users. All or part of each application must be replicated for each user, which requires additional memory.</span></li>\n<li><span style=\"line-height: 1.3em;\">Each application has better performance. Increased physical memory allows more applications to run simultaneously and remain completely resident in the system's main memory. This reduces or eliminates the performance penalty of swapping pages to and from disk.</span></li>\n<li><span style=\"line-height: 1.3em;\">Each application has more memory for data storage and manipulation. Databases can store more of their data in the physical memory of the system. Data access is faster because disk reads are not necessary.</span></li>\n<li><span style=\"line-height: 1.3em;\">Applications can manipulate large amounts of data easily and more reliably. Video composition for motion picture work requires 64-bit Windows for this reason. Modeling for scientific and financial applications benefits greatly from memory-resident data structures that are not possible on 32-bit Windows.</span></li>\n</ul>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_arch-5__64-bit_code ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_portability ;
          spec:useDecisionTactic          :DesignTactic_64-bit_ready_code .
  
  :DesignPattern_deferrable_work
          a                              gen:DesignPattern ;
          rdfs:label                     "Deferrable Work" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_dependability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_integrity , :ArchitecturalQuality_resilience , :ArchitecturalQuality_survivability , :ArchitecturalQuality_viability , :ArchitecturalQuality_utility , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_error_detection ;
          gen:wikiEntry                  "The pattern Deferrable Work makes routine work (only relevant in error case) deferrable. When more new work is arriving than the system can normally handle the mitigation techniques are working and the system is stable.  Remember that everything that the system does is important to someone. But not everything is directly related to the primary purpose of the system that means that tasks should not be deferred forever because that lowers the overall fault tolerance of the system [Hanmer 2007]pp 187-188.  Relations Error Detection [Hanmer 2007]Error Mitigation Patternspp 187-188. Error Handling [Hanmer 2007]Error Mitigation Patternspp 187-188." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_virtual_platform
          a                              gen:DesignPattern ;
          rdfs:label                     "Virtual Platform" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_efficiency , :ArchitecturalQuality_usability , :ArchitecturalQuality_transferability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_affordability ;
          gen:isAlternativeOf            :DesignTactic_change_propagation ;
          gen:wikiEntry                  "[Dyson and Longshaw 2004] pp. 343-345. A Virtual Platform is a solution to ensure that we can change the infrastructure the system is built on without needing to take major changes to the system itself.We have to choose a set of components and standardsthat insulate the system from thespecies of the infrastructue. Important would be to pick standards that are implemented by a number of different products on different platforms and components that have versions available for different platforms.   Relations Change Propagation Change propagation would fit to Virtual Platform because the infrastructure the system is build on can be changed so no major changes have to be made in the system itself. Usually clients must be adapted in certain changes." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_publish-subscribe_channel
          a                              gen:DesignPattern ;
          rdfs:label                     "Publish-Subscribe Channel" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_shape ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_interoperability ;
          gen:isAlternativeOf            :DesignTactic_messaging ;
          gen:wikiEntry                  "<p class=\"bodyText\"><b>How can the sender broadcast an event to all interested receivers?</b></p><p><img src=\"http://www.enterpriseintegrationpatterns.com/img/PublishSubscribeSolution.gif\"></p>\n<p class=\"bodyText\"><b>Send the event on a <i>Publish-Subscribe Channel</i>, which delivers a copy of a particular event to each receiver.</b></p>\n<p class=\"bodyText\">A <i>Publish-Subscribe Channel</i> works like this: It has one input channel that splits into multiple output channels, one for each subscriber. When an event is published into the channel, the <i>Publish-Subscribe Channel</i> delivers a copy of the message to each of the output channels. Each output channel has only one subscriber, which is only allowed to consume a message once. In this way, each subscriber only gets the message once and consumed copies disappear from their channels.</p>" ;
          spec:hasPatternDomain          :Domain_business_processes .
  
  :DesignPattern_implicit_lock
          a                              gen:DesignPattern ;
          rdfs:label                     "Implicit Lock" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_integrity ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_integrity ;
          gen:isAlternativeOf            :DesignTactic_locking ;
          gen:wikiEntry                  "<h1 style=\"text-align: left;\" align=\"center\">Implicit Lock</h1>\n<p><strong>by David Rice</strong></p>\n<p style=\"text-align: left;\" align=\"center\"><em>Allows framework or layer supertype code to acquire offline locks.</em></p>\n<p><big>For a full description see <a href=\"http://martinfowler.com/books/eaa.html\" target=\"_blank\">P of EAA</a> page <strong>449</strong></big></p>\n<p align=\"center\"><img src=\"http://martinfowler.com/eaaCatalog/ImplicitLockSketch.gif\" alt=\"\"></p>\n<p>The key to any locking scheme is that there are no gaps in its use. Forgetting to write a single line of code that acquires a lock can render an entire offline lock-ing scheme useless. Failing to retrieve a read lock where other transactions use write locks means you might not get up-to-date session data; failing to use a version count properly can result in unknowingly writing over someone's changes. Generally, if an item might be locked anywhere it must be locked everywhere. Ignoring its application's locking strategy allows a business trans-action to create inconsistent data. Not releasing locks won't corrupt your record data, but it will eventually bring productivity to a halt. Because offline concurrency management is difficult to test, such errors might go undetected by all of your test suites.</p>\n<p>One solution is to not allow developers to make such a mistake. Locking tasks that cannot be overlooked should be handled not explicitly by developers but implicitly by the application. The fact that most enterprise applications make use of some combination of framework, Layer Supertypes, and code generation provides us with ample opportunity to facilitate Implicit Lock.</p>" ;
          spec:hasPatternDomain          :Domain_databases , :Domain_soa .
  
  :AuthorTag_review  a  cont:AuthorTag ;
          rdfs:label  "review" .
  
  :DesignPattern_64-bit_tools
          a                              gen:DesignPattern ;
          rdfs:label                     "64-Bit Tools" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;The Tools</h1>\n<div id=\"mainSection\" style=\"position: relative;\">\n<p>This topic describes the tools available for you to use in making your application 64-bit ready.</p>\n<h2><a id=\"Include_Files\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"include_files\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"INCLUDE_FILES\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a>Include Files</h2>\n<p>The API elements are virtually identical between 32- and 64-bit Windows. The Windows header files have been modified so that they can be used for both 32- and 64-bit code. The new 64-bit types and macros are defined in a new header file, Basetsd.h, which is in the set of header files included by Windows.h. Basetsd.h includes the new data-type definitions to assist in making source code word-size independent.</p>\n<h2><a id=\"New_Data_Types\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"new_data_types\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"NEW_DATA_TYPES\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a>New Data Types</h2>\n<p>The Windows header files contain new data types. These types are primarily for type compatibility with the 32-bit data types. The new types provide exactly the same typing as the existing types, while at the same time providing support for the 64-bit Windows. For more information, see <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384264(v=vs.85).aspx\" target=\"_blank\">The New Data Types</a> or the Basetsd.h header file.</p>\n<h2><a id=\"Predefined_Macros\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"predefined_macros\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"PREDEFINED_MACROS\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a>Predefined Macros</h2>\n<p>The compiler defines the following macros to identify the platform.</p>\n<table border=\"1px\">\n<tbody>\n<tr>\n<th>Macro</th>\n<th>Meaning</th>\n</tr>\n<tr>\n<td>_WIN64</td>\n<td>A 64-bit platform.</td>\n</tr>\n<tr>\n<td>_WIN32</td>\n<td>A 32-bit platform.\n<p>This value is also defined by the 64-bit compiler for backward compatibility.</p>\n</td>\n</tr>\n<tr>\n<td>_WIN16</td>\n<td>A 16-bit platform</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>The following macros are specific to the architecture.</p>\n<table border=\"1px\">\n<tbody>\n<tr>\n<th>Macro</th>\n<th>Meaning</th>\n</tr>\n<tr>\n<td>_M_IA64</td>\n<td>Intel Itanium platform</td>\n</tr>\n<tr>\n<td>_M_IX86</td>\n<td>x86 platform</td>\n</tr>\n<tr>\n<td>_M_X64</td>\n<td>x64 platform</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>Do not use these macros except with architecture-specific code, instead, use _WIN64, _WIN32, and _WIN16 whenever possible.</p>\n<h2><a id=\"Helper_Functions\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"helper_functions\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"HELPER_FUNCTIONS\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a>Helper Functions</h2>\n<p>The following inline functions (defined in Basetsd.h) can help you safely convert values from one type to another.</p>\n<div id=\"code-snippet-1\" class=\"codeSnippetContainer\" style=\"position: relative;\">\n<div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">&nbsp;</div>\n<div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n<div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n<div class=\"codeSnippetToolBarText\" style=\"position: relative;\"><a style=\"display: none;\" title=\"Copy to clipboard.\" target=\"_blank\" name=\"CodeSnippetCopyLink\"></a>Copy</div>\n</div>\n<div id=\"CodeSnippetContainerCode_11d09d96-6625-4706-8711-8d0e3e03bd7d\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n<div style=\"color: black; position: relative;\">\n<pre>void            * Handle64ToHandle( const void * POINTER_64 h ) \nvoid * POINTER_64 HandleToHandle64( const void *h )\nlong              HandleToLong(     const void *h )\nunsigned long     HandleToUlong(    const void *h )\nvoid            * IntToPtr(         const int i )\nvoid            * LongToHandle(     const long h )\nvoid            * LongToPtr(        const long l )\nvoid            * Ptr64ToPtr(       const void * POINTER_64 p )\nint               PtrToInt(         const void *p )\nlong              PtrToLong(        const void *p )\nvoid * POINTER_64 PtrToPtr64(       const void *p )\nshort             PtrToShort(       const void *p )\nunsigned int      PtrToUint(        const void *p )\nunsigned long     PtrToUlong(       const void *p )\nunsigned short    PtrToUshort(      const void *p )\nvoid            * UIntToPtr(        const unsigned int ui )\nvoid            * ULongToPtr(       const unsigned long ul )\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"alert\" style=\"position: relative;\"><strong>Warning</strong>&nbsp;&nbsp;<strong>IntToPtr</strong> sign-extends the <strong>int</strong> value, <strong>UIntToPtr</strong> zero-extends the <strong>unsigned int</strong> value, <strong>LongToPtr</strong> sign-extends the <strong>long</strong> value, and <strong>ULongToPtr</strong> zero-extends the <strong>unsigned long</strong> value.</div>\n<div style=\"position: relative;\">&nbsp;</div>\n<h2><a id=\"64-bit_Compiler\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"64-bit_compiler\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"64-BIT_COMPILER\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a>64-bit Compiler</h2>\n<p>The 64-bit compilers can be used to identify pointer truncation, improper type casts, and other 64-bit-specific problems.</p>\n<p>When the compiler is first run, it will probably generate many pointer truncation or type mismatch warnings, such as the following:</p>\n<p><code>warning C4311: 'type cast' : pointer truncation from 'unsigned char *' to 'unsigned long '</code></p>\n<p>Use these warnings as a guide to make the code more robust. It is good practice to eliminate all warnings, especially pointer-truncation warnings.</p>\n<h2><a id=\"64-bit_Compiler_Switches_and_Warnings\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"64-bit_compiler_switches_and_warnings\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"64-BIT_COMPILER_SWITCHES_AND_WARNINGS\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a>64-bit Compiler Switches and Warnings</h2>\n<p>Note that this compiler enables the LLP64 data model.</p>\n<p>There is a warning option to assist porting to LLP64. The -Wp64 -W3 switch enables the following warnings:</p>\n<ul>\n<li>C4305: Truncation warning. For example, \"return\": truncation from \"unsigned int64\" to \"long.\"</li>\n<li>C4311: Truncation warning. For example, \"type cast\": pointer truncation from \"int*_ptr64\" to \"int.\"</li>\n<li>C4312: Conversion to bigger-size warning. For example, \"type cast\": conversion from \"int\" to \"int*_ptr64\" of greater size.</li>\n<li>C4318: Passing zero length. For example, passing constant zero as the length to the <strong>memset</strong> function.</li>\n<li>C4319: Not operator. For example, \"~\": zero extending \"unsigned long\" to \"unsigned _int64\" of greater size.</li>\n<li>C4313: Calling the <strong>printf</strong> family of functions with conflicting conversion type specifiers and arguments. For example, \"printf\": \"%p\" in format string conflicts with argument 2 of type \"_int64.\" Another example is the call printf(\"%x\", pointer_value); this causes a truncation of the upper 32 bits. The correct call is printf(\"%p\", pointer_value).</li>\n<li>C4244: Same as the existing warning C4242. For example, \"return\": conversion from \"_int64\" to \"unsigned int,\" possible loss of data.</li>\n</ul>\n<h2><a id=\"64-bit_Linker_and_Libraries\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"64-bit_linker_and_libraries\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"64-BIT_LINKER_AND_LIBRARIES\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384267(v=vs.85).aspx\" target=\"_blank\"></a>64-bit Linker and Libraries</h2>\n<p>To build applications, use the linker and libraries provided by the Windows SDK. Most 32-bit libraries have a corresponding 64-bit version, but certain legacy libraries are available only in 32-bit versions. Code that calls into these libraries will not link when the application is built for 64-bit Windows.</p>\n</div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignPattern_dynamically-adjustable_configuration
          a                              gen:DesignPattern ;
          rdfs:label                     "Dynamically-adjustable configuration" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maintainability , :ArchitecturalQuality_transferability , :ArchitecturalQuality_affordability , :ArchitecturalQuality_usability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_manageability ;
          gen:isAlternativeOf            :DesignTactic_change_propagation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_process_manager
          a                              gen:DesignPattern ;
          rdfs:label                     "Process Manager" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_traceability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_visibility ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_complexity , :ArchitecturalQuality_availability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_maturity , :ArchitecturalQuality_visibility , :ArchitecturalQuality_scalability , :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf            :DesignTactic_fault_handling , :DesignTactic_isolation , :DesignTactic_routing ;
          spec:hasPatternDomain          :Domain_embedded_systems , :Domain_abstract , :Domain_software_ecosystems .
  
  :DesignDecision_kdd-22
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-22" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Fassade für Analytics-Service</strong></p><p>Die Kommunikation mit dem Analytics-Service wird von Fassade-Klassen gesteuert (siehe Abbildung 3). Dabei wird für jeden Analysetyp (z.B. Korrelationsanalyse) jeweils eine Fassade Implementiert, die für die Aufbereitung der Eingangsparameter sowie für die Formatierung der Ergebnisse zuständig ist. Somit ist auch die Anbindung an unterschiedliche Analytics-Server möglich.</p><p>Die Analytics-Komponente in Abbildung 1 &nbsp;nutzt verschiedene statistische und analytische Verfahren, um Zusammenhänge und Abhängigkeiten in Daten zu finden. Exemplarisch sind Komponenten für Korrelations- und eine Trendanalysen vorgesehen, wobei die Funktionalität nicht darauf beschränkt ist.</p><p>Für die Durchführung der oben genannten Analysen bietet sich eine Programmier- und Ausführungsumgebung für statistisches Rechnen, wie etwa R<a href=\"javascript:saFiddle();\" name=\"_ftnref1\" data-mce-href=\"#_ftn1\" target=\"_blank\">[1]</a> oder RapidMiner<a href=\"javascript:closePopup(this);\" name=\"_ftnref2\" data-mce-href=\"#_ftn2\" target=\"_blank\">[2]</a>. Diese Programme können als eigenständige Services zur Verfügung gestellt werden. Zum Beispiel bietet RServe<a href=\"#_ftn3\" name=\"_ftnref3\" data-mce-href=\"#_ftn3\">[3]</a> die Möglichkeit, einen eigenständigen R-Service aufzustellen, der Anfragen über einen TCP/IP Port beantworten kann.</p><p>Das Entwurfsmuster \"Fassade\"&nbsp;bietet eine einheitliche und meist vereinfachte Schnittstelle zu einer Menge von Schnittstellen eines Subsystems und bietet sich aus diesen Gründen als effiziente Integrationslösung für den Analytics-Service an. Der Analytics-Service (z.B. R Service) wird aus den in Abbildung 3 dargestellten Fassade-Klassen aufgerufen. Dabei verwenden die Fassaden <em>TrendAnalysis</em> und <em>CorrelationAnalysis</em> für das Abrufen der Daten vom DWH einen <em>QueryManager</em> (siehe Abbildung 2). Die Fassade fördert die lose Kopplung, weil sie das zugrunde liegende Subsystem versteckt, und senkt die Komplexität, da mehrere Schnittstellen zu einer zusammengefasst werden. Außerdem kann das Subsystem durch die lose Kopplung leichter erweitert werden.</p><p><img src=\"p/AspernBM/AnalyticsServiceprovider.png\" alt=\"\" width=\"628\" height=\"407\" style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\" data-mce-style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\"><br></p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><strong>Abbildung 3</strong> - Analytics Service Providerklassen. Diese Klassen sind Teil der Analytics-Services-Komponente in Abbildung 1.</p><p><strong>Notes:</strong></p><p><a href=\"#_ftnref1\" name=\"_ftn1\" data-mce-href=\"#_ftnref1\">[1]</a> R Statistics and Data Mining Tool: <a href=\"http://www.r-project.org/\" data-mce-href=\"http://www.r-project.org/\">http://www.r-project.org/</a></p><p><a href=\"#_ftnref2\" name=\"_ftn2\" data-mce-href=\"#_ftnref2\">[2]</a> RapidMiner Data Mining: <a href=\"https://rapidminer.com/\" data-mce-href=\"https://rapidminer.com/\">https://rapidminer.com/</a></p><p><a href=\"#_ftnref3\" name=\"_ftn3\" data-mce-href=\"#_ftnref3\">[3]</a> RServe TCP/IP Server für R: <a href=\"https://rforge.net/Rserve/doc.html\" data-mce-href=\"https://rforge.net/Rserve/doc.html\">https://rforge.net/Rserve/doc.html</a></p>" ;
          spec:decisionArchitecturalView  "II.Logische Sicht" ;
          spec:hasDecisionDomain          :Domain_ar-105_1__reports_and_analytics , :Domain_ar-105__analytics , :Domain_ar-102__tool_integration ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_compatibility ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_compatibility , :ArchitecturalQuality_interoperability ;
          spec:useDecisionTactic          :DesignTactic_reduce_dependencies , :DesignTactic_tool_integration .
  
  :Requirement_ar-164__modularity
          a                          spec:Requirement ;
          rdfs:label                 "AR-164: Modularity" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Die\n  Systemarchitektur soll eine hohe Modularität der Systemkomponenten ermöglichen." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Developmental" ;
          spec:requirementPurpose    "Modularization" .
  
  gen:hasPosMethodEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  gen:hasPosEffectOnQuality , gen:hasMethodEffectOnQuality .
  
  gen:methodPurpose  a  owl:DatatypeProperty ;
          rdfs:domain  gen:SoftwareEngineeringMethod ;
          rdfs:range   xsd:string .
  
  :Project_bpadapt  a  cont:Project ;
          rdfs:label  "bpadapt" .
  
  xsd:time  a     rdfs:Datatype .
  
  :Domain_ar-02__safety_assurance
          a           spec:Domain ;
          rdfs:label  "ar-02: safety assurance" .
  
  :DesignPattern_application_component_proxy
          a                              gen:DesignPattern ;
          rdfs:label                     "Application Component Proxy" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_system_integration ;
          gen:wikiEntry                  "An application component is made available in an environment from where it cannot be accessed directly by deploying an Application Component Proxy. The communication between this proxy and the application component is initiated and maintained from the environment where communication is unrestricted.[Cloud Computing Patterns]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_folder_data
          a                              gen:DesignPattern ;
          rdfs:label                     "Folder Data" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_observability , :ArchitecturalQuality_visibility , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_data_access ;
          gen:wikiEntry                  "<h1 align=\"center\">Pattern 6 (Folder Data)</h1>\n<p><a href=\"http://www.workflowpatterns.com/patterns/data/visibility/wdp6_animation.php\" target=\"_blank\">FLASH animation of Folder Data pattern</a></p>\n<h2>Description</h2>\n<p align=\"justify\">Data elements can be defined which are accessible by multiple cases on a selective basis. They are accessible to all components of the cases to which they are bound.\n</p><h2>Example</h2>\n<p align=\"justify\">Selected instances of the <em>Approve Travel Request </em> task can access the <em>current cash reserves </em> data element regardless of the case in which they execute, providing they nominate the folder they require at case initiation.\n</p><h2>Motivation</h2>\n<p align=\"justify\">Folder data provides a mechanism for sharing a data element between related task instances in different  cases. This is particularly useful where tasks in multiple  cases are working on a related problem and require access to common working data elements. </p>\n<h2 align=\"justify\">Overview</h2>\n<p align=\"justify\">Figure <a href=\"http://www.workflowpatterns.com/patterns/data/visibility/wdp6.php#figure7\" target=\"_blank\">7 </a> illustrates the notion of folder data. In essence, \"folders\" of related data elements are declared in the context of a  process prior to the execution of individual cases. Individual cases are able to nominate one or more of these \"folders\" that their task instances should have access to during execution. Access may be read-only or read-write. In Figure <a href=\"http://www.workflowpatterns.com/patterns/data/visibility/wdp6.php#figure7\" target=\"_blank\">7</a>, two folders are declared (A and B) containing data elements X and Y respectively. During the course of execution, case1 and case2 have access to folder A whereas case3 has access to both folders A and B. As there is only one copy of each folder maintained, should any of case1, case2 or case3 execute concurrently, then they will in effect share access to data element X. As a general rule, for folder data to be useful in an offering, the cardinality of the accessibility relationship between folders and cases needs to be m-n i.e. data elements in a given folder need to be accessible to more than one case and a given case needs to be able to access more than one data folder during execution. </p>\n<p align=\"center\"><a name=\"figure7\" id=\"figure7\" href=\"http://www.workflowpatterns.com/patterns/data/visibility/wdp6.php\" target=\"_blank\"><img src=\"http://www.workflowpatterns.com/patterns/data/images/workflow-case-6.png\" alt=\"Figure 7: Folder data visibility\" name=\"figure7\" width=\"244\" height=\"343\" id=\"figure7\"></a> </p>\n<p align=\"center\"><strong>Figure 7: </strong>Folder data visibility</p>\n<h2>Context</h2>\n<p>There are no specific context conditions associated with this pattern. </p>\n<h2>Implementation</h2>\n<p align=\"justify\">Of the offerings examined, only COSA offers the facility to share data elements between cases on a selective basis. It achieves this by allowing each case to be associated with a folder at commencement. At any time during execution of the case, it is possible for the current folder to be changed. The type of access (read-only or read-write) and a range of access controls can be specified for each folder at design time. It is also possible to use folders as repositories for more complex data elements such as documents. </p>\n<h2>Issues</h2>\n<div align=\"justify\">As each folder defines its own context, one consideration that arises where a case (or a task instance within a case) has access to multiple folders is how naming clashes are resolved where two data elements in distinct folders share the same name. A second issue that arises is that of providing concurrency control for folder level data. </div>\n<h2>Solutions</h2>\n<p>The first issue is addressed in COSA by only allowing a case to access attributes from one folder at a time. This is achieved using a specific Tool Agent for folders. It is possible to change the folder to which a case refers at any time (again using a specific Tool Agent call). In terms of the second issue, similar considerations apply to those discussed for case data. In the case of COSA, there is no direct system support to address this problem. </p>\n<h2>Evaluation Criteria</h2>\n<p>An offering achieves full support if it has a construct that satisfies the description of the pattern.</p>" ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  :DesignPattern_units_of_mitigation
          a                              gen:DesignPattern ;
          rdfs:label                     "Units of Mitigation" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_robustness , :ArchitecturalQuality_reliability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_resilience , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability , :ArchitecturalQuality_safety , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_maturity , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_survivability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_fault_handling , :DesignTactic_maintain_integrity ;
          gen:wikiEntry                  "To prevent that the whole system is unavailable when an error occurs the system should be divided into parts. These parts should contain both any errors and the error recovery. In the simplest designs there is one module that performs all of the work. when this one part has an error no work will be done. Smaller parts of a system that make well defined units solve this problem.   Decide what the units of fault tolerance will be during the architecture phase. The following picture shows different Units of Mitigation [Hanmer 2007] pp 37-41.   Relations Fault Handling [Hanmer 2007] Architectural Pattern pp 37-41. Maintain Integrity [Hanmer 2007] Architectural Pattern pp 37-41." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-022__regulations_and_controls_library
          a           spec:Domain ;
          rdfs:label  "ar-022: regulations and controls library" .
  
  :SoftwareEngineeringMethod_model-driven_development
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Model-Driven Development" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog , :Project_isdwiki ;
          gen:hasMethodPhase       :ProjectPhase_architecture , :ProjectPhase_design , :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole        :Role_technical_project_manager , :Role_system_architect , :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_inspection_test , :AuthorTag_test , :AuthorTag_modeling ;
          gen:methodContext        "Change me" ;
          gen:methodInput          "System requirements" , "Design specifications" , "Functional specifications" ;
          gen:methodOutput         "Source code" , "Documentation" ;
          gen:methodPurpose        "Development efficiency and quality" ;
          gen:wikiEntry            "Model-driven engineering is aimed at increase in development efficiency and quality by utilization of models throughout whole cycle resulting in abstraction of complexity, faster development, simple reuse." , "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>Model-driven engineering is aimed at increase in development efficiency and quality by utilization of models throughout whole cycle resulting in abstraction of complexity, faster development, simple reuse.</p></td>\n</tr>\n</tbody></table>\n<p></p><p></p><p><span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image\" width=\"450\" src=\"https://wiki.ct.siemens.de/download/attachments/97914750/image2015-9-22%2014%3A45%3A1.png?version=1&amp;modificationDate=1442922302357&amp;api=v2\" data-image-src=\"/download/attachments/97914750/image2015-9-22%2014%3A45%3A1.png?version=1&amp;modificationDate=1442922302357&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"104932526\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"image2015-9-22 14:45:1.png\" data-base-url=\"https://wiki.ct.siemens.de\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"97914750\" data-linked-resource-container-version=\"13\"></span></p><h2 id=\"Model-DrivenDevelopment-Description\"><span>Description&nbsp;</span></h2><p>Model-driven development is based on specification of highly abstract models and their transformation into working system by automatic code generation or direct execution of the model. The models are mainly developed using domain-specific languages. Heightened level of abstraction provides efficient means to handle complexity and to narrow the gap between software development and business domain. Domain-specific languages can also ease communication between developers and domain experts. Automation of the software production based on models makes the development less error-prone, faster, and cost-effective. Overall product quality is increased.&nbsp;</p><h2 id=\"Model-DrivenDevelopment-Context\">Context</h2><p>Application of model-driven development implies the presence of appropriate tools (general purpose or specific) implementing some extents of development cycle in a model-driven way. This include modeling (which might start at different stages - as from requirements, as well as from high-level or detailed design or implementation), generation of cource or executable code, sometimes verification and validation.</p><p>&nbsp;</p><h2 id=\"Model-DrivenDevelopment-Inputs\">Inputs&nbsp;</h2><p>Artifacts of different levels can be used as input for modeling: requirements, functional specifications, design specifications etc. The higher level of artifact is used the more model refinement steps will be needed to achieve level of details which will be sufficient for code generation.</p><h2 id=\"Model-DrivenDevelopment-Outputs\">Outputs&nbsp;</h2><p>Model-driven development tools are able to produce source or executable code as the main product. Additionally they are typically able to produce documentation, tests, verification results. Generated source code can be completely ready or incomplete and require manual coding.</p><h2 id=\"Model-DrivenDevelopment-Procedure\">&nbsp;Procedure</h2><p>Introduction of model-driven development practices the following steps are required:</p><ol><li>Selection or design of domain-specific modelling language</li><li>Selection, customization or development of modelling tools</li><li>Adaptation of code generators and target platform / architecture to fit each other</li></ol><h2 id=\"Model-DrivenDevelopment-Advantagesanddisadvantages\">Advantages and disadvantages</h2><p>Advantages:</p><ul><li>Fast, cost-effective and high-quality development</li><li>Validation capabilities</li><li>Easy communication with domain experts by means of DSLs</li><li>Focus on business problems instead of technology</li></ul><p>Disadvantages:</p><ul><li>Dependency on modeling tools</li><li>DSL design must find proper balance between ease of use and flexibility</li></ul>" .
  
  sear:Keyword  a     owl:Class ;
          rdfs:label  "Keyword" .
  
  :Domain_ar-105_1__reports_and_analytics
          a           spec:Domain ;
          rdfs:label  "ar-105.1: reports and analytics" .
  
  :Author_rettner_juliane
          a           cont:Author ;
          rdfs:label  "rettner juliane" .
  
  gen:description  a  owl:DatatypeProperty ;
          rdfs:range  xsd:string .
  
  :DesignPattern_message_filter
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Filter" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_routing ;
          gen:wikiEntry                  "[Meier JD et al. 2008] A Message Filter is commonly used toprevent unwanted messagesbased ona setofcriteria  from being transmitted over a channel to a consumer. Filters can move messages to folders delete them forward them to other email addresses and more.All message filters follow the same pattern for connecting inputs and outputs. Inputs are connected either through the filters constructor or through the connectInput() method. Outputs are connected through the registerCallback() method. Note that the input and output types are defined per-filter so not all filters are directly interconnectable." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_replicability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "replicability" , "Replicability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_proxy , :DesignPattern_mediator , :DesignPattern_composite , :DesignTactic_keep_consistent , :DesignPattern_facade , :DesignTactic_layering , :DesignPattern_bridge , :DesignPattern_module ;
          gen:relatedQuality       :ArchitecturalQuality_functionality ;
          gen:wikiEntry            "[Businessdictionary Replicability [date unknown]] Replicability refers to propertyof an activity process or test result that allows it to be duplicated at another location or time. It can be duplicated copied reproduced or repeated.    Relations Layering [MSDN Layered Applications 2014]In object-oriented design a layer is a group of reusable components that are reusable in similar circumstances." ;
          spec:requiredBy          :Domain_abstract .
  
  :UseCase_nfr_repository
          a           spec:UseCase ;
          rdfs:label  "nfr repository" .
  
  :DesignPattern_revise_procedure
          a                              gen:DesignPattern ;
          rdfs:label                     "Revise Procedure" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_safety , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "A repetition of errors caused by the operating personnel can be avoided with Revise Procedure.  After a failure in which people contributed to downtime instead of minimized it revise the procedures that they followed to avoid the problem in the future [Hanmer 2007]pp 245-246.  Relations Error Handling [Hanmer 2007]FaultTreatment Patterns pp 245-246." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-104_1__metadata_interface
          a           spec:Domain ;
          rdfs:label  "ar-104.1: metadata interface" .
  
  :DesignPattern_idempotent_retry
          a                              gen:DesignPattern ;
          rdfs:label                     "Idempotent Retry" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf            :DesignTactic_retry ;
          gen:wikiEntry                  "<h1>Idempotent Retry</h1>\n<div id=\"ctxDesc\">\nEvery effort must be made to deliver a client's request to a service. \nThe client-service interaction style may be \n<a href=\"http://www.servicedesignpatterns.com/ClientServiceInteractions/RequestResponse\" target=\"_blank\">Request/Response</a> or \n<a href=\"http://www.servicedesignpatterns.com/ClientServiceInteractions/RequestAcknowledge\" target=\"_blank\">Request/Acknowledge</a>.\n</div>\n\n<div id=\"probDiv\">\nHow can a client ensure that requests are delivered to a web service despite temporary network or server failures?\n</div>\n\n<div class=\"probDesc\">\nNetworks are inherently unreliable. Connections will occasionally time out or be dropped. \nServers will be overloaded from time to time, and as a result, they may not be able to receive \nor process all requests. Problems will arise for innumerable reasons. A client could, for example, \nsuccessfully connect to a service and send a request only to see the connection drop while waiting \nfor a response. If the client naively resends the request, the service might, for example, create \ntwo orders when the client only wanted one.  The client might not be able to establish a connection \nwith a service in the first place due to network or server problems. One option to mitigate this problem \nis to send web service requests through intermediaries (e.g., broker services, ESBs, etc.). \nHowever, using an intermediary to solve \nthe basic problem of service connectivity may be an overly elaborate strategy.  \nAnd while queues can be used to help mitigate some service connectivity problems, \nthey are best reserved for use within a secured network, far behind the corporate firewall. \nIf a client can't connect to a service or loses a connection, or if the server reports that it is busy, sometimes the \nbest solution is to simply try again.\n</div>\n\n<div id=\"soltnDiv\">\nDesign the client such that common connectivity exceptions are caught. When a connection error occurs, reconnect to the service and resend the request. Limit the number of times such attempts are made. Include a unique identifier in each request so that the service can identify duplicate requests. Alternatively, send the request to a unique URI designated for the specific request.\n<div class=\"soltnImg\">\n\t<img alt=\"Idempotent Retry: Design the client such that common connectivity exceptions are caught. When a connection error occurs, reconnect to the service and resend the request. Limit the number of times such attempts are made. Include a unique identifier in each request so that the service can identify duplicate requests. Alternatively, send the request to a unique URI designated for the specific request.\" src=\"http://www.servicedesignpatterns.com/Images/IdempotentRetry.jpg\">\n</div>\n</div>\n\n<div class=\"soltnDesc\">\nThe Idempotent Retry pattern seems quite simple. Whenever a client calls a service, it must be \nprepared to catch several connectivity-related errors. If an error occurs, the client should try to \nreconnect to the service and resubmit the request as long as it does not exceed a maximum retry \nthreshold. The client must abort further attempts once this limit has been passed.</div>" ;
          spec:hasPatternDomain          :Domain_soa .
  
  spec:requirementPurpose
          a            owl:DatatypeProperty ;
          rdfs:domain  spec:Requirement ;
          rdfs:range   xsd:string .
  
  :AuthorTag_embedded_systems
          a           cont:AuthorTag ;
          rdfs:label  "embedded systems" .
  
  :DesignPattern_facade
          a                              gen:DesignPattern ;
          rdfs:label                     "Facade" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki , :Project_aspernes , :Project_aspernbm ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_accessibility ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_efficiency , :ArchitecturalQuality_testability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_agility , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_affordability , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_portability , :ArchitecturalQuality_installability , :ArchitecturalQuality_correctness , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_expressiveness , :ArchitecturalQuality_serviceability , :ArchitecturalQuality_usability , :ArchitecturalQuality_replicability , :ArchitecturalQuality_operability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_controllability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_transferability , :ArchitecturalQuality_versatility , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_heterogeneity ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_accessibility , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_flexibility ;
          gen:isAlternativeOf            :DesignTactic_layering , :DesignTactic_abstraction , :DesignTactic_change_propagation , :DesignTactic_increase_cohesion , :DesignTactic_reduce_dependencies , :DesignTactic_complexity_confinement , :DesignTactic_reduce_coupling , :DesignTactic_softcoding ;
          gen:wikiEntry                  "<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Facade pattern</h1>\n<div id=\"bodyContent\" class=\"mw-body-content\" style=\"position: relative;\">\n<div id=\"siteSub\" style=\"position: relative;\"><strong>From Wikipedia, the free encyclopedia</strong></div>\n<div id=\"contentSub\" style=\"position: relative;\">&nbsp;</div>\n<div id=\"jump-to-nav\" class=\"mw-jump\" style=\"position: relative;\">Jump to: <a href=\"http://en.wikipedia.org/wiki/Facade_pattern#mw-head\" target=\"_blank\">navigation</a>, <a href=\"http://en.wikipedia.org/wiki/Facade_pattern#p-search\" target=\"_blank\">search</a></div>\n<div id=\"mw-content-text\" class=\"mw-content-ltr\" dir=\"ltr\" lang=\"en\" style=\"position: relative;\">\n<p>The <strong>facade pattern</strong> (or <strong>fa&ccedil;ade pattern</strong>) is a <a title=\"Software design pattern\" href=\"http://en.wikipedia.org/wiki/Software_design_pattern\" target=\"_blank\">software design pattern</a> commonly used with <a title=\"Object-oriented programming\" href=\"http://en.wikipedia.org/wiki/Object-oriented_programming\" target=\"_blank\">object-oriented programming</a>. The name is by analogy to an <a title=\"Facade\" href=\"http://en.wikipedia.org/wiki/Facade\" target=\"_blank\">architectural facade</a>.</p>\n<p>A facade is an object that provides a simplified interface to a larger body of code, such as a <a class=\"mw-redirect\" title=\"Class library\" href=\"http://en.wikipedia.org/wiki/Class_library\" target=\"_blank\">class library</a>. A facade can:</p>\n<ul>\n<li>make a <a class=\"mw-redirect\" title=\"Software library\" href=\"http://en.wikipedia.org/wiki/Software_library\" target=\"_blank\">software library</a> easier to use, understand and test, since the facade has convenient methods for common tasks;</li>\n<li>make the library more readable, for the same reason;</li>\n<li>reduce <a title=\"Coupling (computer programming)\" href=\"http://en.wikipedia.org/wiki/Coupling_(computer_programming)\" target=\"_blank\">dependencies</a> of outside code on the inner workings of a library, since most code uses the facade, thus allowing more flexibility in developing the system;</li>\n<li>wrap a poorly designed collection of <a title=\"Application programming interface\" href=\"http://en.wikipedia.org/wiki/Application_programming_interface\" target=\"_blank\">APIs</a> with a single well-designed API (as per task needs).</li>\n</ul>\n<p>The Facade design pattern is often used when a system is very complex or difficult to understand because the system has a large number of interdependent classes or its source code is unavailable. This pattern hides the complexities of the larger system and provides a simpler interface to the client. It typically involves a single wrapper class which contains a set of members required by client. These members access the system on behalf of the facade client and hide the implementation details.</p>\n<p>&nbsp;</p>\n<p class=\"MsoNormal\">&nbsp;</p>\n<div id=\"toc\" class=\"toc\" style=\"position: relative;\">&nbsp;</div>\n</div>\n</div>" , "<div class=\"bs-docs-header\" id=\"content\"><div class=\"container\"><h1>Features</h1>\n\t\t<p>\n\t\t\tAn overview of Camunda and our most adorable features.\n\t\t</p>\n\n\t</div>\n</div>\n\n<div class=\"container bs-docs-container\">\n\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\" role=\"main\">\n\n\t\t\t<div class=\"bs-docs-section\" id=\"automation\">\n\t\t\t\t<h1 class=\"page-header\">Process Automation and Case Management</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>BPMN 2.0</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAs OMG-members, we co-authored the BPMN 2.0 standard and created one of the most sophisticated implementations. Our native BPMN 2.0 process engine covers all the symbols that you (really) need for process execution.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" style=\"max-height:300px; margin-bottom: 10px;\" src=\"http://camunda.org/assets/img/bpmn.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/bpmn20/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">BPMN 2.0 Coverage</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>CMMN 1.0</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tWe also participate in OMG's CMMN 1.0 standard, which allows you to implement unstructured processes using Case Management. With Camunda, you can seamlessly combine BPMN and CMMN.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" style=\"max-height:300px; margin-bottom: 10px; \" src=\"http://camunda.org/assets/img/loan-application.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/cmmn10/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">CMMN 1.0 Coverage</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"java\">\n\t\t\t\t<h1 class=\"page-header\">Perfect for Java</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>Java API</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Camunda process engine provides a native Java API which allows developers to interact with process instances and the process repository. This makes it easy to deploy, start and control process instances from a regular java application. And it works in the other direction as well: the process engine supports invoking plain java classes from BPMN 2.0 service tasks and similar constructs.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/implement-java.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-applications-overview\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Java Process Applications</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<h3>Seamless Spring &amp; Java EE Integration</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Seamless Spring Framework and Java EE 6 programming model integration provide you with the right toolkit for developing complex business applications. <code>\n\t\t\t\t\t\t\t\t@Inject</code>\n\t\t\t\t\t\t\tthe process engine into any Spring / CDI / EJB Bean and invoke Beans from BPMN 2.0 Service Tasks. Infrastructure integration makes sure that the process engine participates in application transactions.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/implement-javaee.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#spring-framework-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Spring Integration</a>\n\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#cdi-and-java-ee-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Java EE / CDI Integration</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"deployment\">\n\t\t\t\t<h1 class=\"page-header\">Various Deployment Models</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>Embedded</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe process engine can be added as a library to any Java application. It can also be installed as a container service inside Tomcat, JBoss etc. This way, it can be used by multiple applications which can be redeployed without shutting down the process engine.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-deployment.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#runtime-container-integration\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Container Integration</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>Standalone</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tUse the process engine as a standalone service and interact with it from remote applications. Use the REST API for remote communication or implement your own access infrastructure using JMS or SOAP Webservices.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-remote.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/api-references/rest/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">REST API</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h3>In a cluster</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tRun the process engine on different cluster nodes on top of a shared database. Use this setup for scaling up or high availability.The process engine supports heterogeneous clusters where different processes are executed on different nodes.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/execute-cluster.png\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Cluster Deployment</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"tooling\">\n\t\t\t\t<h1 class=\"page-header\">Powerful Tooling for Operations</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t<h3>Find, Inspect and Repair Process Instances</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCamunda Cockpit aggregates the state of all instances of a process definition and visualizes it on the process diagram. This way you can see how many instances are currently waiting in each task / activity. You can filter by clicking on an activity or by using the filter panel. The filter panel supports searching for process instances by variable, business key and process version.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe Process Instance View allows you to inspect the state of a running process instance. Browse through active activities by selecting them in the filter tree on the left hand side. Inspect Variables, Incidents (Failures) and User Tasks in the Properties Panel. Drill down into Sub Process Instances.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tRepair a running process instance by changing variables, re-assigning user tasks or retrying failed asynchronous executions. Cancel process instances which cannot complete successfully.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/features/cockpit-find.png\">\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Cockpit</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\" id=\"modeler\">\n\t\t\t\t<h1 class=\"page-header\">Easy-to-use BPMN Modeler</h1>\n\n\t\t\t\t<div class=\"row bs-downloads\">\n\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t<h3>Create BPMN 2.0 diagrams inside your Eclipse IDE</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tGet our Eclipse Plugin for creating BPMN 2.0 diagrams using your development environment. It supports the complete BPMN 2.0 standard. Thanks to the integration in Eclipse, you can model BPMN 2.0 processes directly inside your IDE.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<img class=\"img-responsive\" src=\"http://camunda.org/assets/img/modeler/modeler.png\">\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<a href=\"http://camunda.org/bpmn/tool/\" class=\"btn btn-lg btn-outline\" role=\"button\" target=\"_blank\">Download Modeler</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"bs-docs-section\">\n\t\t\t\t<h1 class=\"page-header\">... and so much more!</h1>\n\t\t\t\t<h3>Just a few more highlights:</h3>\n\t\t\t\t<ul class=\"list-unstyled\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes\" target=\"_blank\">Transaction Handling</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-history-and-audit-event-log\" target=\"_blank\">Separation of Runtime and History Data</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\" target=\"_blank\">Tasklist for Human Workflows</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-engine-plugins\" target=\"_blank\">Process Engine Plugins</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-supported-environments\" target=\"_blank\">Support for many Runtime Containers and Databases</a></li></ul></div></div></div></div>" , "[Wikipedia Facade Pattern 2014] A Facadeencapsulates the functions and data from the underlying system component or API." , "<h1 class=\"firstHeading\" lang=\"en\" id=\"firstHeading\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Facade pattern</span></h1><h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\"><div id=\"bodyContent\" class=\"mw-body-content\" style=\"font-size: small; font-weight: normal; position: relative;\"><div id=\"siteSub\" style=\"position: relative;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">The&nbsp;<strong>facade pattern</strong>&nbsp;(or&nbsp;<strong>façade pattern</strong>) is a&nbsp;<a title=\"Software design pattern\" href=\"https://en.wikipedia.org/wiki/Software_design_pattern\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Software_design_pattern\">software design pattern</a>&nbsp;commonly used with&nbsp;<a title=\"Object-oriented programming\" href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\">object-oriented programming</a>. The name is by analogy to an&nbsp;<a title=\"Facade\" href=\"https://en.wikipedia.org/wiki/Facade\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Facade\">architectural facade</a>.</span></div><div id=\"mw-content-text\" class=\"mw-content-ltr\" dir=\"ltr\" lang=\"en\" style=\"position: relative;\"><p><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">A facade is an object that provides a simplified interface to a larger body of code, such as a&nbsp;<a class=\"mw-redirect\" title=\"Class library\" href=\"https://en.wikipedia.org/wiki/Class_library\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Class_library\">class library</a>. A facade can:</span></p><ul><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">make a&nbsp;<a class=\"mw-redirect\" title=\"Software library\" href=\"https://en.wikipedia.org/wiki/Software_library\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Software_library\">software library</a>&nbsp;easier to use, understand and test, since the facade has convenient methods for common tasks;</span></li><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">make the library more readable, for the same reason;</span></li><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">reduce&nbsp;<a title=\"Coupling (computer programming)\" href=\"https://en.wikipedia.org/wiki/Coupling_(computer_programming)\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Coupling_(computer_programming)\">dependencies</a>&nbsp;of outside code on the inner workings of a library, since most code uses the facade, thus allowing more flexibility in developing the system;</span></li><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">wrap a poorly designed collection of&nbsp;<a title=\"Application programming interface\" href=\"https://en.wikipedia.org/wiki/Application_programming_interface\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/Application_programming_interface\">APIs</a>&nbsp;with a single well-designed API.</span></li></ul><p><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">The Facade design pattern is often used when a system is very complex or difficult to understand because the system has a large number of interdependent classes or its source code is unavailable. This pattern hides the complexities of the larger system and provides a simpler interface to the client. It typically involves a single wrapper class which contains a set of members required by client. These members access the system on behalf of the facade client and hide the implementation details.</span></p><p><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">The facade pattern is typically used when:</span></p><ul><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">a simple interface is required to access a complex system;</span></li><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">the abstractions and implementations of a subsystem are tightly coupled;</span></li><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">need an entry point to each level of layered software; or</span></li><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">a system is very complex or difficult to understand.</span></li></ul></div></div></h1><h2><span id=\"Structure\" class=\"mw-headline\" data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Structure</span></h2><h1 class=\"firstHeading\" lang=\"en\"><div class=\"mw-body-content\" style=\"font-size: small; font-weight: normal; position: relative;\"><div class=\"mw-content-ltr\" dir=\"ltr\" lang=\"en\" style=\"position: relative;\"><p><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><a class=\"image\" href=\"https://en.wikipedia.org/wiki/File:Example_of_Facade_design_pattern_in_UML.png\" target=\"_blank\" data-mce-href=\"https://en.wikipedia.org/wiki/File:Example_of_Facade_design_pattern_in_UML.png\"><img src=\"https://upload.wikimedia.org/wikipedia/en/5/57/Example_of_Facade_design_pattern_in_UML.png\" alt=\"Example of Facade design pattern in UML.png\" width=\"577\" height=\"384\" data-file-width=\"577\" data-file-height=\"384\" data-mce-src=\"https://upload.wikimedia.org/wikipedia/en/5/57/Example_of_Facade_design_pattern_in_UML.png\"></a></span></p><dl><dt><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><i>Facade:&nbsp;</i></span><span style=\"font-size: 12pt;\">The facade class abstracts Packages 1, 2, and 3 from the rest of the application.</span></dt><dt><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><i>Clients:</i>&nbsp;</span><span style=\"font-size: 12pt;\">The objects are using the Facade Pattern to access resources from the Packages.</span></dt></dl></div></div></h1>" , "<h1 id=\"firstHeading\" lang=\"en\">Facade pattern</h1>\n<div id=\"bodyContent\" class=\"mw-body-content\" style=\"font-size: small; font-weight: normal; position: relative;\">\n<div id=\"mw-content-text\" class=\"mw-content-ltr\" dir=\"ltr\" lang=\"en\" style=\"position: relative;\">\n<p><span style=\"font-size: 12pt;\">A facade is an object that provides a simplified interface to a larger body of code, such as a&nbsp;<a class=\"mw-redirect\" title=\"Class library\" href=\"https://en.wikipedia.org/wiki/Class_library\" target=\"_blank\">class library</a>. A facade can:</span></p>\n<ul>\n<li><span style=\"font-size: 12pt;\">make a&nbsp;<a class=\"mw-redirect\" title=\"Software library\" href=\"https://en.wikipedia.org/wiki/Software_library\" target=\"_blank\">software library</a>&nbsp;easier to use, understand and test, since the facade has convenient methods for common tasks;</span></li>\n<li><span style=\"font-size: 12pt;\">make the library more readable, for the same reason;</span></li>\n<li><span style=\"font-size: 12pt;\">reduce&nbsp;<a title=\"Coupling (computer programming)\" href=\"https://en.wikipedia.org/wiki/Coupling_(computer_programming)\" target=\"_blank\">dependencies</a>&nbsp;of outside code on the inner workings of a library, since most code uses the facade, thus allowing more flexibility in developing the system;</span></li>\n<li><span style=\"font-size: 12pt;\">wrap a poorly designed collection of&nbsp;<a title=\"Application programming interface\" href=\"https://en.wikipedia.org/wiki/Application_programming_interface\" target=\"_blank\">APIs</a>&nbsp;with a single well-designed API.</span></li>\n</ul>\n<p style=\"text-align: center;\"><a class=\"image\" href=\"https://en.wikipedia.org/wiki/File:Example_of_Facade_design_pattern_in_UML.png\" target=\"_blank\"><img src=\"https://upload.wikimedia.org/wikipedia/en/5/57/Example_of_Facade_design_pattern_in_UML.png\" alt=\"Example of Facade design pattern in UML.png\" width=\"577\" height=\"384\" data-file-width=\"577\" data-file-height=\"384\" /></a></p>\n</div>\n</div>\n<div class=\"mw-body-content\" style=\"font-size: small; font-weight: normal; position: relative;\">\n<div class=\"mw-content-ltr\" dir=\"ltr\" lang=\"en\" style=\"position: relative; text-align: center;\">\n<dl>\n<dt><span style=\"font-size: 12pt;\"><em>Facade:&nbsp;</em></span><span style=\"font-size: 12pt;\">The facade class abstracts Packages 1, 2, and 3 from the rest of the application.</span></dt>\n<dt><span style=\"font-size: 12pt;\"><em>Clients:</em>&nbsp;</span><span style=\"font-size: 12pt;\">The objects are using the Facade Pattern to access resources from the Packages.</span></dt>\n</dl>\n<p>&nbsp;</p>\n<p style=\"text-align: left;\"><span style=\"font-size: 12pt;\">The facade pattern is typically used when:</span></p>\n<ul>\n<li style=\"text-align: left;\"><span style=\"font-size: 12pt;\">a simple interface is required to access a complex system;</span></li>\n<li style=\"text-align: left;\"><span style=\"font-size: 12pt;\">the abstractions and implementations of a subsystem are tightly coupled;</span></li>\n<li style=\"text-align: left;\"><span style=\"font-size: 12pt;\">need an entry point to each level of layered software; or</span></li>\n<li style=\"text-align: left;\"><span style=\"font-size: 12pt;\">a system is very complex or difficult to understand.</span></li>\n</ul>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_data_analytics__aspern_ , :Domain_workflows__shape_ ;
          owl:sameAs                     dbr:Facade_pattern .
  
  :Domain_microsoft__net
          a           spec:Domain ;
          rdfs:label  "microsoft .net" .
  
  :SoftwareEngineeringMethod_layer_and_dependency_recovery
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Layer and Dependency Recovery" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_understandability , :ArchitecturalQuality_maintainability ;
          gen:hasMethodPhase            :ProjectPhase_architecture ;
          gen:hasMethodRole             :Role_system_architect ;
          gen:hasMethodTag              :AuthorTag_dependency_model ;
          gen:wikiEntry                 "<p>&nbsp;This method recovers a source code&nbsp;layer-dependency model of a given system,</p><ul><li>Model is&nbsp;derived from, and remains similar to,&nbsp;the existing folder structure and actual code</li><li>Finds and&nbsp;marks dependency cycles and facilitates reducing them.</li><li>Produces understandable, custom diagrams</li><li>Easy to maintain</li><li>Granularity is scalable and tailorable</li><li>etc.</li></ul>" .
  
  :DesignPattern_resource_allocation
          a                              gen:DesignPattern ;
          rdfs:label                     "Resource Allocation" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_viability , :ArchitecturalQuality_auditability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_safety , :ArchitecturalQuality_traceability , :ArchitecturalQuality_analyzability , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_repeatability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_resilience , :ArchitecturalQuality_accountability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_dependability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_utility , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_accounting , :DesignTactic_error_handling , :DesignTactic_error_detection ;
          gen:wikiEntry                  "Equitable Resource Allocation handles many requests for a set of resources (some of them are rare). Request-level handling would render some resources unnecessarily idle. The Equitable Resource Allocation Pattern provides the solution to pool similar requests and allocate resources to pools. Additional bookkeeping is needed for managing the requests and their related resource demands. A disadvantage of this pattern is that it might lead to priority-inversion scenario [Hanmer 2007]pp 191-192. Relations Accounting [Hanmer 2007]Equitable Resource Allocation pp 191-192. Error Detection [Hanmer 2007]Equitable Resource Allocation pp 191-192. Error Handling [Hanmer 2007]Equitable Resource Allocation pp 191-192." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Project_secoqualities
          a           cont:Project ;
          rdfs:label  "secoqualities" .
  
  :ArchitecturalQuality_recoverability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "recoverability" , "Recoverability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_routine_exercises , :DesignPattern_error_containment_barrier , :DesignPattern_fault_correlation , :DesignPattern_small_patches , :DesignPattern_finish_work_in_progress , :DesignTactic_error_detection , :DesignPattern_resource_allocation , :DesignPattern_return_to_reference_point , :DesignPattern_routine_maintenance , :DesignPattern_compensating_transaction_pattern , :DesignPattern_final_handling , :DesignPattern_maintenance_interface , :DesignPattern_reintegration , :DesignPattern_protective_automatic_controls , :DesignPattern_expansive_automatic_controls , :DesignPattern_similarity_detection , :DesignPattern_retry_pattern , :DesignPattern_leaky_bucket_counter , :DesignPattern_memento , :DesignPattern_reconfiguration , :DesignPattern_watchdog , :DesignPattern_error_correcting_code , :DesignPattern_concentrated_recovery , :DesignPattern_checkpoint , :DesignPattern_checksum , :DesignPattern_units_of_mitigation , :DesignPattern_reinitialization , :DesignPattern_remote_storage , :DesignPattern_correcting_audits , :DesignPattern_slow_it_down , :DesignPattern_routine_audits , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_someone_in_charge , :DesignPattern_failover , :DesignPattern_claim_check , :DesignPattern_existing_metrics , :DesignPattern_queue_for_resources , :DesignPattern_fault_isolation , :DesignPattern_realistic_threshold , :DesignPattern_circuit_breaker , :DesignPattern_error_handler , :DesignPattern_acknowledgement , :DesignPattern_fresh_work_before_stale , :DesignPattern_limit_retries , :DesignPattern_fault_diagnosis , :DesignPattern_riding_over_transients , :DesignPattern_voting , :DesignPattern_rollback , :DesignPattern_escalation , :DesignPattern_treshold_analysis , :DesignPattern_fault_observer , :DesignPattern_compensation , :DesignPattern_marked_data , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_parameter_checking , :DesignTactic_fault_handling , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_root_cause_analysis , :DesignPattern_redundancy , :DesignPattern_maximize_human_participation , :DesignTactic_error_handling , :DesignPattern_restart , :DesignPattern_3-category_logging , :DesignPattern_deferrable_work , :DesignPattern_quarantine , :DesignPattern_heartbeat , :DesignPattern_indiviuals_decide_timing , :DesignPattern_temporal_analytics , :DesignPattern_reproducible_error , :DesignPattern_minimize_human_intervention , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_software_update , :DesignPattern_revise_procedure , :DesignPattern_rollforward , :DesignPattern_recovery_blocks ;
          gen:relatedQuality       :ArchitecturalQuality_viability ;
          gen:wikiEntry            "[Microsoft Technet Recoverability 2009] Recoverability in computing and software refers to the ability to restoreyour deployment to the point at which a failure occurred. The ability to recover quickly from a system failure or disaster dependson having current backups ofuser data and on having a predefined plan for recovering that data on new hardware. [Donald G. Firesmith et al. 2008]Recoverability the part of robustness that is the degree to whicht the system or architectural component automatically recovers from a fault or failure.   Relations Error Detection [Hanmer 2007]Error Containment Barrier p. 93 Error Handling [Hanmer 2007]Error Containment Barrier p. 93 Fault Handling [Hanmer 2007]Error Containment Barrier p. 93" ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_accessibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Accessibility" , "accessibility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_maximize_human_participation , :DesignPattern_module , :DesignPattern_factory_method , :DesignPattern_state , :DesignTactic_infinite_scrolling , :DesignPattern_interpretor , :DesignPattern_polling , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_lock , :DesignPattern_model-view-controller , :DesignPattern_access_control , :DesignTactic_globalization , :DesignPattern_publish_subscribe , :DesignPattern_capturing_architectural_requirements , :DesignPattern_facade , :DesignPattern_abstract_factory , :DesignPattern_data_logger , :DesignTactic_barrier-free_access ;
          gen:relatedQuality       :ArchitecturalQuality_usability ;
          gen:wikiEntry            "Accessibility refers to the accessibility of a computer system to all people regardless of disability or severity of impairment. It is largely a software concern when software hardware or a combination of hardware and software is used to enable use of a computer by a person with a disability or impairment this is known as Assistive Technology.  [ISO Ergonomics of human-system interaction -- Guidance on software accessibility 2008] usability of a product service environment or facility by people with the widest range of capabilities  [Donald G. Firesmith et al. 2008]Accessibility the part of usabilty that is the degree to which the system is useful to users with disabilities (e.g. color blindness deafness loss of mobility etc. )." ;
          spec:requiredBy          :Domain_abstract .
  
  :Requirement_ar-010__publishing_services
          a                          spec:Requirement ;
          rdfs:label                 "AR-010: Publishing services" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The system shall support the publishing of APIs, the service implementation of the API, and attached documentation (files, external URLs).&nbsp;" ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Management" ;
          spec:requirementPurpose    "Define security policy" .
  
  :DesignTactic_proxying
          a           gen:DesignTactic ;
          rdfs:label  "proxying" .
  
  :ArchitecturalQuality_dependability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "dependability" , "Dependability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_final_handling , :DesignPattern_compensating_transaction_pattern , :DesignPattern_existing_metrics , :DesignPattern_maintenance_interface , :DesignPattern_maximize_human_participation , :DesignTactic_error_detection , :DesignPattern_circuit_breaker , :DesignPattern_heartbeat , :DesignPattern_fault_isolation , :DesignPattern_memento , :DesignPattern_fault_correlation , :DesignPattern_reintegration , :DesignPattern_failover , :DesignPattern_units_of_mitigation , :DesignPattern_parameter_checking , :DesignPattern_similarity_detection , :DesignPattern_queue_for_resources , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_treshold_analysis , :DesignPattern_correcting_audits , :DesignPattern_quarantine , :DesignPattern_rollback , :DesignPattern_reproducible_error , :DesignPattern_checkpoint , :DesignPattern_minimize_human_intervention , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_routine_exercises , :DesignPattern_remote_storage , :DesignPattern_riding_over_transients , :DesignPattern_3-category_logging , :DesignPattern_routine_maintenance , :DesignPattern_routine_audits , :DesignPattern_fault_diagnosis , :DesignPattern_marked_data , :DesignPattern_deferrable_work , :DesignPattern_realistic_threshold , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_software_update , :DesignPattern_revise_procedure , :DesignPattern_fault_observer , :DesignPattern_limit_retries , :DesignPattern_recovery_blocks , :DesignPattern_restart , :DesignPattern_protective_automatic_controls , :DesignPattern_claim_check , :DesignPattern_watchdog , :DesignPattern_redundancy , :DesignPattern_rollforward , :DesignPattern_reconfiguration , :DesignPattern_resource_allocation , :DesignPattern_compensation , :DesignPattern_leaky_bucket_counter , :DesignPattern_root_cause_analysis , :DesignPattern_temporal_analytics , :DesignPattern_reinitialization , :DesignPattern_voting , :DesignPattern_slow_it_down , :DesignPattern_checksum , :DesignPattern_return_to_reference_point , :DesignTactic_fault_handling , :DesignPattern_small_patches , :DesignPattern_error_handler , :DesignPattern_escalation , :DesignPattern_error_containment_barrier , :DesignPattern_fresh_work_before_stale , :DesignPattern_indiviuals_decide_timing , :DesignPattern_someone_in_charge , :DesignPattern_error_correcting_code , :DesignPattern_concentrated_recovery , :DesignPattern_retry_pattern , :DesignPattern_acknowledgement , :DesignTactic_error_handling , :DesignPattern_finish_work_in_progress , :DesignPattern_expansive_automatic_controls ;
          gen:relatedQuality       :ArchitecturalQuality_availability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_reliability ;
          gen:wikiEntry            "[IEC Dependability 1990] Dependability is a measure of a systems availability reliability and its maintenance support. [Avizienis et al.2004] This may also encompass mechanisms designed to increase and maintain the dependability of a system.  [Vittorio Cortellessa Antinisca Di Marco Paola Inverardi 2011]dependabiility of a system is the ability to avoid service failures that are more frequent and more severe than is acceptable." ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_autonomy
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Autonomy" , "autonomy" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_maintain_integrity , :DesignPattern_fresh_work_before_stale , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_at-least-once_delivery , :DesignPattern_expansive_automatic_controls , :DesignPattern_reintegration , :DesignPattern_someone_in_charge , :DesignPattern_claim_check , :DesignPattern_memento , :DesignPattern_riding_over_transients , :DesignPattern_temporal_analytics , :DesignPattern_concentrated_recovery , :DesignPattern_timeout-based_delivery , :DesignTactic_intrusion_detection , :DesignPattern_queue_for_resources , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_maximize_human_participation , :DesignPattern_exactly-once_delivery , :DesignPattern_deferrable_work , :DesignPattern_software_update , :DesignPattern_protective_automatic_controls , :DesignPattern_units_of_mitigation , :DesignTactic_messaging , :DesignPattern_rollback , :DesignPattern_load_shedding , :DesignPattern_rollforward , :DesignPattern_minimize_human_intervention , :DesignPattern_final_handling , :DesignPattern_traffic_shaping , :DesignPattern_restart , :DesignTactic_overload_mitigation , :DesignPattern_reconfiguration , :DesignPattern_retry_pattern , :DesignPattern_flyweight , :DesignPattern_error_handler , :DesignPattern_heartbeat , :DesignPattern_checksum , :DesignPattern_fault_observer , :DesignPattern_small_patches , :DesignPattern_existing_metrics , :DesignPattern_correcting_audits , :DesignPattern_revise_procedure , :DesignPattern_indiviuals_decide_timing , :DesignPattern_marked_data , :DesignPattern_limit_retries , :DesignPattern_reassess_overload_decision , :DesignPattern_error_correcting_code , :DesignPattern_workload_sharing , :DesignPattern_acknowledgement , :DesignPattern_overload_toolboxes , :DesignPattern_reproducible_error , :DesignPattern_compensating_transaction_pattern , :DesignPattern_slow_it_down , :DesignPattern_voting , :DesignPattern_static_content_hosting_pattern , :DesignPattern_routine_exercises , :DesignPattern_root_cause_analysis , :DesignPattern_leaky_bucket_counter , :DesignPattern_common_persistent_store , :DesignPattern_reinitialization , :DesignPattern_recovery_blocks , :DesignPattern_routine_audits , :DesignTactic_fault_handling , :DesignPattern_failover , :DesignPattern_realistic_threshold , :DesignPattern_watchdog , :DesignPattern_checkpoint , :DesignPattern_routine_maintenance , :DesignPattern_similarity_detection , :DesignPattern_service-oriented_architecture , :DesignPattern_compensation , :DesignPattern_fault_diagnosis , :DesignPattern_maintenance_interface , :DesignPattern_quarantine , :DesignPattern_throttling_pattern , :DesignPattern_escalation , :DesignPattern_return_to_reference_point , :DesignTactic_error_handling , :DesignPattern_parameter_checking , :DesignTactic_error_detection , :DesignPattern_remote_storage , :DesignPattern_transaction-based_delivery , :DesignPattern_packet_filtering , :DesignPattern_error_containment_barrier , :DesignPattern_redundancy , :DesignPattern_fault_correlation , :DesignPattern_resource_allocation , :DesignPattern_fault_isolation , :DesignPattern_treshold_analysis , :DesignPattern_finish_work_in_progress , :DesignPattern_3-category_logging , :DesignPattern_operational_monitoring_and_alerting ;
          gen:relatedQuality       :ArchitecturalQuality_stability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience ;
          gen:wikiEntry            "[Wikipedia Autonomy 2014] In general autonomy describes the right or condition of self-government esp. in a particular sphere without external influence. [Wikipedia Autonomic Computing 2014] With respect to computing autonomic computing refers to the self-managing characteristics of distributed computing resources adapting to unpredictable changes while hiding intrinsic complexity to operators and users." , "<div><span style=\"font-weight: 700;\">Qualitative Assessment</span></div><div><br></div>[Wikipedia Autonomy 2014] In general autonomy describes the right or condition of self-government esp. in a particular sphere without external influence. [Wikipedia Autonomic Computing 2014] With respect to computing autonomic computing refers to the self-managing characteristics of distributed computing resources adapting to unpredictable changes while hiding intrinsic complexity to operators and users." ;
          spec:requiredBy          :Domain_abstract .
  
  spec:useDecisionTactic
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:DesignDecision ;
          rdfs:label          "isUsing" ;
          rdfs:range          gen:DesignTactic ;
          rdfs:subPropertyOf  gen:uses .
  
  :DesignDecision_ad-141__data_marts
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-141: Data marts" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Data marts</strong></p>\n<p style=\"font-size: small;\">The aggregating and partitioning of data is realized according to the&nbsp;\"data mart\" concept: A data mart is a copy of a partial dataset from the DWH that is especially created for a particular organizational area or a particular application or analysis.</p>\n<p style=\"font-size: small;\">The access requests to the data marts are controlled on the basis of a multi-tenancy&nbsp;authorization and authentication model. This means that the stakeholder type and her associated rights&nbsp;must be carefully considered and&nbsp;reflected in&nbsp;the&nbsp;aggregation model used&nbsp;in a particular&nbsp;data mart.</p>\n<p style=\"font-size: small;\">&nbsp;</p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-101__dwh_querying , :Domain_ar-107__multi-tenancy_support , :Domain_ar-161__access_control ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_multitenancy , :DesignTactic_aggregation , :DesignTactic_authorization .
  
  gen:DesignPattern  a     owl:Class ;
          rdfs:label       "Design Pattern" ;
          rdfs:subClassOf  gen:ArchitecturalKnowledgeElement .
  
  :ArchitecturalQuality_adaptability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Adaptability" , "adaptability" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-07__mining_process , :DesignDecision_kdd-12__resource_allocation , :DesignDecision_kdd-10__adaptation_mechanisms , :DesignPattern_capturing_architectural_requirements , :DesignPattern_architectural_requirements_questionnaire ;
          gen:relatedQuality       :ArchitecturalQuality_reliability , :ArchitecturalQuality_configurability ;
          gen:wikiEntry            "<p>“Adaptability is defined as the ease with which a system or parts of the system may be adapted to the changing requirements.”</p><p><strong>Reference:</strong> Adaptability in Object-Oriented Software Development Workshop Report, 10th European Conference on Object-Oriented Programming, July 8-12, 1996, Linz, Austria.</p>" , "<p><b>S-R</b></p><p>“Adaptability is defined as the ease with which a system or parts of the system may be adapted to the changing requirements.”</p><p><strong>Reference:</strong> Adaptability in Object-Oriented Software Development Workshop Report, 10th European Conference on Object-Oriented Programming, July 8-12, 1996, Linz, Austria.</p>" ;
          spec:requiredBy          :Domain_abstract .
  
  :Author_vollmar_jan
          a           cont:Author ;
          rdfs:label  "vollmar jan" .
  
  :DesignDecision_ad-113__faceted_navigation
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-113: Faceted navigation" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\"><strong>Flexible&nbsp;data&nbsp;querying using facetted navigation</strong></span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\">Data querying&nbsp;can be done in several steps, which can&nbsp;be carried out in a variable order using filters and facets. Faceted navigation will be used&nbsp;to allow restricting the result set in an arbitrary order&nbsp;dependign on&nbsp;the selection of facets and filters. A faceted navigation can (but need not) also offer a free text search.</span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\"><strong>Notes:</strong></span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\">[1] Filters vs. Facets:&nbsp;<a href=\"http://www.nngroup.com/articles/filters-vs-facets/\">http://www.nngroup.com/articles/filters-vs-facets/</a></span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: 12pt;\"><a target=\"_blank\" name=\"_ftn1\"></a>[2] Faceted Search:&nbsp;<a href=\"http://en.wikipedia.org/wiki/Faceted_search\">http://en.wikipedia.org/wiki/Faceted_search</a></span></p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-104_2__variable_filtering ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability ;
          spec:useDecisionTactic          :DesignTactic_faceting .
  
  spec:hasDecisionDomain
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:DesignDecision ;
          rdfs:label          "isUsedIn" ;
          rdfs:subPropertyOf  spec:address .
  
  sear:previousSearchStep
          a            owl:FunctionalProperty , owl:ObjectProperty ;
          rdfs:domain  sear:SearchStep ;
          rdfs:range   sear:SearchStep .
  
  gen:hasTacticEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:DesignTactic ;
          rdfs:label          "hasEffectOn" ;
          rdfs:subPropertyOf  gen:hasEffectOnQuality .
  
  :Domain_perf-2__performance_optimization
          a           spec:Domain ;
          rdfs:label  "perf-2: performance optimization" .
  
  :Author_h_fler_werner
          a           cont:Author ;
          rdfs:label  "höfler werner" .
  
  :Domain_c___64-bit_windows
          a           spec:Domain ;
          rdfs:label  "c++ 64-bit windows" .
  
  :DesignTactic_message_construction
          a                             gen:DesignTactic ;
          rdfs:label                    "Message Construction" , "message construction" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:wikiEntry                 "When data is exchanged between a service and consumer it must be wrapped inside a message. The format of that message is based on the types of operations you must support. For example you may be exchanging documents executing commands or raising events. Consider the following guidelines when designing a message construction strategy Determine the appropriate patterns for message constructions such as Command Document Event and Request-Reply and choose those appropriate for your scenario. Divide very large quantities of data into smaller chunks and send them in sequence. When using slow message delivery channels consider including expiration information in messages that are time sensitive. The service should ignore expired messages." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_wso2_distributed_deployment
          a                              gen:DesignPattern ;
          rdfs:label                     "WSO2 Distributed Deployment" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_flexible_deployment ;
          gen:wikiEntry                  "<h4 id=\"APIManagerClusteringDeploymentPatterns-StoreandPublishercomponentsinasingleservernodeSingle\">Store and Publisher components in a single server node <span id=\"APIManagerClusteringDeploymentPatterns-Single\" class=\"confluence-anchor-link\"></span></h4>\n<p><span style=\"color: #000000; text-decoration: none;\">The diagram below depicts a minimum deployment of API Manager component nodes. This pattern is for an internal store, so the Store and Publisher components are deployed on a single server node.</span></p>\n<p><span style=\"color: #000000; text-decoration: none;\"> <img class=\"confluence-embedded-image\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://docs.wso2.com/download/attachments/31131130/Store%20-Publisher-%20Single-Server.jpg?version=2&amp;modificationDate=1396246816000&amp;api=v2\" alt=\"\" width=\"550\" data-image-src=\"/download/attachments/31131130/Store%20-Publisher-%20Single-Server.jpg?version=2&amp;modificationDate=1396246816000&amp;api=v2\" />&nbsp;&nbsp; </span></p>\n<h4 id=\"APIManagerClusteringDeploymentPatterns-MinimumclusterwithanexternalstoreExternal\">Minimum cluster with an external store <span id=\"APIManagerClusteringDeploymentPatterns-External\" class=\"confluence-anchor-link\"></span></h4>\n<p><span style=\"color: #000000; text-decoration: none;\"> <span style=\"color: #000000; text-decoration: none;\">This pattern is similar to the previous one, except that the Store component node is deployed on an external network. <span style=\"color: #000000; text-decoration: none;\">The diagram below depicts a minimum deployment</span> of the store. </span> </span></p>\n<p><span style=\"color: #000000; text-decoration: none;\"> <img class=\"confluence-embedded-image\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://docs.wso2.com/download/attachments/31131130/Store-External-Network.jpg?version=2&amp;modificationDate=1396246835000&amp;api=v2\" alt=\"\" width=\"550\" data-image-src=\"/download/attachments/31131130/Store-External-Network.jpg?version=2&amp;modificationDate=1396246835000&amp;api=v2\" />&nbsp;&nbsp;</span></p>\n<h4 id=\"APIManagerClusteringDeploymentPatterns-Allcomponentsinaclustered,internalsetupClusteredInternal\">All components in a clustered, internal setup <span id=\"APIManagerClusteringDeploymentPatterns-ClusteredInternal\" class=\"confluence-anchor-link\"></span></h4>\n<p><span style=\"color: #000000; text-decoration: none;\"> <span style=\"color: #000000; text-decoration: none;\"> <span style=\"color: #000000; text-decoration: none;\">This pattern extends the individual component nodes and deploys them in a cluster for high availability. Each component node can be extended up to n number of server nodes based on the deployment load. This pattern is based on a complete internal deployment where all API component nodes are deployed internally. </span> <span style=\"color: #000000; text-decoration: none;\"> <span style=\"color: #000000; text-decoration: none;\"> <span style=\"color: #000000; text-decoration: none;\">The diagram below depicts a minimum deployment</span> of the components.</span> </span> </span> </span></p>\n<p><span style=\"color: #000000; text-decoration: none;\"> <img class=\"confluence-embedded-image\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://docs.wso2.com/download/attachments/31131130/Clustered-Internal.jpg?version=2&amp;modificationDate=1396246790000&amp;api=v2\" alt=\"\" width=\"450\" data-image-src=\"/download/attachments/31131130/Clustered-Internal.jpg?version=2&amp;modificationDate=1396246790000&amp;api=v2\" />&nbsp;</span></p>\n<h4 id=\"APIManagerClusteringDeploymentPatterns-AllcomponentsinaclusteredsetupwithanexternalstoreClusteredExternal\">All components in a clustered setup with an external store <span id=\"APIManagerClusteringDeploymentPatterns-ClusteredExternal\" class=\"confluence-anchor-link\"></span></h4>\n<p><span style=\"color: #000000; text-decoration: none;\"> <span style=\"color: #000000; text-decoration: none;\">This pattern is similar to the one above and also provides high availability, but it considers the use of an external store. </span> <span style=\"color: #000000; text-decoration: none;\"> <span style=\"color: #000000; text-decoration: none;\"> <span style=\"color: #000000; text-decoration: none;\">The diagram below depicts a minimum deployment</span> of the components.</span> </span> <br /> </span></p>\n<p style=\"text-align: center;\"><span style=\"color: #000000; text-decoration: none;\"> <img class=\"confluence-embedded-image\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://docs.wso2.com/download/attachments/31131130/Clustered-external.jpg?version=2&amp;modificationDate=1396246709000&amp;api=v2\" alt=\"\" width=\"550\" data-image-src=\"/download/attachments/31131130/Clustered-external.jpg?version=2&amp;modificationDate=1396246709000&amp;api=v2\" /></span></p>" ;
          spec:hasPatternDomain          :Domain_web_services .
  
  :DesignDecision_kdd-03
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-03" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Webbasierte Schnittstellen</strong></p><p>Die Schnittstellen zwischen den drei logischen Funktionsschichten des Systems sind webbasiert. Dabei stellen die unteren Schichten REST und/oder SOAP-Webdienste den oberen Schichten zur Verfügung.&nbsp;</p><p><strong>Begründung:</strong> Damit wird die Verletzung des einseitigen Client-Service Request-Response Mechanismus durch Patterns wie etwa Publish-Subscriber Mechanismen über REST verhindert. Wartemechanismen sollten in der Präsentationsschicht implementiert werden. (z.B. mithilfe von jQuery when() Statements<a href=\"javascript:saFiddle();\" name=\"_ftnref1\" data-mce-href=\"#_ftn1\" target=\"_blank\">[1]</a>).</p><p><strong></strong><strong>Notes:</strong></p><p><a href=\"javascript:closePopup(this);\" name=\"_ftn1\" data-mce-href=\"#_ftnref1\" target=\"_blank\">[1]</a> https://api.jquery.com/jquery.when/</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-158__standard_compatibility , :Domain_ar-159__generic_api , :Domain_ar-101__dwh_querying ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_scalability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_portability ;
          spec:useDecisionTactic          :DesignTactic_web_interfaces .
  
  :DesignPattern_queuing
          a                              gen:DesignPattern ;
          rdfs:label                     "Queuing" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_controllability , :ArchitecturalQuality_mobility , :ArchitecturalQuality_utility , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_scalability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_availability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_operability ;
          gen:isAlternativeOf            :DesignTactic_load_distribution , :DesignTactic_queueing ;
          gen:wikiEntry                  "[SOA Patterns Asynchronous Queuing [date unknown]] Queuing is a fundamentalpattern to decouple a clients request from the response of a server. Queues allow applications to publish requests (e.g. messages) to a queue. Consumers of the request pick messages to process them in a particular order (FIFO priority queues etc.). Queues also allow to hand-off of requests to be processed to a pool of available processing nodes to achieve load distribution. A service can exchange messages with its consumers via an intermediary buffer allowing service and consumers to process messages independently by remaining temporally decoupled." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_shared_component
          a                              gen:DesignPattern ;
          rdfs:label                     "Shared Component" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_utility , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_generality , :ArchitecturalQuality_functionality , :ArchitecturalQuality_uniformity , :ArchitecturalQuality_agility , :ArchitecturalQuality_heterogeneity ;
          gen:isAlternativeOf            :DesignTactic_multitenancy ;
          gen:wikiEntry                  "A component is accessed by multiple tenants to leverage economies of scale.[Cloud Computing Patterns [date unknown]]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  spec:requirementGroup
          a            owl:DatatypeProperty ;
          rdfs:domain  spec:Requirement ;
          rdfs:range   xsd:string .
  
  :AuthorTag_strategy
          a           cont:AuthorTag ;
          rdfs:label  "strategy" .
  
  :ProjectPhase_concept_definition
          a           cont:ProjectPhase ;
          rdfs:label  "concept definition" .
  
  :ArchitecturalQuality_availability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Availability" , "availability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_flyweight , :DesignPattern_escalation , :DesignPattern_duplex_messaging , :DesignPattern_error_handler , :DesignPattern_priority_queue_pattern , :DesignPattern_restart , :DesignPattern_dynamically-discoverable_elements , :DesignDecision_ad-015__aspern_deployment , :DesignPattern_fault_isolation , :DesignPattern_throttling_pattern , :DesignPattern_cache-aside_pattern , :DesignPattern_point_to_point , :DesignPattern_scatter_and_gather , :DesignPattern_push_monitor , :DesignPattern_reinitialization , :DesignTactic_error_handling , :DesignPattern_software_update , :DesignPattern_pipe_and_filter , :DesignPattern_pipes_and_filters_pattern , :DesignPattern_deferrable_work , :DesignPattern_mirror , :DesignTactic_routing , :DesignPattern_separate_system-managed_data , :DesignPattern_environment_to_task_-_push , :DesignPattern_failover , :DesignPattern_session_failover , :DesignPattern_units_of_mitigation , :DesignPattern_leaky_bucket_counter , :DesignPattern_reconfiguration , :DesignPattern_rollforward , :DesignTactic_producer_consumer , :DesignPattern_workload_sharing , :DesignPattern_fresh_work_before_stale , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_small_patches , :DesignPattern_competing_consumers , :DesignPattern_active_redundant_elements , :DesignPattern_command_message , :DesignPattern_singleton , :DesignPattern_publish_subscribe , :DesignPattern_replication , :DesignPattern_protective_automatic_controls , :DesignPattern_queue-based_load_leveling_pattern , :DesignPattern_resource_allocation , :DesignPattern_local_cache , :DesignPattern_3-category_logging , :DesignPattern_execution_orchestrator , :DesignPattern_messaging_gateway , :DesignPattern_capturing_architectural_requirements , :DesignPattern_load_balancing , :DesignPattern_reintegration , :DesignTactic_queueing , :DesignTactic_overload_mitigation , :DesignPattern_bulk_synchronous_parallel , :DesignPattern_error_correcting_code , :DesignTactic_vertical_scaling , :DesignPattern_expendable_hardware , :DesignPattern_limit_retries , :DesignPattern_event_message , :DesignPattern_existing_metrics , :DesignPattern_selective_consumer , :DesignPattern_poll_monitor , :DesignPattern_command , :DesignTactic_multicasting , :DesignPattern_peripheral_specialist_elements , :DesignPattern_fire_and_forget , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_durable_subscriber , :DesignPattern_quarantine , :DesignPattern_indiviuals_decide_timing , :DesignPattern_similarity_detection , :DesignPattern_revise_procedure , :DesignPattern_someone_in_charge , :DesignPattern_acknowledgement , :DesignPattern_queuing , :DesignPattern_process_manager , :DesignPattern_redundancy , :DesignPattern_routine_exercises , :DesignPattern_maintenance_interface , :DesignTactic_message_construction , :DesignPattern_compensation , :DesignPattern_fault_diagnosis , :DesignPattern_compensating_transaction_pattern , :DesignPattern_message_dispatcher , :DesignPattern_traffic_shaping , :DesignPattern_temporal_analytics , :DesignPattern_routine_audits , :DesignPattern_treshold_analysis , :DesignPattern_document_message , :DesignPattern_message_broker , :DesignPattern_web_service_proxy , :DesignPattern_checkpoint , :SoftwareEngineeringMethod_built-in_self_test_methods , :DesignPattern_checksum , :DesignPattern_message_bus , :DesignPattern_circuit_breaker , :DesignPattern_parameter_checking , :DesignPattern_expansive_automatic_controls , :DesignPattern_concentrated_recovery , :DesignTactic_message_channeling , :DesignPattern_retry_pattern , :DesignPattern_rollback , :DesignPattern_claim_check , :DesignPattern_sharding_pattern , :DesignPattern_fault_correlation , :DesignPattern_realistic_threshold , :DesignPattern_idempotent_receiver , :DesignPattern_caching , :DesignPattern_observer , :DesignPattern_minimize_human_intervention , :DesignPattern_map_reduce , :DesignPattern_riding_over_transients , :DesignPattern_memento , :DesignPattern_lock , :DesignPattern_microservices , :DesignPattern_fault_observer , :DesignPattern_application_server_architecture , :DesignPattern_recovery_blocks , :DesignDecision_ad-012__deployment_schemes , :DesignDecision_kdd-12__connection_drop , :DesignPattern_reproducible_error , :DesignPattern_request_response , :DesignPattern_delightfully_parallel_loop , :DesignPattern_overload_toolboxes , :DesignPattern_return_to_reference_point , :DesignTactic_no_single_point_of_failure , :DesignPattern_data_logger , :DesignTactic_error_detection , :DesignTactic_asynchronous_communication , :SoftwareEngineeringMethod_technical_debt_management , :DesignPattern_message_aggregator , :DesignPattern_message_filter , :DesignPattern_maximize_human_participation , :DesignTactic_scheduling , :DesignPattern_task_to_environment_-_push , :DesignPattern_reassess_overload_decision , :DesignPattern_finish_work_in_progress , :DesignPattern_heartbeat , :DesignTactic_parallel_computing , :DesignPattern_shared_space , :DesignPattern_secure_channels , :DesignPattern_messaging_mapper , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_error_containment_barrier , :DesignPattern_aggregated_routing , :DesignPattern_service_activator , :DesignTactic_monitoring , :DesignTactic_load_distribution , :SoftwareEngineeringMethod_nfr_testing_and_analysis , :DesignPattern_dynamic_router , :DesignPattern_adapter , :DesignPattern_bridge , :DesignPattern_queue_for_resources , :DesignPattern_event_sourcing_pattern , :DesignPattern_marked_data , :DesignTactic_message_endpoint , :DesignPattern_slow_it_down , :DesignPattern_content-based_router , :DesignPattern_static_content_hosting_pattern , :DesignPattern_watchdog , :DesignPattern_load_shedding , :DesignPattern_fork_and_join , :DesignPattern_final_handling , :DesignPattern_remote_storage , :DesignTactic_horizontal_scaling , :DesignPattern_root_cause_analysis , :DesignPattern_transactional_client , :DesignPattern_voting , :SoftwareEngineeringMethod_model-based_survivability_engineering , :DesignPattern_polling_consumer , :DesignPattern_routine_maintenance , :DesignPattern_message_bridge , :DesignPattern_correcting_audits , :DesignPattern_partitioning , :DesignTactic_fault_handling , :DesignPattern_scheduler_agent_supervisor_pattern ;
          gen:relatedQuality       :ArchitecturalQuality_performance , :ArchitecturalQuality_reliability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_scalability ;
          gen:wikiEntry            "<p><strong>Availability</strong></p>\n<p>Availability defines the proportion of time that the system is functional and working. It can be measured as a percentage of the total system downtime over a predefined period. Availability will be affected by system errors, infrastructure problems, malicious attacks, and system load.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658094.aspx\">https://msdn.microsoft.com/en-us/library/ee658094.aspx</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_demonstrability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Demonstrability" , "demonstrability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_white-box_testing ;
          gen:relatedQuality       :ArchitecturalQuality_usability ;
          gen:wikiEntry            "Demonstrability is a requirement that counts at each stage of the software development and also the deployment life cycle. There are provable measures of quality from a business perspective that are hard metrics that can be measured trended and correlated to business performance like service availability and performance [Kaur and Sharma 2014]p 532.  Relations Demonstrability counts on every stage of the software development and deployment lifecycle and proves measures of quality so a White Box Test would be the best for this NFR. A White Box test can test every unit at each stage of a software on functionality and quality." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignTactic_atomicity
          a                             gen:DesignTactic ;
          rdfs:label                    "atomicity" , "Atomicity" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_automatibility , :ArchitecturalQuality_durability , :ArchitecturalQuality_stability , :ArchitecturalQuality_consistency ;
          gen:wikiEntry                 "[Wikipedia Linearizability 2014] Atomicity is a guarantee of isolation from concurrent processes. Additionally atomic operations commonly have a succeed-or-fail definition - they either successfully change the state of the system or have no apparent effect." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :SoftwareEngineeringMethod_formal_verification
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Formal Verification" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdwiki , :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_verification_and_validation , :ProjectPhase_design ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_inspection_test ;
          gen:methodContext        "Safety-critical systems (IEC 61508, EN 50128, DO-178)" ;
          gen:methodInput          "Functional specifications" , "Design specifications" , "Source code" ;
          gen:methodOutput         "Proof or disproof of correctness" ;
          gen:methodPurpose        "Reveal design gaps" , "Discover difficult bugs" ;
          gen:useMethodTactic      :DesignTactic_verification ;
          gen:wikiEntry            "Critical properties such as safety and integrity are hardly addressed by traditional testing approach which gives usually only a partial test coverage. Formal Verification discovers difficult bugs and reveals design gaps in documentation and source code taking care on concurrent and distributed systems aspects." , "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>Critical properties such as safety and integrity are hardly addressed by traditional testing approach which gives usually only a partial test coverage. Formal Verification discovers difficult bugs and reveals design gaps in documentation and source code taking care on concurrent and distributed systems aspects.</p></td>\n</tr>\n</tbody></table>\n<p></p><p></p><p><span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image\" height=\"400\" src=\"https://wiki.ct.siemens.de/download/attachments/100765131/FMV.png?version=1&amp;modificationDate=1442404013190&amp;api=v2\" data-image-src=\"/download/attachments/100765131/FMV.png?version=1&amp;modificationDate=1442404013190&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"104929338\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"FMV.png\" data-base-url=\"https://wiki.ct.siemens.de\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"100765131\" data-linked-resource-container-version=\"13\"></span><span><br></span></p><h1 id=\"FormalVerification-Description\"><span>Description&nbsp;</span></h1><p>The basic cross-domain standard on functional safety of electrical/electronic/programmable electronic safety-related systems IEC 61508 prescribes certain techniques to be used on different stages of system development for targeted safety integrity level (SIL) to be reached. Among those techniques for software design and development there are semi-formal and formal methods listed as recommended for lower SIL levels and even highly recommended for topmost SIL levels. These mathematically-rigorous analysis techniques are able to increase dependability characteristics of system design and implementation significantly.</p><p>Formal verification is a technique for proving the fulfillment of correctness properties by algorithms using mathematically rigorous methods. This is achieved by means of construction of an abstract mathematical system model. The correctness properties shall be formalized in the same way in order to be checked against the model.&nbsp;Examples of mathematical objects often used to model systems are: finite state machines, labelled transition systems, Petri nets, timed automata, hybrid automata, process algebra, formal semantics of programming languages such as operational semantics, denotational semantics, axiomatic semantics and Hoare logic.&nbsp;</p><h2 id=\"FormalVerification-Context\">Context</h2><p>The method is used to ensure high level of confidence in critical system properties and compliance to standards like IEC 61508, EN 50128 or DO-178. It gives more solid guarantees of correctness than testing, but unlike testing operates not directly on implementation, but on an abstract model what requires additional measures to ensure model adequacy.</p><h2 id=\"FormalVerification-Inputs\">Inputs&nbsp;</h2><p>The method can be applied starting from the stage of detailed design ending with implementation stage. As the inputs the following artifacts can be used:</p><ul style=\"list-style-type: square;\"><li>System or subsystem functional specifications</li><li>System or subsystem design specifications</li><li>Source code</li></ul><h2 id=\"FormalVerification-Outputs\">Outputs&nbsp;</h2><p>&nbsp;Proofs or disproofs (counterexamples) of correctness properties.</p><h2 id=\"FormalVerification-Procedure\">Procedure</h2><p></p><ol><li>Identify verification scope: what parts of the system and which level of artifacts are available and can be verified</li><li>Identify correctness properties of interest within the scope of verification</li><li>Build a model or a set of models keeping in mind the balance between scope coverage and model complexity</li><li>Formalize correctness properties in accordance to the model(s) structure</li><li>Launch verification property- and model-wise and get results</li><li>In case of property disproof - analyse the counterexamples to identify the reason</li><li>Update system and/or model to ensure correctness properties fulfillment and repeat verification</li></ol><p>&nbsp;</p><h2 id=\"FormalVerification-Advantagesanddisadvantages\">Advantages and disadvantages</h2><p></p><h3 id=\"FormalVerification-Advantages:\">Advantages:</h3><ul style=\"list-style-type: square;\"><li>Abstract character of models allow for application even at very early design phase</li><li>Method is recommended and even highly recommended by safety standards</li><li>Helps to find problems which are very difficult to address by testing</li><li>Many verification tools available</li></ul><h3 id=\"FormalVerification-Disadvantages\">Disadvantages</h3><ul style=\"list-style-type: square;\"><li>Additional efforts to build models and formalize properties</li><li>Gap between source artifact and the model: model adequacy is to be checked</li><li>Only what is modeled can be checked</li><li>Partial models only provide partial knowledge that the system is correct</li><li>Attempts to build complex models quickly lead to state space explosion</li></ul>" .
  
  :DesignPattern_gatekeeper_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Gatekeeper Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_durability , :ArchitecturalQuality_security , :ArchitecturalQuality_stability , :ArchitecturalQuality_consistency , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_immunity , :ArchitecturalQuality_trustability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_traceability ;
          gen:isAlternativeOf            :DesignTactic_isolation , :DesignTactic_limit_access ;
          gen:wikiEntry                  "Protect applications and services by using a dedicated host instance that acts as a broker between clients and the application or service validates and sanitizes requests and passes requests and data between them. This can provide an additional layer of security and limit the attack surface of the system.[MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_polling
          a                              gen:DesignPattern ;
          rdfs:label                     "Polling" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_accessibility , :ArchitecturalQuality_scalability , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_etl ;
          gen:wikiEntry                  "<h2><span class=\"mw-headline\" id=\"Description\">Description</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Polling_(computer_science)&amp;action=edit&amp;section=1\" title=\"Edit section: Description\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Polling is the process where the computer or controlling device waits for an <a href=\"/wiki/External_device\" title=\"External device\" class=\"mw-redirect\">external device</a> to check for its readiness or state, often with low-level hardware. For example, when a <a href=\"/wiki/Printer_(computing)\" title=\"Printer (computing)\">printer</a> is connected via a <a href=\"/wiki/Parallel_port\" title=\"Parallel port\">parallel port</a>, the computer waits until the printer has received the next character. These processes can be as minute as only reading <a href=\"/wiki/Status_register\" title=\"Status register\">one bit</a>.</p>\n<p>Polling is sometimes used synonymously with <b><a href=\"/wiki/Busy_waiting\" title=\"Busy waiting\">busy-wait</a></b> polling. In this situation, when an <span class=\"nowrap\">I/O</span> operation is required, the computer does nothing other than check the status of the <span class=\"nowrap\">I/O</span> device until it is ready, at which point the device is accessed. In other words, the computer waits until the device is ready. Polling also refers to the situation where a device is repeatedly checked for readiness, and if it is not, the computer returns to a different task. Although not as wasteful of <a href=\"/wiki/CPU\" title=\"CPU\" class=\"mw-redirect\">CPU</a> cycles as busy waiting, this is generally not as efficient as the alternative to polling, <a href=\"/wiki/Interrupt\" title=\"Interrupt\">interrupt</a>-driven <span class=\"nowrap\">I/O</span>.</p>\n<p>In a simple single-purpose system, even busy-wait is perfectly appropriate if no action is possible until the <span class=\"nowrap\">I/O</span> access, but more often than not this was traditionally a consequence of simple hardware or non-<a href=\"/wiki/Computer_multitasking\" title=\"Computer multitasking\">multitasking</a> <a href=\"/wiki/Operating_systems\" title=\"Operating systems\" class=\"mw-redirect\">operating systems</a>.</p>\n<p>Polling is often intimately involved with very <a href=\"/wiki/Machine_code\" title=\"Machine code\">low-level hardware</a>. For example, polling a parallel printer port to check whether it is ready for another character involves examining as little as one <a href=\"/wiki/Bit\" title=\"Bit\">bit</a> of a <a href=\"/wiki/Byte\" title=\"Byte\">byte</a>. That bit represents, at the time of reading, whether a single wire in the printer cable is at low or high voltage. The <span class=\"nowrap\">I/O</span> instruction that reads this byte directly transfers the voltage state of eight real world wires to the eight circuits (<a href=\"/wiki/Flip_flop_(electronics)\" title=\"Flip flop (electronics)\" class=\"mw-redirect\">flip flops</a>) that make up one byte of a CPU register.</p>\n<p>Polling has the disadvantage that if there are too many devices to check, the time required to poll them can exceed the time available to service the I/O device.</p>\n<h3><span class=\"mw-headline\" id=\"Algorithm\">Algorithm</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Polling_(computer_science)&amp;action=edit&amp;section=2\" title=\"Edit section: Algorithm\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>Polling can be described in following steps:</p>\n<ol>\n<li>The host repeatedly reads the <a href=\"/wiki/Status_register\" title=\"Status register\">busy bit</a> of the controller until it becomes clear.</li>\n<li>When clear, the host writes in the command <a href=\"/wiki/Hardware_register\" title=\"Hardware register\">register</a> and writes a byte into the data-out register.</li>\n<li>The host sets the command-ready bit (set to 1).</li>\n<li>When the controller senses command-ready bit is set, it sets busy bit.</li>\n<li>The controller reads the command register and since write bit is set, it performs necessary <span class=\"nowrap\">I/O</span> operations on the device. If the read bit is set to one instead of write bit, data from device is loaded into data-in register, which is further read by the host.</li>\n<li>The controller clears the command-ready bit once everything is over, it clears error bit to show successful operation and reset busy bit (0).</li></ol>" ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_software_ecosystems .
  
  :ArchitecturalQuality_unknown
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "unknown" ;
          gen:isQualityAffectedBy  :DesignPattern_leader_election_pattern , :DesignPattern_cache-aside_pattern , :DesignPattern_eventual_consistency , :DesignPattern_compute_resource_consolidation_pattern , :DesignPattern_health_endpoint_monitoring_pattern , :DesignPattern_strict_consistency , :DesignPattern_cqrs , :DesignPattern_materialized_view_pattern , :DesignPattern_index_table_pattern .
  
  :DesignPattern_replication
          a                              gen:DesignPattern ;
          rdfs:label                     "Replication" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_completeness , :ArchitecturalQuality_operability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_generality , :ArchitecturalQuality_scalability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_versatility , :ArchitecturalQuality_availability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_integratability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_mobility , :ArchitecturalQuality_utility ;
          gen:isAlternativeOf            :DesignTactic_horizontal_scaling , :DesignTactic_load_distribution , :DesignTactic_vertical_scaling , :DesignTactic_no_single_point_of_failure ;
          gen:wikiEntry                  "[Liao 2012] Replication is used to distribute data from one node to another node. Data is then synchronized between these nodes to maintain consistency. In database systems replication is the mechanism to publish incremental database changes to replication subscribers. Database replication allows to load-balance between databases or storing data on edge servers to minimize latency in delivering data to clients. Replication can be categorized by update propagation and update location. One is when update propagation takes place (eager versus lazy) and the second is who can perform updates (primary versus update-everywhere). Eager Primary Copy Replication Here an update operation is first performed at a primary copy (master) and then propagated from this master copy to the secondary copies. Lazy Primary Copy Lazy replication avoids the synchronization overhead of eager replication techniques by providing a response to the clients before there is any coordination between servers. Eager Update Everywhere Replication Two types of protocols are commonly used including distributed locking or atomic broadcast. Lazy Update Everywhere After some time after the transaction commits the updates are propagated to the other replica nodes." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     <http://dbpedia.org/resource/Replication_(computing)> .
  
  :Requirement_ar-152__kpi_on_the_fly
          a                          spec:Requirement ;
          rdfs:label                 "AR-152: KPI on the fly" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Die\n  KPIs sollen bevorzugt „On-The-Fly“ berechnet werden." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_sr-01_07 ;
          spec:requirementGroup      "Operational" ;
          spec:requirementPurpose    "Adaptive Query Processing" .
  
  gen:useMethodTactic
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:SoftwareEngineeringMethod ;
          rdfs:label          "isUsing" ;
          rdfs:range          gen:DesignTactic ;
          rdfs:subPropertyOf  gen:uses .
  
  :DesignTactic_faceting
          a           gen:DesignTactic ;
          rdfs:label  "faceting" .
  
  :DesignDecision_kdd-10__use_performance_patterns
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-10: Use Performance Patterns" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span lang=\"EN-US\">Performance of key operations can drop in a low bandwidth, high latency WAN environment.</span><span lang=\"EN-US\">&nbsp;In order to optimize the performance following aspects can be considered:</span></p>\n<ol>\n<li><span style=\"line-height: 1.3em;\">Analyze operations which have client &ndash; server chattiness. If these are critical operations, certain design changes may be necessary to reduce the communication overheads.</span></li>\n<li><span style=\"line-height: 1.3em;\">Use standard optimizers like http compressions to reduce the size of data transfers. In case compression shows more overheads in LAN environment, it would be a good idea to have dedicated URLs for LAN and WAN&nbsp;</span><span style=\"line-height: 1.3em;\">environment.</span></li>\n<li><span style=\"line-height: 1.3em;\">It must be ensured that images are not going through http compression, since normally they are already compressed using storage in server. A second compression of these in web server will be counterproductive.</span></li>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em;\">Use Asynchronous http communication to avoid waiting time between client and server</span><span lang=\"EN-US\" style=\"line-height: 1.3em;\">. (A clear Unit / Integration Test concept is necessary)</span></li>\n</ol>" , "<p><span lang=\"EN-US\">Performance of key operations can drop in a low bandwidth, high latency WAN environment.</span><span lang=\"EN-US\">&nbsp;In order to optimize the performance following aspects can be considered:</span></p><ol><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Analyze operations which have client – server chattiness. If these are critical operations, certain design changes may be necessary to reduce the communication overheads.</span></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Use standard optimizers like http compressions to reduce the size of data transfers. In case compression shows more overheads in LAN environment, it would be a good idea to have dedicated URLs for LAN and WAN&nbsp;</span><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">environment.</span></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">It must be ensured that images are not going through http compression, since normally they are already compressed using storage in server. A second compression of these in web server will be counterproductive.</span></li><li><span lang=\"EN-US\" style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Use Asynchronous http communication to avoid waiting time between client and server</span><span lang=\"EN-US\" style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">. (A clear Unit / Integration Test concept is necessary)</span></li></ol>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_perf-2__performance_optimization ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_performance ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_reduce_overhead , :DesignTactic_asynchronous_communication , :DesignTactic_compression .
  
  gen:hasNegTacticEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  gen:hasTacticEffectOnQuality , gen:hasNegEffectOnQuality .
  
  :DesignTactic_policy_publishing
          a           gen:DesignTactic ;
          rdfs:label  "policy publishing" .
  
  :Project_aspernse  a  cont:Project ;
          rdfs:label  "aspernse" .
  
  :ArchitecturalQuality_performance
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "performance" , "Performance" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-05__viewer-server_interface , :DesignPattern_queue-based_load_leveling_pattern , :DesignPattern_cache-aside_pattern , :DesignPattern_load_balancing , :DesignPattern_map_reduce , :DesignPattern_web_service_proxy , :DesignDecision_ad-005__request_throttling , :DesignDecision_kdd-31 , :DesignPattern_task_to_environment_-_push , :DesignPattern_bulk_synchronous_parallel , :DesignDecision_ad-007__wso2_caching , :DesignPattern_architectural_requirements_questionnaire , :DesignDecision_kdd-07__replace_atl_and_isapi , :DesignPattern_api_gateway , :DesignPattern_lock , :DesignPattern_event-based_task_trigger , :DesignPattern_rollback , :DesignDecision_ad-110__filter-based_queries , :SoftwareEngineeringMethod_technical_debt_management , :DesignDecision_kdd-10 , :DesignPattern_shared_space , :DesignTactic_scheduling , :DesignDecision_kdd-33 , :DesignPattern_pipe_and_filter , :DesignDecision_ad-09__restful_api_registry , :DesignPattern_execution_orchestrator , :DesignDecision_ad-015__aspern_deployment , :DesignPattern_flyweight , :DesignDecision_ad-126__benchmarks_deployment , :DesignPattern_rest , :DesignPattern_representational_state_transfer , :DesignPattern_environment_data , :DesignPattern_model-view-controller , :DesignDecision_ad-012__deployment_schemes , :DesignDecision_ad-103__web_interfaces , :DesignPattern_embedded_browser , :DesignDecision_kdd-30 , :DesignDecision_kdd-07 , :DesignDecision_kdd-15__prioritized_loading , :DesignDecision_add-1 , :DesignPattern_virtual_paging___infinite_scrolling , :DesignTactic_parallel_computing , :DesignPattern_throttling_pattern , :DesignTactic_keep_consistent , :DesignDecision_kdd-04__limiting_results_in_pb , :DesignPattern_scatter_and_gather , :DesignDecision_kdd-11__split_header_and_data , :SoftwareEngineeringMethod_performance_engineering_for_sw-based_systems , :DesignPattern_restful_architecture , :DesignDecision_kdd-16__cached_loading , :DesignPattern_deferreds_for_caching , :DesignPattern_failover , :DesignPattern_fork_and_join , :DesignDecision_kdd-32 , :DesignTactic_asynchronous_communication , :DesignPattern_observer , :DesignPattern_wso2_distributed_deployment , :DesignPattern_fire_and_forget , :DesignDecision_kdd-06__embedded_browser , :DesignDecision_kdd-06 , :DesignPattern_publish_subscribe , :DesignPattern_competing_consumers , :DesignPattern_delightfully_parallel_loop , :DesignDecision_ad-009__restful_api_registry , :DesignPattern_layered_architecture , :DesignPattern_duplex_messaging , :DesignDecision_kdd-14__image_loading_performance , :DesignPattern_data-based_task_trigger , :DesignPattern_polling , :DesignPattern_rest_architecture , :DesignPattern_capturing_architectural_requirements , :DesignDecision_add-01__zero-footprint_architecture , :DesignPattern_http_proxy_caching , :DesignDecision_kdd-03 , :DesignDecision_kdd-26 , :DesignDecision_kdd-10__use_performance_patterns , :DesignPattern_pattern_name , :DesignPattern_bundling_and_minification ;
          gen:relatedQuality       :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_scalability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_accuracy ;
          gen:wikiEntry            "<p><strong>Performance</strong></p>\n<p>Performance is an indication of the responsiveness of a system to execute any action within a given time interval. It can be measured in terms of latency or throughput. Latency is the time taken to respond to any event. Throughput is the number of events that take place within a given amount of time.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658094.aspx\">https://msdn.microsoft.com/en-us/library/ee658094.aspx</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_normalizer
          a                              gen:DesignPattern ;
          rdfs:label                     "Normalizer" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability , :ArchitecturalQuality_security , :ArchitecturalQuality_interoperability ;
          gen:isAlternativeOf            :DesignTactic_message_transformation ;
          gen:wikiEntry                  "[EAI Normalizer 2003] The Normalizer uses a Message Router to routean incoming message toa correct Message Translator. So the type of the incoming message has to be detected by the Message Router. Many messaging systems equip each message with a type specifier field in the Message Header to make this type of task simple.There are stillways whereB2B scenarios messages do not arrive as messages compliant with the enterprises internal messaging system but in diverse formats. While it is certainly best practice to equip any incoming data format with a type specifier. One common way for schema-less XML documents is to use the name of the root element to assume the correct type. If multiple data formats use the same root element an XPATH expression to determine the existence of specific sub-nodes is usually used. Comma-separated files require mostly more efford. It is possible to determine the type based on the number of fields (numeric) and the type of the data (string). If the data arrives as files the easiest way may be to use the file name or the file folder structure as a surrogate Datatype Channel. Each business partner can name the file with a unique naming convention. The Message Router uses the file name to route the message to the appropriate Message Translator." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  spec:hasUseCaseRequirement
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:UseCase ;
          rdfs:range          spec:Requirement ;
          rdfs:subPropertyOf  gen:has .
  
  :DesignPattern_recovery_blocks
          a                              gen:DesignPattern ;
          rdfs:label                     "Recovery Blocks" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_recoverability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_robustness , :ArchitecturalQuality_viability , :ArchitecturalQuality_safety , :ArchitecturalQuality_integrity , :ArchitecturalQuality_utility ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "Latent faults in software exist that will always be reactivated when the same input is provided.  The general structure of a program with recovery blocks is as following  ensure Successful Execution by executing primary block else by executing secondary block 1 else by executing secondary block 2   else by executing secondary block n else trigger exception().  A common approach with recovery blocks is to make each successive block more simple than its predecessor. Each has a higher probability of satisfying the acceptance test because it is more simple. Some information is lost at each successive block because it is not performing all of the actions that were initially to be done by the primary block.  Sticking to the Recovery Blocks Pattern means increasing the probability of successfully meeting acceptance tests by providing sequential execution of alternate computations [Hanmer 2007] pp 53-56. Relations Error Detection [Hanmer 2007] Architectural Patterns pp 53-56." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_information_obscurity
          a                              gen:DesignPattern ;
          rdfs:label                     "Information obscurity" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_provability , :ArchitecturalQuality_immunity , :ArchitecturalQuality_accountability , :ArchitecturalQuality_security , :ArchitecturalQuality_traceability , :ArchitecturalQuality_trustability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_integrity , :ArchitecturalQuality_authenticity ;
          gen:isAlternativeOf            :DesignTactic_authentication , :DesignTactic_encryption , :DesignTactic_authorization ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-021__privacy_monitoring
          a           spec:Domain ;
          rdfs:label  "ar-021: privacy monitoring" .
  
  :DesignPattern_timeout-based_delivery
          a                              gen:DesignPattern ;
          rdfs:label                     "Timeout-based Delivery" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_portability , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_configurability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_operability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_agility , :ArchitecturalQuality_interoperability ;
          gen:isAlternativeOf            :DesignTactic_messaging ;
          gen:wikiEntry                  "Clients acknowledge message receptions to ensure that messages are received properly.[Cloud Computing Patterns]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_common_persistent_store
          a                              gen:DesignPattern ;
          rdfs:label                     "Common Persistent Store" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_security , :ArchitecturalQuality_integrity ;
          gen:isAlternativeOf            :DesignTactic_maintain_integrity ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_heterogeneity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "heterogeneity" , "Heterogeneity" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignPattern_shared_component , :DesignPattern_observer , :DesignTactic_messaging , :DesignPattern_maximize_human_participation , :DesignPattern_tenant-isolated_component , :DesignPattern_bridge , :DesignPattern_compliant_data_replication , :DesignPattern_reliable_sessions , :DesignTactic_multitenancy , :DesignTactic_barrier-free_access , :DesignTactic_convention_over_configuration , :DesignPattern_adapter , :DesignPattern_default , :DesignTactic_synchronous_communication , :DesignPattern_application_component_proxy , :DesignTactic_system_integration , :DesignPattern_provider_adapter , :DesignPattern_dedicated_component , :DesignPattern_mediator , :DesignTactic_globalization , :DesignPattern_external_configuration_store_pattern , :DesignTactic_reduce_coupling , :DesignPattern_fire_and_forget , :DesignPattern_exactly-once_delivery , :DesignTactic_asynchronous_communication , :DesignTactic_white-box_testing , :DesignPattern_transaction-based_delivery , :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_request_response , :DesignPattern_at-least-once_delivery , :DesignPattern_timeout-based_delivery , :DesignPattern_facade , :DesignPattern_interpretor , :DesignPattern_publish_subscribe , :DesignPattern_proxy , :DesignPattern_duplex_messaging , :DesignPattern_integration_provider ;
          gen:relatedQuality       :ArchitecturalQuality_isolateability , :ArchitecturalQuality_testability ;
          gen:wikiEntry            "Heterogeneity The degree to which the use of diverse technologies requires to use diverse test methods and tools in parallel.  [Carlos D. Correa Ivan Marsic. 2004]Heterogeneity includes disparate computing and communication capabilites differences in users needs and interests and semantic conflicts across different domains and representations." ;
          spec:requiredBy          :Domain_abstract .
  
  :Requirement_cust-5__web-based_client
          a                          spec:Requirement ;
          rdfs:label                 "CUST-5: Web-Based Client" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Client should be\n  designed by real Web-based &amp; zero foot-print architecture:</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">This means client software should NOT be installed in local client\n  PC, should NOT require to distribute any patches and updates to local client\n  PC. Also desktop integration (Call-up by URL) should be supported as currently\n  implemented.</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">“Zero foot-print” here should not be interpreted as “OS independent”\n  zero footprint client.</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Customer / SCM" ;
          spec:requirementPurpose    "Web-based client" .
  
  :DesignPattern_service_activator
          a                              gen:DesignPattern ;
          rdfs:label                     "Service Activator" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_information_retrieval
          a           spec:Domain ;
          rdfs:label  "information retrieval" .
  
  :Requirement_ar-102__tool_integration
          a                          spec:Requirement ;
          rdfs:label                 "AR-102: Tool integration" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes , :Project_aspernbm ;
          gen:wikiEntry              "<div style=\"position: relative; font-size: small;\">The system shall allow the visualization using existing tools (e.g. CLM - City Lifecycle Management System). The system shall be designed to support the easy integration of external analysis tools (e.g., R, CLM).</div>" , "Das\n  System soll die Visualisierung mittels bestehender Tools (z.B. CLM)\n  ermöglichen.&nbsp;Das System soll die einfache Integration beliebiger externer&nbsp;<i>Analysetools</i>&nbsp;(z.B. Analytics Server, CLM) unterstützen." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren , :UseCase_benchmarks ;
          spec:hasRequirementOrigin  :Domain_sr-01_09 ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Tool Integration" .
  
  :SoftwareEngineeringMethod_software_architecture_development
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Software Architecture Development" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_architecture ;
          gen:hasMethodRole        :Role_system_architect ;
          gen:hasMethodTag         :AuthorTag_domain_model ;
          gen:wikiEntry            "Software Architecture Development consists of the definition, documentation, analysis, coaching, hands-on implementation, and support of architecture during the development of a product, while employing Siemens best practices." .
  
  :DesignPattern_microservices
          a                              gen:DesignPattern ;
          rdfs:label                     "Microservices" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_visibility , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_availability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_core_services ;
          gen:wikiEntry                  "<h1>Microservices Architecture</h1>\n\n<h2>Context</h2>\n\n<p>You are developing a server-side enterprise application.\nIt must support a variety of different clients including desktop browsers, mobile browsers and native mobile applications.\nThe application might also expose an API for 3rd parties to consume.\nIt might also integrate with other applications via either web services or a message broker.\nThe application handles requests (HTTP requests and messages) by executing business logic; accessing a database; exchanging messages with other systems; and returning a HTML/JSON/XML response.</p>\n\n<p>The application has either a layered or <a href=\"http://alistair.cockburn.us/Hexagonal+architecture\" target=\"_blank\">hexagonal</a> architecture and consists of different types of components:</p>\n\n<ul>\n  <li>Presentation components - responsible for handling HTTP requests and responding with either HTML or JSON/XML (for web services APIS)</li>\n  <li>Business logic - the application’s business logic</li>\n  <li>Database access logic - data access objects responsible for access the database</li>\n  <li>Application integration logic - messaging layer, e.g. based on Spring integration.</li>\n</ul>\n\n<p>There are logical components corresponding to different functional areas of the application.</p>\n\n<h2>Problem</h2>\n\n<p>What's the application's deployment architecture?</p>\n\n<h2>Forces</h2>\n\n<ul>\n  <li>There is a team of developers working on the application</li>\n  <li>New team members must quickly become productive</li>\n  <li>The application must be easy to understand and modify</li>\n  <li>You want to practice continuous deployment of the application</li>\n  <li>You must run multiple copies of the application on multiple machines in order to satisfy scalability and availability requirements</li>\n  <li>You want to take advantage of emerging technologies (frameworks, programming languages, etc)</li>\n</ul>\n\n<h2>Solution</h2>\n\n<p>Architect the application by applying the <a href=\"http://microservices.io/articles/scalecube.html\" target=\"_blank\">Scale Cube</a> (specifically y-axis scaling) and functionally decompose the application into a set of collaborating services.\nEach service implements a set of narrowly, related functions.\nFor example, an application might consist of services such as the order management service, the customer management service etc.</p>\n\n<p>Services communicate using either synchronous protocols such as HTTP/REST or asynchronous protocols such as AMQP.</p>\n\n<p>Services are developed and deployed independently of one another.</p>\n\n<p>Each service has its own database in order to be decoupled from other services.\nWhen necessary, consistency is between databases is maintained using either database replication mechanisms or application-level events.</p>" ;
          spec:hasPatternDomain          :Domain_soa ;
          owl:sameAs                     dbr:Microservices .
  
  :Domain_ar-06__failure_recovery
          a           spec:Domain ;
          rdfs:label  "ar-06: failure recovery" .
  
  :Domain_ar-03__reuse_requirements_and_decisions
          a           spec:Domain ;
          rdfs:label  "ar-03: reuse requirements and decisions" .
  
  :ArchitecturalQuality_safety
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Safety" , "safety" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :SoftwareEngineeringMethod_component_fault_trees , :DesignPattern_leaky_bucket_counter , :DesignPattern_finish_work_in_progress , :DesignPattern_restart , :DesignPattern_fault_isolation , :DesignPattern_temporal_analytics , :DesignPattern_units_of_mitigation , :DesignPattern_recovery_blocks , :DesignPattern_checksum , :DesignPattern_operational_monitoring_and_alerting , :DesignDecision_kdd-05__main_process , :DesignPattern_fault_diagnosis , :DesignPattern_queue_for_resources , :DesignDecision_kdd-07__mining_process , :DesignPattern_voting , :DesignPattern_redundancy , :DesignPattern_routine_audits , :DesignDecision_kdd-04__process_architecture , :DesignPattern_return_to_reference_point , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignTactic_fault_handling , :DesignPattern_failover , :DesignPattern_resource_allocation , :DesignPattern_concentrated_recovery , :DesignPattern_watchdog , :DesignTactic_error_detection , :DesignPattern_error_containment_barrier , :DesignDecision_kdd-09__process_recovery , :DesignPattern_compensating_transaction_pattern , :DesignPattern_expansive_automatic_controls , :DesignPattern_acknowledgement , :DesignTactic_error_handling , :DesignPattern_routine_maintenance , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_similarity_detection , :DesignPattern_realistic_threshold , :DesignPattern_deferrable_work , :DesignPattern_reintegration , :DesignPattern_someone_in_charge , :DesignPattern_treshold_analysis , :DesignPattern_riding_over_transients , :DesignPattern_escalation , :DesignPattern_rollforward , :DesignPattern_existing_metrics , :DesignPattern_revise_procedure , :DesignPattern_quarantine , :DesignPattern_3-category_logging , :DesignPattern_circuit_breaker , :SoftwareEngineeringMethod_built-in_self_test_methods , :DesignPattern_small_patches , :DesignPattern_marked_data , :DesignPattern_checkpoint , :DesignPattern_fault_correlation , :DesignPattern_reconfiguration , :DesignPattern_error_handler , :DesignPattern_retry_pattern , :DesignPattern_maximize_human_participation , :DesignPattern_minimize_human_intervention , :DesignPattern_final_handling , :DesignDecision_kdd-08__adaptation_process , :DesignPattern_reproducible_error , :DesignPattern_remote_storage , :DesignPattern_rollback , :DesignPattern_slow_it_down , :DesignPattern_routine_exercises , :DesignPattern_correcting_audits , :DesignPattern_fresh_work_before_stale , :DesignPattern_error_correcting_code , :DesignPattern_limit_retries , :DesignPattern_claim_check , :DesignPattern_parameter_checking , :DesignPattern_maintenance_interface , :DesignPattern_fault_observer , :DesignPattern_memento , :DesignPattern_reinitialization , :DesignPattern_indiviuals_decide_timing , :DesignPattern_heartbeat , :DesignDecision_kdd-10__adaptation_mechanisms , :DesignPattern_protective_automatic_controls , :DesignPattern_root_cause_analysis , :DesignPattern_compensation , :SoftwareEngineeringMethod_coded_processing , :DesignPattern_software_update ;
          gen:relatedQuality       :ArchitecturalQuality_security ;
          gen:wikiEntry            "Safety is concerned that especially life-critical systems behave as required (doing no or minimal harm to other systems/devices) even when components fail. [Organizational Requirements Engineering 2006] Safety requirements are the shall not requirements which exclude unsafe situations from the possible solution space of the system. [Emila Mendes Nile Mosley. 2006]The capabiltity of the software product to achieve acceptable levels of risk of harm to people business software property or the environment in a specified context of use.  [Donald G. Firesmith et al. 2008]The subtype of defensibility that is the degree to which the system or architectural component prevents or reduces the probability or severity of detects and properly reacts to Unauthorized unitentional harm to valuable assets Mishaps Hazards Safety risks" ;
          spec:requiredBy          :Domain_abstract .
  
  :SoftwareEngineeringMethod_software_architecture_review
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Software Architecture Review" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_analysis ;
          gen:hasMethodRole        :Role_system_architect ;
          gen:hasMethodTag         :AuthorTag_swot_analysis , :AuthorTag_domain_model , :AuthorTag_software , :AuthorTag_review , :AuthorTag_nfr_engineering , :AuthorTag_software_analysis ;
          gen:wikiEntry            "A sustainable software architecture is essential for the success of a project. A software architecture review verifies the capability of the architecture to fulfill current and future application and platform requirements. If necessary, a software architecture review suggests concrete measures for architectural improvement." .
  
  gen:isRelatedTo  a   owl:ObjectProperty ;
          rdfs:domain  gen:ArchitecturalKnowledgeElement ;
          rdfs:label   "isRelatedTo" ;
          rdfs:range   gen:ArchitecturalKnowledgeElement .
  
  :DesignPattern_event-based_task_trigger
          a                              gen:DesignPattern ;
          rdfs:label                     "Event-Based Task Trigger" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_performance , :ArchitecturalQuality_controllability , :ArchitecturalQuality_flexibility ;
          gen:isAlternativeOf            :DesignTactic_monitoring , :DesignTactic_scheduling , :DesignTactic_adaptation ;
          gen:wikiEntry                  "<h1 align=\"center\">Pattern 38 (Event-Based Task Trigger)</h1>\n<p><a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp38_persistent_animation.php\" target=\"_blank\">FLASH animation of Event-based Task Trigger (Persistent) pattern</a></p>\n<p><a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp38_transient_animation.php\" target=\"_blank\">FLASH animation of Event-based Task Trigger (Transient) pattern</a></p>\n<h2>Description</h2>\n<p align=\"justify\">The ability for an external event to initiate a task and to pass data elements to it. \n</p><h2>Example</h2>\n<p align=\"justify\">Initiate the <em>Emergency Shutdown </em> task immediately after the <em>Power Alarm </em> event occurs and pass the <em>alarm code </em>data element. \n</p><h2>Motivation</h2>\n<p align=\"justify\">This pattern is an extension of the <em><a href=\"http://www.workflowpatterns.com/patterns/control/new/wcp23.php\" target=\"_blank\">Transient Trigger</a></em> and <a href=\"http://www.workflowpatterns.com/patterns/control/new/wcp24.php\" target=\"_blank\"><em>Persistent Trigger</em></a> patterns (WCP-23, WCP-24) which the supports the initiation or resumption of a specific task instance based on an external event. The <em>Event-based Task Trigger</em> pattern extends these patterns by allowing one or more data elements to be passed to the task instance being initiated.</p>\n<h2>Overview</h2>\n<p>There are three distinct scenarios that may arise in the context of this pattern as illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp38.php#figure23\" target=\"_blank\">23</a>. In all situations, the capability is available to pass data elements at the same time that the trigger is sent to the relevant task. The first alternative (illustrated by the <em>start A()</em> function) is that the task instance to be initiated is the first task in the process. This is equivalent in control-flow terms to starting a new case in which A is the first task instance.</p>\n<p align=\"center\"><a name=\"figure23\" id=\"figure23\" href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp38.php\" target=\"_blank\"><img src=\"http://www.workflowpatterns.com/patterns/data/images/workflow-case-38.png\" alt=\"Figure 23: Event-based task trigger\" name=\"figure23\" width=\"547\" height=\"289\" id=\"figure23\"></a></p>\n<p align=\"center\"><strong>Figure 23:</strong> Event-based task trigger </p>\n<p>The second alternative (illustrated by the <em>start B()</em> function) is that the external event is triggering the resumption of a task instance that is in the middle of a process. The task instance has already had control-flow passed to it but its execution is suspended pending occurrence of the external event trigger. This situation is shown in Figure <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp38.php#figure23\" target=\"_blank\">23</a> above with task instance B already triggered as a result of task instance A completing but halted from further progress until the event from <em>start B()</em> occurs.</p>\n<p>The third alternative is that the task instance is isolated from the main control-flow in the process and the only way in which it can be initiated is by receiving an external event stimulus. Figure <a href=\"http://www.workflowpatterns.com/patterns/data/routing/wdp38.php#figure23\" target=\"_blank\">23</a> shows task instance C which can only be triggered when the event stimulus from <em>start C() </em>is received.</p>\n<h2>Context</h2>\n<p>There are no specific context conditions associated with this pattern. </p>\n<h2>Implementation</h2>\n<p align=\"justify\">This facility generally takes the form of an external interface to the process environment that provides a means for applications to trigger the execution of a specific task instance. All three variants of this pattern are directly supported by Staffware, FLOWer, COSA, BPEL, BPMN and UML 2.0 ADs and in all cases, the passing of data elements as well as process triggering is supported. WebSphere MQ provides indirect support for all three variants but requires event handling to be explicitly coded into activity implementations.</p>\n<h2>Issues</h2>\n<p align=\"justify\"> None identified. </p>\n<h2>Solutions</h2>\n<p align=\"justify\">N/A.</p>\n<h2>Evaluation Criteria</h2>\n<p>An offering achieves full support if it has a construct that satisfies the description for the pattern. It achieves a partial support rating if programmatic extensions are required to facilitate the trigger handling.</p>" ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  :DesignPattern_pattern_name
          a                        gen:DesignPattern ;
          rdfs:label               "Pattern name" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_safiddle ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_performance ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_functionality ;
          gen:isAlternativeOf      :DesignTactic_querying ;
          gen:wikiEntry            "<p>Graph databases are based on <a title=\"Graph theory\" href=\"https://en.wikipedia.org/wiki/Graph_theory\" target=\"_blank\">graph theory</a>. Graph databases employ nodes, properties, and edges.</p>\n<ul>\n<li>Nodes represent entities such as people, businesses, accounts, or any other item you might want to keep track of.</li>\n<li>dfgdggf</li>\n<li>fghh</li>\n</ul>\n<ul>\n<li>Properties are pertinent information that relate to nodes. For instance, if \"Wikipedia\" were one of the nodes, one might have it tied to properties such as \"website\", \"reference material\", or \"word that starts with the letter 'w'\", depending on which aspects of \"Wikipedia\" are pertinent to the particular database.</li>\n</ul>\n<ul>\n<li>Edges are the lines that connect nodes to nodes or nodes to properties and they represent the relationship between the two. Most of the important information is really stored in the edges. Meaningful patterns emerge when one examines the connections and interconnections of nodes, properties, and edges</li>\n</ul>" ;
          spec:hasPatternDomain    :Domain_web .
  
  :Requirement_ar-024__data_and_process_auditing
          a                          spec:Requirement ;
          rdfs:label                 "AR-024: Data and process auditing" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "<p style=\"font-size: small;\"><span style=\"font-size: small;\">The system shall provide specialized services for d</span><span style=\"line-height: 1.5;\">ata and process auditing.</span><span style=\"line-height: 1.5;\">&nbsp;</span></p>\n<div style=\"position: relative; font-size: small;\"><span style=\"font-size: small;\">This also includes compliance reviews, i.e., comprehensive online reviews of enterprise data privacy management practices against applicable policies and&nbsp;regulations as well as gap analyses.</span></div>" ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Governance" ;
          spec:requirementPurpose    "Auditing" .
  
  sear:hasKnowledge  a        owl:ObjectProperty ;
          rdfs:domain         sear:SearchResult ;
          rdfs:range          gen:ArchitecturalKnowledgeElement ;
          rdfs:subPropertyOf  gen:has .
  
  :DesignPattern_reflection
          a                              gen:DesignPattern ;
          rdfs:label                     "Reflection" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_modifiability , :ArchitecturalQuality_learnability , :ArchitecturalQuality_affordability , :ArchitecturalQuality_transferability , :ArchitecturalQuality_utility , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_likeability , :ArchitecturalQuality_sustainability , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_trainability , :ArchitecturalQuality_uniformity , :ArchitecturalQuality_usability , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_understandability , :ArchitecturalQuality_installability , :ArchitecturalQuality_certainty ;
          gen:isAlternativeOf            :DesignTactic_dynamic_binding , :DesignTactic_change_propagation , :DesignTactic_self-descriptiveness ;
          gen:wikiEntry                  "[HSR Reflection [date unknown]] Reflection enables the software to query its own structure and change the behavior of software systems dynamically. It becomes then possible to introspect each class to find out which fields and methods it has and what class or interface its extends and implements. The metamodel of languages such as Java makes class definitions self-descriptive. It supports the modification of fundamental aspects such as type structures and function call mechanisms. In this pattern an application is split into two parts. A meta level makes the software self-aware and provides information about selected system properties. A base level includes the application logic. Its implementation builds on the meta level. Changes to information kept in the meta level affect subsequent base-level behavior." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     <http://dbpedia.org/resource/Reflection_(computer_programming)> .
  
  :DesignDecision_ad-000__relevant_use_cases
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-000: Relevant Use Cases" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Ecosystem Use Cases</strong></p>\n<p style=\"font-size: small;\">The following picture summarizes the basic interaction scenarios of the smart city information ecosystem with different stakeholders:</p>\n<p style=\"font-size: small;\"><img style=\"display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernES/use_cases.png\" alt=\"\" width=\"650\" height=\"589\" /></p>\n<p>Any person, group or organization that has interest or concern in data in the context of a smart city is a valid stakeholder for the smart ICT ecosystem. The primary stakeholders are direct users of the platform, or the applications that build upon the platform (for example data publishers, application developers and application users). The secondary stakeholders do not engage in direct interaction with the platform, but maybe affected or can affect the operation of the platform (for example city administration, non-profit organizations, or media representatives).&nbsp;</p>\n<p style=\"font-size: small;\">For the Smart ICT system, the following stakeholders are considered relevant:</p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><strong style=\"line-height: 1.3em; font-size: small;\">Application Developer:</strong><span style=\"line-height: 1.3em; font-size: small;\">&nbsp;</span><span style=\"line-height: 1.3em; font-size: small;\">The city information ecosystem provides data for multiple applications through predefined interfaces (APIs) and standards. A developer uses data provided by APIs (and their service implementations) to create a consumer app (e.g., a web application or desktop application) which is used by the end user.</span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\"><strong style=\"font-size: small;\">Ecosystem Admin:</strong> The admin&nbsp;of the smart city information ecosystem oversees all the activities and interacts with all the stakeholders dealing with the ecosystem. In such a global role, the admin&nbsp;requires appropriate management features to deal with the all the associated parties.<br style=\"font-size: small;\" /></span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\"><strong style=\"font-size: small;\">API Providers:</strong> API Providers can&nbsp;publish and monitor&nbsp;their own APIs as well as&nbsp;access&nbsp;usage data about their APIs.</span></li>\n<li style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\"><strong style=\"font-size: small;\">Platform Developer:</strong> The platform developer is concerned with the core platform services.</span></li>\n</ul>\n<p style=\"font-size: small;\">&nbsp;</p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">The following benchmarks use cases will be considered (here the main stakeholder is represented by the smart grid operator(s):</span></span></p>\n<p style=\"font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\"><img style=\"font-size: small;\" src=\"p/AspernES/bm_uc.png\" alt=\"\" width=\"433\" height=\"303\" /></span></p>\n<p style=\"font-size: small;\">&nbsp;</p>\n<p style=\"font-size: small;\">The following grid planning&nbsp;use cases will be considered (here the main stakeholder is represented by the grid planner):</p>\n<p style=\"font-size: small;\">&nbsp;</p>\n<p style=\"font-size: small;\"><img src=\"p/AspernES/use_cases_uc_8.png\" alt=\"\" width=\"666\" height=\"375\" /></p>" ;
          spec:decisionArchitecturalView  "0. Use Case View" ;
          spec:hasDecisionDomain          :Domain_ar-004__api_protection , :Domain_ar-014__api_access_control , :Domain_ar-015__usage_tracking___monitoring , :Domain_ar-011__api_governance , :Domain_ar-010__publishing_services ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_functionality ;
          spec:useDecisionTactic          :DesignTactic_multiple_stakeholders .
  
  :Domain_ar-015__usage_tracking___monitoring
          a           spec:Domain ;
          rdfs:label  "ar-015: usage tracking & monitoring" .
  
  :DesignDecision_kdd-12__connection_drop
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-12: Connection Drop" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span lang=\"EN-US\">Critical operations which involve database CRUD operations from client need to be considered for possible network drops. A detailed analysis is required to find possible problems and design measures to handle this scenario. </span></p>\n<p><span lang=\"EN-US\">Standard Design Patterns like <strong>Idempotent Retry</strong> could be considered for a generic solution.</span><span lang=\"EN-US\">&nbsp;</span></p>\n<p><span lang=\"EN-US\">In case of Viewer, save operation is most critical for network tolerance. In addition to the above generic solution, it would be necessary to transform the client save to be a Job based background operation.</span></p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_cust-5__web-based_client ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability ;
          spec:useDecisionTactic          :DesignTactic_network_tolerance , :DesignTactic_retry .
  
  :DesignTactic_auditing
          a                             gen:DesignTactic ;
          rdfs:label                    "Auditing" , "auditing" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_verifiability , :ArchitecturalQuality_defensibility , :ArchitecturalQuality_accountability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_security , :ArchitecturalQuality_auditability ;
          gen:wikiEntry                 "Auditing describes a manual or systematical measurable technical assessmentof a system or application." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Author_sauer_horst
          a           cont:Author ;
          rdfs:label  "sauer horst" .
  
  gen:hasNegEffectOn  a       owl:ObjectProperty ;
          rdfs:label          "hasNegEffectOn" ;
          rdfs:subPropertyOf  gen:hasEffectOn .
  
  :Requirement_ar-101__dwh_querying
          a                          spec:Requirement ;
          rdfs:label                 "AR-101: DWH Querying" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm , :Project_aspernes ;
          gen:wikiEntry              "Das System soll die <em>Abfrage</em> und&nbsp;<em>Visualisierung</em> der Daten aus einem DWH ermöglichen. Dabei werden die Existenz eines DWH sowie die vorherige Erfassung von Daten vorausgesetzt." , "Das System soll die <i>Abfrage</i> und&nbsp;<i>Visualisierung</i> der Daten aus einem DWH\nermöglichen. Dabei werden die Existenz eines DWH sowie die vorherige Erfassung\nvon Daten vorausgesetzt." , "<div>The system shall allow querying and visualizing data from a data warehous (DWH).&nbsp;The existence of a DWH and the previous acquisition of data is required.</div>" ;
          spec:containedWithin       :UseCase_benchmarks , :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_sr-01_10 , :Domain_sr-01_01 ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Visualisierung" .
  
  :ArchitecturalQuality_agility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Agility" , "agility" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_tenant-isolated_component , :DesignPattern_at-least-once_delivery , :DesignPattern_runtime_reconfiguration_pattern , :DesignPattern_timeout-based_delivery , :DesignPattern_facade , :DesignPattern_component_configurator , :DesignTactic_messaging , :DesignTactic_softcoding , :DesignPattern_dedicated_component , :DesignPattern_shared_component , :DesignPattern_exactly-once_delivery , :DesignTactic_multitenancy , :DesignPattern_transaction-based_delivery ;
          gen:relatedQuality       :ArchitecturalQuality_reliability , :ArchitecturalQuality_modifiability ;
          gen:wikiEntry            "<div><span style=\"font-weight: 700; line-height: 16.9px;\">S-R</span></div><div><br></div>[Wieland 2012] In general agility is defined as the ability of a (system) to rapidly respond to change by adapting its initial stable configuration.  [James A. Highsmith 2002]Agility is the ability to both create and respond to change in order to profit in a turbulent business environment." , "[Wieland 2012] In general agility is defined as the ability of a (system) to rapidly respond to change by adapting its initial stable configuration.  [James A. Highsmith 2002]Agility is the ability to both create and respond to change in order to profit in a turbulent business environment." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_message_dispatcher
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Dispatcher" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_document_message
          a                              gen:DesignPattern ;
          rdfs:label                     "Document Message" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_complexity ;
          gen:isAlternativeOf            :DesignTactic_message_construction , :DesignTactic_message_type ;
          gen:wikiEntry                  "<h3 class=\"dtH1\">Document Message </h3>\n\n<p><em>Problem:</em></p>\n\n<p>How can you transfer data between services?</p>\n\n<p><em>Solutions:</em></p>\n\n<p>Use a <em>document message</em> to reliably transfer a data structure between applications. See <em>Figure 4</em>.</p>\n\n<p class=\"fig\"><img id=\"aj2mpsoarch04\" alt=\"Aa480027.aj2mpsoarch04(en-us,MSDN.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC105904.gif\" title=\"Aa480027.aj2mpsoarch04(en-us,MSDN.10).gif\" xmlns=\"\"></p>\n\n<p class=\"label\"><strong>Figure 4. Document message</strong></p>\n\n<p><em>Interactions:</em></p>\n\n<p>A <em>document message</em> is just a single unit of information, a single object or data structure that may decompose into smaller units. The important part of a <em>document message</em> is its content; the document. This content is retrieved by un-marshalling / or de-serializing data. </p>\n\n<p><em>Document messages</em> are usually sent using a point-to-point channel. In request-reply scenarios, the reply is usually a <em>document message</em> where the result value is the document. </p>\n\n<p>A <em>document message</em> can be any kind of message in the messaging system. A Simple Object Access Protocol (SOAP) reply message is a document message.</p>\n\n<h3 class=\"dtH1\"></h3>" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_kdd-30
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-30" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Zuweisung Graphik-Abfrage</strong><br></p><p>Für jede Grafik wird DWH-seitig eine speziell dafür entworfene Datenbankabfrage verwendet (z.B. SQL Query oder Stored Procedure). Dabei wird vermieden, dass z.B. alle Felder eines Data-Mart (View) abgefragt werden, wobei nur eine Untermenge davon für die Darstellung benötigt wird.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-154__extensibiltiy , :Domain_ar-151__visualization_granularity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_simplicity ;
          spec:useDecisionTactic          :DesignTactic_adaptive_query_processing , :DesignTactic_extension_support , :DesignTactic_association .
  
  :DesignDecision_ad-001_2__wso2_as_platform
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-001.2: WSO2 as Platform" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<div style=\"position: relative; font-size: small;\"><span style=\"line-height: 1.3em; font-size: small;\">Use WSO2 as service-oriented platform for the Smart City Information Ecosystem.&nbsp;</span></div>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\"><strong style=\"font-size: small;\">Rationale:</strong></span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">The figure below&nbsp;shows an evaluation of the different vendor solutions, considering the criteria in the API Store Layer and the projected benefit from using a particular solution.&nbsp;</span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\"><img style=\"display: block; margin-left: auto; margin-right: auto; font-size: small;\" src=\"p/AspernES/wso2_decision.png\" alt=\"\" width=\"650\" height=\"341\"></span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">We currently considered each criterion to be equally important. This can also be updated in the future, by changing the criteria’s weights accordingly. The values were normalized such that all the scores are between 0 and 1. The colors highlights how the vendors are ranked in each criterion: Red indicates the lowest score for among all vendors, while blue indicates the highest score. Other colors indicate intermediate values. At the moment a maximum score of 6 can be obtained by each solution. We highlighted in green the solutions with a minimum 50% of maximum score, i.e. a score of 3 or higher.</span></p>\n<p style=\"font-size: small;\"><span style=\"font-size: small;\">WSO2 and CA API Gateway raked the highest in our current analysis. This is expected since these are solutions tailored to API Management.&nbsp; IBM BlueMix ranks in 3<sup style=\"font-size: small;\">rd</sup> given its extensive support for services development and lifecycle management. The lower score compared to WSO2 and CA is mainly due to the fact that it is not an open source solution.</span></p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-002__version_consistency , :Domain_ar-004__api_protection , :Domain_ar-001__connection_control ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security , :ArchitecturalQuality_maintainability ;
          spec:useDecisionTactic          :DesignTactic_off-the-shelf_component .
  
  :DesignPattern_integration_provider
          a                              gen:DesignPattern ;
          rdfs:label                     "Integration Provider" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_system_integration ;
          gen:wikiEntry                  "Integration functionality such as messaging and shared data is hosted by a separate provider to enable integrate of otherwise separated hosting environments.[Cloud Computing Patterns [date unknown]]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :SoftwareEngineeringMethod_systems_engineering_roles_check
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Systems Engineering Roles Check" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_system_architect , :Role_technical_project_manager , :Role_system_integrator , :Role_quality_manager_in_project , :Role_test_architect , :Role_requirements_engineer , :Role_performance_engineer , :Role_configuration_manager , :Role_product_owner , :Role_operations_engineer , :Role_systems_engineer ;
          gen:hasMethodTag         :AuthorTag_people , :AuthorTag_check ;
          gen:wikiEntry            "There are eleven systems engineering roles which are neseccary to be successful in implementing a complex system. This role check verifies whether all eleven roles are established." .
  
  :ArchitecturalQuality_openness
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Openness" , "openness" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignDecision_ad-001_1__ecosystem_components ;
          gen:relatedQuality       :ArchitecturalQuality_unknown ;
          gen:wikiEntry            "<p><strong>Openness</strong></p>\n<p>Openness of software systems constitutes a new way of collaboration between software development organizations - on the one hand the open system producer and on the other hand the extension producer (i.e., the consumer of the open system).&nbsp;Open system producers share information on internal concepts and mechanisms and provide architectural documentation about them in order to enable third party producer to extend the open system. The extensions themselves are typically unknown at development time of the open system. The extension developed third party organizations utilize the mechanisms either at configuration time or at run time (without requiring the open system to be modified or recompiled). Such contributions are either system extensions (e.g., Eclipse plug-ins or Apps) or adapters to enable interoperation with other systems (e.g., machine2machine communication).</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"http://publica.fraunhofer.de/documents/N-287084.html\">http://publica.fraunhofer.de/documents/N-287084.html</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_soa .
  
  :DesignPattern_reassess_overload_decision
          a                              gen:DesignPattern ;
          rdfs:label                     "Reassess Overload Decision" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_affordability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  spec:hasMethodDomain
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:SoftwareEngineeringMethod ;
          rdfs:label          "isUsedIn" ;
          rdfs:subPropertyOf  spec:address .
  
  :DesignPattern_mirror
          a                              gen:DesignPattern ;
          rdfs:label                     "Mirror" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_completeness , :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_no_single_point_of_failure ;
          gen:wikiEntry                  "ing  [MS Technet Database Mirroring 2008] Mirroring is used to make data available on multiple server nodes. Mirroring is a concept to provide rapid failover without loss of data. Typically the server nodes are physically separate machines residing at different locations (e.g. to provide failover in case of network failures or disasters). In database systems one server node acts as the principal serving the database clients. The mirror server node acts as a standby server. Two cases are common in mirroring and failover Hot standby supports rapid-failover without loss of data. Warm standby supports failover with potential loss of data." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_error_containment_barrier
          a                              gen:DesignPattern ;
          rdfs:label                     "Error Containment Barrier" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_resilience , :ArchitecturalQuality_utility , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_availability , :ArchitecturalQuality_safety , :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_integrity , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "When the system detects an error it should be isolated to a Units of Mitigation. The flow of errors from one part to another must be stoped by a barrier impervious to errors.  Faults may occur but the system is designed to perform as well as it can. The necessary fault tolerance framework elements are in place so the fault or error is not left unprocessed [Hanmer 2007] pp 91-93.  Relations Error Detection [Hanmer 2007]Detection Patterns pp 91-93." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_public_key_encryption
          a                              gen:DesignPattern ;
          rdfs:label                     "Public Key Encryption" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_authenticity , :ArchitecturalQuality_trustability , :ArchitecturalQuality_immunity , :ArchitecturalQuality_privacy , :ArchitecturalQuality_accountability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_security , :ArchitecturalQuality_integrity , :ArchitecturalQuality_provability ;
          gen:isAlternativeOf            :DesignTactic_encryption , :DesignTactic_authentication ;
          gen:wikiEntry                  "[Wikipedia Public Key Cryptography 2014] Public-key cryptography refers to a cryptographic system requiring two separate keys one of which is secret and one of which is public. Although different the two parts of the key pair are mathematically linked. One key locks or encrypts the plaintext and the other unlocks or decrypts the ciphertext. Neither key can perform both functions by itself. The public key may be published without compromising security while the private key must not be revealed to anyone not authorized to read the messages.  [MSDN Public Key Encryption 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_business_strategy
          a           cont:AuthorTag ;
          rdfs:label  "business strategy" .
  
  :DesignTactic_locking
          a           gen:DesignTactic ;
          rdfs:label  "locking" .
  
  :DesignDecision_kdd-08__adaptation_process
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-08: Adaptation Process" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<p style=\"margin-left: 27.0pt; text-indent: -27.0pt; mso-list: l0 level1 lfo1;\"><strong><span style=\"font-size: 12pt;\"><span lang=\"EN-US\"><span style=\"mso-list: Ignore;\">The Adaptation Process</span></span></span></strong></p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">The adaptation process&nbsp;u</span><span lang=\"EN-US\">ses <em>insights</em> to optimize and adapt the main process.</span> <span lang=\"EN-US\">Adaptation is realized without interrupting the main process.&nbsp;While doing so, it must also</span><span lang=\"EN-US\">&nbsp;ensure recovery in case of failures caused by adaptations.</span></span></p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"EN-US\"><img style=\"border-width: 0px;\" src=\"p/Shape/adaptation_process.png\" alt=\"\" width=\"552\" height=\"260\" /></span></span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Process description:</strong></span></p>\n<ul>\n<li><span style=\"font-size: 12pt;\">(1) A new <em>insight</em> becomes available in the repository. An insight is a piece of information (possibly containing process semantics) produced by the mining process.</span></li>\n<li><span style=\"font-size: 12pt;\">(2) Categorize the new insight as follows:</span>\n<ul>\n<li><span style=\"font-size: 12pt;\"><strong>Severe</strong> &ndash; A critical adaptation is required because, e.g., the current version of the process poses a safety hazard. Execute all process steps from (3) onward</span></li>\n<li><span style=\"font-size: 12pt;\"><strong>Important</strong> &ndash; An adaptation would greatly improve the current version of the main process. Execute steps from (7) onward.</span></li>\n<li><span style=\"font-size: 12pt;\"><strong>Nice to have</strong> &ndash; An improvement of the main process can be achieved but is not absolutely necessary &gt;&gt; Document the insight and leave for a future major version of the process.</span></li>\n</ul>\n</li>\n<li><span style=\"font-size: 12pt;\">(3) Formulate a new software requirement to the main process based on the information provided by the new insight. This requirement is the result of an analysis by the process architect and other experts. The goal is to implement an <em>adaptation</em> for eliminating a risk or hazard in the current process without generating new risks and hazards.</span></li>\n<li><span style=\"font-size: 12pt;\">(4) Make an architectural design decision to enable the implementation of the adaptation in a new version of the concerned sub-process.</span></li>\n<li><span style=\"font-size: 12pt;\">(5) Implement and test the adaptation using a clone of the current version of the main process and its current state. The output of the cloned and adapted process is compared against the output of the original process to make sure that only what needs to be fixed by the adaptation has indeed changed in the output (this is also referred to as regression testing).</span></li>\n<li><span style=\"font-size: 12pt;\">(6) Apply the adaptation to the running main process by upgrading one of its sub-process to a new version. This mechanism is supported by the Camunda process engine.&nbsp;</span></li>\n<li><span style=\"font-size: 12pt;\">(7) Define a revision plan for the next major version of the process. This next major will contain the new version of the adapted sub-process. In addition to the quick patch applied in steps (3) &ndash; (6), the adaptation is now well documented and presented as a part of the main process.</span></li>\n<li><span style=\"font-size: 12pt;\">(8) Test and apply the revision and release a new major version of the process.</span></li>\n</ul>\n<p><span style=\"font-size: 12pt;\">If the regression tests cannot find all latent software faults in the patched process, there is the option to spawn the adapted sub-process and let two version of if run in parallel. By checking the results of the two versions of the process using, for example, acceptance tests, we may still be able to detect data inconsistencies in the output and other errors introduced by the adaptation. In high assurance systems (e.g. airplanes), this concept is also known as <em>forward recovery</em> (See: Sha, L. (2001). Using simplicity to control complexity. IEEE Software, (4), 20-28. Download: <a href=\"http://www.citemaster.net/get/ed3895f4-0e2e-11e4-bbf9-00163e009cc7/s4020.pdf\">http://www.citemaster.net/get/ed3895f4-0e2e-11e4-bbf9-00163e009cc7/s4020.pdf</a>).</span></p>\n<p><span style=\"font-size: 12pt;\">Steps (3) and (4) can be supported by a web-based tool called saFiddle, which we developed in our research group. The tool allows the fast and collaborative definition and documentation of software requirements and design decisions.</span></p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-07__seamless_adaptation , :Domain_ar-02__safety_assurance ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_extensibility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_safety ;
          spec:useDecisionTactic          :DesignTactic_adaptation , :DesignTactic_messaging .
  
  gen:hasMethodEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:SoftwareEngineeringMethod ;
          rdfs:label          "hasEffectOn" ;
          rdfs:subPropertyOf  gen:hasEffectOnQuality .
  
  :DesignTactic_reduce_dependencies
          a           gen:DesignTactic ;
          rdfs:label  "reduce dependencies" .
  
  :Requirement_ar-106__stakeholder_views
          a                          spec:Requirement ;
          rdfs:label                 "AR-106: Stakeholder views" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Die\n  Auswahl an Zielgrößen und dafür relevanten Variablen soll je nach Stakeholder\n  unterschiedlich sein." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Multitenancy" .
  
  :ArchitecturalQuality_versatility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Versatility" , "versatility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignTactic_layering , :DesignDecision_kdd-12 , :DesignPattern_expendable_hardware , :DesignPattern_faceted_search_navigation , :DesignTactic_globalization , :DesignTactic_vertical_scaling , :DesignPattern_composite , :DesignPattern_local_cache , :DesignTactic_horizontal_scaling , :DesignDecision_add-04__map-report_model , :DesignPattern_replication , :DesignPattern_facade , :DesignPattern_bridge , :DesignDecision_kdd-13 , :DesignPattern_proxy , :DesignDecision_kdd-10 , :DesignPattern_fork_and_join , :DesignPattern_module , :DesignPattern_dynamically-discoverable_elements , :DesignPattern_mediator , :DesignDecision_kdd-09 ;
          gen:relatedQuality       :ArchitecturalQuality_flexibility ;
          gen:wikiEntry            "[Blurtit Versality [date unknown]]Versatility refers to the abilityof being versatileor having many differentabilities and beingflexible  [Wikipedia Versality 2014] Versatility in computer means it is capable of performing almost any task provided the task can be reduced to a series of logical steps.    Relations Horizontal Scaling [Wikipedia Scalability 2014] Scalability is described as the ability of a system network or process to handle a growing amount of work in a capable manner. Therefore Versatility is capable of perfoming almost any task. Layering Layering is concerned with the logical division of components such as versatility needs the reduction of a task to a series of logical steps. Vertical Scaling[Wikipedia Scalability 2014] see HorizontalScaling" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_secret_url
          a                              gen:DesignPattern ;
          rdfs:label                     "Secret URL" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_safiddle ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_complexity , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_visibility ;
          gen:isAlternativeOf            :DesignTactic_obscuring ;
          gen:wikiEntry                  "<h3 id=\"outputTitle\">Secret URL</h3>\n<!-- MathB\\View::staticPreview --><noscript>\n            &lt;div id=\"outputImage\"&gt;\n            &lt;!-- if { --&gt;\n                &lt;img src=\"http://mathb.in/?png=c14b1511057c3344145ca6cfec65355ed9351b92\"\n                     alt=\"Markdown, LaTeX and HTML rendered as image\"&gt;\n            &lt;!-- } --&gt;\n            &lt;/div&gt;\n            </noscript>\n<div id=\"outputCode\">\n<p>If you do not want your content&nbsp;to be visible to everyone, you can generate a secret URL for your post instead of generating a regular one.&nbsp;</p>\n<p>Secret content&nbsp;is hidden only from search engines, web crawlers and other users of this website. They are not hidden from the administrator of the website and routers via which you are communicating with this website. When your request originates from your browser and travels to the web server running this website, the complete URL with the secret key that you request is transmitted in plaintext to the web server via many routers. The admins of these routers and this web server can retrieve the complete URL from their log files and read your secret content.</p>\n<p>The secrecy of your secret content&nbsp;also depends on you and the people you share your post with. Secret content&nbsp;can be accessed if and only if the secret key of the content&nbsp;is present in the URL. Since the secret key is part of the URL, the URL should not be shared with any untrusted parties.</p>\n<p>If the complete URL falls in the hands of an untrusted party, this website does not provide any way to change the secret key. This is due to the futility of the exercise of changing the secret key. If a post falls in the hands of an untrusted party, he can quickly create a public (non-secret) copy of your secret content easily.</p>\n</div>" ;
          spec:hasPatternDomain          :Domain_web .
  
  gen:isAlternativeOf
          a            owl:ObjectProperty ;
          rdfs:domain  gen:DesignPattern ;
          rdfs:label   "isSupportedBy" ;
          rdfs:range   gen:DesignTactic .
  
  :Domain_ar-155__generic_components
          a           spec:Domain ;
          rdfs:label  "ar-155: generic components" .
  
  :AuthorTag_failure  a  cont:AuthorTag ;
          rdfs:label  "failure" .
  
  :Domain_data_analytics__aspern_
          a           spec:Domain ;
          rdfs:label  "data analytics (aspern)" .
  
  :DesignPattern_mediator
          a                              gen:DesignPattern ;
          rdfs:label                     "Mediator" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maintainability , :ArchitecturalQuality_operability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_manageability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_portability , :ArchitecturalQuality_replicability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_testability , :ArchitecturalQuality_installability , :ArchitecturalQuality_versatility , :ArchitecturalQuality_configurability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_complexity , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_automatibility ;
          gen:isAlternativeOf            :DesignTactic_layering , :DesignTactic_reduce_coupling ;
          gen:wikiEntry                  "[Wikipedia Mediator Pattern 2014] A Mediator allows loose coupling between classes by being the only class that has detailed knowledge of their methods. (GoF behavioral pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Mediator_pattern .
  
  :Domain_ar-005__security_and_privacy_policies
          a           spec:Domain ;
          rdfs:label  "ar-005: security and privacy policies" .
  
  :SoftwareEngineeringMethod_semantics_in_production_and_plant_business
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Semantics in Production and Plant Business" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_system_architect , :Role_technical_project_manager , :Role_requirements_engineer , :Role_systems_engineer , :Role_product_owner ;
          gen:hasMethodTag         :AuthorTag_modeling , :AuthorTag_semantics , :AuthorTag_engineering , :AuthorTag_knowledge_management ;
          gen:wikiEntry            "Semantics are a key technique to address a bundle of future challenges like knowledge management, interoperability and workflow automation. <br>\nThe method introduces semantic techniques in production and plant business." .
  
  :Requirement_cust-1__reporting_capability_in_wan
          a                          spec:Requirement ;
          rdfs:label                 "CUST-1: Reporting Capability in WAN" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Reporting capability\n  required in WAN / DSL environment:</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">Reporting Client is validated only for LAN environment. It will have\n  problem in WAN environment with increased latency and lower bandwidth. </span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">Web Client can work in WAN, but it doesn’t have Reporting &amp; some\n  other functionalities of Reporting Client</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Customer / SCM" ;
          spec:requirementPurpose    "Web interfaces" .
  
  :DesignDecision_ad-124__clm_integration
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-124: CLM integration" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">CLM Integration</strong></p>\n<p style=\"font-size: small;\">The additional visualization components for the Aspern project are invoked via an URL and&nbsp;operated&nbsp;inside a browser window within the CLM user interface.</p>\n<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Rationale</strong></p>\n<p style=\"font-size: small;\">The system enables the visualization of data by means of existing tools (e.g., CLM), which must be adapted so as to allow&nbsp;the querying of exiting databases. Visualizations are extensions that can be used for other applications of the CLM and are not directly related to Aspern. The CLM Core includes the CLM application without specific adjustments. Thus, users&nbsp;can also use the basic functions provided by the CLM system. For extensions that are only relevant within the&nbsp;Aspern project, adjustments are&nbsp;necessary, which can be realized as extensions to the CLM system.</p>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-102__tool_integration ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_usability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_integratability ;
          spec:useDecisionTactic          :DesignTactic_tool_integration .
  
  :DesignPattern_environment_to_workflow_-_push
          a                              gen:DesignPattern ;
          rdfs:label                     "Environment to Workflow - Push" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_controllability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_flexibility ;
          gen:isAlternativeOf            :DesignTactic_adaptation ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  gen:hasPatternEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:DesignPattern ;
          rdfs:label          "hasPatternEffectOnQuality" ;
          rdfs:subPropertyOf  gen:hasEffectOnQuality .
  
  gen:hasEffectOn  a  owl:ObjectProperty ;
          rdfs:label  "hasEffectOn" ;
          rdfs:range  gen:ArchitecturalKnowledgeElement .
  
  :DesignPattern_claim_check
          a                              gen:DesignPattern ;
          rdfs:label                     "Claim Check" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_availability , :ArchitecturalQuality_security , :ArchitecturalQuality_utility , :ArchitecturalQuality_dependability , :ArchitecturalQuality_safety , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_integrity ;
          gen:isAlternativeOf            :DesignTactic_error_detection , :DesignTactic_message_transformation ;
          gen:wikiEntry                  "[Apache Camel Claim Check] The Claim CheckPatternenables you to replace message content with a claim check (a unique primary key) whichis possible tobe used to retrieve the message content at a later time. The message content is storedfor a specific time periodin a persistent store like a database or file system. This pattern is very useful when message content is very large butit would be expensive to send and not all components requireentire information. It can also beused in caseyou cannot trust the information with an outside party in this caseit is possible touse the Claim Check to hide the sensitive portions of data." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_checkpoint
          a                              gen:DesignPattern ;
          rdfs:label                     "Checkpoint" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_availability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_safety , :ArchitecturalQuality_robustness , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_fault_handling , :DesignTactic_error_handling ;
          gen:wikiEntry                  "When using the Checkpoint Pattern the state is saved periodically. As work in progress might be lost during the recovery from an error the Checkpoint Pattern has the capability to restore the system to the same state that was saved without having to recreate the entire execution from startup to the point of the saved state. This pattern applies both when the system needs high availability as well as when correctness is required [Hanmer 2007]pp 166-168. Relations Error Handling[Hanmer 2007]Error Recovery Patterns pp 166-168. Fault Handling [Hanmer 2007]Error Recovery Patterns pp 166-168." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-007__policy_enforcement
          a           spec:Domain ;
          rdfs:label  "ar-007: policy enforcement" .
  
  :SoftwareEngineeringMethod_modularization___standardization_framework
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Modularization & Standardization Framework" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_architecture , :ProjectPhase_analysis , :ProjectPhase_design ;
          gen:hasMethodRole        :Role_system_architect , :Role_systems_engineer ;
          gen:hasMethodTag         :AuthorTag_engineering , :AuthorTag_standardization , :AuthorTag_business_strategy , :AuthorTag_framework , :AuthorTag_project_business ;
          gen:useMethodTactic      :DesignTactic_modularization ;
          gen:wikiEntry            "The framework for modularization and standardization provides comprehensive guidance, information and support for standardization initiatives at Siemens." .
  
  :DesignPattern_strict_consistency
          a                              gen:DesignPattern ;
          rdfs:label                     "Strict Consistency" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown ;
          gen:isAlternativeOf            :DesignTactic_unknown ;
          gen:wikiEntry                  "Data is stored at different locations (replicas) to improve response time and to avoid data loss in case of failures while consistency of replicas is ensured at all times.[Cloud Computing Patterns]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :SoftwareEngineeringMethod_self_testing_code
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Self Testing Code" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_testing , :ProjectPhase_integration ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_test , :AuthorTag_integration , :AuthorTag_failure ;
          gen:wikiEntry            "<p>Self-Testing Code is the name I used in <a href=\"http://www.martinfowler.com/books/refactoring.html\" target=\"_blank\">Refactoring</a> to refer to the practice\n\tof writing comprehensive automated tests in conjunction with the\n\tfunctional software. When done well this allows you to invoke a\n  single command that executes the tests - and you are confident that\n  these tests will illuminate any bugs hiding in your code.</p>\n\n<div class=\"figure\" style=\"\"><img src=\"http://www.martinfowler.com/bliki/images/selfTestingCode/sketch.png\"></div>\n\n<p>I first ran into the thought at an OOPSLA conference listening to\n  <a href=\"http://www.davethomas.net/\" target=\"_blank\">\"Beddara\" Dave Thomas </a> say\n  that every object should be able to test itself. I suddenly had the\n  vision of typing a command and having my whole software system do a\n  self-test, much in the way that you used to see hardware memory tests when\n  booting. Soon I was exploring this approach in my own projects and being\n  very happy with the benefits. A couple of years later I did some\n  work with Kent Beck and discovered he did the same thing, but in a\n  much more sophisticated way than I did. This was shortly before Kent\n  (and Erich Gamma) produced JUnit - a tool that became the\n  underpinning of much of thinking and practice of self-testing code\n  (and its sister: <a href=\"http://www.martinfowler.com/bliki/TestDrivenDevelopment.html\" target=\"_blank\">TestDrivenDevelopment</a>).</p>\n\n<p>You have self-testing code when you can run a series of automated\n  tests against the code base and be confident that, should the tests\n  pass, your code is free of any substantial defects. One way I think\n  of it is that as well as building your software system, you\n  simultaneously build a bug detector that's able to detect any faults\n  inside the system. Should anyone in the team accidentally introduce\n  a bug, the detector goes off. By running the test suite frequently,\n  at least several times a day, you're able to detect such bugs soon\n  after they are introduced, so you can just look in the recent\n  changes, which makes it <i>much</i> easier to find them. No\n  programming episode is complete without working code and the tests\n  to keep it working. Our attitude is to assume that any non-trivial\n  code without tests is broken.</p>\n\n<p>Self-testing code is a key part of <a href=\"http://www.martinfowler.com/articles/continuousIntegration.html\" target=\"_blank\">Continuous Integration</a>,\n  indeed I say that you aren't really doing continuous integration\n  unless you have self-testing code. As a pillar of Continuous\n  Integration, it is also a necessary part of <a href=\"http://www.martinfowler.com/delivery.html\" target=\"_blank\">Continuous Delivery</a>.</p>\n\n<p>One obvious benefit of self-testing code is that it can\n  drastically reduce the number of bugs that get into production\n  software. At the heart of this is building up a testing culture that\n  where developers are naturally thinking about writing code and tests\n  together.</p>" .
  
  gen:hasKnowledgeProject
          a                   owl:ObjectProperty ;
          rdfs:label          "isRelevantFor" ;
          rdfs:subPropertyOf  gen:hasKnowledgeContext .
  
  :DesignPattern_rules_for_using_pointers
          a                              gen:DesignPattern ;
          rdfs:label                     "Rules for Using Pointers" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Rules for Using Pointers</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>Porting your code to compile for both 32- and 64-bit Microsoft Windows is straightforward. You need only follow a few simple rules about casting pointers, and use the new data types in your code. The rules for pointer manipulation are as follows.</p>\n<ol>\n<li>Do not cast pointers to <strong>int</strong>, <strong>long</strong>, <strong>ULONG</strong>, or <strong>DWORD</strong>. \n\n\n<p>If you must cast a pointer to test some bits, set or clear bits, or otherwise manipulate its contents, use the <strong>UINT_PTR</strong> or <strong>INT_PTR</strong> type. These types are integral types that scale to the size of a pointer for both 32- and 64-bit Windows (for example, <strong>ULONG</strong> for 32-bit Windows and _int64 for 64-bit Windows). For example, assume you are porting the following code:</p>\n<p><code>ImageBase = (PVOID)((ULONG)ImageBase | 1);</code></p>\n<p>As a part of the porting process, you would change the code as follows:</p>\n<p><code>ImageBase = (PVOID)((ULONG_PTR)ImageBase | 1);</code></p>\n<p>Use <strong>UINT_PTR</strong> and <strong>INT_PTR</strong> where appropriate (and if you are uncertain whether they are required, there is no harm in using them just in case). Do not cast your pointers to the types <strong>ULONG</strong>, <strong>LONG</strong>, <strong>INT</strong>, <strong>UINT</strong>, or <strong>DWORD</strong>.</p>\n<p>Note that <strong>HANDLE</strong> is defined as a <strong>void*</strong>, so typecasting a <strong>HANDLE</strong> value to a <strong>ULONG</strong> value to test, set, or clear the low-order 2 bits is an error on 64-bit Windows.</p>\n</li>\n<li>Use the <strong>PtrToLong</strong> or <strong>PtrToUlong</strong> function to truncate pointers. \n\n\n<p>If you must truncate a pointer to a 32-bit value, use the <strong>PtrToLong</strong> or <strong>PtrToUlong</strong> function (defined in Basetsd.h). These functions disable the pointer truncation warning for the duration of the call.</p>\n<p>Use these functions carefully. After you convert a pointer variable using one of these functions, never use it as a pointer again. These functions truncate the upper 32 bits of an address, which are usually needed to access the memory originally referenced by pointer. Using these functions without careful consideration will result in fragile code.</p>\n</li>\n<li>Be careful when using POINTER_32 values in code that may be compiled as 64-bit code. The compiler will sign-extend the pointer when it is assigned to a native pointer in 64-bit code, not zero-extend the pointer.</li>\n<li>Be careful when using POINTER_64 values in code that may be compiled as 32-bit code. The compiler will sign-extend the pointer in 32-bit code, not zero-extend the pointer.</li>\n<li>Be careful using OUT parameters. \n\n\n<p>For example, suppose you have a function defined as follows:</p>\n<p><code>void func( OUT PULONG *PointerToUlong );</code></p>\n<p>Do not call this function as follows.</p>\n\n<div id=\"code-snippet-1\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_937d2857-eb49-49ba-af4e-d28d125618c9');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_937d2857-eb49-49ba-af4e-d28d125618c9\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>ULONG ul;\nPULONG lp;\nfunc((PULONG *)&amp;ul);\nlp = (PULONG)ul;\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n<p>Instead, use the following call.</p>\n\n<div id=\"code-snippet-2\" class=\"codeSnippetContainer\" xmlns=\"\" style=\"position: relative;\">\n    <div class=\"codeSnippetContainerTabs\" style=\"position: relative;\">\n        \n    </div>\n    <div class=\"codeSnippetContainerCodeContainer\" style=\"position: relative;\">\n        <div class=\"codeSnippetToolBar\" style=\"position: relative;\">\n            <div class=\"codeSnippetToolBarText\" style=\"position: relative;\">\n                <a name=\"CodeSnippetCopyLink\" style=\"display: none;\" title=\"Copy to clipboard.\" href=\"javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_387f99ba-4bc4-4d44-be14-d3e7e4c90e19');\" target=\"_blank\">Copy</a>\n            </div>\n        </div>\n        <div id=\"CodeSnippetContainerCode_387f99ba-4bc4-4d44-be14-d3e7e4c90e19\" class=\"codeSnippetContainerCode\" dir=\"ltr\" style=\"position: relative;\">\n            <div style=\"color: black; position: relative;\"><pre>PULONG lp;\nfunc(&amp;lp);\n</pre></div>\n            \n        </div>\n    </div>\n</div>\n\n<p>Typecasting &amp;ul to <strong>PULONG*</strong> prevents a compiler error, but the function will write a 64-bit pointer value into the memory at &amp;ul. This code works on 32-bit Windows, but will cause data corruption on 64-bit Windows and it will be subtle, hard-to-find corruption. The bottom line: Do not play tricks with the C code—straightforward and simple is better.</p>\n</li>\n<li>Be careful with polymorphic interfaces. \n\n\n<p>Do not create functions that accept <strong>DWORD</strong> parameters for polymorphic data. If the data can be a pointer or an integral value, use the UINT_PTR or <strong>PVOID</strong> type.</p>\n<p>For example, do not create a function that accepts an array of exception parameters typed as <strong>DWORD</strong> values. The array should be an array of <strong>DWORD_PTR</strong> values. Therefore, the array elements can hold addresses or 32-bit integral values. (The general rule is that if the original type is <strong>DWORD</strong> and it needs to be pointer width, convert it to a <strong>DWORD_PTR</strong> value. That is why there are corresponding pointer-precision types.) If you have code that uses <strong>DWORD</strong>, <strong>ULONG</strong>, or other 32-bit types in a polymorphic way (that is, you really want the parameter or structure member to hold an address), use <strong>UINT_PTR</strong> in place of the current type.</p>\n</li>\n<li>Use the new window class functions. \n\n\n<p>If you have window or class private data that contains pointers, your code will need to use the following new functions:</p>\n<ul>\n<li>\n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms633581(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">GetClassLongPtr</strong></a>\n</li>\n<li>\n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms633585(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">GetWindowLongPtr</strong></a>\n</li>\n<li>\n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms633589(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">SetClassLongPtr</strong></a>\n</li>\n<li>\n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms644898(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">SetWindowLongPtr</strong></a>\n</li>\n</ul>\n<p>These functions can be used on both 32- and 64-bit Windows, but they are required on 64-bit Windows. Prepare for the transition by using these functions now.</p>\n<p>Additionally, you must access pointers or handles in class private data using the new functions on 64-bit Windows. To aid you in finding these cases, the following indexes are not defined in Winuser.h during a 64-bit compile:</p>\n<ul>\n<li>GWL_WNDPROC</li>\n<li>GWL_HINSTANCE</li>\n<li>GWL_HWDPARENT</li>\n<li>GWL_USERDATA</li>\n</ul>\n<p>Instead, Winuser.h defines the following new indexes:</p>\n<ul>\n<li>GWLP_WNDPROC</li>\n<li>GWLP_HINSTANCE</li>\n<li>GWLP_HWNDPARENT</li>\n<li>GWLP_USERDATA</li>\n<li>GWLP_ID</li>\n</ul>\n<p>For example, the following code does not compile:</p>\n<p><code>SetWindowLong(hWnd, GWL_WNDPROC, (LONG)MyWndProc);</code></p>\n<p>It should be changed as follows:</p>\n<p><code>SetWindowLongPtr(hWnd, GWLP_WNDPROC, (LONG_PTR)MyWndProc);</code></p>\n<p>When setting the <strong>cbWndExtra</strong> member of the \n<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms633576(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">WNDCLASS</strong></a> structure, be sure to reserve enough space for pointers. For example, if you are currently reserving sizeof(DWORD) bytes for a pointer value, reserve sizeof(DWORD_PTR) bytes.</p>\n</li>\n<li>Access all window and class data using <strong>FIELD_OFFSET</strong>. \n\n\n<p>It is common to access window data using hard-coded offsets. This technique is not portable to 64-bit Windows. To make your code portable, access your window and class data using the <strong>FIELD_OFFSET</strong> macro. Do not assume that the second pointer has an offset of 4.</p>\n</li>\n<li>The <strong>LPARAM</strong>, <strong>WPARAM</strong>, and <strong>LRESULT</strong> types change size with the platform. \n\n\n<p>When compiling 64-bit code, these types expand to 64 bits, because they typically hold pointers or integral types. Do not mix these values with <strong>DWORD</strong>, <strong>ULONG</strong>, <strong>UINT</strong>, <strong>INT</strong>, <strong>int</strong>, or <strong>long</strong> values. Examine how you use these types and ensure that you do not inadvertently truncate values.</p></li></ol></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignPattern_scatter_and_gather
          a                              gen:DesignPattern ;
          rdfs:label                     "Scatter and Gather" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_operability , :ArchitecturalQuality_mobility , :ArchitecturalQuality_integratability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_utility , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_parallel_computing , :DesignTactic_load_distribution ;
          gen:wikiEntry                  "[EAI Scatter and Gather 2003] The Scatter and Gather pattern utilizesa dispatcher to multicast the request to all workers ofa pool. Each worker will compute a local result and send it back to the dispatcher who will consolidate them into a single response and then send back to the client. This pattern is used in Search engines like Yahoo Google to handle users keyword search request ... etc.. In the order processing example introduced in the previous patterns  each order item that is not currently in stock could be supplied by one of multiple external suppliers. However the suppliers may or may not have the respective item in stock themselves they may charge a different price and may be able to supply the part by a different date. To fill the order in the best way possible we should request quotes from all suppliers and decide which one provides us with the best term for the requested item." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Author_schertl_andreas
          a           cont:Author ;
          rdfs:label  "schertl andreas" .
  
  :DesignTactic_accounting
          a                             gen:DesignTactic ;
          rdfs:label                    "accounting" , "Accounting" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_auditability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_accountability , :ArchitecturalQuality_utility , :ArchitecturalQuality_repeatability , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_security , :ArchitecturalQuality_analyzability ;
          gen:wikiEntry                 "Accouting refers to record-keeping of actions (usually financial)." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_sharding_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Sharding Pattern" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_efficiency , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_mobility , :ArchitecturalQuality_integratability , :ArchitecturalQuality_availability , :ArchitecturalQuality_operability , :ArchitecturalQuality_utility , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_load_distribution ;
          gen:wikiEntry                  "Divide a data store into a set of horizontal partitions or shards. This pattern can improve scalability when storing and accessing large volumes of data. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_intrusion_detection
          a                             gen:DesignTactic ;
          rdfs:label                    "Intrusion Detection" , "intrusion detection" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_survivability , :ArchitecturalQuality_security , :ArchitecturalQuality_autonomy ;
          gen:wikiEntry                 "Intrusion Detection system work by comparing network traffic patterns to a database. In the case of misuse detection the traffic pattern is compared to historic patterns of known attacks. In the case of anomaly detection the traffic pattern is compared to a historical baseline of itself. Frequently the packets must be filtered in order to make comparisons. Filtering can be on the basis of protocol TCP flags payload sizes source or destination address or port number." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_known_partners
          a                              gen:DesignPattern ;
          rdfs:label                     "Known Partners" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_accountability , :ArchitecturalQuality_authenticity , :ArchitecturalQuality_traceability , :ArchitecturalQuality_security , :ArchitecturalQuality_provability , :ArchitecturalQuality_immunity , :ArchitecturalQuality_trustability ;
          gen:isAlternativeOf            :DesignTactic_authentication ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-08__rapid_specification_authoring
          a           spec:Domain ;
          rdfs:label  "ar-08: rapid specification authoring" .
  
  :AuthorTag_workflow
          a           cont:AuthorTag ;
          rdfs:label  "workflow" .
  
  :AuthorTag_operations
          a           cont:AuthorTag ;
          rdfs:label  "operations" .
  
  spec:UseCase  a          owl:Class ;
          rdfs:label       "Use Case" ;
          rdfs:subClassOf  gen:ArchitecturalKnowledgeElement .
  
  gen:hasNegMethodEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  gen:hasNegEffectOnQuality , gen:hasMethodEffectOnQuality .
  
  :DesignPattern_modal_window
          a                              gen:DesignPattern ;
          rdfs:label                     "Modal window" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_safiddle ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_usability ;
          gen:isAlternativeOf            :DesignTactic_script_injection ;
          gen:wikiEntry                  "<p><b>Modal Window</b></p><p>In <a title=\"User interface\" href=\"https://en.wikipedia.org/wiki/User_interface\" target=\"_blank\">user interface</a> design, a modal window is a <a title=\"Graphical control element (software)\" href=\"https://en.wikipedia.org/wiki/Graphical_control_element_(software)\" target=\"_blank\">graphical control element</a> subordinate to an application's <a title=\"Main window\" href=\"https://en.wikipedia.org/wiki/Main_window\" target=\"_blank\">main window</a> which creates a <a title=\"Mode (computer interface)\" href=\"https://en.wikipedia.org/wiki/Mode_(computer_interface)\" target=\"_blank\">mode</a> where the main window can't be used. The modal window is a <a title=\"Window (computing)\" href=\"https://en.wikipedia.org/wiki/Window_(computing)#Properties\" target=\"_blank\">child window</a> that requires users to interact with it before it can return to operating the <a title=\"Tree (data structure)\" href=\"https://en.wikipedia.org/wiki/Tree_(data_structure)#Terminology\" target=\"_blank\">parent</a> application, thus preventing the <a title=\"Workflow\" href=\"https://en.wikipedia.org/wiki/Workflow\" target=\"_blank\">workflow</a> on the application main window. Modal windows are often called heavy windows or modal dialogs because the window is often used to display a <a title=\"Dialog box\" href=\"https://en.wikipedia.org/wiki/Dialog_box\" target=\"_blank\">dialog box</a>.&nbsp;Modal dialogs are part of a task flow, and recommendations are given to place them where the focus is in that flow. For example, the window can be placed near the <a title=\"Graphical control element (software)\" href=\"https://en.wikipedia.org/wiki/Graphical_control_element_(software)\" target=\"_blank\">graphical control element</a> that triggers its activation.</p>\n<p>Frequent uses of modal windows include:</p>\n<ul>\n<li>Drawing attention to vital pieces of information. This use has been criticized as ineffective because users are bombarded with too many dialog boxes, and habituate to simply clicking \"Close\", \"Cancel\", or \"OK\" without reading or understanding the message.<a href=\"https://en.wikipedia.org/wiki/Modal_window#cite_note-6\" target=\"_blank\">[6]</a><a href=\"https://en.wikipedia.org/wiki/Modal_window#cite_note-7\" target=\"_blank\">[7]</a><a href=\"https://en.wikipedia.org/wiki/Modal_window#cite_note-8\" target=\"_blank\">[8]</a></li>\n<li>Blocking the application flow until information required to continue is entered, as for example a <a title=\"Password\" href=\"https://en.wikipedia.org/wiki/Password\" target=\"_blank\">password</a> in a <a title=\"Logging (computer security)\" href=\"https://en.wikipedia.org/wiki/Logging_(computer_security)\" target=\"_blank\">login</a> process. Another example are <a title=\"File dialog\" href=\"https://en.wikipedia.org/wiki/File_dialog\" target=\"_blank\">file dialogs</a> to open and save files in an application.</li>\n<li>Collecting application configuration options in a centralized dialog. In such cases, typically the changes are applied upon closing the dialog, and access to the application is disabled while the edits are being made.</li>\n<li>Warning that the effects of the current action are not reversible. This is a frequent <a title=\"Interaction design pattern\" href=\"https://en.wikipedia.org/wiki/Interaction_design_pattern\" target=\"_blank\">interaction pattern</a> for modal dialogs, but it is also criticised by usability experts as being ineffective for its intended use (protection against errors in destructive actions) due to <a title=\"Habituation\" href=\"https://en.wikipedia.org/wiki/Habituation\" target=\"_blank\">habituation</a>. Actually making the action reversible (providing an \"undo\" option) is recommended instead.<a href=\"https://en.wikipedia.org/wiki/Modal_window#cite_note-undo-1\" target=\"_blank\">[1]</a></li>\n</ul>\n<p>&nbsp;</p>" ;
          spec:hasPatternDomain          :Domain_user_interfaces ;
          owl:sameAs                     dbr:Modal_window .
  
  :DesignDecision_kdd-43
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-43" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><b>Zugriffskontrolle für Data-Marts</b></p><p>Die Zugriffe auf die Data-Marts werden gemäß einem rollenbasierten Autorisierungs- und Authentifizierungsmodell kontrolliert. Das heißt, dass die Zugriffsrechte einzelner Benutzerrollen bei der Datenaggregation berücksichtigt und von den Data-Marts wiederspiegelt werden müssen.<br></p><p><strong>Anmerkung:</strong> Diese Architekturentscheidung stammt aus dem DWH-Design und wird hier nur informativ vollständigkeitshalber aufgeführt.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-107__multi-tenancy_support , :Domain_ar-161__access_control ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_multitenancy , :DesignTactic_authorization .
  
  :DesignPattern_swappable_staging_environment
          a                              gen:DesignPattern ;
          rdfs:label                     "Swappable staging environment" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_manageability , :ArchitecturalQuality_transferability , :ArchitecturalQuality_usability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_affordability ;
          gen:isAlternativeOf            :DesignTactic_change_propagation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_arch-3__replace_atl_server
          a           spec:Domain ;
          rdfs:label  "arch-3: replace atl server" .
  
  :AuthorTag_risk  a  cont:AuthorTag ;
          rdfs:label  "risk" .
  
  :DesignDecision_kdd-11
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-11" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Synchrone / Asynchrone Kommunikation</strong></p><p>Im Regelfall erfolg die Kommunikation zwischen den Komponenten zweier Schichten (z.B. Daten- und Verarbeitungsschicht) synchron (d.h. es wird in demselben Thread, in dem der Aufruf initiiert wurde, auf die Antwort und Rückgabewerte gewartet). Dabei initiiert immer die obere Schicht die Kommunikation.</p><p>Eine Ausnahme stellt die Kommunikation zwischen der Visualisierung und der Datenservices dar. Hier wird die Verwendung von Callbacks oder Promise-Objekten empfohlen.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-104_1__metadata_interface , :Domain_ar-104__stepwise_querying , :Domain_ar-104_2__variable_filtering ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_usability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability ;
          spec:useDecisionTactic          :DesignTactic_synchronous_communication , :DesignTactic_layering .
  
  :ArchitecturalQuality_stability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Stability" , "stability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_lock , :DesignPattern_chain_of_responsibility , :DesignTactic_atomicity , :DesignPattern_encapsulation , :DesignDecision_kdd-07__replace_atl_and_isapi , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_layered_architecture , :DesignPattern_redundancy , :DesignPattern_restart , :DesignTactic_keep_consistent , :DesignPattern_gatekeeper_pattern , :DesignPattern_separate_system-managed_data , :DesignDecision_kdd-06__embedded_browser , :DesignPattern_capturing_architectural_requirements , :DesignTactic_isolation ;
          gen:relatedQuality       :ArchitecturalQuality_autonomy ;
          gen:wikiEntry            "[Pan 2011]Resistance to the amplication of change in the software.  [Donald G. Firesmith et al. 2008]The subtype of reliability that is the degree to which the system or architectural component continues to deliver mission-critical services during a given time period under a given operational profile regardless of any failures." ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_inspection_test
          a           cont:AuthorTag ;
          rdfs:label  "inspection test" .
  
  :ArchitecturalQuality_accuracy
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Accuracy" , "accuracy" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_breadcrumbs , :DesignPattern_capturing_architectural_requirements , :DesignTactic_self-descriptiveness , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_reflection , :DesignPattern_offline_reporting , :DesignPattern_continual_status_reporting , :DesignPattern_architectural_requirements_questionnaire ;
          gen:relatedQuality       :ArchitecturalQuality_certainty , :ArchitecturalQuality_correctness , :ArchitecturalQuality_performance , :ArchitecturalQuality_functionality , :ArchitecturalQuality_repeatability , :ArchitecturalQuality_effectiveness ;
          gen:wikiEntry            "In general accuracy means the degree of closeness of measurements of a quantity to that quantitys actual (true) value. With respect to software this often relies on the used datatypes and chips and their corresponding accuracy.  [Dan Moore 2004]Accuracy is the mapping of the business needs to the programmers model.  [Donald G. Firesmith et al. 2008]The part of correctness that is the magnitude of defects (i. e. the deviation of the acutal or average value from their true value) in the stored and output data of the system or architectural component." ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_survivability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "survivability" , "Survivability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignPattern_resource_allocation , :DesignPattern_remote_storage , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_restart , :DesignPattern_revise_procedure , :DesignPattern_packet_filtering , :DesignPattern_checkpoint , :DesignPattern_rollback , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_claim_check , :DesignPattern_error_handler , :DesignPattern_maximize_human_participation , :DesignPattern_expansive_automatic_controls , :DesignPattern_routine_maintenance , :DesignPattern_watchdog , :DesignPattern_minimize_human_intervention , :DesignPattern_checksum , :DesignPattern_maintenance_interface , :DesignPattern_protective_automatic_controls , :DesignPattern_treshold_analysis , :DesignPattern_reinitialization , :DesignPattern_error_containment_barrier , :DesignPattern_fault_correlation , :DesignPattern_units_of_mitigation , :DesignPattern_realistic_threshold , :DesignPattern_root_cause_analysis , :DesignPattern_quarantine , :DesignTactic_intrusion_detection , :DesignTactic_fault_handling , :DesignPattern_reintegration , :DesignPattern_final_handling , :DesignPattern_circuit_breaker , :DesignPattern_error_correcting_code , :DesignPattern_compensation , :DesignPattern_routine_exercises , :DesignPattern_fault_observer , :DesignPattern_slow_it_down , :DesignPattern_fault_diagnosis , :SoftwareEngineeringMethod_model-based_survivability_engineering , :DesignPattern_leaky_bucket_counter , :DesignPattern_redundancy , :DesignPattern_failover , :DesignPattern_riding_over_transients , :DesignPattern_3-category_logging , :DesignPattern_recovery_blocks , :DesignPattern_marked_data , :DesignPattern_escalation , :DesignPattern_limit_retries , :DesignPattern_acknowledgement , :DesignPattern_return_to_reference_point , :DesignPattern_temporal_analytics , :DesignPattern_indiviuals_decide_timing , :DesignPattern_concentrated_recovery , :DesignPattern_finish_work_in_progress , :DesignTactic_error_detection , :DesignPattern_someone_in_charge , :DesignPattern_heartbeat , :DesignPattern_voting , :DesignPattern_deferrable_work , :DesignPattern_fault_isolation , :DesignPattern_similarity_detection , :DesignPattern_routine_audits , :DesignPattern_queue_for_resources , :DesignPattern_reconfiguration , :DesignPattern_memento , :DesignPattern_existing_metrics , :DesignPattern_retry_pattern , :DesignPattern_parameter_checking , :DesignTactic_error_handling , :DesignPattern_reproducible_error , :DesignPattern_rollforward , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_compensating_transaction_pattern , :DesignPattern_software_update , :DesignPattern_small_patches , :DesignPattern_correcting_audits , :DesignPattern_fresh_work_before_stale ;
          gen:relatedQuality       :ArchitecturalQuality_defensibility , :ArchitecturalQuality_security ;
          gen:wikiEntry            "[NCS Glossary of Communication Terms 1996] Survivability is the quantified ability of a system to continue to function during and after a natural or man-made disturbance. For a given application survivability must be qualified by specifying the range of conditions over which the entity will survive the minimum acceptable level or post-disturbance functionality and the maximum acceptable outage duration." ;
          spec:requiredBy          :Domain_abstract .
  
  spec:address  a     owl:ObjectProperty ;
          rdfs:range  spec:Domain .
  
  :DesignPattern_load_shedding
          a                              gen:DesignPattern ;
          rdfs:label                     "Load Shedding" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_affordability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation ;
          gen:wikiEntry                  "The objective of Load Shedding aims to cope with the effects of overload situations due to the large data volumes high data rates and the potentially bursty nature of workload. E.g. reducing the load is achieved by discarding pending work [Hanmer 2007]pp 154-155.  Relations Overload Mitigation [Hanmer 2007]Error Mitigation Patterns pp 154-155." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Load_Shedding .
  
  :DesignPattern_message_bus_architecture
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Bus Architecture" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_simplicity , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_scalability , :ArchitecturalQuality_integratability ;
          gen:isAlternativeOf            :DesignTactic_messaging ;
          gen:wikiEntry                  "<h1 class=\"heading\">Message Bus Architectural Style</h1>\n        <p>Message bus architecture describes the principle of using a software system that can receive and send messages using one or more communication channels, so that applications can interact without needing to know specific details about each other. It is a style for designing applications where interaction between applications is accomplished by passing messages (usually asynchronously) over a common bus. The most common implementations of message bus architecture use either a messaging router or a Publish/Subscribe pattern, and are often implemented using a messaging system such as Message Queuing. Many implementations consist of individual applications that communicate using common schemas and a shared infrastructure for sending and receiving messages. A message bus provides the ability to handle:</p>\n        <ul>\n          <li>\n            <strong>Message-oriented communications</strong>. All communication between applications is based on messages that use known schemas.</li>\n          <li>\n            <strong>Complex processing logic</strong>. Complex operations can be executed by combining a set of smaller operations, each of which supports specific tasks, as part of a multistep itinerary.</li>\n          <li>\n            <strong>Modifications to processing logic</strong>. Because interaction with the bus is based on common schemas and commands, you can insert or remove applications on the bus to change the logic that is used to process messages.</li>\n          <li>\n            <strong>Integration with different environments</strong>. By using a message-based communication model based on common standards, you can interact with applications developed for different environments, such as Microsoft .NET and Java.</li>\n        </ul>\n        <p>Message bus designs have been used to support complex processing rules for many years. The design provides a pluggable architecture that allows you to insert applications into the process, or improve scalability by attaching several instances of the same application to the bus. Variations on the message bus style include:</p>\n        <ul>\n          <li>\n            <strong>Enterprise Service Bus (ESB)</strong>. Based on message bus designs, an ESB uses services for communication between the bus and components attached to the bus. An ESB will usually provide services that transform messages from one format to another, allowing clients that use incompatible message formats to communicate with each other</li>\n          <li>\n            <strong>Internet Service Bus (ISB)</strong>. This is similar to an enterprise service bus, but with applications hosted in the cloud instead of on an enterprise network. A core concept of ISB is the use of Uniform Resource Identifiers (URIs) and policies to control the routing of logic through applications and services in the cloud.</li>\n        </ul>\n        <p>The main benefits of the message-bus architectural style are:</p>\n        <ul>\n          <li>\n            <strong>Extensibility</strong>. Applications can be added to or removed from the bus without having an impact on the existing applications.</li>\n          <li>\n            <strong>Low complexity</strong>. Application complexity is reduced because each application only needs to know how to communicate with the bus.</li>\n          <li>\n            <strong>Flexibility</strong>. The set of applications that make up a complex process, or the communication patterns between applications, can be changed easily to match changes in business or user requirements, simply through changes to the configuration or parameters that control routing.  </li>\n          <li>\n            <strong>Loose coupling</strong>. As long as applications expose a suitable interface for communication with the message bus, there is no dependency on the application itself, allowing changes, updates, and replacements that expose the same interface.</li>\n          <li>\n            <strong>Scalability</strong>. Multiple instances of the same application can be attached to the bus in order to handle multiple requests at the same time.</li>\n          <li>\n            <strong>Application simplicity</strong>. Although a message bus implementation adds complexity to the infrastructure, each application needs to support only a single connection to the message bus instead of multiple connections to other applications.</li>\n        </ul>\n        <p>Consider the message bus architectural style if you have existing applications that interoperate with each other to perform tasks, or you want to combine multiple tasks into a single operation. This style is also appropriate if you are implementing a task that requires interaction with external applications, or applications hosted in different environments.</p>" ;
          spec:hasPatternDomain          :Domain_distributed_computing .
  
  :DesignPattern_replay_protection
          a                              gen:DesignPattern ;
          rdfs:label                     "Replay Protection" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_immunity ;
          gen:isAlternativeOf            :DesignTactic_message_protection ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_efficiency
          a           cont:AuthorTag ;
          rdfs:label  "efficiency" .
  
  :SoftwareEngineeringMethod_test_driven_development__tdd__xtdd_
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Test Driven Development (TDD, xTDD)" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_verification_and_validation , :ProjectPhase_requirements ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_test ;
          gen:wikiEntry            "Test-Driven Development writes detailed feature specifications as automated tests, before implementing the feature. This dramatically increases development efficiency by eliminating the ambiguity of natural-language feature specifications." .
  
  spec:hasPosRequirementEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  spec:hasRequirementEffectOnQuality , gen:hasPosEffectOnQuality .
  
  :ArchitecturalQuality_auditability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Auditability" , "auditability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_web_service_proxy , :DesignPattern_routine_maintenance , :DesignPattern_correcting_audits , :DesignDecision_kdd-07__mining_process , :DesignPattern_data_logger , :DesignPattern_resource_allocation , :DesignTactic_auditing , :DesignPattern_routine_audits , :DesignPattern_api_gateway , :DesignPattern_identity_credentials , :DesignDecision_ad-202__components , :DesignPattern_limit_retries , :DesignPattern_escalation , :DesignTactic_logging , :DesignDecision_ad-017__core_services , :DesignPattern_existing_metrics , :DesignTactic_accounting , :DesignDecision_ad-016__monitoring_agent , :DesignDecision_ad-001_1__ecosystem_components , :DesignPattern_access_control ;
          gen:relatedQuality       :ArchitecturalQuality_security , :ArchitecturalQuality_accountability ;
          gen:wikiEntry            "<p><strong>Auditability</strong></p>\n<p>Auditability is the degree to which transactions can be traced and audited through a system.&nbsp;Auditability means that:</p>\n<ul>\n<li><span style=\"line-height: 1.3em;\">It is possible to establish whether a system is functioning properly and, thereafter, that it has worked properly.</span></li>\n<li><span style=\"line-height: 1.3em;\">The capability of supporting a systematic, independent and documented process for obtaining audit evidence and evaluating it objectively to determine the extent to which audit criteria are fulfilled.</span></li>\n</ul>\n<p><strong><span style=\"line-height: 1.3em;\">Source:</span></strong></p>\n<ul>\n<li><a href=\"http://itlaw.wikia.com/wiki/Auditability\">http://itlaw.wikia.com/wiki/Auditability</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :Domain_ar-01__tool_support_for_sad
          a           spec:Domain ;
          rdfs:label  "ar-01: tool support for sad" .
  
  :DesignPattern_reconfiguration
          a                              gen:DesignPattern ;
          rdfs:label                     "Reconfiguration" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_robustness , :ArchitecturalQuality_dependability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_safety , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_fault_handling ;
          gen:wikiEntry                  "[MSDN Runtime Reconfiguration 2014] Reconfugration assumes that the behavior of the system can be changed significantly using a different configuration. Assuming a set of backup devices or services a reconfiguration task deactivates a faulty component and switches to a healthy device or operational backup service. Therefore it is an advantage for the application to be designed in such a way as to allow these configuration changes to be applied while it is running and for the components of the application to detect the changes and apply them as soon as possible." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_systems_engineering
          a           cont:AuthorTag ;
          rdfs:label  "systems engineering" .
  
  :DesignPattern_general_porting_guidelines
          a                              gen:DesignPattern ;
          rdfs:label                     "General Porting Guidelines" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;General Porting Guidelines</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>Porting 32-bit applications to 64-bit Microsoft Windows will be easier than it was porting 16-bit applications \n    to 32-bit Windows. However, the move will go more smoothly with some careful planning. The following are some \n    general guidelines.</p>\n<h2><a id=\"Planning\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"planning\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"PLANNING\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a>Planning</h2>\n<ul>\n<li>Determine the magnitude of the effort required for the port.\n      Gauge how much work is involved by identifying the following items:<p>\n</p><ul>\n<li>Problem 32-bit code. Compile your 32-bit code with the 64-bit compiler and examine the extent of the errors and warnings.</li>\n<li>Shared components or dependencies. Determine which components in your application originate from other teams and whether those teams plan to \n         develop 64-bit versions of their code.</li>\n<li>Legacy or assembly code. 16-bit Windows-based applications do not run on 64-bit Windows and must be rewritten. While x86 assembly \n         code runs in WOW64, you may want to rewrite this code to take advantage of the speed of the Intel Itanium \n         architecture.</li>\n</ul>\n\n</li>\n<li>Port the entire application, not just portions of it.\n      <p>Although it is possible to port pieces of an application or to limit code to 2G with /LARGEADDRESSAWARE:NO, \n       this strategy trades short-term gain for long-term pain.</p>\n</li>\n<li>Find substitutes for technologies that will not be ported.\n      <p>Some technologies, including DAO (Data Access Object) and the Jet Red database engine, will not be ported to \n       64-bit Windows.</p>\n</li>\n<li>Treat your 64-bit version as a separate product release.\n      <p>Even though your 64-bit product may share the same code base as your 32-bit, it needs additional testing and \n       may have other release considerations.</p>\n</li>\n</ul>\n<h2><a id=\"Development\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"development\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"DEVELOPMENT\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a>Development</h2>\n<ul>\n<li>Start developing compliant code now.\n      <p>Developers can start writing compliant code by using the latest Windows header files and the new data \n       types with no adverse effects on 32-bit product development. For more information, see \n       <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384198(v=vs.85).aspx\" target=\"_blank\">Getting Ready for 64-bit \n       Windows</a>.</p>\n</li>\n<li>Ensure that your code can be compiled for both 32- and 64-bit Windows.\n      <p>The new data model was designed to allow 32- and 64-bit applications to be built from a single code base with \n       few modifications. The SQL Server and Windows development teams are developing 32- and 64-bit versions of their \n       products from the same code base.</p>\n</li>\n<li>Use the compiler's new optimization features for best performance.\n      <p>Code optimization for Intel Itanium processors is more important than it was for the x86. The compiler \n       assumes many of the optimization functions previously handled by the microprocessor. You can maximize the \n       performance of a 64-bit application by using two new optimization features of the compiler: <em>Profile \n       Guided Optimization</em> and <em>Whole Program Optimization</em>. Both features result in longer build \n       times and require the early development of good test scenarios.</p>\n<p><em>Profile Guided Optimization</em> involves a two-step compile process. During the first compile, \n         the code is instrumented to capture the execution behavior. This information is used during the second \n         compile to guide all optimization features.</p>\n<p><em>Whole Program Optimization</em> analyzes the code in all application files, not just a single one. \n         This approach increases performance in several ways, including better inlining, as well as improved \n         side-effect analysis and custom calling conventions.</p>\n</li>\n</ul>\n<h2><a id=\"Testing\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"testing\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a><a id=\"TESTING\" href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa384190(v=vs.85).aspx\" target=\"_blank\"></a>Testing</h2>\n<ul>\n<li>Determine whether you'll test 64- or 32-bit code running in WOW64.\n      <p>Some applications include both native 64-bit code and 32-bit code running in WOW64. Investigate this closely \n       while developing a test plan, and decide whether your test tools should be 64-bit, 32-bit, or a combination. \n       You will often need to test both the 64- and 32-bit versions of your application on 64-bit Windows.</p>\n</li>\n<li>Test frequently used 32-bit components.\n      <p>First, recompile your code to 64-bit and test. Second, fix problems, recompile in 32-bits, and then test. \n       Third, recompile to 64-bit and test.</p>\n</li>\n<li>Test COM and RPC components.\n      <p>Make sure that both 32- and 64-bit COM and RPC components communicate correctly. You may also have to test \n       communications with 16-bit components over a network.</p>\n</li>\n<li>Test your 32-bit version on 64-bit Windows.\n      <p>Customers can continue to use 32-bit applications on 64-bit Windows where performance and memory issues are \n       not major considerations.</p>\n</li>\n<li>Test different memory configurations.\n      <p>Adding large amounts of memory on the server sometimes exposes previously unnoticed problems in either the \n       application or the operating system.</p></li></ul></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :Domain_cust-2__version_compatibility
          a           spec:Domain ;
          rdfs:label  "cust-2: version compatibility" .
  
  :AuthorTag_goals  a  cont:AuthorTag ;
          rdfs:label  "goals" .
  
  :Domain_ar-013__data_access_control
          a           spec:Domain ;
          rdfs:label  "ar-013: data access control" .
  
  :ArchitecturalQuality_debuggability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "debuggability" , "Debuggability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_push_monitor , :DesignPattern_active_redundant_elements , :DesignPattern_separate_system-managed_data , :DesignPattern_session_failover , :DesignPattern_poll_monitor , :DesignTactic_separation_of_concerns , :DesignTactic_monitoring , :DesignPattern_limit_retries , :DesignPattern_data_logger , :DesignTactic_logging ;
          gen:relatedQuality       :ArchitecturalQuality_serviceability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_usability ;
          gen:wikiEntry            "[Babylon 10 Debuggability [date unknown]] Possibility to have software errors removed e.g. by running in a controlled and gradual manner (using a special compiler) in order to eliminate errors and closely check the program (software)." ;
          spec:requiredBy          :Domain_abstract .
  
  :Project_aspernbm  a  cont:Project ;
          rdfs:label  "aspernbm" .
  
  sear:SearchResult  a  owl:Class ;
          rdfs:label  "Search Result" .
  
  :DesignPattern_message_bus
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Bus" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maintainability , :ArchitecturalQuality_security , :ArchitecturalQuality_maturity , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_traceability , :ArchitecturalQuality_consistency , :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf            :DesignTactic_isolation , :DesignTactic_routing , :DesignTactic_monitoring , :DesignTactic_message_channeling ;
          gen:wikiEntry                  "[EAI Message Bus 2003] A Message Bus is a combination of a common data model a common command set and a messaging infrastructure to allow different systems to communicate through a shared set of interfaces. This is analogous to a communications bus in a computer system which serves as the focal point for communication between the CPU main memory and peripherals. Just as in the hardware analogy there are a number of pieces that come together to form the message bus." ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_software_ecosystems .
  
  :DesignPattern_environment_data
          a                              gen:DesignPattern ;
          rdfs:label                     "Environment Data" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_visibility , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_learnability , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_monitoring , :DesignTactic_transparency ;
          gen:wikiEntry                  "<h1 align=\"center\">Pattern 8 (Environment Data)</h1>\n<p><a href=\"http://www.workflowpatterns.com/patterns/data/visibility/wdp8_animation.php\" target=\"_blank\">FLASH animation of Environment Data pattern</a></p>\n<h2>Description</h2>\n<p align=\"justify\">Data elements which exist in the external operating environment are able to be accessed by components of processes during execution. \n</p><h2>Example</h2>\n<p align=\"justify\">Where required, tasks in the <em>System Monitoring </em> workflow can access the <em>temperature sensor data </em> from the operating environment. \n</p><h2>Motivation</h2>\n<p align=\"justify\">Direct access to environmentally managed data by  tasks or cases during execution can significantly simplify  processes and improve their ability to respond to changes and communicate with applications in the broader operational environment.</p>\n<h2 align=\"justify\">Overview </h2>\n<p align=\"justify\">External data may be sourced from a variety of distinct locations including external databases, applications that are currently executing or can be initiated in the operating environment and services that mediate access to various data repositories and distribution mechanisms e.g stock price feeds. These scenarios are illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/data/visibility/wdp8.php#figure9\" target=\"_blank\">9</a>. </p>\n<p align=\"center\"><a name=\"figure9\" id=\"figure9\" href=\"http://www.workflowpatterns.com/patterns/data/visibility/wdp8.php\" target=\"_blank\"><img src=\"http://www.workflowpatterns.com/patterns/data/images/workflow-case-8.png\" alt=\"Figure 9: Environment data visibility\" name=\"figure9\" width=\"423\" height=\"253\" id=\"figure9\"></a></p>\n<p align=\"center\"><strong>Figure 9:</strong> Environment data visibility </p>\n<h2>Context</h2>\n<p>There are no specific context conditions associated with this pattern.  </p>\n<h2>Implementation</h2>\n<p align=\"justify\">The ability to access external data elements generally requires the ability to connect to an interface or interprocess communication (IPC) facility in the operating environment or to invoke an external service which will supply data elements. Facilities for achieving this may be either <em>explicitly </em> or <em>implicitly </em> supported by an offering. </p>\n<p align=\"justify\"><em>Explicit support </em> involves the direct provision by an offering of constructs for accessing external data sources. Typically these take the form of specific elements that can be included in the design-time process model. Staffware provides the Automatic Step construct as well as script commands which enable specific items of data to be requested from an external application. COSA provides the Tool Agent interfaces which provide a number of facilities for accessing external data elements. FLOWer implements Mapping Objects which allow data elements to be copied from external databases into the workflow engine, updated as required with case data and copied back to the underlying database. It also allows text files to be utilised in workflow actions and has a series of interfaces for external database integration. BPEL provide facilities that enable external web services to be invoked thus facilitating access to environment data elements. </p>\n<p align=\"justify\"><em>Implicit support </em> occurs in offerings such as Websphere MQ  and iPlanet where the actual implementation of individual workflow tasks is achieved by the development of associated programs in a procedural language such as C++ or Java. In this situation, access to external data occurs within individual task implementations by extending the program code to incorporate the required integration capabilities. </p>\n<h2>Issues</h2>\n<p align=\"justify\">There are a multitude of ways in which external data elements can be utilised within a process. It is infeasible for any offering to support more than a handful of them. This raises the issue of the minimal set of external integration facilities required for effective external data integration. </p>\n<h2>Solutions</h2>\n<p align=\"justify\">There is no definitive answer to this problem as the set of facilities required depends on the context in which the tool will be utilised. Suitable options for accessing external data may include the ability to access data files (in text or binary format) in the operating environment or the ability to utilize an external API (e.g. an XML, DDE or ODBC interface) through which data requests can be dynamically framed. </p>\n<h2>Evaluation Criteria</h2>\n<p>An offering achieves full support if it satisfies the description for the pattern. It achieves a partial support rating if external data elements can only be accessed via programmatic extensions to the PAIS or if there are limitations on the type of data elements that can be accessed.</p>" ;
          spec:hasPatternDomain          :Domain_workflows__shape_ .
  
  :AuthorTag_security
          a           cont:AuthorTag ;
          rdfs:label  "security" .
  
  :AuthorTag_software
          a           cont:AuthorTag ;
          rdfs:label  "software" .
  
  :DesignPattern_alignment_faults
          a                              gen:DesignPattern ;
          rdfs:label                     "Alignment Faults" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Alignment Faults</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>The system alignment-fault handler is turned off by default on Itanium-based systems. Therefore, any unaligned \n     data access generates an exception that will not automatically be fixed by the system unless the application \n     catches the exception in a <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms679353(v=vs.85).aspx\" target=\"_blank\">frame-based exception \n     handler</a>. To enable the system alignment-fault hander, call the \n     <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621(v=vs.85).aspx\" target=\"_blank\"><strong xmlns=\"http://www.w3.org/1999/xhtml\">SetErrorMode</strong></a> function with \n     <strong>SEM_NOALIGNMENTFAULTEXCEPT</strong>. However, note that processes may experience severe \n     performance degradation if the system alignment-fault handler is enabled and the process generates alignment \n     faults.</p>\n<p>If the WinDbg debugger has been installed as the system debugger, WinDbg will automatically be launched if any \n     process on the system generates an unhandled exception. If you do not have a debugger installed as your system \n     debugger, the system displays a dialog box stating that your application has encountered an error and providing \n     the opportunity to report the problem to Microsoft.</p>\n<p>On x64 systems, any alignment faults are handled by a combination of hardware and software. For best \n     performance, all access to memory should be properly aligned.</p></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :DesignPattern_minimize_human_intervention
          a                              gen:DesignPattern ;
          rdfs:label                     "Minimize Human Intervention" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_trustability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_availability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_privacy , :ArchitecturalQuality_survivability , :ArchitecturalQuality_viability , :ArchitecturalQuality_security , :ArchitecturalQuality_traceability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_immunity , :ArchitecturalQuality_resilience , :ArchitecturalQuality_dependability , :ArchitecturalQuality_safety ;
          gen:isAlternativeOf            :DesignTactic_limit_access , :DesignTactic_fault_handling ;
          spec:hasPatternDomain          :Domain_abstract .
  
  gen:isAffectedBy  a  owl:ObjectProperty ;
          rdfs:label  "isAffectedBy" .
  
  :AuthorTag_questions
          a           cont:AuthorTag ;
          rdfs:label  "questions" .
  
  :DesignTactic_lazy_loading
          a           gen:DesignTactic ;
          rdfs:label  "lazy loading" .
  
  :DesignDecision_ad-005__request_throttling
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-005: Request Throttling" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p><strong>Throttling&nbsp;Access Requests</strong></p>\n<p>The WSO2 API Manager throttling features will be used to control the access to different APIs.&nbsp;Not passing any of the throttling checks typically results in a termination of the request and an error message reply back to the requesting party that state the failure reason.</p>\n<p>Throttling allows to limit the number of requests to a certain API from a certain applications.&nbsp;This helps to block denial of service attacks on backend services and to be able to sell API accessible value with different plans and hence optimizes monetization of the provided service.</p>\n<p>WSO2 API Manager Throttling:</p>\n<p><img src=\"p/AspernES/api_throttling.png\" alt=\"\" width=\"402\" height=\"302\"></p>\n<p>Three mechanisms&nbsp;are supported:</p>\n<ul>\n<li><span style=\"line-height: 1.3em;\"><em>API level throttling:</em> It is used to limit the access rate to a backend service for all applications and subscribers.</span></li>\n<li><span style=\"line-height: 1.3em;\"><em>Application level throttling:</em> It is used to limit the access rate for a certain application.</span></li>\n<li><span style=\"line-height: 1.3em;\"><em>Resource level throttling:</em> It is a very fine granular mechanism that allows rate limitations based on the REST resources that are referenced in the request, e.g. possible resource “/useraccount “can have different throttling limits than for example “/real-time update”.</span></li>\n</ul>\n<p><span style=\"line-height: 1.3em;\">The appropriate mechanism will be applied wrt. to the API used and the application using it.</span></p>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-007__policy_enforcement ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_manageability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_throttling .
  
  :DesignTactic_genericization
          a           gen:DesignTactic ;
          rdfs:label  "genericization" .
  
  :DesignTactic_extension_support
          a           gen:DesignTactic ;
          rdfs:label  "extension support" .
  
  :DesignTactic_api_protection
          a           gen:DesignTactic ;
          rdfs:label  "api protection" .
  
  :DesignPattern_fault_correlation
          a                              gen:DesignPattern ;
          rdfs:label                     "Fault Correlation" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_maturity , :ArchitecturalQuality_utility , :ArchitecturalQuality_dependability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_safety , :ArchitecturalQuality_resilience , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "Fault Correlation helps designing a more fault tolerant system in order to fail silently when it fails. To process an error of failure the system needs to identify the error and the fault leading to the error. The system can maintain information about the errors that are detected and the successful processing steps and learn how to recognize and process errors that were not covered in the initial design. Therefore the unique signature of the error must be looked at to sort it into the fault category for which error processing steps are known [Hanmer 2007]pp 88-90. Relations Error Detection [Hanmer 2007] Detection Patterns pp 88-90." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  spec:hasDecisionEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:DesignDecision ;
          rdfs:label          "hasEffectOn" ;
          rdfs:subPropertyOf  gen:hasEffectOnQuality .
  
  spec:useDecisionMethod
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:DesignDecision ;
          rdfs:label          "isUsing" ;
          rdfs:range          gen:SoftwareEngineeringMethod ;
          rdfs:subPropertyOf  gen:uses .
  
  :DesignDecision_kdd-24
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-24" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>CLM-Integration</strong></p><p>Die zusätzlichen Visualisierungskomponenten für das Projekt Aspern werden in einem Browser-Fenster über eine URL im Rahmen der CLM-Benutzeroberfläche aufgerufen und bedient.</p><p><strong>Erläuterung</strong></p><p>Das System ermöglicht die Visualisierung mittels bestehender Tools (z.B. CLM), die hinsichtlich der Datenabfrage angepasst werden müssen. Visualisierungen sind Erweiterungen, die auch für andere Anwendungsfälle des CLM genutzt werden können und keinen direkten Bezug zu Aspern haben. Das CLM Core umfasst die CLM Anwendung ohne spezifische Anpassungen. Es können die Grundfunktionalitäten genutzt werden. Für Erweiterungen, die nur für Aspern relevant sind, wie z.B. für die Datenintegration, werden Anpassungen notwendig sein, die sich möglichweise als Erweiterungen realisieren lassen.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-102__tool_integration ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_usability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_integratability ;
          spec:useDecisionTactic          :DesignTactic_tool_integration .
  
  :Domain_ar-06__specialized_tool_misuse_prevention
          a           spec:Domain ;
          rdfs:label  "ar-06: specialized tool misuse prevention" .
  
  :Requirement_ar-163__generic_interfaces
          a                          spec:Requirement ;
          rdfs:label                 "AR-163: Generic interfaces" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Die Schnittstellen zwischen den verschiedenen Systemkomponenten müssen\n  generisch definiert sein, damit die Daten auf eine universelle Art abgefragt\n  und übertragen werden können." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Developmental" ;
          spec:requirementPurpose    "Genericization" .
  
  :DesignTactic_transparency
          a                             gen:DesignTactic ;
          rdfs:label                    "transparency" , "Transparency" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_affordability , :ArchitecturalQuality_understandability , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_isolateability ;
          gen:wikiEntry                 "Transparencyindicates that something/someone acts ina way that it is easy for others to see what actions are performed (e.g. by a software system). An example is open source software which is created by access to the underlying source code is freely available. This permits use study and modification without restriction." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  gen:DesignTactic  a      owl:Class ;
          rdfs:label       "Design Tactic" ;
          rdfs:subClassOf  gen:ArchitecturalKnowledgeElement .
  
  :Domain_abstract  a  spec:Domain ;
          rdfs:label  "abstract" .
  
  :DesignDecision_ad-004__token-based_security
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-004: Token-Based Security" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">OAUTH2 Bearer Tokens for Applications&nbsp;</strong></p><p style=\"font-size: small;\">A key functionality is to be able to restrict API Access tokens to domains/IPs and the ability to revoke access tokens.</p><p style=\"font-size: small;\">The system shall provide means for end-user and developer/app authentication, access control to service invocation and enforcement of API-specific privacy settings whenever required.</p><p style=\"font-size: small;\">For example, when anonymization must be performed before the data can be delivered to the developer, such tasks shall be performed by the platform or the service implementation of the API itself:</p><p style=\"font-size: small;\">- All API usage published to pluggable analytics framework;</p><p style=\"font-size: small;\">- View metrics by user, API, and more;</p><p style=\"font-size: small;\">- Alerting, real-time dashboards.</p><p style=\"font-size: small;\">Through the API manager, the system shall provide means for end-user and developer/app authentication whenever applications demand data to be provided through the ecosystem.</p><p style=\"font-size: small;\">The API manager shall support role based access to API database and provide clear policies about how public and private APIs are managed.</p><p style=\"font-size: small;\">The system shall implement role based access to API Store and for managing public and private APIs.</p><p style=\"font-size: small;\"><span style=\"line-height: 1.5; font-size: small;\">The API gateway verifies&nbsp;OAUTH2 tokens coming in with an API request with a predefined key server. The&nbsp;application has to obtain a key from the defined key server beforehand&nbsp;via&nbsp;an API store application or a REST request to the Key Manager directly.&nbsp;</span></p><ul style=\"font-size: small;\"><li style=\"font-size: small;\">The API Authentication Handler handles the authentication via Oauth Bearer tokens</li><li style=\"font-size: small;\">The API MgtUsageHandler can be used to publish runtime statistics to an analytical or billing system outside of the API gateway</li><li style=\"font-size: small;\">The API ManagerExtensionHandler is used to trigger extension sequences. If an extension can be created as a new sequence for the ESB it can easily be added via the respective configuration page in the publisher.</li></ul>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-014__api_access_control ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:useDecisionTactic          :DesignTactic_authentication , :DesignTactic_authorization .
  
  :DesignTactic_filter-based_queries
          a           gen:DesignTactic ;
          rdfs:label  "filter-based queries" .
  
  :DesignPattern_duplex_messaging
          a                              gen:DesignPattern ;
          rdfs:label                     "Duplex Messaging" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_performance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_utility , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_asynchronous_communication ;
          gen:wikiEntry                  "[Zhou 2011] Two-way message communication where both the service and the client send messages to each other independently irrespective of the use of the One-Way or the Request-Reply pattern. For exchanging messages to client and service must know about the operations available and what messages are sent and received during the communication. Usually a contract just determines what functionality is available at the service. Now the service is going to be sending messages to the client that the client isnt specifically waiting for so it needs an idea of what messages the client can deal with. So we need a contract that models both directions of the conversation." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_attribute-value_system
          a                              gen:DesignPattern ;
          rdfs:label                     "Attribute-value system" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_safiddle ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_traceability , :ArchitecturalQuality_analyzability ;
          gen:isAlternativeOf            :DesignTactic_classification ;
          gen:wikiEntry                  "<p><b>Attribute-value system</b></p><p>An attribute-value system is a basic <a title=\"Knowledge representation\" href=\"https://en.wikipedia.org/wiki/Knowledge_representation\" target=\"_blank\">knowledge representation</a> framework comprising a table with columns designating \"attributes\" (also known as \"properties\", \"predicates,\" \"features,\" \"dimensions,\" \"characteristics\", \"<a title=\"Field (computer science)\" href=\"https://en.wikipedia.org/wiki/Field_(computer_science)\" target=\"_blank\">fields</a>\", \"headers\" or \"independent variables\" depending on the context) and \"<a title=\"Row (database)\" href=\"https://en.wikipedia.org/wiki/Row_(database)\" target=\"_blank\">rows</a>\" designating \"objects\" (also known as \"entities,\" \"instances,\" \"exemplars,\" \"elements\", \"<a title=\"Record (computer science)\" href=\"https://en.wikipedia.org/wiki/Record_(computer_science)\" target=\"_blank\">records</a>\" or \"dependent variables\"). Each table cell therefore designates the value (also known as \"state\") of a particular attribute of a particular object.</p>\n<p>Below is a sample attribute-value system. It represents 10 objects (rows) and five features (columns). In this example, the table contains only integer values. In general, an attribute-value system may contain any kind of data, numeric or otherwise. An attribute-value system is distinguished from a simple \"feature list\" representation in that each feature in an attribute-value system may possess a range of values (e.g., feature <img src=\"https://upload.wikimedia.org/math/0/1/9/019b577dc46e4eaa56b825ab90fce65f.png\" alt=\"P_{1}\">&nbsp;below, which has domain of {0,1,2}), rather than simply being present or absent (<a href=\"https://en.wikipedia.org/wiki/Attribute-value_system#CITEREFBarsalouHale1993\" target=\"_blank\">Barsalou &amp; Hale 1993</a>).</p>\n<dl>\n<dd>\n<table class=\"wikitable\" style=\"text-align: center; width: 30%;\" border=\"1\"><caption>Sample Attribute-Value System</caption>\n<tbody>\n<tr>\n<th>Object</th>\n<th><img src=\"https://upload.wikimedia.org/math/0/1/9/019b577dc46e4eaa56b825ab90fce65f.png\" alt=\"P_{1}\"></th>\n<th><img src=\"https://upload.wikimedia.org/math/5/f/5/5f57ab9ed57ef716654939ff1c5ff233.png\" alt=\"P_{2}\"></th>\n<th><img src=\"https://upload.wikimedia.org/math/a/1/4/a14df4942bd773866a4625a33de08945.png\" alt=\"P_{3}\"></th>\n<th><img src=\"https://upload.wikimedia.org/math/5/f/c/5fc3517506917c8c550b85da828cd708.png\" alt=\"P_{4}\"></th>\n<th><img src=\"https://upload.wikimedia.org/math/0/f/c/0fced2f3aa055cf75f3855310a4a0cbe.png\" alt=\"P_{5}\"></th>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/3/0/a/30ac081252d588bb0a2fcd27cb8dbb06.png\" alt=\"O_{1}\"></th>\n<td>1</td>\n<td>2</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/7/7/f/77f38a7b8c59faf21ca80a958bc3aa80.png\" alt=\"O_{2}\"></th>\n<td>1</td>\n<td>2</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/c/2/b/c2b55edaa4d42e67306dcaacdd10bdfd.png\" alt=\"O_{3}\"></th>\n<td>2</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/7/6/4/76420e682a9ab3862bd593ff735d5ba8.png\" alt=\"O_{4}\"></th>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>1</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/f/5/e/f5efc1b47c5f1d8d2f4aa09cc2096ba5.png\" alt=\"O_{5}\"></th>\n<td>2</td>\n<td>1</td>\n<td>0</td>\n<td>2</td>\n<td>1</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/4/8/c/48ce2acbab4d833dbe19c78600199e44.png\" alt=\"O_{6}\"></th>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>2</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/c/1/1/c11700377a681920922db3ddc7c363f1.png\" alt=\"O_{7}\"></th>\n<td>2</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/2/7/6/276068e4279fe007d4095299cfe405d7.png\" alt=\"O_{8}\"></th>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>2</td>\n<td>1</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/9/f/1/9f178c918d36109898aedb9c240ef16f.png\" alt=\"O_{9}\"></th>\n<td>2</td>\n<td>1</td>\n<td>0</td>\n<td>2</td>\n<td>2</td>\n</tr>\n<tr>\n<th><img src=\"https://upload.wikimedia.org/math/a/d/a/ada8936a919ccb6210b259fc8a1b857e.png\" alt=\"O_{10}\"></th>\n<td>2</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>" ;
          spec:hasPatternDomain          :Domain_knowledge_representation ;
          owl:sameAs                     dbr:Attribute-value_system .
  
  spec:hasNegDecisionEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:subPropertyOf  spec:hasDecisionEffectOnQuality , gen:hasNegEffectOnQuality .
  
  :Author_ionescu_tudor
          a           cont:Author ;
          rdfs:label  "ionescu tudor" .
  
  :DesignPattern_web_service_proxy
          a                              gen:DesignPattern ;
          rdfs:label                     "Web Service Proxy" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernse , :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_performance ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_performance , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_visibility , :ArchitecturalQuality_auditability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_reliability , :ArchitecturalQuality_security , :ArchitecturalQuality_availability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_performance , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_traceability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_auditability ;
          gen:isAlternativeOf            :DesignTactic_authentication , :DesignTactic_routing , :DesignTactic_error_handling , :DesignTactic_logging , :DesignTactic_load_balancing , :DesignTactic_encryption , :DesignTactic_authorization , :DesignTactic_monitoring , :DesignTactic_proxying , :DesignTactic_auditing ;
          gen:wikiEntry                  "<h1>Web Service Proxy Pattern</h1>\n          <div id=\"preamble\"> \n <div class=\"sectionbody\"> \n  <div class=\"paragraph\"> \n   <p>Proxying web services is a very common practice used for different reasons like security or auditing. This pattern allows a short and easy configuration of such a proxy.</p> \n  </div> \n  <div class=\"paragraph\"> \n   <p><span class=\"image\"><a class=\"fancybox\" href=\"https://docs.mulesoft.com/mule-user-guide/v/3.5/_images/mcp_ws-proxy.png\" target=\"_blank\"><img src=\"https://docs.mulesoft.com/mule-user-guide/v/3.5/_images/mcp_ws-proxy.png\"></a></span></p> \n  </div> \n </div> \n</div> \n<div class=\"sect1\"> \n <h2 id=\"core-features\"><a class=\"anchor\" href=\"https://docs.mulesoft.com/mule-user-guide/v/3.5/web-service-proxy-pattern#core-features\" target=\"_blank\"></a>Core Features</h2> \n <div class=\"sectionbody\"> \n  <div class=\"paragraph\"> \n   <p>A web service proxy acts as an intermediate between a caller application and the target web service. This gives the proxy a chance to transparently introduce new behaviors in the calling sequence. For example, it can:</p> \n  </div> \n  <div class=\"ulist\"> \n   <ul> \n    <li> <p>Add or remove HTTP headers.</p> </li> \n    <li> <p>Transform the SOAP envelope (body or header) to add or remove specific entries.</p> </li> \n    <li> <p>Rewrite remote WSDLs so they appear to bind to services inside a corporate firewall.</p> </li> \n    <li> <p>Introduce custom error handling.</p></li></ul></div></div></div>" , "<h1 class=\"doc-title\" itemprop=\"headline\">Use Nginx for Proxy Services and Software Load Balancing</h1>\n  <p class=\"doc-time doc-modified-time\">\n  \n  <small>Updated <time itemprop=\"dateModified\" datetime=\"2013-08-09T00:00:00+00:00\">Friday, August 9th, 2013</time> by Linode</small>\n</p>\n\n  <p>The nginx web server can act as a very capable software load-balancer, in addition to its more traditional roles serving static content over HTTP and dynamic content using FastCGI handlers for scripts. Because ngnix uses a non-threaded, event-driven architecture, nginx is able to outperform web servers like Apache. This is particularly true in deployments that receive heavy loads.</p>\n\n  <p>Using a proxy is helpful when the demands of serving a single website outgrow the capabilities of a single machine. Additionally, there are some web frameworks, like <a href=\"https://www.linode.com/docs/frameworks/seaside/\" target=\"_blank\">Seaside</a> and Ruby On Rails’s Mongrel server, that deploy applications on framework-specific web servers. While these single-purpose servers provide powerful application services, they are not suitable for hosting entire applications. In these cases, using nginx as a front-end proxy to pass only the essential requests to the application server is a viable means of unifying dynamic content with static content and providing a stable production environment.</p>\n\n  <p>This document provides an overview of using nginx as a front-end proxy server for other HTTP servers, and as a software load balancer to distribute traffic across a cluster of machines providing HTTP resources. For an introductory guide to configuring nginx, please see our <a href=\"https://www.linode.com/docs/websites/nginx/basic-nginx-configuration\" target=\"_blank\">Basic Nginx Configuration</a> guide. If you want a simple nginx deployment with content that uses PHP or Perl scripts, consider following one of our <a href=\"https://www.linode.com/docs/web-servers/nginx/\" target=\"_blank\">Installing Nginx</a> guides.</p>\n\n  <h2 id=\"prerequisites\">Prerequisites</h2>\n\n  <p>Before we begin, make sure you have completed the following:</p>\n\n  <ul>\n    <li>Follow the <a href=\"https://www.linode.com/docs/getting-started/\" target=\"_blank\">Getting Started</a> guide.</li>\n    <li>Install the <a href=\"https://www.linode.com/docs/web-servers/nginx/\" target=\"_blank\">nginx server</a>.</li>\n    <li>Familiarize yourself with <a href=\"https://www.linode.com/docs/websites/nginx/basic-nginx-configuration\" target=\"_blank\">Basic Nginx Configuration</a>.</li>\n  </ul>\n\n  <p>If you’re new to Linux server administration, you may be interested in our <a href=\"https://www.linode.com/docs/tools-reference/introduction-to-linux-concepts\" target=\"_blank\">introduction to Linux basics</a> guide, <a href=\"https://www.linode.com/docs/beginners-guide/\" target=\"_blank\">Beginner’s Guide</a> and <a href=\"https://www.linode.com/docs/using-linux/administration-basics\" target=\"_blank\">Administration Basics</a> guide.</p>\n\n  <h2 id=\"how-it-works-front-end-proxy-services-with-nginx\">How It Works: Front-End Proxy Services with Nginx</h2>\n\n  <p>When a request reaches the nginx front-end proxy server, here’s an overview of the process that occurs:</p>\n\n  <ol>\n    <li>nginx receives a request for a resource.</li>\n    <li>nginx sends a second <em>proxied</em> request to a specified server, and gets a response.</li>\n    <li>nginx returns the result of that request to the original requester.</li>\n  </ol>\n\n  <h2 id=\"configuring-apache-for-port-listening\">Configuring Apache for Port Listening</h2>\n\n  <p>In this section, you’ll configure Apache to listen on an alternate port so it can respond to the nginx front end.</p>\n\n  <ol>\n    <li>\n      <p>The first thing you will configure is the port on which Apache listens. This needs to be a port other than 80, so that you can proxy requests to Apache on the alternate port. This has the added benefit of preventing conflicts between Apache and Nginx listening on the same port. First, open up the <code>/etc/apache2/ports.conf</code> file for editing, and configure it as shown below:</p>\n\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1</pre></td><td class=\"code\"><pre>sudo nano /etc/apache2/ports.conf\n</pre></td></tr></tbody></table>\n</div>\n\n      <dl class=\"file-excerpt\">\n        <dt>/etc/apache2/ports.conf</dt>\n        <dd>\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15</pre></td><td class=\"code\"><pre>NameVirtualHost *:8000\nListen 8000\n         \n&lt;IfModule mod_ssl.c&gt;\n  # If you add NameVirtualHost *:443 here, you will also have to change\n  # the VirtualHost statement in /etc/apache2/sites-available/default-ssl\n  # to &lt;VirtualHost*:443&gt;\n  # Server Name Indication for SSL named virtual hosts is currently not\n  # supported by MSIE on Windows XP.\n  Listen 443\n&lt;/IfModule&gt;\n \n&lt;IfModule mod_gnutls.c&gt;\n  Listen 443\n&lt;/IfModule&gt;\n</pre></td></tr></tbody></table>\n</div>\n        </dd>\n      </dl>\n    </li>\n    <li>\n      <p>Next, in the virtual host configuration file, edit the port to match the new default port set in the previous step. More specifically, edit the <code>&lt;VirtualHost&gt;</code> line to use port 8000.</p>\n\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1</pre></td><td class=\"code\"><pre>sudo nano /etc/apache2/sites-available/example.com\n</pre></td></tr></tbody></table>\n</div>\n\n      <dl class=\"file-excerpt\">\n        <dt>/etc/apache2/sites-available/example.com</dt>\n        <dd>\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17</pre></td><td class=\"code\"><pre>&lt;VirtualHost *:8000&gt;\n ServerAdmin webmaster@example.com\n ServerName  www.example.com\n DocumentRoot /var/www/example.com\n \n &lt;Directory /&gt;\n   Options FollowSymLink\n   AllowOverride None\n &lt;/Directory&gt;\n \n &lt;Directory /var/www/example.com&gt;\n   Options Indexes FollowSymLinks MultiViews\n   AllowOverride None\n   Order allow,deny\n   allow from all\n &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</pre></td></tr></tbody></table>\n</div>\n        </dd>\n      </dl>\n    </li>\n    <li>\n      <p>In the <code>/etc/apache2/apache2.conf</code> file, comment out the <code>LogFormat {User-Agent}</code> line. Then, add a forward so that Apache will log the original user’s IP address in the access logs instead of nginx’s IP address (which would be listed as 127.0.0.1).</p>\n\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1</pre></td><td class=\"code\"><pre>sudo nano /etc/apache2/apache2.conf\n</pre></td></tr></tbody></table>\n</div>\n\n      <dl class=\"file-excerpt\">\n        <dt>/etc/apache2/apache2.conf</dt>\n        <dd>\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2</pre></td><td class=\"code\"><pre>#LogFormat \"%h %l %u %t \\\"%r\\\" %&gt;s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\nLogFormat \"%{X-Forwarded-For}i %l %u %t \\\"%r\\\" %&gt;s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\n</pre></td></tr></tbody></table>\n</div>\n        </dd>\n      </dl>\n    </li>\n    <li>\n      <p>Install the Apache module <code>libapache2-mod-rpaf</code>, which takes care of logging the correct IP address.</p>\n\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1</pre></td><td class=\"code\"><pre>sudo apt-get install libapache2-mod-rpaf\n</pre></td></tr></tbody></table>\n</div>\n    </li>\n    <li>\n      <p>Restart Apache.</p>\n\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1</pre></td><td class=\"code\"><pre>service apache restart\n</pre></td></tr></tbody></table>\n</div>\n    </li>\n    <li>\n      <p>Edit the <code>/etc/nginx/proxy_params</code> file so all the parameters look like the following. These settings are a good starting point for optimal forwarding of proxy requests from Nginx to Apache:</p>\n\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1</pre></td><td class=\"code\"><pre>sudo nano /etc/nginx/proxy_params\n</pre></td></tr></tbody></table>\n</div>\n\n      <dl class=\"file\">\n        <dt>/etc/nginx/sites-available/example.com</dt>\n        <dd>\n<div class=\"highlight nginx\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14</pre></td><td class=\"code\"><pre><span class=\"k\">proxy_set_header</span> <span class=\"s\">Host</span> <span class=\"nv\">$host</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_set_header</span> <span class=\"s\">X-Real-IP</span> <span class=\"nv\">$remote_addr</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_set_header</span> <span class=\"s\">X-Forwarded-For</span> <span class=\"nv\">$proxy_add_x_forwarded_for</span><span class=\"p\">;</span>\n\n<span class=\"k\">client_max_body_size</span> <span class=\"mi\">100M</span><span class=\"p\">;</span>\n<span class=\"k\">client_body_buffer_size</span> <span class=\"mi\">1m</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_intercept_errors</span> <span class=\"no\">on</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_buffering</span> <span class=\"no\">on</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_buffer_size</span> <span class=\"mi\">128k</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_buffers</span> <span class=\"mi\">256</span> <span class=\"mi\">16k</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_busy_buffers_size</span> <span class=\"mi\">256k</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_temp_file_write_size</span> <span class=\"mi\">256k</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_max_temp_file_size</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"k\">proxy_read_timeout</span> <span class=\"mi\">300</span><span class=\"p\">;</span>\n</pre></td></tr></tbody></table>\n</div>\n        </dd>\n      </dl>\n    </li>\n    <li>\n      <p>Create the nginx example.com virtual host file at <code>/etc/nginx/sites-available/example.com</code>. Make sure you specify the same document root here that you did for Apache (for example, /var/www/example.com). This will ensure that nginx can deliver static files directly without passing the request to Apache. Nginx is much faster than Apache at delivering static files (like JavaScript, CSS, images, PDF files, static HTML files, etc.).</p>\n\n<div class=\"highlight plaintext\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1</pre></td><td class=\"code\"><pre>sudo nano /etc/nginx/sites-available/example.com\n</pre></td></tr></tbody></table>\n</div>\n\n      <dl class=\"file-excerpt\">\n        <dt>/etc/nginx/sites-available/example.com</dt>\n        <dd>\n<div class=\"highlight nginx\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20</pre></td><td class=\"code\"><pre><span class=\"k\">server</span> <span class=\"p\">{</span>\n    <span class=\"kn\">listen</span> <span class=\"mi\">80</span><span class=\"p\">;</span>\n    <span class=\"kn\">server_name</span> <span class=\"s\">www.example.com</span> <span class=\"s\">example.com</span><span class=\"p\">;</span>\n    <span class=\"kn\">root</span> <span class=\"n\">/var/www/example.com</span><span class=\"p\">;</span>\n\n    <span class=\"kn\">if</span> <span class=\"s\">(</span><span class=\"nv\">$http_host</span> <span class=\"s\">!=</span> <span class=\"s\">\"www.example.com\")</span> <span class=\"p\">{</span>\n        <span class=\"kn\">rewrite</span> <span class=\"s\">^</span> <span class=\"s\">www.example.com</span><span class=\"nv\">$request_uri</span> <span class=\"s\">permanent</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kn\">index</span> <span class=\"s\">index.php</span> <span class=\"s\">index.html</span><span class=\"p\">;</span>\n\n    <span class=\"kn\">location</span> <span class=\"n\">/</span> <span class=\"p\">{</span>\n        <span class=\"kn\">proxy_pass</span> <span class=\"s\">http://localhost:8000</span><span class=\"p\">;</span>\n        <span class=\"kn\">include</span> <span class=\"n\">/etc/nginx/proxy_params</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kn\">location</span> <span class=\"p\">~</span><span class=\"sr\">*</span> <span class=\"err\">\\</span><span class=\"s\">.(js|css|jpg|jpeg|gif|png|svg|ico|pdf|html|htm)</span>$ <span class=\"p\">{</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table>\n</div>\n        </dd>\n      </dl>\n\n      <p>There are some additional <code>location</code> directives to add in the <code>server</code> section of the <code>/etc/nginx/sites-available/example.com</code> file. You will probably need these directives, but it’s possible that you may not, depending on your nginx and Apache configuration.</p>\n    </li>\n    <li>Add a this <code>location</code> directive to make nginx refuse all requests for files beginning with the characters <code>.ht</code>. There’s a similar directive in nearly every default Apache configuration. This directive is useful if your Apache deployment relies on settings from <code>.htaccess</code> and <code>.htpasswd</code>.\n      <dl>\n        <dt>/etc/nginx/sites-available/example.com</dt>\n        <dd>\n<div class=\"highlight nginx\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3</pre></td><td class=\"code\"><pre><span class=\"k\">location</span> <span class=\"p\">~</span> <span class=\"sr\">/\\.ht</span> <span class=\"p\">{</span>\n    <span class=\"kn\">deny</span>  <span class=\"s\">all</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table>\n</div>\n        </dd>\n      </dl>\n    </li>\n    <li>\n      <p>If you need to proxy requests for a specific location to a specific resource, use a rewrite rule to capture the path to the resource and pass that along to the proxied server. For example, if you want all requests for <code>http://example.com/</code> to be handed to a server running on <code>192.168.3.105</code> with a path of <code>/teams/~example/</code>, you would write the following <code>location</code> block:</p>\n\n      <dl class=\"file-excerpt\">\n        <dt>/etc/nginx/sites-available/example.com</dt>\n        <dd>\n<div class=\"highlight nginx\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4</pre></td><td class=\"code\"><pre><span class=\"k\">location</span> <span class=\"n\">/</span> <span class=\"p\">{</span>\n  <span class=\"kn\">rewrite</span> <span class=\"s\">^(.*)</span>$ <span class=\"n\">/teams/~example/</span><span class=\"nv\">$1</span> <span class=\"s\">break</span><span class=\"p\">;</span>\n  <span class=\"kn\">proxy_pass</span>   <span class=\"s\">http://192.168.3.105</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table>\n</div>\n        </dd>\n      </dl>\n\n      <p>Here, the rewrite rule (<code>^(.*)$</code>) captures the entire request string and appends it (<code>$1</code>) to the path on the new server (<code>/teams/~example/</code>). Here’s how this would play out:</p>\n\n      <p><strong>Request:</strong> <code>http://example.com/images/lollipop_man.png</code></p>\n\n      <p><strong>Response:</strong> <code>http://192.168.3.105/teams/~example/images/lollipop_man.png</code></p>\n\n      <p><strong>Request:</strong> <code>http://example.com/wiki/PracticeSchedule/</code></p>\n\n      <p><strong>Response:</strong> <code>http://192.168.3.105/teams/~example/wiki/PracticeSchedule/</code></p>\n    </li>\n    <li>\n      <p>For most conventional proxy setups, you will also want to add a <code>proxy_redirect</code> specification to your <code>location</code> directive blocks. This directive rewrites the HTTP headers that nginx receives from the proxied server to make them appear as if they were generated by the nginx server. Here’s the <code>location</code> block:</p>\n\n      <dl class=\"file-excerpt\">\n        <dt>example.com.vhost proxy location directive</dt>\n        <dd>\n<div class=\"highlight nginx\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4</pre></td><td class=\"code\"><pre><span class=\"k\">location</span> <span class=\"n\">/pictures/</span> <span class=\"p\">{</span>\n  <span class=\"kn\">proxy_pass</span>       <span class=\"s\">http://192.168.3.106:8080</span><span class=\"p\">;</span>\n  <span class=\"kn\">proxy_redirect</span>   <span class=\"s\">http://192.168.3.106:8080</span> <span class=\"s\">http://example.com/pictures/</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table>\n</div>\n        </dd>\n      </dl>\n\n      <p>In this example, requests are made for resources under <code>http://example.com/pictures/</code>, then passed to a server running on port <code>8080</code> of the LAN IP address <code>192.168.3.106</code>. Without the <code>proxy_redirect</code> directive, the <code>Location:</code> header of the HTTP response would return the location for a request of <code>http://example.com/team.jpg</code> as <code>http://192.168.3.106:8080/team.jpg</code>. By adding the <code>proxy_redirect</code> directive, proxied requests return the expected <code>Location:</code> header.</p>\n    </li>\n  </ol>\n\n  <h2 id=\"software-load-balancing\">Software Load Balancing</h2>\n\n  <p>In addition to using nginx as a front end proxy to pass requests to other web servers, nginx can also serve as the front end for clusters of servers, and even as a software load balancer.</p>\n\n  <h3 id=\"basic-http-clustering\">Basic HTTP Clustering</h3>\n\n  <p>In this example, we’ll show you how to build a cluster named <code>appcluster</code> with a simple round-robin load balancer. Here are the appropriate excerpts from the <code>/etc/nginx/sites-available/example.com</code> file:</p>\n\n  <dl class=\"file-excerpt\">\n    <dt>/etc/nginx/sites-available/example.com</dt>\n    <dd>\n<div class=\"highlight nginx\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24</pre></td><td class=\"code\"><pre><span class=\"k\">server</span> <span class=\"p\">{</span>\n\n  <span class=\"kn\">listen</span> <span class=\"mi\">80</span><span class=\"p\">;</span>\n  <span class=\"kn\">server_name</span> <span class=\"s\">example.com</span> <span class=\"s\">www.example.com</span><span class=\"p\">;</span>\n\n  <span class=\"kn\">location</span> <span class=\"n\">/</span> <span class=\"p\">{</span>\n     <span class=\"kn\">proxy_pass</span>  <span class=\"s\">http://appcluster</span><span class=\"p\">;</span>\n     <span class=\"kn\">include</span> <span class=\"n\">/etc/nginx/proxy_params</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n    \n<span class=\"k\">upstream</span> <span class=\"s\">appcluster</span> <span class=\"p\">{</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8801</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8802</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8803</span> <span class=\"s\">down</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8804</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">galloway.example.com</span><span class=\"p\">:</span><span class=\"mi\">8801</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">galloway.example.com</span><span class=\"p\">:</span><span class=\"mi\">8802</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">galloway.example.com</span><span class=\"p\">:</span><span class=\"mi\">8803</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">galloway.example.com</span><span class=\"p\">:</span><span class=\"mi\">8804</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n    \n<span class=\"c1\"># [...]\n</span></pre></td></tr></tbody></table>\n</div>\n    </dd>\n  </dl>\n\n  <p>In this example, in the <code>server</code> directive block, nginx is configured to listen for requests on a specific IP address and port (e.g. <code>21.43.65.87</code> and <code>80</code>), and respond to requests for the domains <code>example.com</code> and <code>www.example.com</code>. All requests for resources at this domain (e.g. <code>/</code>) will be passed to the <code>http://appcluster</code> server established in the <code>upstream</code> directive.</p>\n\n  <p>The <code>upstream</code> directive establishes the round-robin load balancer. Within this block eight servers are listed, each running on a distinct hostname and port combination.</p>\n\n  <ul>\n    <li>The <code>upstream</code> configuration must occur in the top level of the <code>http</code> block of the <code>/etc/nginx/sites-available/example.com</code> file.</li>\n    <li>The servers running on ports <code>8801</code> through <code>8804</code> of the servers <code>linode.example.com</code> and <code>galloway.example.com</code> will receive equal portions of the requests made of the upstream <code>appcluster</code>.</li>\n    <li>The <code>down</code> parameter excludes that server from being proxied. Use it when one of your servers is down.</li>\n  </ul>\n\n  <h3 id=\"advanced-load-balancing\">Advanced Load Balancing</h3>\n\n  <p>nginx also allows you to control the behavior of the <code>upstream</code> resource cluster beyond a simple round-robin setup. The simplest modification is to add the <code>ip_hash</code> directive to the configuration block. This causes requests from the same IP address to be routed to the same back-end server. Consider the following example excerpt:</p>\n\n  <dl class=\"file-excerpt\">\n    <dt>/etc/nginx/sites-available/example.com</dt>\n    <dd>\n<div class=\"highlight nginx\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7</pre></td><td class=\"code\"><pre><span class=\"k\">upstream</span> <span class=\"s\">appcluster</span> <span class=\"p\">{</span>\n   <span class=\"kn\">ip_hash</span><span class=\"p\">;</span> \n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8801</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8802</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">galloway.example.com</span><span class=\"p\">:</span><span class=\"mi\">8801</span> <span class=\"s\">down</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">galloway.example.com</span><span class=\"p\">:</span><span class=\"mi\">8802</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table>\n</div>\n    </dd>\n  </dl>\n\n  <p>Here, the <code>ip_hash</code> directive causes nginx to attempt to match requests originating from a single IP address with the same back-end component. If a component server is unreachable, nginx will route those connections to an alternate component.</p>\n\n  <blockquote class=\"note\">\n\n    <p>If a server needs to be taken offline for an extended period of time, append the <code>down</code> argument, as shown in the entry for <code>galloway.example.com:8801</code>. This will prevent missed connections from attempting to hit a component of the server which is down.</p>\n  </blockquote>\n\n  <p>Here is a more advanced configuration, where seven server components running on unique ports on the server <code>linode.example.com</code> comprise the <code>appcluster</code> upstream:</p>\n\n  <dl class=\"file-excerpt\">\n    <dt>/etc/nginx/sites-available/example.com</dt>\n    <dd>\n<div class=\"highlight nginx\" style=\"position: relative;\"><table style=\"border-spacing: 0\"><tbody><tr><td class=\"gutter gl\" style=\"text-align: right\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9</pre></td><td class=\"code\"><pre><span class=\"k\">upstream</span> <span class=\"s\">appcluster</span> <span class=\"p\">{</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8801</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8802</span> <span class=\"s\">weight=1</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8803</span> <span class=\"s\">weight=2</span> <span class=\"s\">max_fails=2</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8804</span> <span class=\"s\">weight=2</span> <span class=\"s\">max_fails=2</span> <span class=\"s\">fail_timeout=20</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8805</span> <span class=\"s\">weight=4</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8806</span> <span class=\"s\">weight=4</span> <span class=\"s\">fail_timeout=4</span><span class=\"p\">;</span>\n   <span class=\"kn\">server</span> <span class=\"nf\">linode.example.com</span><span class=\"p\">:</span><span class=\"mi\">8807</span> <span class=\"s\">weight=2</span> <span class=\"s\">fail_timeout=20</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table>\n</div>\n    </dd>\n  </dl>\n\n  <ul>\n    <li>\n      <p>By default, each server listed in an upstream cluster has a weight of <code>1</code>. The argument <code>weight=[number]</code> sets a specific weight. Higher numbers receive more weight.</p>\n\n      <p>In the example above, the components running on ports <code>8801</code> and <code>8802</code> are treated identically by nginx, as the default value for <code>weight</code> is <code>1</code>. The components running on <code>8803</code>, <code>8804</code>, and <code>8807</code> will receive twice as much traffic as the first two components. The components running on <code>8805</code> and <code>8806</code> will receive four times as much traffic as the ones on <code>8801</code> and <code>8802</code> and twice much traffic as the components on <code>8803</code>, <code>8804</code>, and <code>8807</code>.</p>\n    </li>\n    <li>\n      <p><code>max_fails=[number]</code> specifies the number of unsuccessful attempts at communication with an upstream component before it is considered inoperative. To prevent components from ever being marked as inoperative, even if they are unreachable, set this value to <code>0</code>. The default value for <code>max_fails</code> is <code>1</code>.</p>\n\n      <p>In the example above, the component servers on ports <code>8801</code>, <code>8802</code>, <code>8805</code>, <code>8806</code>, and <code>8807</code> can only refuse a connection once before being marked as inoperative. Components <code>8803</code> and <code>8804</code> are allowed to fail twice before being marked as inoperative.</p>\n    </li>\n    <li>\n      <p>The <code>fail_timeout=[time-in=seconds]</code> argument determines the span of time within which the <code>max_fails</code> number of unsuccessful attempts must occur in order to mark a component of the server inoperative. Note that servers that return a 404 response are considered operative. Also, this value does not affect timeouts for established proxy connections.</p>\n\n      <p>By default, all components have their fail counter reset every 10 seconds, which covers components <code>8801</code>, <code>8802</code>, <code>8803</code>, and <code>8805</code>. In the example above, the components running on <code>8804</code> and <code>8807</code> have their fail counters reset every 20 seconds, while <code>8806</code> has its counter reset every 4 seconds.</p>\n    </li>\n    <li>\n      <p>The <code>ip_hash</code> directive cannot be combined with the additional arguments shown in the example above.</p>\n    </li>\n  </ul>\n\n  <p>Using these arguments, you can use nginx to manage the behavior and distribution of load across a cluster of servers.</p>\n\n  <h2 id=\"more-information\">More Information</h2>\n\n  <p>You may wish to consult the following resources for additional information on this topic. While these are provided in the hope that they will be useful, please note that we cannot vouch for the accuracy or timeliness of externally hosted materials.</p>\n\n  <ul>\n    <li><a href=\"http://wiki.nginx.org/NginxHttpProxyModule\" target=\"_blank\">nginx Proxy Module</a></li>\n    <li><a href=\"http://wiki.nginx.org/NginxHttpUpstreamModule\" target=\"_blank\">HTTP Upstream Module</a></li>\n    <li><a href=\"https://www.linode.com/docs/websites/nginx/basic-nginx-configuration\" target=\"_blank\">nginx Configuration</a></li></ul>" , "<h1 id=\"WebServiceProxyPattern-WebServiceProxyPattern\">Web Service Proxy Pattern</h1>\n<div id=\"expander-712583580\" class=\"expand-container\">\n<div id=\"expander-control-712583580\" class=\"expand-control\">\n    <span class=\"expand-control-icon\">&nbsp;</span><span class=\"expand-control-text\">Contents</span>\n</div>\n<div id=\"expander-content-712583580\" class=\"expand-content expand-hidden\"><p></p><div>\n<ul>\n    <li><a href=\"https://developer.mulesoft.com/docs/display/current/Web+Service+Proxy+Pattern#WebServiceProxyPattern-CoreFeatures\" target=\"_blank\">Core Features</a></li>\n    <li><a href=\"https://developer.mulesoft.com/docs/display/current/Web+Service+Proxy+Pattern#WebServiceProxyPattern-WSDLRedirection\" target=\"_blank\">WSDL Redirection</a></li>\n    <li><a href=\"https://developer.mulesoft.com/docs/display/current/Web+Service+Proxy+Pattern#WebServiceProxyPattern-ServingStaticContent\" target=\"_blank\">Serving Static Content</a></li>\n</ul></div><p></p></div>\n</div>\n<p>Proxying web services is a very common practice used for different reasons like security or auditing. This pattern allows a short and easy configuration of such a proxy.</p><p><img class=\"confluence-embedded-image\" src=\"https://developer.mulesoft.com/docs/download/attachments/122751608/mcp_ws-proxy.png?version=1&amp;modificationDate=1285284626222\" data-image-src=\"/docs/download/attachments/122751608/mcp_ws-proxy.png?version=1&amp;modificationDate=1285284626222\"></p><h2 id=\"WebServiceProxyPattern-CoreFeatures\">Core Features</h2><p>A web service proxy acts as an intermediate between a caller application and the target web service. This gives the proxy a chance to transparently introduce new behaviors in the calling sequence. For example, it can:</p><ul class=\"alternate\"><li>Add or remove HTTP headers.</li><li>Transform the SOAP envelope (body or header) to add or remove specific entries.</li><li>Rewrite remote WSDLs so they appear to bind to services inside a corporate firewall.</li><li>Introduce custom error handling.</li></ul>" ;
          spec:hasPatternDomain          :Domain_web_services , :Domain_seco__aspern_ .
  
  :DesignPattern_reliable_sessions
          a                              gen:DesignPattern ;
          rdfs:label                     "Reliable Sessions" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_simplicity , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_utility , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_synchronous_communication ;
          gen:wikiEntry                  "[MSDN Reliable Sessions 2014] End to end reliable transfer of messages between a source and a destination regardless of the number or type of intermediaries that separate the endpoints. The reliable session WCF provides ensures that messages sent between endpoints are transferred across SOAP or transport intermediaries and are delivered only once and optionally in the same order in which they were sent.To use a reliable session with a WCF application either use one of the system-provided bindings in WCF that support a reliable session by default or as an option or create your own custom binding that supports the session." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_index_table_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Index Table Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown ;
          gen:isAlternativeOf            :DesignTactic_unknown ;
          gen:wikiEntry                  "Create indexes over the fields in data stores that are frequently referenced by query criteria. This pattern can improve query performance by allowing applications to more quickly locate the data to retrieve from a data store. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_web_of_system
          a           spec:Domain ;
          rdfs:label  "web of system" .
  
  :DesignPattern_indiviuals_decide_timing
          a                              gen:DesignPattern ;
          rdfs:label                     "Indiviuals Decide Timing" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_integrity ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_maturity , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_dependability , :ArchitecturalQuality_utility , :ArchitecturalQuality_safety , :ArchitecturalQuality_resilience , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_viability ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "Individuals decide timing letseach process decide when to take a chekpoint based on ther knowledge of their own needs. This is necessary as the checkpoint contains information from across the infrastructure or kernel or operating system and application boundaries. The effort to recreate a consistent processor view will usually be less than the time to create very large checkpoints such as those created by some global entity such as the infrastructure or kernel or operating system [Hanmer 2007] pp 174-176. Relations Error Detection [Hanmer 2007] Error Recovery Pattern pp 174-176." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_breadcrumbs
          a           gen:DesignTactic ;
          rdfs:label  "breadcrumbs" .
  
  :DesignPattern_protective_automatic_controls
          a                              gen:DesignPattern ;
          rdfs:label                     "Protective Automatic Controls" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_autonomy , :ArchitecturalQuality_availability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_reliability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_viability , :ArchitecturalQuality_safety , :ArchitecturalQuality_maturity , :ArchitecturalQuality_resilience , :ArchitecturalQuality_survivability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_affordability ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_overload_mitigation ;
          gen:wikiEntry                  "The Protective Automatic Controls tackles the problem that there are too many requests that need the finite resources available within the system. The metric being watched is throughput (the number of requests that are successfully processed). The greatest problem here is congestion which occurs when there are too many requests.  A typical bad bad response to too much requests is fro the system to begin trashing. The system takes on more than it can handle. This results in greater response times an increase in problems and a decrease in throughput. By protecting itself the system will have a lower throughput than before the automatic control started. Here it is to mention that the dropoff will not be as severe as if nothing had been done.  So automatically impose restrictions on how much work the system accepts to protect the systems ability to function. The system has techniques to mitigate the effects of too many request for service which should be invoked when the congestion is in elements that have finite limits and no unused capacity remains. Without protection the system throughput will drop in an overload due to resource contention [Hanmer 2007]pp 198-200.  Relations Error Handling [Hanmer 2007] Error Mitigation Patterns pp 198-200. Overload Mitigation [Hanmer 2007] Error Mitigation Patterns pp 198-200." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_dynamic_router
          a                              gen:DesignPattern ;
          rdfs:label                     "Dynamic Router" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_reliability ;
          gen:isAlternativeOf            :DesignTactic_routing ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_policy_enforcement
          a           gen:DesignTactic ;
          rdfs:label  "policy enforcement" .
  
  :Project_aspernnp  a  cont:Project ;
          rdfs:label  "aspernnp" .
  
  gen:hasMethodRole  a        owl:ObjectProperty ;
          rdfs:domain         gen:SoftwareEngineeringMethod ;
          rdfs:label          "isUsedBy" ;
          rdfs:range          cont:Role ;
          rdfs:subPropertyOf  gen:hasKnowledgeContext .
  
  :ArchitecturalQuality_accountability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Accountability" , "accountability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_existing_metrics , :DesignPattern_routine_audits , :DesignTactic_auditing , :DesignTactic_logging , :DesignDecision_ad-017__core_services , :DesignPattern_information_obscurity , :DesignPattern_routine_maintenance , :DesignPattern_valet_key_pattern , :DesignPattern_resource_allocation , :DesignPattern_escalation , :DesignPattern_access_control , :DesignDecision_ad-016__monitoring_agent , :DesignPattern_federated_identity_pattern , :DesignPattern_correcting_audits , :DesignPattern_identity_credentials , :DesignTactic_accounting , :DesignPattern_public_key_encryption , :DesignPattern_data_logger , :DesignTactic_authentication , :DesignDecision_ad-001_1__ecosystem_components , :DesignTactic_authorization , :DesignPattern_api_gateway , :DesignPattern_secure_channels , :DesignPattern_known_partners , :DesignPattern_limit_retries ;
          gen:relatedQuality       :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_traceability , :ArchitecturalQuality_security , :ArchitecturalQuality_integrity , :ArchitecturalQuality_auditability ;
          gen:wikiEntry            "<p><strong>Accountability</strong></p>\n<p>Accountability is the requirement that actions of an entity may be traced uniquely to that entity. Accountability is dependent on confidentiality and integrity. If confidentiality is lost for certain information (e.g. superuser password) the mechanisms implementing these objectives are easily bypassable and if system integrity is lost then confidence in the validity of the mechanisms implementing these objectives is also lost.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li>Vallabhaneni, S. Rao. Wiley CIA Exam Review, Internal Audit Activity's Role in Governance, Risk, and Control. John Wiley &amp; Sons, 2005.</li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_integratability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "integratability" , "Integratability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-24 , :DesignPattern_replication , :DesignPattern_exactly-once_delivery , :DesignPattern_timeout-based_delivery , :DesignPattern_sharding_pattern , :DesignPattern_peripheral_specialist_elements , :DesignPattern_message_bus_architecture , :DesignPattern_queuing , :DesignPattern_bulk_synchronous_parallel , :DesignPattern_load_balancing , :DesignTactic_load_distribution , :DesignPattern_transaction-based_delivery , :DesignPattern_pipe_and_filter , :DesignTactic_messaging , :DesignPattern_shared_space , :DesignDecision_kdd-01 , :DesignDecision_ad-126__benchmarks_deployment , :DesignPattern_map_reduce , :DesignPattern_at-least-once_delivery , :DesignPattern_execution_orchestrator , :DesignPattern_static_content_hosting_pattern , :DesignPattern_scatter_and_gather , :DesignDecision_kdd-26 , :DesignDecision_ad-124__clm_integration , :DesignPattern_competing_consumers , :DesignDecision_ad-101__service-oriented_architecture , :DesignDecision_ad-102__ecosystem_integration , :DesignPattern_caching ;
          gen:relatedQuality       :ArchitecturalQuality_maintainability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_interoperability ;
          gen:wikiEntry            "<p><strong>Integratability</strong></p>\n<p>Integratability is the easy integration into existing systems. It is the quality of an application that makes it easier for it to exchange data with another application. This can be done using schemes/techniques provided within itself or through underlying infrastructure.</p>" ;
          spec:requiredBy          :Domain_abstract .
  
  :SoftwareEngineeringMethod_component_fault_trees
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Component Fault Trees" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_h_fig_kai , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_safety ;
          gen:hasMethodPhase            :ProjectPhase_design , :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole             :Role_test_architect , :Role_system_architect ;
          gen:wikiEntry                 "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>A Component Fault Tree (CFT) is a digital safety twin that narrows design changes to a component and thereby reduces complexity. It supports distributed development activities by clear interface definitions and can be used to provide safety or reliability evidence to authoroties.</p></td>\n</tr>\n</tbody></table>" .
  
  :Requirement_ar-014__api_access_control
          a                          spec:Requirement ;
          rdfs:label                 "AR-014: API access control" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "<p style=\"font-size: small;\"><span style=\"line-height: normal; font-size: small;\">Security measures shall be implemented to ensure that the access to data is granted only to qualified personnel and applications.&nbsp;</span><span style=\"line-height: normal;\">The system shall apply security policies to APIs.</span></p><div style=\"position: relative; font-size: small;\"><div style=\"position: relative; font-size: small;\">\n</div>\n</div>" ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Security and Privacy" ;
          spec:requirementPurpose    "Access control" .
  
  :UseCase_redesign  a  spec:UseCase ;
          rdfs:label  "redesign" .
  
  :DesignTactic_message_type
          a           gen:DesignTactic ;
          rdfs:label  "message type" .
  
  :DesignTactic_service_orientation
          a           gen:DesignTactic ;
          rdfs:label  "service orientation" .
  
  :DesignDecision_kdd-01__layered_architecture
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-01: Layered Architecture" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<h2 style=\"text-align: justify;\" data-mce-style=\"text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Critical applications unified using Web Interface</span></h2><p class=\"MsoNormal\" style=\"text-align: justify;\" data-mce-style=\"text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">The critical client applications (Patient Browser and Viewer) will communicate with server only through Web services. The current server access mechanisms using ODBC, CIFS will be removed for these applications. </span><span lang=\"EN-US\" style=\"line-height: 1.3em; font-size: 12pt;\" data-mce-style=\"line-height: 1.3em; font-size: 12pt;\">Non-critical applications will not be brought in to Web Interface. These are:</span><span style=\"line-height: 1.3em; text-indent: -18pt; font-size: small;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt; font-size: small;\">&nbsp;</span></p><ul><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\">&nbsp; &nbsp;&nbsp;</span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">Filming</span></span></li><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\">&nbsp; &nbsp;&nbsp;</span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">SR Viewer</span></span></li><li><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\">&nbsp; &nbsp;&nbsp;</span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">Audit Viewer</span></span></li></ul><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><img style=\"border-width: 0px;\" src=\"p/SyngoPlaza/component_view.png\" alt=\"\" width=\"700\" height=\"568\" data-mce-src=\"p/SyngoPlaza/component_view.png\" data-mce-style=\"border-width: 0px;\"></p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><strong>Figure 1:</strong> Component view</span></p><p><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em; text-align: justify;\" data-mce-style=\"font-size: 12pt; line-height: 1.3em; text-align: justify;\">The f</span><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em; text-align: justify;\" data-mce-style=\"font-size: 12pt; line-height: 1.3em; text-align: justify;\">ollowing functionalities will be brought in to Web Interface:</span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: justify;\" data-mce-style=\"text-align: justify;\"><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\"><span lang=\"EN-US\">Patient Browser:</span></strong></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">QA Functionalities</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\" data-mce-style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">a.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">Patient / Study Rename</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\" data-mce-style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">b.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">Save as</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\" data-mce-style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">c.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">Series Move</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\" data-mce-style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">d.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">Study Merge</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\" data-mce-style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">e.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">Study Move</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\" data-mce-style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">f.&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\" data-mce-style=\"line-height: 1.3em; text-indent: -18pt;\">Delete</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt;\" data-mce-style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">2.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Patient/Study/Series lock / unlock</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">3.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Set/Reset Global Access</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">4.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Patient/Study/Series delete protect / unprotect</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">5.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Manual / Demo Worklist</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">6.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Set / Reset Emergency flag</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">7.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">All OEM operations available in Reporting client, but not in web client</span></span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">8.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Copy to Auto archive</span></span></p><p class=\"MsoNormal\" style=\"text-align: justify;\" data-mce-style=\"text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><strong>Note:</strong> “Copy to Filming” will have to be disabled if Filming is not available</span></p><p class=\"MsoNormal\" style=\"text-align: justify;\" data-mce-style=\"text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">Viewer:</span></strong></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Save operation</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">2.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Set Report Status in PJ</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">3.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Public DiP creation</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">4.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Mammo license related functionalities</span></span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">5.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Warning Message for Late Image Arrival</span></span></p><p class=\"MsoNormal\" style=\"text-align: justify;\" data-mce-style=\"text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">CDR:</span></strong></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Direct Import <em>(internally it uses save operation same as in Viewer)</em></span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 0cm; text-align: justify;\" data-mce-style=\"margin-left: 0cm; text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">3D Viewer:</span></strong></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Image Capture <em>(internally it uses save operation same as in Viewer)</em></span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">2.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Movie Capture <em>(internally it uses save operation same as in Viewer)</em></span></span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 0cm; text-align: justify;\" data-mce-style=\"margin-left: 0cm; text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><strong>Note:</strong> It may be worth analyzing if 3D Viewer can be removed completely or at least Image and Movie Capture options. </span></p><p class=\"MsoNormal\" style=\"text-align: justify;\" data-mce-style=\"text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">Report Viewer:</span></strong></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 0cm; text-align: justify;\" data-mce-style=\"margin-left: 0cm; text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">Report Viewer in the Reporting client doesn’t offer significant difference compared to report display in web client (as of VB20A).&nbsp;</span><span lang=\"EN-US\" style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\">Technically, it also has a problem that it does direct DICOM C-FIND queries to fetch reports.&nbsp;</span><span style=\"font-size: 12pt; line-height: 1.3em;\" data-mce-style=\"font-size: 12pt; line-height: 1.3em;\">So it is a good idea to remove the separate Report Viewer application and display reports only in Internet Explorer and PJ as done in Web client.</span></p><p class=\"MsoNormal\" style=\"text-align: justify;\" data-mce-style=\"text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">Pros of this design decision:</span></strong></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Relatively low risk </span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">2.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Effort is between Option 1 and 3</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">3.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Technical Debt is significantly reduced compared to Option 1</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">4.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Test Effort for client part will reduce for current and future versions</span></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 0cm; text-align: justify;\" data-mce-style=\"margin-left: 0cm; text-align: justify;\"><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\">Cons of this design decision:</span></strong></span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\" data-mce-style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\" data-mce-style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\" data-mce-style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Separating out Filming, Audit Viewer and SR Viewer will require some effort</span></span></p>" , "<h2 style=\"text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 14pt;\">Critical applications unified using Web Interface</span></h2>\n<p class=\"MsoNormal\" style=\"text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 12pt;\">The critical client applications (Patient Browser and Viewer) will communicate with server only through Web services. The current server access mechanisms using ODBC, CIFS will be removed for these applications. </span><span lang=\"EN-US\" style=\"line-height: 1.3em; font-size: 12pt;\">Non-critical applications will not be brought in to Web Interface. These are:</span><span style=\"line-height: 1.3em; text-indent: -18pt; font-size: small;\">&nbsp;</span></p>\n<ul>\n<li><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\">&nbsp; &nbsp;&nbsp;</span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">Filming</span></span></li>\n<li><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\">&nbsp; &nbsp;&nbsp;</span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">SR Viewer</span></span></li>\n<li><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt; font-family: Symbol;\">&nbsp; &nbsp;&nbsp;</span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">Audit Viewer</span></span></li>\n</ul>\n<p style=\"text-align: center;\"><img style=\"border-width: 0px;\" src=\"p/SyngoPlaza/component_view.png\" alt=\"\" width=\"700\" height=\"568\" /></p>\n<p style=\"text-align: center;\"><span style=\"font-size: 12pt;\"><strong>Figure 1:</strong> Component view</span></p>\n<p><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em; text-align: justify;\">The f</span><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em; text-align: justify;\">ollowing functionalities will be brought in to Web Interface:</span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: justify;\"><span style=\"font-size: 14pt;\"><strong style=\"line-height: 1.3em;\"><span lang=\"EN-US\">Patient Browser:</span></strong></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">QA Functionalities</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">a.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">Patient / Study Rename</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">b.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">Save as</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">c.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">Series Move</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">d.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">Study Merge</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">e.&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">Study Move</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt; padding-left: 30px;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">f.&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=\"EN-US\" style=\"line-height: 1.3em; text-indent: -18pt;\">Delete</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18pt; text-align: justify; text-indent: -18pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">2.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Patient/Study/Series lock / unlock</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">3.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Set/Reset Global Access</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">4.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Patient/Study/Series delete protect / unprotect</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">5.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Manual / Demo Worklist</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">6.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Set / Reset Emergency flag</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">7.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">All OEM operations available in Reporting client, but not in web client</span></span></p>\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">8.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Copy to Auto archive</span></span></p>\n<p class=\"MsoNormal\" style=\"text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 12pt;\"><strong>Note:</strong> &ldquo;Copy to Filming&rdquo; will have to be disabled if Filming is not available</span></p>\n<p class=\"MsoNormal\" style=\"text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">Viewer:</span></strong></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Save operation</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">2.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Set Report Status in PJ</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">3.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Public DiP creation</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">4.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Mammo license related functionalities</span></span></p>\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">5.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Warning Message for Late Image Arrival</span></span></p>\n<p class=\"MsoNormal\" style=\"text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">CDR:</span></strong></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Direct Import <em>(internally it uses save operation same as in Viewer)</em></span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 0cm; text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">3D Viewer:</span></strong></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Image Capture <em>(internally it uses save operation same as in Viewer)</em></span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">2.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Movie Capture <em>(internally it uses save operation same as in Viewer)</em></span></span></p>\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 0cm; text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 12pt;\"><strong>Note:</strong> It may be worth analyzing if 3D Viewer can be removed completely or at least Image and Movie Capture options. </span></p>\n<p class=\"MsoNormal\" style=\"text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">Report Viewer:</span></strong></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 0cm; text-align: justify;\"><span lang=\"EN-US\" style=\"font-size: 12pt;\">Report Viewer in the Reporting client doesn&rsquo;t offer significant difference compared to report display in web client (as of VB20A).&nbsp;</span><span lang=\"EN-US\" style=\"font-size: 12pt;\">Technically, it also has a problem that it does direct DICOM C-FIND queries to fetch reports.&nbsp;</span><span style=\"font-size: 12pt; line-height: 1.3em;\">So it is a good idea to remove the separate Report Viewer application and display reports only in Internet Explorer and PJ as done in Web client.</span></p>\n<p class=\"MsoNormal\" style=\"text-align: justify;\"><strong style=\"font-size: 14pt; line-height: 1.3em;\"><span lang=\"EN-US\">Pros of this design decision:</span></strong></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Relatively low risk </span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">2.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Effort is between Option 1 and 3</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">3.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Technical Debt is significantly reduced compared to Option 1</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">4.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Test Effort for client part will reduce for current and future versions</span></span></p>\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left: 0cm; text-align: justify;\"><span style=\"font-size: 14pt;\"><strong><span lang=\"EN-US\">Cons of this design decision:</span></strong></span></p>\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 18.0pt; text-align: justify; text-indent: -18.0pt;\"><span style=\"font-size: 12pt;\"><span lang=\"EN-US\">1.<span style=\"font: 7.0pt;\">&nbsp;&nbsp;&nbsp; </span></span><span lang=\"EN-US\">Separating out Filming, Audit Viewer and SR Viewer will require some effort</span></span></p>" ;
          spec:decisionArchitecturalView  "1. Component View" ;
          spec:hasDecisionDomain          :Domain_arch-1__client-server_interface , :Domain_arch-3__replace_atl_server ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          spec:useDecisionTactic          :DesignTactic_layering , :DesignTactic_web_interfaces .
  
  :Requirement_ar-05__effective_collaboration
          a                          spec:Requirement ;
          rdfs:label                 "AR-05: Effective collaboration" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_safiddle ;
          gen:wikiEntry              "<p><span style=\"font-size: 18.6667px;\" data-mce-style=\"font-size: 18.6667px;\">Enable the effective collaboration between project stakeholders and architects when architecting and designing software.</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Rationale:</strong> Enterprise Architect and MS Word impede effective collaboration (versioning &amp; change tracking hell).</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><br></span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Commentar</span></p>" ;
          spec:containedWithin       :UseCase_sa_collaboration ;
          spec:hasRequirementOrigin  :Domain_ar-02__incentives_for_architects ;
          spec:requirementGroup      "Collaboration and incentives" ;
          spec:requirementPurpose    "Collaborative design" .
  
  :Requirement_ar-108__common_workflow
          a                          spec:Requirement ;
          rdfs:label                 "AR-108: Common workflow" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Die\n  Interaktionen mit dem System sollen auf einem für alle Stakeholder\n  gemeinsamen Ablauf basieren." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_sr-01_09 ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Genericization" .
  
  :DesignPattern_finish_work_in_progress
          a                              gen:DesignPattern ;
          rdfs:label                     "Finish Work In Progress" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_survivability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_availability , :ArchitecturalQuality_safety , :ArchitecturalQuality_dependability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_affordability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_viability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "Ase more requests than the system can handle arrive there is an overload situation. The Finish Work In Progress Pattern follows the guideline that the system should maximize the number of requests that are handled to completion. Arriving work is categorized as either new work or related to something that is already in progress. Give priority to work that continues work that is already in progress work. The requests for new work are ignored and rejected [Hanmer 2007]pp 214-216. Relations Fault Handling [Hanmer 2007] Error Mitigation Patterns pp 214-216. Overload Mitigation [Hanmer 2007] Error Mitigation Patterns pp 214-216." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_reduce_coupling
          a                             gen:DesignTactic ;
          rdfs:label                    "reduce coupling" , "Reduce Coupling" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_installability , :ArchitecturalQuality_operability , :ArchitecturalQuality_testability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_portability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_compatibility ;
          gen:wikiEntry                 "Coupling among classes or subsystems is a measure of how interconnected those classes or subsystems are. Tight coupling means that related classes have to know internal details of each other changes ripple through the system and the system is potentially harder to understand. Consequently reduce coupling is preferable." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_composability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Composability" , "composability" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-04__process_architecture , :DesignPattern_decorator , :DesignPattern_proxy , :DesignPattern_strategy , :DesignPattern_factory_method , :DesignPattern_builder , :DesignPattern_state , :DesignPattern_pipes_and_filters_pattern , :DesignDecision_ad-001_1__ecosystem_components , :DesignPattern_visitor , :DesignPattern_command , :DesignPattern_object_pool , :DesignDecision_add-04__map-report_model , :DesignTactic_composition , :DesignPattern_composite , :DesignPattern_template_method , :DesignPattern_chain_of_responsibility , :DesignPattern_temporal_analytics , :DesignPattern_inner_join ;
          gen:relatedQuality       :ArchitecturalQuality_usability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_flexibility ;
          gen:wikiEntry            "<p><strong>Composability</strong></p>\n<p>Composability is a system design principle that deals with the inter-relationships of components. A highly composable system provides recombinant components that can be selected and assembled in various combinations to satisfy specific user requirements.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Composability\">https://en.wikipedia.org/wiki/Composability</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_at-least-once_delivery
          a                              gen:DesignPattern ;
          rdfs:label                     "At-least-once Delivery" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_operability , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_portability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_agility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_integratability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_interoperability ;
          gen:isAlternativeOf            :DesignTactic_messaging ;
          gen:wikiEntry                  "In case of failures that lead to message loss or take too long to recover from messages are retransmitted to assure they are delivered at least once.[Cloud Computing Patterns [date unknown]]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  spec:hasRequirementOrigin
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:Requirement ;
          rdfs:label          "isTypicallyRequiredIn" ;
          rdfs:subPropertyOf  spec:address .
  
  :DesignPattern_demilitarized_zone__dmz_
          a                              gen:DesignPattern ;
          rdfs:label                     "Demilitarized Zone (DMZ)" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_traceability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_immunity , :ArchitecturalQuality_security , :ArchitecturalQuality_trustability ;
          gen:isAlternativeOf            :DesignTactic_limit_access ;
          gen:wikiEntry                  "(DMZ)  [etutorials Resisting Attacks [date unknown]] A Demilitarized Zone (DMZ) is used when access must be provided to Internet services but not to a private network. It sits between the Internet and a firewall in front of the internal network. The DMZ contains devices expected to receive messages from arbitrary sources such as Web services e-mail and domain name services." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_requirement_capturing
          a           gen:DesignTactic ;
          rdfs:label  "requirement capturing" .
  
  gen:useMethodPattern
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:SoftwareEngineeringMethod ;
          rdfs:label          "isUsing" ;
          rdfs:range          gen:DesignPattern ;
          rdfs:subPropertyOf  gen:uses .
  
  gen:entryType  a     owl:DatatypeProperty ;
          rdfs:domain  gen:SoftwareEngineeringMethod ;
          rdfs:range   xsd:string .
  
  :DesignPattern_forward_compatibility
          a                              gen:DesignPattern ;
          rdfs:label                     "Forward Compatibility" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_compatibility ;
          gen:isAlternativeOf            :DesignTactic_versioning ;
          gen:wikiEntry                  "<h2>Forward Compatibility</h2>\n<div class=\"content_box\" style=\"position: relative;\"><!--BEGIN CONTENT-->\n<div class=\"intro_p\" style=\"position: relative;\">\n<p id=\"blurb\" class=\"\"><em>How can a service be forwards compatible with service consumers?</em></p></div>\n<div class=\"tabular\" style=\"position: relative;\">\n<div class=\"tabular_right\" style=\"position: relative;\">\n<h3>Problem</h3>\n</div>\n</div>\n<p>Service consumers are often unable to support newer service providers because of expectations related to message definition. The challenge is to develop an interface and messages that are accepted by older service consumers</p>\n<div class=\"figure\" style=\"position: relative;\"><img class=\"error\" src=\"http://soapatterns.org/static/images/figures/forwards_compatibility/fig1.png\" alt=\"img\"></div>\n<h3>&nbsp;</h3>\n<h3>Solution</h3>\n<p>Services that employ forwards compatible changes mean that documents or messages produced by newer producers will be compatible with older consumers. Addition of content using a language's extensibility features is the most common forwards-compatible change. Removal of content can also be a forwards-compatible change under certain circumstances.</p>\n<div class=\"figure\" style=\"position: relative;\"><img class=\"error\" src=\"http://soapatterns.org/static/images/figures/forwards_compatibility/fig2.png\" alt=\"img\"></div>\n<h3><br></h3><h3>Application</h3>\n<p>The following two options provide forward compatibility:</p>\n<ul>\n<li>Addition of Content/Versioning Identifiers via Language Extensibility</li>\n<li>Removal/Retention of Content</li>\n</ul>\n<p>Language Extensibility should be designed into the service contract. A common contract language is XML Schema, and it has support for some types of extensibility.</p>\n<p>Extensibility in the contract must include a processing model that instructs what to do with unknown extensions. Typically this means to not generate a fault when unknown extensions are encountered. The following best practices should be employed:</p>\n<ul>\n<li>Consumers must accept unknown extensions. Consumers must ignore unknown extensions; or consumers must accept and preserve unknown extensions.</li>\n<li>Forwards compatible extensions must not change the meaning of existing components.</li>\n</ul>\n<p>Finally, the future version identifiers that are compatible and should not cause faults within the system must be specified. A sample identification would be major versions are specified via the first number 1.X, 2.X etc. A minor version is the second number X.1, X.2 etc. An algorithm for indicating compatibility would be major versions are not compatible but minor versions are. For example 1.0 and 2.0 are not compatible whereas 1.0 and 1.1 are. An additional best practice around versioning is:</p>\n<ul>\n<li>A consumer of a given major version must not fault on documents that have the same major version.</li>\n</ul>\n<p>When accepting extensions, there is a decision as to whether to ignore or retain the content in question. When ignoring content the following options exist:</p>\n<ul>\n<li>Ignore the entire sub-tree under the unknown extensions starting with the unknown element</li>\n<li>Ignore the just the unknown element/attribute</li>\n</ul>\n<p>When retaining the content the unknown extensions can be separated from the known content and forwarded/stored without processing.</p>\n<h3>Impacts</h3>\n<p>Forward compatibility presents challenges in the service consumer and provider. Both need to be aware of the messages that are exchanged by examining the version identifiers. Whether the information is accepted, preserved or discarded then needs to be executed based on the versioning and content that is present. This process adds significant complexity in the design of the service contract, Message processing logic/core service logic as well as the downstream service consumers and is likely to reduce the speed of composability of services employing forwards compatibility.</p>\n</div>" ;
          spec:hasPatternDomain          :Domain_soa .
  
  :Requirement_ar-161__access_control
          a                          spec:Requirement ;
          rdfs:label                 "AR-161: Access control" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes , :Project_aspernbm ;
          gen:wikiEntry              "Das System soll die Zugriffskontrolle (Authentifizierung und Autorisierung)\n  auf die aggregierten Daten DWH-seitig ermöglichen." , "<p>The system shall&nbsp;implement means for&nbsp;access control (i.e., authentication and authorization) for accessing aggregated data in the DWH. Access control mechanisms shall be implemented within the DWH.</p>" ;
          spec:containedWithin       :UseCase_benchmarks , :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_none , :Domain_ar-014__api_access_control ;
          spec:requirementGroup      "Operational" , "Security and Privacy" ;
          spec:requirementPurpose    "Multitenancy" .
  
  :UseCase_ecosystem  a  spec:UseCase ;
          rdfs:label  "ecosystem" .
  
  :DesignTactic_isolation
          a                             gen:DesignTactic ;
          rdfs:label                    "Isolation" , "isolation" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_automatibility , :ArchitecturalQuality_stability , :ArchitecturalQuality_consistency , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_durability ;
          gen:wikiEntry                 "[Wikipedia Isolation 2014] In database systems isolation is a property that defines how/when the changes made by one operation become visible to other concurrent operations. Isolation is one of the ACID (Atomicity Consistency Isolation Durability) properties." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Requirement_nfr-1  a              spec:Requirement ;
          rdfs:label                 "NFR-1" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_smartscada ;
          gen:wikiEntry              "<p>Die Berechnung der KPIs soll (soweit m&ouml;glich) innerhalb der DWH erfolgen, unabh&auml;ngig davon, ob sie z.B. von dem Navigator oder einer externen Datenquelle importiert wurden.</p>\n<p>&nbsp;</p>\n<p>dsfsddsf</p>\n<div>&nbsp;</div>\n<div>Version next....</div>" , "The system shall support legacy systems." ;
          spec:containedWithin       :UseCase_analysis_support ;
          spec:hasRequirementOrigin  :Domain_arr-1 ;
          spec:requirementGroup      "Compatiblity" ;
          spec:requirementPurpose    "Backwards Compatibility" .
  
  :DesignPattern_canonical_data_mapper
          a                              gen:DesignPattern ;
          rdfs:label                     "Canonical Data Mapper" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_portability , :ArchitecturalQuality_interoperability ;
          gen:isAlternativeOf            :DesignTactic_message_transformation ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_enterprise_integration_patterns
          a                              gen:DesignPattern ;
          rdfs:label                     "Enterprise Integration Patterns" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_efficiency ;
          gen:isAlternativeOf            :DesignTactic_messaging ;
          gen:wikiEntry                  "<p><strong>Enterprise Integration Patterns</strong></p>\n<p>Enterprise Application Integration (EAI) is key to connecting business applications with heterogeneous systems. Over the years, architects of integration solutions have invented their own blend of patterns in a variety of ways. But most of these architectures have similarities, initiating a set of widely accepted standards in architecting integration patterns. Most of these standards are described in the <strong>Enterprise Integration Patterns Catalog</strong> available at: <a class=\"external-link\" href=\"http://www.eaipatterns.com/toc.html\" target=\"_blank\" rel=\"nofollow\">http://www.eaipatterns.com/toc.html</a>.</p>" ;
          spec:hasPatternDomain          :Domain_soa ;
          owl:sameAs                     dbr:Enterprise_Integration_Patterns .
  
  :DesignTactic_inheritance
          a                             gen:DesignTactic ;
          rdfs:label                    "inheritance" , "Inheritance" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_complexity , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_uniformity ;
          gen:wikiEntry                 "Inheritance is a way to reuse code of existing objects or to establish a subtype from an existing object or both depending upon programming language support. In classical inheritance where objects are defined by classes classes can inherit attributes and behavior from pre-existing classes called base classes superclasses parent classes or ancestor classes." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Domain_sr-01_01  a  spec:Domain ;
          rdfs:label  "sr-01.01" .
  
  :DesignPattern_materialized_view_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Materialized View Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_unknown ;
          gen:isAlternativeOf            :DesignTactic_unknown ;
          gen:wikiEntry                  "Generate prepopulated views over the data in one or more data stores when the data is formatted in a way that does not favor the required query operations. This pattern can help to support efficient querying and data extraction and improve application performance. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_interface
          a           cont:AuthorTag ;
          rdfs:label  "interface" .
  
  :DesignPattern_checksum
          a                              gen:DesignPattern ;
          rdfs:label                     "Checksum" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_resilience , :ArchitecturalQuality_dependability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_utility , :ArchitecturalQuality_robustness , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_safety , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_fault_handling , :DesignTactic_error_detection , :DesignTactic_maintain_integrity ;
          gen:wikiEntry                  "A checksum is a fixed-size datum computed from an arbitrary block of digital data (e.g. communication message or data item) for the purpose of detecting errors that may have been introduced during its transmission or storage. The integrity of the data can be checked at any later time by recomputing the checksum and comparing it with the stored one. If the checksums match the data was likely not altered. Checksums are only for the purposes of detection [Hanmer 2007]pp 129-131. Relations Error Detection [Hanmer 2007]Detection Patterns pp 129-131. Fault Handling [Hanmer 2007]Detection Patterns pp 129-131. Maintain Integrity [Hanmer 2007]Detection Patterns pp 129-131." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Checksum .
  
  :Domain_arch-1__client-server_interface
          a           spec:Domain ;
          rdfs:label  "arch-1: client-server interface" .
  
  :DesignTactic_componentization
          a           gen:DesignTactic ;
          rdfs:label  "componentization" .
  
  :Domain_visual_c__  a  spec:Domain ;
          rdfs:label  "visual c++" .
  
  :UseCase_benchmarks
          a           spec:UseCase ;
          rdfs:label  "benchmarks" .
  
  :Project_shape  a   cont:Project ;
          rdfs:label  "shape" .
  
  :ArchitecturalQuality_wrappability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "wrappability" , "Wrappability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_prototype , :DesignPattern_exactly-once_delivery , :DesignTactic_reduce_coupling , :DesignPattern_mediator , :DesignTactic_separation_of_concerns , :DesignPattern_proxy , :DesignPattern_adapter , :DesignPattern_external_configuration_store_pattern , :DesignPattern_abstract_factory , :DesignPattern_transaction-based_delivery , :DesignPattern_factory_method , :DesignTactic_messaging , :DesignPattern_timeout-based_delivery , :DesignPattern_bridge , :DesignPattern_facade , :DesignTactic_abstraction , :DesignPattern_at-least-once_delivery , :DesignPattern_dedicated_web_and_application_servers ;
          gen:relatedQuality       :ArchitecturalQuality_flexibility ;
          gen:wikiEntry            "[Kaur and Sharma 2004]Wrappability refers to the ability toenclose an object completely in any flexible material such as fabric or paper. It also means to enclose systemsor software products flexible.    Relations Abstraction [Exelis Wrapper Objects [date unknown]] When the client calls a method or modifies a property on a wrapper object it is translated through a series of abstraction layers Reduce Coupling [Wikipedia Facade Pattern 2014] The facade pattern uses wrappability in the way of wrapping the functionality of another class to reduce dependencies of outside code on the inner workings of a library." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_concentrated_recovery
          a                              gen:DesignPattern ;
          rdfs:label                     "Concentrated Recovery" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_safety , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_viability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_resilience , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_fault_handling ;
          gen:wikiEntry                  "During error recovery the system should have as few distractions as possible and the recovery time should be minimized this involves focusing all necessary resources on the recovery task. To shorten the time of recovery the system should make its own recovery its primary task. If other tasks are unaffected by the error their priority should be lowered [Hanmer 2007]pp 145-147. Relations Fault Handling [Hanmer 2007] Error Recovery Patterns pp 145-147." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_poll_monitor
          a                              gen:DesignPattern ;
          rdfs:label                     "Poll Monitor" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_debuggability , :ArchitecturalQuality_availability , :ArchitecturalQuality_observability ;
          gen:isAlternativeOf            :DesignTactic_monitoring ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_trainability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "trainability" , "Trainability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_breadcrumbs , :DesignTactic_self-descriptiveness , :DesignPattern_reflection , :DesignPattern_continual_status_reporting , :DesignPattern_offline_reporting , :DesignPattern_operational_monitoring_and_alerting ;
          gen:relatedQuality       :ArchitecturalQuality_usability , :ArchitecturalQuality_understandability ;
          gen:wikiEntry            "[Minna Pikkarainen et al. 2011]Trainability is the ease of training new users to use the product." ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_tool  a  cont:AuthorTag ;
          rdfs:label  "tool" .
  
  :DesignPattern_lock
          a                              gen:DesignPattern ;
          rdfs:label                     "Lock" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_privacy ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_utility , :ArchitecturalQuality_stability , :ArchitecturalQuality_availability , :ArchitecturalQuality_consistency , :ArchitecturalQuality_durability , :ArchitecturalQuality_performance , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_automatibility ;
          gen:isAlternativeOf            :DesignTactic_atomicity , :DesignTactic_auditing , :DesignTactic_routing , :DesignTactic_isolation , :DesignTactic_parallel_computing ;
          gen:wikiEntry                  "[Wikipedia Lock (Computer Science) 2014] Alock is a synchronization mechanism for enforcing limits on access to a resource in an environment where there are many threads of execution.A lock is designed to enforce a mutual exclusion concurrency control policy." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     <http://dbpedia.org/resource/Lock_(computer_science)> .
  
  :DesignPattern_existing_metrics
          a                              gen:DesignPattern ;
          rdfs:label                     "Existing Metrics" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_accountability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_robustness , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_availability , :ArchitecturalQuality_safety , :ArchitecturalQuality_utility , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_security , :ArchitecturalQuality_viability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_auditability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_defensibility ;
          gen:isAlternativeOf            :DesignTactic_error_detection , :DesignTactic_auditing ;
          gen:wikiEntry                  "Monitor metrics that are already included in the system and wont take the precious computing time to compute. The problem is that more resources are needed than are available to process the workload. Depending on the system design the appearance of an overload can take different forms. To judge the severity of too many resource requests use metrics already tied to the resource as an indicator of the systems overload condition [Hanmer 2007]pp 116-117. Relations Auditing [Hanmer 2007] Detection Patterns pp 116-117. Error Detection [Hanmer 2007]Detection Patterns pp 116-117." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-001__connection_control
          a           spec:Domain ;
          rdfs:label  "ar-001: connection control" .
  
  sear:hasProjectPhase
          a                   owl:ObjectProperty ;
          rdfs:domain         sear:UserAccount ;
          rdfs:range          cont:ProjectPhase ;
          rdfs:subPropertyOf  gen:has .
  
  :Domain_ar-165__portability
          a           spec:Domain ;
          rdfs:label  "ar-165: portability" .
  
  :DesignTactic_data_access
          a           gen:DesignTactic ;
          rdfs:label  "data access" .
  
  :ArchitecturalQuality_testability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Testability" , "testability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_mediator , :DesignPattern_adapter , :DesignTactic_increase_cohesion , :DesignPattern_proxy , :DesignPattern_model-view-controller , :DesignPattern_capturing_architectural_requirements , :DesignTactic_reduce_coupling , :DesignPattern_architectural_requirements_questionnaire , :DesignDecision_ad-012__deployment_schemes , :DesignPattern_bridge , :DesignPattern_facade , :DesignPattern_abstract_factory , :DesignTactic_separation_of_concerns , :DesignPattern_dedicated_web_and_application_servers , :DesignDecision_ad-001_1__ecosystem_components , :DesignPattern_layered_architecture , :DesignPattern_logging_facade , :DesignPattern_external_configuration_store_pattern ;
          gen:relatedQuality       :ArchitecturalQuality_controllability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_visibility , :ArchitecturalQuality_usability , :ArchitecturalQuality_understandability , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_observability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_completeness ;
          gen:wikiEntry            "<p class=\"docText\"><strong>Testability</strong></p>\n<p class=\"docText\">Software testability refers to the ease with which software can be made to demonstrate its faults through (typically execution-based) testing. At least 40% of the cost of developing well-engineered systems is taken up by testing. If the software architect can reduce this cost, the payoff is large.</p>\n<p class=\"docText\">In particular, testability refers to the probability, assuming that the software has at least one fault, that it will fail on its <span class=\"docEmphasis\">next</span> test execution. Of course, calculating this probability is not easy and, when we get to response measures, other measures will be used.</p>\n<p class=\"docText\">For a system to be properly testable, it must be possible to <span class=\"docEmphasis\">control</span> each component's internal state and inputs and then to <span class=\"docEmphasis\">observe</span> its outputs. Frequently this is done through use of a <span class=\"docEmphasis\">test harness</span>, specialized software designed to exercise the software under test. This may be as simple as a playback capability for data recorded across various interfaces or as complicated as a testing chamber for an engine.</p>\n<p class=\"docText\"><strong>Source:</strong></p>\n<ul>\n<li><a href=\"http://etutorials.org/Programming/Software+architecture+in+practice,+second+edition/Part+Two+Creating+an+Architecture/Chapter+4.+Understanding+Quality+Attributes/4.4+Quality+Attribute+Scenarios+in+Practice/\">http://etutorials.org/Programming/Software+architecture+in+practice,+second+edition/ Part+Two+Creating+an+Architecture/Chapter+4.+Understanding+Quality+Attributes/ 4.4+Quality+Attribute+Scenarios+in+Practice/</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :SoftwareEngineeringMethod_coded_processing
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Coded processing" , "Coded Processing" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor , :Author_ivanov_sergey , :Author_sobolev_sergey , :Author_filippov_sergey ;
          gen:hasKnowledgeProject       :Project_isdwiki , :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_safety ;
          gen:hasMethodPhase            :ProjectPhase_design ;
          gen:hasMethodRole             :Role_system_architect ;
          gen:hasMethodTag              :AuthorTag_technical_realization_plan ;
          gen:methodContext             "Safety-critical systems (IEC 61508, EN 50128, DO-178)" ;
          gen:methodInput               "Source code (C-language)" , "Source code (SCL-based)" ;
          gen:methodOutput              "Source code (SCL-based)" , "Source code (C-language)" ;
          gen:methodPurpose             "Transient fault detection" , "Error detection" ;
          gen:wikiEntry                 "<table class=\"confluenceTable tablesorter tablesorter-default\"><tbody><tr><td class=\"confluenceTd\"><p>For mission- or safety-critical systems software transient faults detection methods are needed.</p></td>\n</tr>\n</tbody></table><p><em><span class=\"confluence-link\">Related projected were related to Motion Control and Factory Automation.<br></span></em></p><p><span class=\"confluence-embedded-file-wrapper\"><img class=\"confluence-embedded-image\" src=\"https://wiki.ct.siemens.de/download/attachments/88641549/codedproc.png?version=1&amp;modificationDate=1439362744760&amp;api=v2\" data-image-src=\"/download/attachments/88641549/codedproc.png?version=1&amp;modificationDate=1439362744760&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"102269107\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"codedproc.png\" data-base-url=\"https://wiki.ct.siemens.de\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"88641549\" data-linked-resource-container-version=\"14\"></span><span class=\"confluence-embedded-file-wrapper\"><img class=\"confluence-embedded-image\" src=\"https://wiki.ct.siemens.de/download/attachments/88641549/codedproc2.png?version=1&amp;modificationDate=1439363104587&amp;api=v2\" data-image-src=\"/download/attachments/88641549/codedproc2.png?version=1&amp;modificationDate=1439363104587&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"102269110\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"codedproc2.png\" data-base-url=\"https://wiki.ct.siemens.de\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"88641549\" data-linked-resource-container-version=\"14\"></span></p><h1 id=\"Codedprocessing-Description\">Description&nbsp;</h1><p>Coded processing is a technology that uses software redundancy to detect mainly hardware faults. Main principles were described by P. Forin in his publication \"Vital coded microprocessor principles and application for various transit systems\" in 1989.The main error scenario is a bit flip in hardware (memory, CPU registers) which may cause faulty values (operands) or operator or function calls:</p><div class=\"O1\" style=\"position: relative;\"><ul><li>Operator error (e.g. multiplication instead of addition)<ul><li>program: a = x + y;&nbsp;&nbsp;&nbsp; &nbsp; executed: a = x * y;</li></ul></li></ul></div><div class=\"O2\" style=\"position: relative;\"><ul><li>Modified operand error <br><ul><li>program: a = x + 5;&nbsp; &nbsp; &nbsp; executed: a = x + 37;</li></ul></li></ul></div><div class=\"O2\" style=\"position: relative;\"><ul><li>Wrong operand error (wrong variable is processed)<ul><li>program: a = x + 1;&nbsp; &nbsp; executed: a = y + 1;</li></ul></li></ul></div><div class=\"O1\" style=\"position: relative;\"><ul><li>Operation error (operation produces wrong result)<ul><li>program: a =&nbsp; x + y ;&nbsp;&nbsp; &nbsp; executed: a = (x + y) + 32;</li></ul></li></ul></div><div class=\"O1\" style=\"position: relative;\"><ul><li>Lost update (use of outdated values)<ul><li>program: a = x + y ;&nbsp;&nbsp; &nbsp; executed: x + y;</li></ul></li></ul></div><p>Basic idea of coded processing is to transform original operations with their analogues which operate in protected space, arithmetic (AN-)codes are used: each operand and operation gets a signature during design time and those signatures are checked in runtime.</p><p>Xc = A · Xf + Bx + D</p><ul><li class=\"O1\">Xc:&nbsp; Coded value</li><li class=\"O1\">A: &nbsp; Large prime number that generates the code &nbsp; subset</li><li class=\"O1\">Xf: &nbsp; Functional / unencoded value</li><li class=\"O1\">Bx: Signal specific signature, generated at design time</li><li class=\"O1\">D: &nbsp; Timestamp, updated in runtime<span style=\"line-height: 1.3em; font-size: small;\">&nbsp;</span></li></ul><p><strong>Decoding</strong></p><p>Xf = (Xc – (Bx + D)) / A<span style=\"line-height: 1.3em; font-size: small;\">&nbsp;</span></p><p><strong>Validation through congruency</strong></p><p>Xc mod A = Bx + D<span style=\"line-height: 1.3em; font-size: small;\">&nbsp;</span></p><p class=\"O1\"><strong>Example: addition</strong></p><div class=\"O1\" style=\"position: relative;\">Xc = A · Xf + Bx + D</div><div class=\"O1\" style=\"position: relative;\">Yc = A · Yf + By + D</div><p>zc&nbsp; = addc(Xc, Yc)</p><p>&nbsp; = Xc + Yc – D</p><p>&nbsp; = A · (Xf + Yf) + (Bx + By) + D</p><p>&nbsp; = A · Zf + Bz + D</p><p class=\"O1\"><br>Once a signature check fails, the program goes into error handling function where most likely safe operation stop is triggered.<span style=\"line-height: 1.3em; font-size: small;\">&nbsp;</span></p><h2 id=\"Codedprocessing-Context\">Context</h2><p>This technology is useful for safety relevant systems where high diagnostic coverage (DC, in terms of IEC 61508) is required. Coded processing allows for very high DC can be demonstrated.</p><h2 id=\"Codedprocessing-Inputs\">Inputs&nbsp;</h2><p>Currently as input two kinds of source code is supported: SCL-based (for SIMATIC environment) and C language (automatic transformation of C source code is implemented).</p><p>In both cases restrictions on language constructions are placed: e.g. arrays and pointers are not supported.</p><h2 id=\"Codedprocessing-Outputs\">Outputs&nbsp;</h2><p>Output is encoded source code usually in the same language (C for C and SCL for SCL) which could be then compiled by standard compiler and run on standard hardware.</p><p>Encoding can be done partially automatically and manually, but manual translation is very challenging.</p><h2 id=\"Codedprocessing-Procedure\">Procedure</h2><p class=\"confluence-link\">For C source code workflow is the following: make sure the source code is C89 and complies with MISRA C rules. Run the encoder, if unsupported constructions are detected, the file will have to be rewritten. Encoded operations library should be used (with basic operations already encoded), the library should be statically linked with the executable. The executable can then be run on target platform.</p><h2 id=\"Codedprocessing-Advantagesanddisadvantages\">Advantages and disadvantages</h2><p>Main advantage of the technology is in using standard hardware for safety critical applications with quite high safety requirements (SIL3). There is no need in having external voter, although special architecture patterns are recommended for higher safety (dual rail principle - running in parallel encoded and not encoded programs which generating finally e.g. PROFIsafe telegrams).</p><p>Disadvantage of this technology is that not any algorithm / source file can be encoded, the encoded execution introduces significant performance overhead. Due to this it is not recommended to encode complete application, rather only the most critical parts.</p><h2 id=\"Codedprocessing-Example\">Example&nbsp;</h2><p>The method can be applied for monitoring algorithms (e.g. checks that no parameters exceed safety constraints).</p><h2 id=\"Codedprocessing-Variants\">Variants</h2><p class=\"confluence-link\">Alternative solution is e.g. lock step redundancy implemented on hardware level or N-out of -M redundancy with an external voting component.</p>" , "For mission- or safety-critical systems software transient faults detection methods are needed.&nbsp;Coded processing is a technology that uses software redundancy to detect mainly hardware faults." .
  
  :DesignTactic_web_interfaces
          a           gen:DesignTactic ;
          rdfs:label  "web interfaces" .
  
  :Author_ulrich_andreas
          a           cont:Author ;
          rdfs:label  "ulrich andreas" .
  
  :ArchitecturalQuality_analyzability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Analyzability" , "analyzability" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor , :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_add-02__schemas_for_faceted_search , :DesignPattern_limit_retries , :DesignTactic_separation_of_concerns , :DesignPattern_resource_allocation , :DesignPattern_attribute-value_system , :DesignTactic_accounting , :DesignTactic_logging , :DesignDecision_add-03__concept_linkage , :DesignPattern_data_logger , :DesignPattern_identity_credentials , :DesignTactic_feasibility_study ;
          gen:relatedQuality       :ArchitecturalQuality_maintainability ;
          gen:wikiEntry            "<div><b>Qualitative Assessment</b></div><div><br></div>[ISO Systems and software engineering -- Systems and software Quality Requirements and Evaluation 2001] The ISO/9126 standard for software quality defines analyzability a sub-characteristic of maintainability as the capability of the software product to be diagnosed for deficiencies or causes of failures in the software or for the parts to be modified to be identified.   Measureability Observability Readability  Relations  Accounting For analyzing a software product record-keeping of actions is needed which can be done with accounting. Logging To analyze a software product recording events can also be helpful that can be done with logging." , "[ISO Systems and software engineering -- Systems and software Quality Requirements and Evaluation 2001] The ISO/9126 standard for software quality defines analyzability a sub-characteristic of maintainability as the capability of the software product to be diagnosed for deficiencies or causes of failures in the software or for the parts to be modified to be identified.   Measureability Observability Readability  Relations  Accounting For analyzing a software product record-keeping of actions is needed which can be done with accounting. Logging To analyze a software product recording events can also be helpful that can be done with logging." ;
          spec:requiredBy          :Domain_abstract .
  
  :ArchitecturalQuality_operability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Operability" , "operability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_scatter_and_gather , :DesignPattern_external_configuration_store_pattern , :DesignPattern_static_content_hosting_pattern , :DesignPattern_adapter , :DesignPattern_pipe_and_filter , :DesignTactic_messaging , :DesignPattern_exactly-once_delivery , :DesignPattern_competing_consumers , :DesignPattern_sharding_pattern , :DesignTactic_load_distribution , :DesignPattern_transaction-based_delivery , :DesignPattern_map_reduce , :DesignPattern_replication , :DesignPattern_timeout-based_delivery , :DesignPattern_layered_architecture , :DesignPattern_bridge , :DesignPattern_load_balancing , :DesignPattern_bulk_synchronous_parallel , :DesignTactic_reduce_coupling , :DesignPattern_mediator , :DesignPattern_shared_space , :DesignPattern_facade , :DesignPattern_peripheral_specialist_elements , :DesignPattern_execution_orchestrator , :DesignPattern_queuing , :DesignPattern_dedicated_web_and_application_servers , :DesignPattern_at-least-once_delivery , :DesignPattern_caching , :DesignPattern_proxy ;
          gen:relatedQuality       :ArchitecturalQuality_maintainability ;
          gen:wikiEntry            "Operabilityis the ability to establish an equipment a system or a whole industrial installation in a safe and reliable functioning conditionbased onpre-defined requirements [Techfloats Techmix 2014]. In a multiple systems environment this includes the working together of products systems and business processes toaccomplish a common task. [Donald G. Firesmith et al. 2008]Operability the external quality characteristic that is the degree of ease of operating (as opposed to using) the system or architectural component.  Relations The Load Distribution - Tactic could provide the working together of different devices and systems to provide a system in a whole industrial installation in a reliable working condition it also can share workload between different devices. Reduce coupling could mneasure how interconnected classes and subsystems are which could help out by achieving connectivity and functionality between systems" ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_value  a  cont:AuthorTag ;
          rdfs:label  "value" .
  
  :Project_asperntest
          a           cont:Project ;
          rdfs:label  "asperntest" .
  
  :Domain_perf-1__performance_requirements
          a           spec:Domain ;
          rdfs:label  "perf-1: performance requirements" .
  
  :Domain_ar-153__scalability
          a           spec:Domain ;
          rdfs:label  "ar-153: scalability" .
  
  :DesignTactic_queueing
          a                             gen:DesignTactic ;
          rdfs:label                    "queueing" , "Queueing" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_controllability , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility ;
          gen:wikiEntry                 "Incoming requests are collected and storedbefore serviced in a specified order (e.g. LIFO FIFO)." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignDecision_add-02__schemas_for_faceted_search
          a                               spec:DesignDecision ;
          rdfs:label                      "ADD-02: Schemas for faceted search" ;
          gen:hasKnowledgeAuthor          :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_safiddle ;
          gen:wikiEntry                   "<p><span style=\"font-size: 14pt;\"><strong>Schemas for faceted search</strong></span></p>\n<p><span style=\"font-size: 14pt;\">Implement&nbsp;faceted search and navigation for NFR Engineering Repository. Use schemas to classify content.</span></p>\n<p><span style=\"font-size: 14pt;\">The&nbsp;content is decomposed into:</span></p>\n<ul>\n<li><span style=\"font-size: 18.6667px;\">A free text part</span></li>\n<li><span style=\"font-size: 18.6667px;\">A <em>n-tuple</em> of values corresponding to&nbsp;a set of n schema-related classifiers (see table below).</span></li>\n</ul>\n<p><span style=\"font-size: 18.6667px;\">The free text part is identified using an URI, which is also used as its database identifier.&nbsp;</span><span style=\"font-size: 18.6667px;\">Each content item is linked to a free text part via its URI.&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">The free text part and the n-tuple are stored in separate database tables (or NoSQL collections).&nbsp;</span></p>\n<p><strong><span style=\"font-size: 14pt;\">Schemas</span></strong></p>\n<p><span style=\"font-size: 14pt;\">The following schemas support an architectural design based on Kruchten's <strong>4+1 views</strong> and <strong>decision view</strong> models.</span></p>\n<p><span style=\"font-size: 14pt;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://doi.ieeecomputersociety.org/cms/Computer.org/dl/mags/so/2009/02/figures/mso20090200363.gif\" alt=\"\" width=\"700\" height=\"474\" /></span></p>\n<table border=\"1px\" width=\"100%\" cellpadding=\"5px\">\n<tbody>\n<tr>\n<td><strong><span style=\"font-size: 12pt;\">Name</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Classifier 1</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Classifier 2</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Classifier 3</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Classifier 4</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Votes</span></strong></td>\n</tr>\n<tr>\n<td><em><span style=\"font-size: 12pt;\">Requirements&nbsp;</span></em></td>\n<td><span style=\"font-size: 12pt;\">Group&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">Related (requirement)</span></td>\n<td><span style=\"font-size: 12pt;\">Use Case</span></td>\n<td><span style=\"font-size: 12pt;\">Purpose</span></td>\n<td><span style=\"font-size: 12pt;\">Priority</span></td>\n</tr>\n<tr>\n<td><em><span style=\"font-size: 12pt;\">Design Decisions</span></em></td>\n<td><span style=\"font-size: 12pt;\">Architectural View</span></td>\n<td><span style=\"font-size: 12pt;\">Requirement&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">Architectural Quality</span></td>\n<td><span style=\"font-size: 12pt;\">Design Tactic</span></td>\n<td><span style=\"font-size: 12pt;\">Estimated impact on quality attributes</span></td>\n</tr>\n<tr>\n<td><em><span style=\"font-size: 12pt;\">Design Patterns</span></em></td>\n<td><span style=\"font-size: 12pt;\">Content Type</span></td>\n<td><span style=\"font-size: 12pt;\">Domain&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">NFR&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">Design Tactic</span></td>\n<td><span style=\"font-size: 12pt;\">Estimated impact on quality attributes</span></td>\n</tr>\n<tr>\n<td><em><span style=\"font-size: 12pt;\">Architectural Qualities</span></em></td>\n<td><span style=\"font-size: 12pt;\">Content Type</span></td>\n<td><span style=\"font-size: 12pt;\">Domain&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">Related Qualities</span></td>\n<td><span style=\"font-size: 12pt;\">Cluster </span></td>\n<td><span style=\"font-size: 12pt;\">Content quality/maturity</span>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 14pt;\">In addition to the classifiers above, each content item also contains the name of the user that added it.&nbsp;</span></p>\n<p><span style=\"font-size: 14pt;\">Example:</span></p>\n<p><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">classifier-values: {<br /> </span></p>\n<p style=\"padding-left: 30px;\"><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">\"nfr_name\": \"Accessibility\",<br /> \"tactic_name\": \"Barrier-free Access\",<br /> \"pattern_name\": \"Interpretor\",<br /> \"context_title\": \"\",<br /> \"context_type\": \"Definition\",<br /> \"context_url\": \"https://workspace.cee.siemens.com/content/00000102/Wiki/Interpretor.aspx?masterview=nwacollabprint\",<br /> \"domain\": \"Abstract\",<br /> \"author\": \"CT SAD-SRA\",<br /> \"ups\": 0,<br /> \"schema\": \"Design Patterns\",<br /> \"project\": \"wiki\"<br /></span></p>\n<p><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">}</span></p>\n<p><span style=\"font-family: 'courier new', courier, monospace;\"><span style=\"font-size: 16px;\">text-content:&nbsp;</span></span><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">{<br /></span></p>\n<p style=\"padding-left: 30px;\"><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">\"context_url\": \"https://workspace.cee.siemens.com/content/00000102/Wiki/Interpretor.aspx?masterview=nwacollabprint\",<br />\"content\": \"In computer programming, the interpreter pattern is a design pattern that specifies how to evaluate sentences in a language. The basic idea is to have a class for each symbol (terminal or nonterminal) in a specialized computer language. The syntax tree of a sentence in the language is an instance of the composite pattern and is used to evaluate (interpret) the sentence for a client.\"<br /></span></p>\n<p><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">}</span></p>" , "<p><span style=\"font-size: 14pt;\"><strong>Schemas for faceted search</strong></span></p>\n<p><span style=\"font-size: 14pt;\">Implement&nbsp;faceted search and navigation for NFR Engineering Repository. Use schemas to classify content.</span></p>\n<p><span style=\"font-size: 14pt;\">The&nbsp;content is decomposed into:</span></p>\n<ul>\n<li><span style=\"font-size: 18.6667px;\">A free text part</span></li>\n<li><span style=\"font-size: 18.6667px;\">A <em>n-tuple</em> of values corresponding to&nbsp;a set of n schema-related classifiers (see table below).</span></li>\n</ul>\n<p><span style=\"font-size: 18.6667px;\">The free text part is identified using an URI, which is also used as its database identifier.&nbsp;</span><span style=\"font-size: 18.6667px;\">Each content item is linked to a free text part via its URI.&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">The free text part and the n-tuple are stored in separate database tables (or NoSQL collections).&nbsp;</span></p>\n<p><strong><span style=\"font-size: 14pt;\">Schemas</span></strong></p>\n<p><span style=\"font-size: 14pt;\">The following schemas support an architectural design based on Kruchten's <strong>4+1 views</strong> and <strong>decision view</strong> models.</span></p>\n<p><span style=\"font-size: 14pt;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://doi.ieeecomputersociety.org/cms/Computer.org/dl/mags/so/2009/02/figures/mso20090200363.gif\" alt=\"\" width=\"700\" height=\"474\"></span></p>\n<table border=\"1px\" width=\"100%\" cellpadding=\"5px\">\n<tbody>\n<tr>\n<td><strong><span style=\"font-size: 12pt;\">Name</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Classifier 1</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Classifier 2</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Classifier 3</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Classifier 4</span></strong></td>\n<td><strong><span style=\"font-size: 12pt;\">Votes</span></strong></td>\n</tr>\n<tr>\n<td><em><span style=\"font-size: 12pt;\">Requirements&nbsp;</span></em></td>\n<td><span style=\"font-size: 12pt;\">Group&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">Related (requirement)</span></td>\n<td><span style=\"font-size: 12pt;\">Use Case</span></td>\n<td><span style=\"font-size: 12pt;\">Purpose</span></td>\n<td><span style=\"font-size: 12pt;\">Priority</span></td>\n</tr>\n<tr>\n<td><em><span style=\"font-size: 12pt;\">Design Decisions</span></em></td>\n<td><span style=\"font-size: 12pt;\">Architectural View</span></td>\n<td><span style=\"font-size: 12pt;\">Requirement&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">Architectural Quality</span></td>\n<td><span style=\"font-size: 12pt;\">Design Tactic</span></td>\n<td><span style=\"font-size: 12pt;\">Estimated impact on quality attributes</span></td>\n</tr>\n<tr>\n<td><em><span style=\"font-size: 12pt;\">Design Patterns</span></em></td>\n<td><span style=\"font-size: 12pt;\">Content Type</span></td>\n<td><span style=\"font-size: 12pt;\">Domain&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">NFR&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">Design Tactic</span></td>\n<td><span style=\"font-size: 12pt;\">Estimated impact on quality attributes</span></td>\n</tr>\n<tr>\n<td><em><span style=\"font-size: 12pt;\">Architectural Qualities</span></em></td>\n<td><span style=\"font-size: 12pt;\">Content Type</span></td>\n<td><span style=\"font-size: 12pt;\">Domain&nbsp;</span></td>\n<td><span style=\"font-size: 12pt;\">Related Qualities</span></td>\n<td><span style=\"font-size: 12pt;\">Cluster </span></td>\n<td><span style=\"font-size: 12pt;\">Content quality/maturity</span>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 14pt;\">In addition to the classifiers above, each content item also contains the name of the user that added it.&nbsp;</span></p>\n<p><span style=\"font-size: 14pt;\">Example:</span></p>\n<p><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">classifier-values: {<br> </span></p>\n<p style=\"padding-left: 30px;\"><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">\"nfr_name\": \"Accessibility\",<br> \"tactic_name\": \"Barrier-free Access\",<br> \"pattern_name\": \"Interpretor\",<br> \"context_title\": \"\",<br> \"context_type\": \"Definition\",<br> \"context_url\": \"https://workspace.cee.siemens.com/content/00000102/Wiki/Interpretor.aspx?masterview=nwacollabprint\",<br> \"domain\": \"Abstract\",<br> \"author\": \"CT SAD-SRA\",<br> \"ups\": 0,<br> \"schema\": \"Design Patterns\",<br> \"project\": \"wiki\"<br></span></p>\n<p><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">}</span></p>\n<p><span style=\"font-family: 'courier new', courier, monospace;\"><span style=\"font-size: 16px;\">text-content:&nbsp;</span></span><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">{<br></span></p>\n<p style=\"padding-left: 30px;\"><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">\"context_url\": \"https://workspace.cee.siemens.com/content/00000102/Wiki/Interpretor.aspx?masterview=nwacollabprint\",<br>\"content\": \"In computer programming, the interpreter pattern is a design pattern that specifies how to evaluate sentences in a language. The basic idea is to have a class for each symbol (terminal or nonterminal) in a specialized computer language. The syntax tree of a sentence in the language is an instance of the composite pattern and is used to evaluate (interpret) the sentence for a client.\"<br></span></p>\n<p><span style=\"font-size: 12pt; font-family: 'courier new', courier, monospace;\">}</span></p>" ;
          spec:decisionArchitecturalView  "Logical view" ;
          spec:hasDecisionDomain          :Domain_ar-07__pattern-oriented_architecture , :Domain_ar-03__reuse_requirements_and_decisions , :Domain_ar-02__incentives_for_architects , :Domain_ar-06__specialized_tool_misuse_prevention ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_analyzability , :ArchitecturalQuality_usability , :ArchitecturalQuality_traceability ;
          spec:useDecisionTactic          :DesignTactic_classification , :DesignTactic_facetization .
  
  :DesignPattern_delightfully_parallel_loop
          a                              gen:DesignPattern ;
          rdfs:label                     "Delightfully Parallel Loop" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_performance , :ArchitecturalQuality_utility ;
          gen:isAlternativeOf            :DesignTactic_parallel_computing ;
          gen:wikiEntry                  "Programs that fit this pattern are able to run loops/iterations well in parallel because the many individual operations being performed may operate in relative independence with few or no dependencies between operations such that they can be carried out in parallel efficiently [MSDN Parallel Loups 2014]. The syntax of a parallel loop is very similar to the for and foreach loops which are very common but the parallel loop runs faster on a computer that has available cores. Another difference is that unlike a sequential loop the order of execution isnt defined for a parallel loop. Sometimes two steps take place in the opposite order than they would if the loop were sequential. The only guarantee is that all of the loops iterations will have run by the time the loop finishes. Changing a sequential loop into a parallel loop is easy. However its also easy to use a parallel loop when you shouldnt. This is because it can be hard to tell if the steps are independent of each other. It takes practice to learn how to recognize when one step is dependent on another step. Sometimes using this pattern on a loop with dependent steps causes the program to behave in a completely unexpected way and perhaps to stop responding orit introduces a subtle bug that only appears once in a million runs [MSDN Parallel Loups 2014]." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_offline_reporting
          a                              gen:DesignPattern ;
          rdfs:label                     "Offline reporting" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_learnability , :ArchitecturalQuality_likeability , :ArchitecturalQuality_usability , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_trainability , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_installability , :ArchitecturalQuality_understandability ;
          gen:isAlternativeOf            :DesignTactic_self-descriptiveness ;
          gen:wikiEntry                  "[Dysonand Longshaw 2004] pp. 317.319. Offline reporting is about extracting important information from a system without impacting the ability of the system to continue working as it was. We implement a high-capability Internet technology system that gathers data as it processes user transactions. It contains useful business information. To make it possible we have to periodically snapshot data that needs to ba analysed. The snapshot has to be exported from the live system environment sp that every reporting can be carried out offline. It only applies to software.   Relations Self-descriptiveness To extract important information from a system without impacting the ability of a system work Self-descriptiveness would be right so the system describes itself." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_fault_tolerance
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "fault tolerance" , "Fault Tolerance" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_leaky_bucket_counter , :DesignTactic_error_handling , :DesignPattern_rollforward , :DesignPattern_rollback , :DesignPattern_return_to_reference_point , :DesignPattern_limit_retries , :DesignPattern_reassess_overload_decision , :DesignPattern_3-category_logging , :DesignPattern_checkpoint , :DesignPattern_checksum , :DesignPattern_resource_allocation , :DesignPattern_overload_toolboxes , :DesignPattern_fault_correlation , :DesignPattern_error_handler , :DesignPattern_recovery_blocks , :DesignPattern_escalation , :DesignPattern_marked_data , :DesignPattern_maintenance_interface , :DesignPattern_memento , :DesignPattern_quarantine , :DesignPattern_voting , :DesignPattern_minimize_human_intervention , :DesignPattern_restart , :DesignPattern_protective_automatic_controls , :DesignPattern_fresh_work_before_stale , :DesignPattern_someone_in_charge , :DesignPattern_error_correcting_code , :DesignPattern_fault_observer , :DesignPattern_realistic_threshold , :DesignPattern_similarity_detection , :DesignPattern_parameter_checking , :DesignTactic_overload_mitigation , :DesignPattern_circuit_breaker , :DesignPattern_throttling_pattern , :DesignTactic_separation_of_concerns , :DesignTactic_error_detection , :DesignPattern_correcting_audits , :DesignPattern_routine_exercises , :DesignPattern_reproducible_error , :DesignPattern_watchdog , :DesignPattern_routine_audits , :DesignPattern_retry_pattern , :DesignPattern_redundancy , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_deferrable_work , :DesignPattern_fault_diagnosis , :DesignPattern_revise_procedure , :DesignPattern_heartbeat , :DesignPattern_concentrated_recovery , :DesignPattern_reconfiguration , :DesignPattern_load_shedding , :DesignPattern_queue_for_resources , :DesignPattern_units_of_mitigation , :DesignPattern_reinitialization , :DesignPattern_indiviuals_decide_timing , :DesignPattern_workload_sharing , :DesignPattern_routine_maintenance , :DesignPattern_compensation , :DesignPattern_flyweight , :DesignPattern_acknowledgement , :DesignPattern_fault_isolation , :DesignPattern_failover , :DesignPattern_software_update , :DesignPattern_small_patches , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_temporal_analytics , :DesignPattern_riding_over_transients , :DesignTactic_fault_handling , :DesignPattern_reintegration , :DesignPattern_static_content_hosting_pattern , :DesignPattern_existing_metrics , :DesignPattern_compensating_transaction_pattern , :DesignPattern_finish_work_in_progress , :DesignPattern_maximize_human_participation , :DesignPattern_claim_check , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_slow_it_down , :DesignPattern_error_containment_barrier , :DesignPattern_root_cause_analysis , :DesignPattern_traffic_shaping , :DesignPattern_remote_storage , :DesignPattern_expansive_automatic_controls , :DesignPattern_treshold_analysis , :DesignPattern_final_handling ;
          gen:relatedQuality       :ArchitecturalQuality_maturity , :ArchitecturalQuality_robustness , :ArchitecturalQuality_resilience , :ArchitecturalQuality_usability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability ;
          gen:wikiEntry            "The ability of a system to continue to perform its function (possibly at a reduced performance level) when one or more of its components has failed.  [Laura L. Pullum. 2001]is using a variety of software methods faults (whose origins are related to software) are detected and recovery is accomplished.  [Israel Koren C. Mani Krishna. 2007]Fault Toleranc is an exercice in exploiting and managing redundancy. Redundancy is the property of having more of a resource than is minimally necessary to do the job at hand.    Relations Error Detection [Hanmer 2007]Error Detection p. 84" ;
          spec:requiredBy          :Domain_abstract .
  
  sear:hasProject  a          owl:FunctionalProperty , owl:ObjectProperty ;
          rdfs:domain         sear:UserAccount ;
          rdfs:range          cont:Project ;
          rdfs:subPropertyOf  gen:has .
  
  :Requirement_cust-3__server_switching
          a                          spec:Requirement ;
          rdfs:label                 "CUST-3: Server Switching" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Easier switching of\n  client from one server to another:</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">This should allow same client to be easily switched from server in\n  one site to a different syngo.plaza server in another site</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Customer / SCM" ;
          spec:requirementPurpose    "Server switching" .
  
  :ArchitecturalQuality_verifiability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "verifiability" , "Verifiability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_existing_metrics , :DesignPattern_resource_allocation , :DesignPattern_data_logger , :DesignTactic_accounting , :DesignTactic_auditing , :DesignPattern_routine_maintenance , :DesignPattern_routine_audits , :DesignPattern_escalation , :DesignPattern_correcting_audits , :DesignPattern_limit_retries , :DesignPattern_access_control , :DesignPattern_identity_credentials ;
          gen:relatedQuality       :ArchitecturalQuality_trustability , :ArchitecturalQuality_correctness ;
          gen:wikiEntry            "Verifiability means that a data or information consumer can check the trustwortiness reliability and correctnessof the information source.  [Philip A. Laplante 2007]A software system is verifiable if its properties including all of those previsoulsy introduced can be verified easily.  [Dario Catalano et al. 2011]AnFunctional Encryptionscheme has verifiability if it is possible to verify whether a ciphertext will be recovered into the same decryption result under two different decryption keys with two specific attributes." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_software_update
          a                              gen:DesignPattern ;
          rdfs:label                     "Software Update" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_safety , :ArchitecturalQuality_security , :ArchitecturalQuality_reliability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_survivability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_availability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_maturity , :ArchitecturalQuality_recoverability ;
          gen:isAlternativeOf            :DesignTactic_maintain_integrity , :DesignTactic_error_handling ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ProjectPhase_analysis
          a           cont:ProjectPhase ;
          rdfs:label  "analysis" .
  
  sear:hasQueryElement
          a                   owl:ObjectProperty ;
          rdfs:domain         sear:SearchStep ;
          rdfs:range          sear:QueryElement ;
          rdfs:subPropertyOf  gen:has .
  
  :DesignPattern_pipe_and_filter
          a                              gen:DesignPattern ;
          rdfs:label                     "Pipe and Filter" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_integratability , :ArchitecturalQuality_mobility , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_operability , :ArchitecturalQuality_performance , :ArchitecturalQuality_reliability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_sustainability ;
          gen:isAlternativeOf            :DesignTactic_load_distribution , :DesignTactic_parallel_computing , :DesignTactic_producer_consumer ;
          gen:wikiEntry                  "[MSDN Pipes and Filters 2014] The Pipe and Filter patternaims to distribute load by utilizingall workers connected by pipes where dataflows across. The concept is also referred to as a pipeline which consists of a chain of processing elements arranged so that the output of each element is the input of the next. This pattern is a very common EAI pattern.  The following figure illustrates the pattern.      A solutionusing pipe and filter     Data Flow Programming Pipeline" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_kdd-13__development_environment
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-13: Development Environment" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><b style=\"font-size: small;\">Development Environment</b></p><p style=\"font-size: small;\">For the implementation of the Phase265 part of the railway automation process, the following tools have been used:&nbsp;</p><p style=\"font-size: small;\"><b style=\"font-size: small;\">Camunda v7.4: </b>Camunda is a Java-based BPMN engine which links BPMN diagrams to Java classes that handle events and manage process variables.&nbsp;</p><p style=\"font-size: small;\"><b style=\"font-size: small;\">JBoss Application Server v7.2:</b> The Camunda process is packed as a WAR (Web ARchive) file, which includes the BPMN files (an XML representation of the process) and the Java classes managing the events and process variables. The JBoss server is the web server used to host the process WAR files as well as the Camunda process engine WAR files.&nbsp;</p><p style=\"font-size: small;\"><b style=\"font-size: small;\">Eclipse Juno:</b> This version of Eclipse was used for the development of the Java classes for implementing event handlers and managing process variables.</p><p style=\"font-size: small;\"><b style=\"font-size: small;\">Java v1.7:</b> This version of java is used both in Eclipse (at compile time) and by JBoss at runtime. Java 1.7 allows for using some of the latest features of Java, such as annotations and the Java persistence API (JPA).</p><p style=\"font-size: small;\"><b style=\"font-size: small;\">Apache POI v3.14:</b> A library that supports the generation of MS Word documents from Java code. Alternatively, the generation of HTML code could be considered if POI turns out not to fulfill the development requirements (flexibility, versatility, rapid development, etc.).</p>" ;
          spec:decisionArchitecturalView  "2. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-01__process_automation ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_maintainability .
  
  :AuthorTag_artifacts
          a           cont:AuthorTag ;
          rdfs:label  "artifacts" .
  
  :DesignDecision_kdd-18
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-18" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Webbasierte Benutzeroberfläche</strong></p><p>Die Visualisierung aller Zielgrößen, KPIs und Analyseergebnisse sowie das Anstoßen der Analysen und Datenabfragen werden als webbasierte Komponenten implementiert, sodass sie in allen gängigen Webbrowsern angezeigt und ausgeführt werden können. Hierfür bieten sich Technologien wie HTML5 und JavaScript an.</p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-165__portability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_portability , :ArchitecturalQuality_usability ;
          spec:useDecisionTactic          :DesignTactic_separated_presentation , :DesignTactic_responsive_design .
  
  :DesignTactic_encryption
          a                             gen:DesignTactic ;
          rdfs:label                    "encryption" , "Encryption" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_trustability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_immunity , :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_integrity , :ArchitecturalQuality_security ;
          gen:wikiEntry                 "[Goldreich 2004] Encryption is the process of encoding messages (or information) in such a way that eavesdroppers or hackers cannot read it but that authorized parties can.The process of encryption and decryption can be detailed as follows The message or information (referred to as plaintext) is encrypted using an encryption algorithm turning it into an unreadable ciphertext. This is usually done with the use of an encryption key which specifies how the message is to be encoded. Any adversary that can see the ciphertext should not be able to determine anything about the original message. An authorized party however is able to decode the ciphertext using a decryption algorithm that usually requires a secret decryption key that adversaries do not have access to." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_repeatability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Repeatability" , "repeatability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_data_logger , :DesignTactic_logging , :DesignPattern_identity_credentials , :DesignPattern_resource_allocation , :DesignTactic_accounting , :DesignPattern_limit_retries ;
          gen:relatedQuality       :ArchitecturalQuality_accuracy ;
          gen:wikiEntry            "[Engineeredsoftware Repeatability 1999] Repeatability is the variability of the measurements obtained by one person while measuring the same item repeatedly. This is also known as the inherent precision of the measurement equipment.    Relations Accounting Accounting refers to measure items as repeatability can hardly be measuredwithoutaccountingit goes hand in hand withaccounting. Logging [Wikipedia Computer Data Logging 2014] Logging is the process of recording events as this events may occur more oftenly repeatability is linked to logging." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_virtual_address_space
          a                              gen:DesignPattern ;
          rdfs:label                     "Virtual Address Space" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Virtual Address Space</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>By default, 64-bit Microsoft Windows-based applications have a user-mode address space of 8 terabytes (7 \n    terabytes on Itanium-based systems). However, applications can specify that the system should allocate all memory \n    for the application below 2 gigabytes. This feature is beneficial for 64-bit applications if the following \n    conditions are true:</p>\n<ul>\n<li>A 2 GB address space is sufficient.</li>\n<li>The code has many pointer truncation warnings.</li>\n<li>Pointers and integers are freely mixed.</li>\n<li>The code has polymorphism using 32-bit data types.</li>\n</ul>\n<p>All pointers are still 64-bit pointers, but the system ensures that every memory allocation occurs below the 2 \n     GB limit, so that if the application truncates a pointer, no significant data is lost. Pointers can be truncated \n     to 32-bit values, then extended to 64-bit values by either sign extension or zero extension.</p>\n<p>To specify this memory limitation, use the <strong>/LARGEADDRESSAWARE:NO</strong> linker option. \n     However, be aware that problems can occur when using this option. If you build a DLL that uses this option and \n     the DLL is called by an application that does not use this option, the DLL could truncate a 64-bit pointer whose \n     upper 32 bits are significant. This can cause application failure without any warning.</p></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ ;
          owl:sameAs                     dbr:Virtual_address_space .
  
  :DesignTactic_producer_consumer
          a                             gen:DesignTactic ;
          rdfs:label                    "producer consumer" , "Producer Consumer" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_sustainability , :ArchitecturalQuality_scalability ;
          gen:wikiEntry                 "The real world revolves around producers and consumers. Individual entities are responsible for certain functions where some entities generate material that ends up being consumed by others. This tactic and concrete implementing patterns focus on balancing or managing the production and consumption." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_abstract_factory
          a                              gen:DesignPattern ;
          rdfs:label                     "Abstract Factory" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_wrappability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_correctness , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_complexity , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_testability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_uniformity , :ArchitecturalQuality_expressiveness , :ArchitecturalQuality_maintainability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          gen:isAlternativeOf            :DesignTactic_abstraction , :DesignTactic_increase_cohesion , :DesignTactic_inheritance ;
          gen:wikiEntry                  "[Wikipedia Abstract Factory Pattern 2014] An Abstract Factory groups object factories that have a common theme. (GoF creational pattern)  Relations" , "<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Model–view–controller</h1>\n\t\t\t\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\">From Wikipedia, the free encyclopedia</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#mw-head\" target=\"_blank\">navigation</a>, \t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#p-search\" target=\"_blank\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><p><b>Model–view–controller</b> (<b>MVC</b>) is a software <a href=\"https://en.wikipedia.org/wiki/Architectural_pattern\" title=\"Architectural pattern\" target=\"_blank\">architectural pattern</a> for implementing <a href=\"https://en.wikipedia.org/wiki/User_interface\" title=\"User interface\" target=\"_blank\">user interfaces</a>. It divides a given software application into three interconnected parts, so as to separate internal representations of information from the ways that information is presented to or accepted from the user.<sup id=\"cite_ref-1\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-1\" target=\"_blank\"><span>[</span>1<span>]</span></a></sup><sup id=\"cite_ref-2\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-2\" target=\"_blank\"><span>[</span>2<span>]</span></a></sup></p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#\" id=\"togglelink\" target=\"_blank\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Overview\" target=\"_blank\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Overview</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Components\" target=\"_blank\"><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Components</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Interactions\" target=\"_blank\"><span class=\"tocnumber\">1.2</span> <span class=\"toctext\">Interactions</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Use_in_web_applications\" target=\"_blank\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Use in web applications</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#History\" target=\"_blank\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">History</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#See_also\" target=\"_blank\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#References\" target=\"_blank\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#External_links\" target=\"_blank\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Overview\">Overview</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"https://en.wikipedia.org/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=1\" title=\"Edit section: Overview\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>As with other software patterns, MVC expresses the \"core of the solution\" to a problem while allowing it to be adapted for each system.<sup id=\"cite_ref-gof_3-0\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-gof-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup> Particular MVC architectures can vary significantly from the traditional description here.<sup id=\"cite_ref-4\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-4\" target=\"_blank\"><span>[</span>4<span>]</span></a></sup></p>\n<h3><span class=\"mw-headline\" id=\"Components\"><span id=\"COMPONENTS\"></span>Components</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"https://en.wikipedia.org/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=2\" title=\"Edit section: Components\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"thumb tright\">\n<div class=\"thumbinner\" style=\"width:202px;\"><a href=\"https://en.wikipedia.org/wiki/File:MVC-Process.svg\" class=\"image\" target=\"_blank\"><img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/200px-MVC-Process.svg.png\" width=\"200\" height=\"220\" class=\"thumbimage\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/300px-MVC-Process.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/400px-MVC-Process.svg.png 2x\" data-file-width=\"500\" data-file-height=\"550\"></a>\n<div class=\"thumbcaption\">\n<div class=\"magnify\"><a href=\"https://en.wikipedia.org/wiki/File:MVC-Process.svg\" class=\"internal\" title=\"Enlarge\" target=\"_blank\"></a></div>\nA typical collaboration of the MVC components</div></div></div></div></div>" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Abstract_factory_pattern .
  
  :DesignTactic_response_formatting
          a           gen:DesignTactic ;
          rdfs:label  "response formatting" .
  
  :DesignPattern_exactly-once_delivery
          a                              gen:DesignPattern ;
          rdfs:label                     "Exactly-once Delivery" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_integratability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_operability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_configurability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_portability , :ArchitecturalQuality_agility , :ArchitecturalQuality_modifiability ;
          gen:isAlternativeOf            :DesignTactic_messaging ;
          gen:wikiEntry                  "For many critical systems duplicate messages are inacceptable. The messaging system ensures that each message is delivered exactly once by filtering possible message duplicates automatically.[Cloud Computing Patterns]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_kdd-32
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-32" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Datenformatierung</strong><br></p><p>Die Ergebnisse der Datenbankabfragen werden bevorzugt in dem von den Visualisierungskomponenten benötigen Format geliefert.</p><p>Die meisten HTML5 und JavaScript-basierten Visualisierungsbibliotheken (z.B. Highcharts6) erwarten JSON als Eingangsdatenformat. Um überflüssige Konversionen zu Vermeiden, kann man die Ergebnisse der Datenabfragen schon DWH-seitig als JSON Formattieren (siehe z.B. JSON Publishing with Teradata7).<br>Die JavaScript Object Notation, kurz JSON, ist ein kompaktes Datenformat in einer einfach lesbaren Textform zum Zweck des Datenaustausches zwischen Anwendungen.</p><p><strong>Beispiel:</strong></p><pre><span class=\"p\">{</span>\n  <span class=\"s2\">\"Herausgeber\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Xema\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"Nummer\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1234-5678-9012-3456\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"Deckung\"</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"nx\">e</span><span class=\"o\">+</span><span class=\"mi\">6</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"Waehrung\"</span><span class=\"o\">:</span> <span class=\"s2\">\"EURO\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"Inhaber\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"Name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Mustermann\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Vorname\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Max\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"maennlich\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Hobbys\"</span><span class=\"o\">:</span> <span class=\"p\">[</span> <span class=\"s2\">\"Reiten\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Golfen\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Lesen\"</span> <span class=\"p\">],</span>\n    <span class=\"s2\">\"Alter\"</span><span class=\"o\">:</span> <span class=\"mi\">42</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Kinder\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s2\">\"Partner\"</span><span class=\"o\">:</span> <span class=\"kc\">null</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span></pre>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-151__visualization_granularity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_response_formatting .
  
  :DesignTactic_abstraction
          a                             gen:DesignTactic ;
          rdfs:label                    "abstraction" , "Abstraction" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_structuredness , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_flexibility ;
          gen:wikiEntry                 "Abstraction is the process by which data and programs are defined with a representation similar in form to its meaning (semantics) while hiding away the implementation details.    Generalization" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_slow_it_down
          a                              gen:DesignPattern ;
          rdfs:label                     "Slow it Down" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_viability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_robustness , :ArchitecturalQuality_survivability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_availability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_safety , :ArchitecturalQuality_affordability , :ArchitecturalQuality_resilience ;
          gen:isAlternativeOf            :DesignTactic_overload_mitigation , :DesignTactic_error_handling ;
          gen:wikiEntry                  "When requests for service are arriving more quickly than the system can process the Slow it Down Pattern can be used.  The goal of this pattern is to slow things down until the system can catch up with load. Therefore an Escalation strategy with several steps to restrict request processing can be used. Each steps restrictions are more severe than its predecessor. The higher the number of requests for service the harder the system puts on the brakes. This implements a feedback system that keeps processed workload from rising indefinitely [Hanmer 2007]pp 210-213.  Relations Error Handling [Hanmer 2007] Error Mitigation Patterns pp 210-213. Overload Mitigation [Hanmer 2007] Error Mitigation Patterns pp 210-213." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_arch-4__image_overwriting
          a                          spec:Requirement ;
          rdfs:label                 "ARCH-4: Image Overwriting" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Avoid Image overwrite\n  during save operation</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">Certain operations during client save result in uploading of modified\n  images with pixel data. It would be good to avoid pixel modifications during\n  save operation and replace with DICOM Presentation State mechanism. This will\n  help in increasing save performance in low bandwidth and also reduce the code\n  complexity in save operation.</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Architecture / Development / Test" ;
          spec:requirementPurpose    "Avoid image overwrite" .
  
  :DesignDecision_kdd-16__cached_loading
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-16: Cached Loading" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Improving usability of cached loading (using Variable compression)</strong></span></p><p>The Image Download and Cache using Variable compression was originally implemented for handling low bandwidth environment (in syngo.plaza VA10A). However, this is not used much in the field as it needs to undergo some further improvements:</p><ol><li>Stability needs to be improved for Variable compression mechanism</li><li>Usability / Intuitiveness needs to be improved. Currently downloading a study is in PB and double clicking the same study after download will load the study in Viewer. The download job status is in the journal. Overall, the functionality is not easy to use. Simplifying the overall concept can be a big boost for WAN users.</li><li>Unlocking the downloaded data and handling stale information may have to be improved.</li></ol><p><strong>Pros:</strong></p><ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">If this feature is improved, then Prioritized loading can be avoided.</span></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Overall effort for this could be significantly lower than Prioritized loading</span></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Once cached locally, loading will be very fast. So the loading performance will be independent of the bandwidth.</span></li></ul><p>&nbsp;</p><p><span style=\"line-height: 1.3em; font-size: 14pt;\" data-mce-style=\"line-height: 1.3em; font-size: 14pt;\"><strong><span lang=\"EN-US\">Proposed alternative solutions:</span></strong></span></p><ul><li><span style=\"line-height: 1.3em; font-size: 14pt;\" data-mce-style=\"line-height: 1.3em; font-size: 14pt;\">Use NGinx Web Server for caching. Configure NGinx to reroute requests to IIS and to cache responses (especially images).</span></li></ul>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_perf-2__performance_optimization ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_caching .
  
  :ArchitecturalQuality_scalability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Scalability" , "scalability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_lock , :DesignPattern_competing_consumers , :DesignPattern_fire_and_forget , :DesignTactic_load_distribution , :SoftwareEngineeringMethod_technical_debt_management , :DesignPattern_map_reduce , :DesignPattern_failover , :DesignPattern_message_dispatcher , :DesignPattern_flyweight , :DesignPattern_message_aggregator , :DesignPattern_replication , :DesignPattern_message_bus_architecture , :DesignDecision_kdd-01 , :DesignPattern_representational_state_transfer , :DesignPattern_dynamic_scalability , :DesignPattern_pipe_and_filter , :DesignPattern_command_message , :DesignTactic_producer_consumer , :DesignPattern_idempotent_receiver , :DesignPattern_capturing_architectural_requirements , :DesignPattern_priority_queue_pattern , :DesignPattern_command , :DesignPattern_fresh_work_before_stale , :DesignPattern_model-view-controller , :DesignPattern_error_handler , :DesignPattern_layered_architecture , :DesignPattern_adapter , :DesignTactic_horizontal_scaling , :DesignPattern_selective_consumer , :DesignPattern_messaging_mapper , :DesignTactic_no_single_point_of_failure , :DesignPattern_dynamically-discoverable_elements , :DesignDecision_ad-101__service-oriented_architecture , :DesignPattern_aggregated_routing , :DesignPattern_load_balancing , :DesignPattern_microservices , :DesignPattern_sharding_pattern , :DesignPattern_execution_orchestrator , :DesignPattern_expendable_hardware , :DesignPattern_reliable_sessions , :DesignPattern_rest , :DesignPattern_fork_and_join , :DesignPattern_scatter_and_gather , :DesignPattern_peripheral_specialist_elements , :DesignTactic_message_channeling , :DesignPattern_local_cache , :DesignTactic_message_endpoint , :DesignDecision_kdd-07 , :DesignPattern_rest_architecture , :SoftwareEngineeringMethod_nfr_testing_and_analysis , :DesignPattern_duplex_messaging , :DesignPattern_transactional_client , :DesignPattern_event_message , :DesignPattern_caching , :DesignPattern_polling_consumer , :DesignPattern_messaging_gateway , :DesignTactic_asynchronous_communication , :DesignTactic_parallel_computing , :DesignPattern_wso2_distributed_deployment , :DesignPattern_web_service_proxy , :DesignPattern_message_bridge , :DesignPattern_multi-tenant_data_architecture , :DesignPattern_delightfully_parallel_loop , :DesignDecision_add-01__zero-footprint_architecture , :DesignDecision_ad-09__restful_api_registry , :DesignPattern_point_to_point , :DesignPattern_publish_subscribe , :DesignPattern_voting , :DesignTactic_message_construction , :DesignPattern_process_manager , :DesignTactic_routing , :DesignDecision_ad-103__web_interfaces , :DesignPattern_dynamic_router , :DesignPattern_observer , :DesignPattern_application_server_architecture , :DesignPattern_bridge , :DesignPattern_mirror , :SoftwareEngineeringMethod_layer_and_dependency_recovery , :DesignPattern_document_message , :DesignTactic_vertical_scaling , :DesignPattern_singleton , :DesignDecision_kdd-03 , :DesignPattern_message_broker , :DesignPattern_service_activator , :DesignPattern_request_response , :DesignPattern_message_filter , :DesignPattern_durable_subscriber , :DesignTactic_multicasting , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_shared_space , :DesignDecision_ad-009__restful_api_registry , :DesignPattern_bulk_synchronous_parallel , :DesignTactic_synchronous_communication , :DesignPattern_restful_architecture , :DesignPattern_static_content_hosting_pattern , :SoftwareEngineeringMethod_performance_engineering_for_sw-based_systems , :DesignPattern_polling , :DesignPattern_partitioning , :DesignPattern_message_bus , :DesignPattern_content-based_router , :DesignPattern_queuing , :DesignPattern_secure_channels , :DesignDecision_kdd-26 , :DesignDecision_ad-126__benchmarks_deployment ;
          gen:relatedQuality       :ArchitecturalQuality_efficiency , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_performance , :ArchitecturalQuality_reliability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_availability ;
          gen:wikiEntry            "<p><strong>Scalability</strong></p>\n<p>Scalability is ability of a system to either handle increases in load without impact on the performance of the system, or the ability to be readily enlarged.</p>\n<p><strong>Source:</strong>&nbsp;</p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/ee658094.aspx\">https://msdn.microsoft.com/en-us/library/ee658094.aspx</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_pointer_packing
          a                              gen:DesignPattern ;
          rdfs:label                     "Pointer packing" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Pointer packing</h1>\n\n<p>A lot of errors occurring when porting code to 64-bit systems are related to changes of relations between the size of the pointer and the size of prime integers. In the environment with <a href=\"http://www.viva64.com/en/t/0018/\" class=\"link-inner\" target=\"_blank\">ILP32</a> data model prime integers and pointers have the same size. Unfortunately, 32-bit code always relies on this assumption. Pointers are often cast to int, unsigned, long, DWORD and other inappropriate types.</p>\n<p>You should always keep in mind that you must use only <a href=\"http://www.viva64.com/en/t/0030/\" class=\"link-inner\" target=\"_blank\">memsize</a>-types for integer representation of pointers. We believe it is better to use the type <a href=\"http://www.viva64.com/en/t/0050/\" class=\"link-inner\" target=\"_blank\">uintptr_t</a> because it reflects our intention better and makes the code more portable protecting it from changes in future.</p>\n<p>Consider two small examples.</p>\n<pre class=\"clear cleared\"><code><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">p</span><span class=\"pun\">;</span><span class=\"pln\">\n   p </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"kwd\">int</span><span class=\"pun\">)</span><span class=\"pln\">p </span><span class=\"pun\">&amp;</span><span class=\"pln\"> PAGEOFFSET</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\"> DWORD tmp </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">DWORD</span><span class=\"pun\">)</span><span class=\"pln\">malloc</span><span class=\"pun\">(</span><span class=\"typ\">ArraySize</span><span class=\"pun\">);</span><span class=\"pln\"> \n   </span><span class=\"pun\">...</span><span class=\"pln\">\n   </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">ptr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"pln\">tmp</span><span class=\"pun\">;</span></code></pre>\n<p>The both examples do not consider that the pointer's size might be other than 32 bits. Here an explicit type conversion is used that throws off the more significant bits of the pointer - this is an evident error on a 64-bit system. Below are the correct samples where integer memsize-types (<a href=\"http://www.viva64.com/en/t/0023/\" class=\"link-inner\" target=\"_blank\">intptr_t</a> and DWORD_PTR) are used to pack the pointers:</p>\n<pre class=\"clear cleared\"><code><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">p</span><span class=\"pun\">;</span><span class=\"pln\">\n   p </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">char</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"typ\">intptr_t</span><span class=\"pun\">)</span><span class=\"pln\">p </span><span class=\"pun\">&amp;</span><span class=\"pln\"> PAGEOFFSET</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\"> DWORD_PTR tmp </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">DWORD_PTR</span><span class=\"pun\">)</span><span class=\"pln\">malloc</span><span class=\"pun\">(</span><span class=\"typ\">ArraySize</span><span class=\"pun\">);</span><span class=\"pln\"> \n   </span><span class=\"pun\">...</span><span class=\"pln\">\n   </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">ptr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"pln\">tmp</span><span class=\"pun\">;</span></code></pre>\n<p>The two examples discussed above are dangerous because the program failure might stay undetected for a long time. The program may work correctly when dealing with small data amounts on a 64-bit system as long as the processed addresses remain inside the first four Gbytes of memory. But then, as the program will be launched to solve large applied tasks, an overflow will occur outside this area. The code of the examples will lead to an unpredictable program behavior when processing the pointer to an object situated outside this area.</p>\n<p>The next code sample will reveal itself right away at the fist run:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">GetBufferAddr</span><span class=\"pun\">(</span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"pun\">**</span><span class=\"pln\">retPtr</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"pun\">...</span><span class=\"pln\">\n  </span><span class=\"com\">// Access violation on 64-bit system</span><span class=\"pln\">\n  </span><span class=\"pun\">*</span><span class=\"pln\">retPtr </span><span class=\"pun\">=</span><span class=\"pln\"> p</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">unsigned</span><span class=\"pln\"> bufAddress</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"typ\">GetBufferAddr</span><span class=\"pun\">((</span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"pun\">**)&amp;</span><span class=\"pln\">bufAddress</span><span class=\"pun\">);</span><span class=\"pln\"> </span></code></pre>\n<p>To correct it you should also use a type capable of storing the pointer.</p>\n<pre class=\"clear cleared\"><code><span class=\"typ\">size_t</span><span class=\"pln\"> bufAddress</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"typ\">GetBufferAddr</span><span class=\"pun\">((</span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"pun\">**)&amp;</span><span class=\"pln\">bufAddress</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">//OK</span></code></pre>\n<p>Sometimes it is just necessary to pack a pointer into a 32-bit type. It usually happens when you need to work with obsolete API functions. In these cases you should resort to special functions such as <span class=\" span-i\">LongToIntPtr</span>, <span class=\" span-i\">PtrToUlong</span>, etc.</p>\n<p>To sum it up, I would like to note that it would be a bad style to pack a pointer into the types which always equal 64 bits. The code below will have to be corrected again when 128-bit systems appear:</p>\n<pre class=\"clear cleared\"><code><span class=\"pln\">PVOID p</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"com\">// Bad style. The 128-bit time will come.</span><span class=\"pln\">\n__int64 n </span><span class=\"pun\">=</span><span class=\"pln\"> __int64</span><span class=\"pun\">(</span><span class=\"pln\">p</span><span class=\"pun\">);</span><span class=\"pln\">\np </span><span class=\"pun\">=</span><span class=\"pln\"> PVOID</span><span class=\"pun\">(</span><span class=\"pln\">n</span><span class=\"pun\">);</span></code></pre>\n<p>They say that Microsoft Research developers are already working on the task of providing compatibility of Windows 8 and Windows 9 cores with the 128-bit architecture. So, write a good code at once.</p>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  spec:requires  a     owl:ObjectProperty ;
          rdfs:domain  spec:Domain ;
          rdfs:label   "hasQualityRequirementOf" ;
          rdfs:range   gen:ArchitecturalQuality .
  
  :DesignPattern_builder
          a                              gen:DesignPattern ;
          rdfs:label                     "Builder" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_composability , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_flexibility ;
          gen:isAlternativeOf            :DesignTactic_composition ;
          gen:wikiEntry                  "[Wikipedia Builder Pattern 2014] A Builder constructs complex objects by separating construction and representation. (GoF creational pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Builder_pattern .
  
  :AuthorTag_survivability
          a           cont:AuthorTag ;
          rdfs:label  "survivability" .
  
  :DesignTactic_metadata
          a           gen:DesignTactic ;
          rdfs:label  "metadata" .
  
  :DesignTactic_rationalization
          a           gen:DesignTactic ;
          rdfs:label  "rationalization" .
  
  :UseCase_64-bit_migration
          a           spec:UseCase ;
          rdfs:label  "64-bit migration" .
  
  :ArchitecturalQuality_durability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Durability" , "durability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_separate_system-managed_data , :DesignPattern_encapsulation , :DesignTactic_atomicity , :DesignPattern_redundancy , :DesignPattern_restart , :DesignPattern_gatekeeper_pattern , :DesignTactic_isolation , :DesignPattern_lock , :DesignPattern_chain_of_responsibility , :DesignTactic_feasibility_study ;
          gen:relatedQuality       :ArchitecturalQuality_reliability , :ArchitecturalQuality_consistency ;
          gen:wikiEntry            "[Wikipedia Durability (DB Systems) 2014] In database systems durability is the ACID property which guarantees that transactions that have committed will survive permanently. Durability can be achieved by flushing the transactions log records to non-volatile storage before acknowledging commitment. In distributed transactions all participating servers must coordinate before commit can be acknowledged. This is usually done by a two-phase commit protocol.  [Tiako Pierre F 2009]Durability can be understood as the length of time a piece of software is used in a live environment." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_shift_operations
          a                              gen:DesignPattern ;
          rdfs:label                     "Shift operations" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Shift operations</h1>\n\n<p>It is easy to make a mistake in code that works with separate bits. The pattern of 64-bit errors under consideration relates to shift operations. Here is an example of code:</p>\n<pre class=\"clear cleared\"><code><span class=\"typ\">ptrdiff_t</span><span class=\"pln\"> </span><span class=\"typ\">SetBitN</span><span class=\"pun\">(</span><span class=\"typ\">ptrdiff_t</span><span class=\"pln\"> value</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">unsigned</span><span class=\"pln\"> bitNum</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"typ\">ptrdiff_t</span><span class=\"pln\"> mask </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> bitNum</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> value </span><span class=\"pun\">|</span><span class=\"pln\"> mask</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></code></pre>\n<p>This code works well on a 32-bit architecture and allows you to set a bit with numbers from 0 to 31 into one. After porting the program to a 64-bit platform you need to set bits from 0 to 63. But this code will never set the bits with the numbers 32-63. Note that the numerical literal \"1\" has <span class=\" span-i\">int</span> type and causes an overflow when a shift in 32 positions occurs as shown in Figure 1. As a result, we will get 0 (Figure 1-B) or 1 (Figure 1-C) depending on the compiler implementation.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image2.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image1.png\" alt=\"Figure 1 - a) Correct setting of the 31-st bit in a 32-bit code; b,c) - Incorrect setting of the 32-nd bit on a 64-bit system (two variants of behavior)\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 1 - a) Correct setting of the 31-st bit in a 32-bit code; b,c) - Incorrect setting of the 32-nd bit on a 64-bit system (two variants of behavior)</span></p>\n<p>To correct the code we must make the type of the constant \"1\" the same as that of <span class=\" span-i\">mask</span> variable:</p>\n<pre class=\"clear cleared\"><code><span class=\"typ\">ptrdiff_t</span><span class=\"pln\"> mask </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">ptrdiff_t</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> bitNum</span><span class=\"pun\">;</span></code></pre>\n<p>Note also that the non-corrected code will lead to one more interesting error. When setting the 31-st bit on a 64-bit system, the function's result will be the value 0xffffffff80000000 (see Figure 2). The result of the expression 1 &lt;&lt; 31 is the negative number -2147483648. This number is presented in a 64-bit integer variable as 0xffffffff80000000.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image4.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image3.png\" alt=\"Figure 2 - The error of setting the 31-st bit on a 64-bit system.\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 2 - The error of setting the 31-st bit on a 64-bit system.</span></p>\n<p>You should remember and take into consideration the effects of shifting values of different types. To better understand all said above, consider some interesting expressions with shifts in a 64-bit system shown in Table 1.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image6.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image5.png\" alt=\"Table 1 - Expressions with shifts and their results in a 64-bit system (we used Visual C++ 2005 compiler)\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Table 1 - Expressions with shifts and their results in a 64-bit system (we used Visual C++ 2005 compiler)</span></p>\n<p>The type of errors we have described is considered dangerous not only from the viewpoint of program operation correctness but from the viewpoint of security as well. Potentially, by manipulating with the input data of such incorrect functions one can get inadmissible rights when, for example, dealing with processing of access permissions' masks defined by separate bits. Questions related to exploiting errors in 64-bit code for application cracking and compromise are described in the article \"<a href=\"http://www.viva64.com/en/a/0046/\" class=\"link-inner\" target=\"_blank\">Safety of 64-bit code</a>\".</p>\n<p>Now a subtler example:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">struct</span><span class=\"pln\"> </span><span class=\"typ\">BitFieldStruct</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">unsigned</span><span class=\"pln\"> </span><span class=\"kwd\">short</span><span class=\"pln\"> a</span><span class=\"pun\">:</span><span class=\"lit\">15</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"kwd\">unsigned</span><span class=\"pln\"> </span><span class=\"kwd\">short</span><span class=\"pln\"> b</span><span class=\"pun\">:</span><span class=\"lit\">13</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">};</span><span class=\"pln\">\n</span><span class=\"typ\">BitFieldStruct</span><span class=\"pln\"> obj</span><span class=\"pun\">;</span><span class=\"pln\">\nobj</span><span class=\"pun\">.</span><span class=\"pln\">a </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0x4000</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> addr </span><span class=\"pun\">=</span><span class=\"pln\"> obj</span><span class=\"pun\">.</span><span class=\"pln\">a </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"lit\">17</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"com\">//Sign Extension</span><span class=\"pln\">\nprintf</span><span class=\"pun\">(</span><span class=\"str\">\"addr 0x%Ix\\n\"</span><span class=\"pun\">,</span><span class=\"pln\"> addr</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"com\">//Output on 32-bit system: 0x80000000</span><span class=\"pln\">\n</span><span class=\"com\">//Output on 64-bit system: 0xffffffff80000000</span></code></pre>\n<p>In the 32-bit environment, the order of calculating the expression will be as shown in Figure 3.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image7.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image7.png\" alt=\"Figure 3 - Calculation of expression in 32-bit code\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 3 - Calculation of expression in 32-bit code</span></p>\n<p>Note that a sign extension of \"unsigned short\" type to \"signed int\" takes place when calculating \"obj.a &lt;&lt; 17\". To make it clear, consider the following code:</p>\n<pre class=\"clear cleared\"><code><span class=\"com\">#include</span><span class=\"pln\"> </span><span class=\"str\">&lt;stdio.h&gt;</span><span class=\"pln\">\n</span><span class=\"kwd\">template</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"kwd\">typename</span><span class=\"pln\"> T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">PrintType</span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">{</span><span class=\"pln\">\n  printf</span><span class=\"pun\">(</span><span class=\"str\">\"type is %s %d-bit\\n\"</span><span class=\"pun\">,</span><span class=\"pln\">\n          </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)-</span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\"> </span><span class=\"pun\">?</span><span class=\"pln\"> </span><span class=\"str\">\"signed\"</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"unsigned\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">sizeof</span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)*</span><span class=\"lit\">8</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">struct</span><span class=\"pln\"> </span><span class=\"typ\">BitFieldStruct</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"kwd\">unsigned</span><span class=\"pln\"> </span><span class=\"kwd\">short</span><span class=\"pln\"> a</span><span class=\"pun\">:</span><span class=\"lit\">15</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"kwd\">unsigned</span><span class=\"pln\"> </span><span class=\"kwd\">short</span><span class=\"pln\"> b</span><span class=\"pun\">:</span><span class=\"lit\">13</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">};</span><span class=\"pln\">\n</span><span class=\"kwd\">int</span><span class=\"pln\"> main</span><span class=\"pun\">(</span><span class=\"kwd\">void</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">{</span><span class=\"pln\">\n  </span><span class=\"typ\">BitFieldStruct</span><span class=\"pln\"> bf</span><span class=\"pun\">;</span><span class=\"pln\">\n  </span><span class=\"typ\">PrintType</span><span class=\"pun\">(</span><span class=\"pln\"> bf</span><span class=\"pun\">.</span><span class=\"pln\">a </span><span class=\"pun\">);</span><span class=\"pln\">\n  </span><span class=\"typ\">PrintType</span><span class=\"pun\">(</span><span class=\"pln\"> bf</span><span class=\"pun\">.</span><span class=\"pln\">a </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">);</span><span class=\"pln\">\n  </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"typ\">Result</span><span class=\"pun\">:</span><span class=\"pln\">\ntype </span><span class=\"kwd\">is</span><span class=\"pln\"> </span><span class=\"kwd\">unsigned</span><span class=\"pln\"> </span><span class=\"lit\">16</span><span class=\"pun\">-</span><span class=\"pln\">bit\ntype </span><span class=\"kwd\">is</span><span class=\"pln\"> </span><span class=\"kwd\">signed</span><span class=\"pln\"> </span><span class=\"lit\">32</span><span class=\"pun\">-</span><span class=\"pln\">bit</span></code></pre>\n<p>Now let us see the consequence of the sign extension in a 64-bit code. The sequence of calculating the expression is shown in Figure 4.</p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image8.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/11_Pattern_03_Shift_operations/image8.png\" alt=\"Figure 4 - Calculation of expression in 64-bit code\"></a></div>\n<p class=\"image-note\"><span class=\" span-i\">Figure 4 - Calculation of expression in 64-bit code</span></p>\n<p>The member of \"obj.a\" structure is converted from the bit field of \"unsigned short\" type to \"int\". \"obj.a &lt;&lt; 17\" expression has \"int\" type but it is converted to <a href=\"http://www.viva64.com/en/t/0041/\" class=\"link-inner\" target=\"_blank\">ptrdiff_t</a> and then to <a href=\"http://www.viva64.com/en/t/0044/\" class=\"link-inner\" target=\"_blank\">size_t</a> before it is assigned to addr variable. As a result, we will get the value 0xffffffff80000000 instead of 0x0000000080000000 expected.</p>\n<p>Be careful when working with bit fields. To avoid the situation described in our example we need only to explicitly convert \"obj.a\" to size_t type.</p>\n<pre class=\"clear cleared\"><code><span class=\"pun\">...</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> addr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">size_t</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">.</span><span class=\"pln\">a</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"lit\">17</span><span class=\"pun\">;</span><span class=\"pln\">\nprintf</span><span class=\"pun\">(</span><span class=\"str\">\"addr 0x%Ix\\n\"</span><span class=\"pun\">,</span><span class=\"pln\"> addr</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"com\">//Output on 32-bit system: 0x80000000</span><span class=\"pln\">\n</span><span class=\"com\">//Output on 64-bit system: 0x80000000</span></code></pre>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  gen:hasMethodTag  a         owl:ObjectProperty ;
          rdfs:domain         gen:ArchitecturalKnowledgeElement ;
          rdfs:label          "hasAuthorTag" ;
          rdfs:range          cont:AuthorTag ;
          rdfs:subPropertyOf  gen:hasKnowledgeContext .
  
  :DesignTactic_grateful_degradation
          a           gen:DesignTactic ;
          rdfs:label  "grateful degradation" .
  
  :DesignPattern_dynamically-discoverable_elements
          a                              gen:DesignPattern ;
          rdfs:label                     "Dynamically-discoverable elements" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_versatility , :ArchitecturalQuality_availability , :ArchitecturalQuality_generality , :ArchitecturalQuality_reliability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_vertical_scaling , :DesignTactic_horizontal_scaling ;
          gen:wikiEntry                  "[Dyson P Longshaw A. 2004] pp.339-341. This pattern helps to bring additional capacity to the system without having to take it offline. It takes to use components that can discover new system elements dynamically and can start routing requests to these new elements in order to increase the capacity of the system as a whole. Web servers receive requests from the outermost switch so wen need to set the switch up to discover new web servers as they are introduced. Application servers receive requests from web servers but the web servers determine which application server to send the request by communicating with the load balancer which has to discover new application servers.   Relations  Horizontal Scaling Horizontal scaling would bring more processing power to the system by adding nodes so it would bring additional capacity and wouldnt take it offline. Vertical Scaling Vertical scaling could increase the systems processing capability by adding more processors and storage. The node could handle more work." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_execution_orchestrator
          a                              gen:DesignPattern ;
          rdfs:label                     "Execution Orchestrator" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_operability , :ArchitecturalQuality_integratability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_utility , :ArchitecturalQuality_availability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_mobility , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_load_distribution , :DesignTactic_parallel_computing ;
          gen:wikiEntry                  "[Glichdata Wiki Execution Orchestrator Pattern [date unknown]] The Execution Orchestrator pattern aims to distribute processing load by utilizing an intelligent scheduler / orchestrator to schedule ready-to-run tasks (based on a dependency graph) across a clusters of dumb workers. This pattern is used in Microsofts Dryad project.  The following figure illustrates the pattern." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_etl  a  gen:DesignTactic ;
          rdfs:label  "etl" .
  
  :DesignDecision_kdd-10__adaptation_mechanisms
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-10: Adaptation Mechanisms" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<p style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\"><span lang=\"EN-US\" style=\"font-size: 12pt;\">How to Implement Adaptation in Camunda?</span></p>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong>Lever 1: </strong></span><span style=\"font-size: 12pt;\"><u>http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-engine-concepts-suspending-process-instances</u></span></p>\n<ul>\n<li><span style=\"font-size: 12pt; line-height: 1.3em; text-indent: -27pt;\">Modify process variables while process is suspended</span></li>\n</ul>\n<div style=\"text-indent: -36px;\"><span style=\"line-height: 20.8px;\">&nbsp;</span></div>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"DE-AT\">Lever 2:&nbsp;</span></strong></span><span style=\"font-size: 12pt;\"><u>http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-instance-modification-process-instance-modification-by-example</u></span></p>\n<ul>\n<li><span style=\"font-size: 12pt; line-height: 1.3em;\">AOP (Aspect-oriented programming)</span></li>\n<li><span style=\"font-size: 12pt; line-height: 1.3em;\">COP (</span><span style=\"font-size: 12pt; line-height: 1.3em;\">Context</span> <span style=\"font-size: 12pt; line-height: 1.3em;\">oriented</span> <span style=\"font-size: 12pt; line-height: 1.3em;\">programming</span><span style=\"font-size: 12pt; line-height: 1.3em;\">)</span></li>\n</ul>\n<div><span style=\"line-height: 20.8px;\">&nbsp;</span></div>\n<p style=\"margin-left: 27pt; text-indent: -27pt; text-align: left;\"><span style=\"font-size: 12pt;\"><strong><span lang=\"DE-AT\">Lever 3:</span></strong><span style=\"mso-list: Ignore;\"><span style=\"font: 7.0pt;\">&nbsp;</span></span><!--[endif]--><u>http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-instance-modification-starting-activities-with-interruptingcancelling-semantics</u></span></p>\n<ul>\n<li><span lang=\"EN-US\" style=\"font-size: 12pt; line-height: 1.3em; text-indent: -27pt;\">Interrupting or cancelling semantics </span><span lang=\"DE-AT\" style=\"font-family: Wingdings; color: black;\">&agrave;</span> <span class=\"GramE\" style=\"font-size: 12pt; line-height: 1.3em; text-indent: -27pt;\"><em><span lang=\"EN-US\">A</span></em></span><em style=\"font-size: 12pt; line-height: 1.3em; text-indent: -27pt;\"><span lang=\"EN-US\"> new model of processing/computation for adaptation?</span></em></li>\n</ul>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"EN-US\"><strong>Preferred solution:</strong></span></span></p>\n<p><span style=\"font-size: 12pt;\"><span lang=\"EN-US\"><strong>Lever 4:</strong></span><em style=\"font-size: 12pt; line-height: 1.3em; text-indent: -27pt;\"><span lang=\"EN-US\"> Replace subprocesses at runtime</span></em></span></p>\n<p><em><img src=\"p/Shape/Phase265.png\" alt=\"\" width=\"656\" height=\"183\" /></em></p>\n<p>The process is divided into several sub processes, as shown in the figure above. Each subprocess is implemented as a BPMN call task and is deployed using a separate WAR file on the web server.&nbsp;</p>\n<p>Whenever a subprocess is modified, the existing subprocess WAR file is replaced on the web server by the new version. Thus, the process can be dynamically adapted without affecting running processes.</p>\n<p>A prerequisite is to persist all process variables in a disk based (not memory based) database.</p>\n<p>A typical adaptation scenario would be replacing a user task by a service task (e.g., filling out a checklist is replaced by a document generator service task).&nbsp;</p>" ;
          spec:decisionArchitecturalView  "3. Process View" ;
          spec:hasDecisionDomain          :Domain_ar-07__seamless_adaptation ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_replaceability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_adaptability , :ArchitecturalQuality_safety , :ArchitecturalQuality_extensibility ;
          spec:useDecisionTactic          :DesignTactic_adaptation .
  
  gen:ReferenceDocument
          a           owl:Class ;
          rdfs:label  "Reference Document" .
  
  :DesignPattern_dedicated_web_and_application_servers
          a                              gen:DesignPattern ;
          rdfs:label                     "Dedicated web and application servers" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_compatibility , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_operability , :ArchitecturalQuality_installability , :ArchitecturalQuality_portability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_isolateability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_testability ;
          gen:isAlternativeOf            :DesignTactic_reduce_coupling ;
          gen:wikiEntry                  "[Dyson and Longshaw 2004] pp. 305-307. This pattern is about independantly scaling tuning and improving avalability of the web and application elements of a system. It is proposed to deploy the web server application software and the server onto dedicated hardware servers that are optimized to enable and perform these types of functionality.   Relations Reduce Coupling This pattern is about independantly scaling tuning and improving availability of the web and application elements. If to reduce coupling it could better do independantly." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Requirement_ar-019__metadata_management
          a                          spec:Requirement ;
          rdfs:label                 "AR-019: Metadata management" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "The governance structure of the platform shall manage all the metadata associated with data and APIs and provide a comprehensive view of data consumers, data\nsources, and the overall ecosystem.<div style=\"position: relative; font-size: small;\"><br style=\"font-size: small;\"></div><div style=\"position: relative; font-size: small;\">This view shall be available to different stakeholders (e.g., regulators and ecosystem operators) for auditing and other purposes.</div>" ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Governance" ;
          spec:requirementPurpose    "Metadata management" .
  
  :DesignTactic_convention_over_configuration
          a                             gen:DesignTactic ;
          rdfs:label                    "convention over configuration" , "Convention over configuration" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_suitability , :ArchitecturalQuality_legibility , :ArchitecturalQuality_configurability , :ArchitecturalQuality_flexibility ;
          gen:wikiEntry                 "[Wikipedia Convention over configuration 2014] Convention over configuration (also known as coding by convention) seeks to decrease the number of decisions that developers need to make gaining simplicity but not necessarily losing flexibility.    Coding by convention" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_service_locator
          a                              gen:DesignPattern ;
          rdfs:label                     "Service Locator" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_aspernes ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_flexibility , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_manageability ;
          gen:isAlternativeOf            :DesignTactic_lookup ;
          gen:wikiEntry                  "<h3>Service Locator</h3>\n<div id=\"mainSection\">\n<div id=\"mainBody\">\n<p>You have classes with dependencies on services whose concrete types are specified at compile time. In the following example, <strong>ClassA</strong> has compile time dependencies on <strong>ServiceA</strong> and <strong>ServiceB</strong>. The following diagram illustrates this.&nbsp;</p>\n<div class=\"caption\">Classes with dependencies on services</div>\n<p><img id=\"ec21f438-394d-42e8-b51e-b7c5029e52eb\" style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"Ff648968.ec21f438-394d-42e8-b51e-b7c5029e52eb(en-us,PandP.10).png\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC340134.png\" alt=\"Ff648968.ec21f438-394d-42e8-b51e-b7c5029e52eb(en-us,PandP.10).png\" /></p>\n<p>This situation has the following drawbacks:</p>\n<ul>\n<li>To replace or update the dependencies, you must change your classes' source code and recompile the solution.</li>\n<li>The concrete implementation of the dependencies must be available at compile time.</li>\n<li>Your classes are difficult to test in isolation because they have a direct reference to their dependencies. This means that these dependencies cannot be replaced with stubs or mock objects.</li>\n<li>Your classes contain repetitive code for creating, locating, and managing their dependencies.</li>\n</ul>\n<p>Use the Service Locator pattern to achieve any of the following objectives:</p>\n<ul>\n<li>You want to decouple your classes from their dependencies so that these dependencies can be replaced or updated with little or no change to the classes.</li>\n<li>You want to write logic that depends on classes whose concrete implementation is not known at compile time.</li>\n<li>You want to be able to test your classes in isolation, without the dependencies.</li>\n<li>You do not want the logic that locates and manages the dependencies to be in your classes.</li>\n<li>You want to divide your application into loosely coupled modules that can be independently developed, tested, versioned, and deployed.</li>\n</ul>\n<h3 class=\"heading\">&nbsp;</h3>\n<h3 class=\"heading\">Solution</h3>\n<p>Create a service locator that contains references to the services and that encapsulates the logic that locates them. In your classes, use the service locator to obtain service instances. The following diagram illustrates how classes use a service locator.&nbsp;</p>\n<div class=\"caption\">How classes use a service locator</div>\n<p><img id=\"3622491a-3b9f-4368-aee4-493f7fb95027\" style=\"display: block; margin-left: auto; margin-right: auto;\" title=\"Ff648968.3622491a-3b9f-4368-aee4-493f7fb95027(en-us,PandP.10).png\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC340135.png\" alt=\"Ff648968.3622491a-3b9f-4368-aee4-493f7fb95027(en-us,PandP.10).png\" /></p>\n<p>The Service Locator pattern does not describe how to instantiate the services. It describes a way to register services and locate them. Typically, the Service Locator pattern is combined with the Factory pattern and/or the Dependency Injection pattern. This combination allows a service locator to create instances of services.</p>\n</div>\n</div>" ;
          spec:hasPatternDomain          :Domain_web_services .
  
  :AuthorTag_refactoring
          a           cont:AuthorTag ;
          rdfs:label  "refactoring" .
  
  :Requirement_ar-105_1__reports_and_analytics
          a                          spec:Requirement ;
          rdfs:label                 "AR-105.1: Reports and analytics" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Die Funktionalitäten des Systems\n  werden in <i>(1) vordefinierte Reports</i>\n  und <i>(2) explorative Analysen</i>\n  eingeteilt. Die Analysekomponenten sollen sich der Daten auf gleicher Art und\n  Weise, wie die Visualisierungstools, bedienen." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_ar-105__analytics ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Reporting" , "Data Analytics" .
  
  :AuthorTag_management
          a           cont:AuthorTag ;
          rdfs:label  "management" .
  
  :AuthorTag_dependency_model
          a           cont:AuthorTag ;
          rdfs:label  "dependency model" .
  
  :DesignTactic_horizontal_scaling
          a                             gen:DesignTactic ;
          rdfs:label                    "Horizontal Scaling" , "horizontal scaling" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_versatility , :ArchitecturalQuality_scalability , :ArchitecturalQuality_reliability ;
          gen:wikiEntry                 "Horizontal scaling or scaling out typically refers to connecting multiple independent nodes together to provide more processing power." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_discoverability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Discoverability" , "discoverability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_repository , :Project_secoqualities ;
          gen:isQualityAffectedBy  :DesignPattern_offline_reporting , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_caching , :DesignPattern_service-oriented_architecture , :DesignPattern_reflection , :DesignPattern_continual_status_reporting , :DesignPattern_breadcrumbs , :DesignTactic_self-descriptiveness , :DesignPattern_environment_data , :DesignPattern_request_response ;
          gen:relatedQuality       :ArchitecturalQuality_interoperability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_extensibility ;
          gen:wikiEntry            "[Wikipedia Discoverability 2014] Discoverability is a design principle applied within the service-orientation design paradigm which emphasizes making services discoverable by adding interpretable meta-data to increase service reuse and decrease the chance of developing services that overlap in function." ;
          spec:requiredBy          :Domain_abstract .
  
  :Role_test_architect
          a           cont:Role ;
          rdfs:label  "test architect" .
  
  :DesignDecision_kdd-06__embedded_browser
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-06: Embedded Browser" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_syngoplaza ;
          gen:wikiEntry                   "<p><strong>Embedded Browser</strong></p><p>Replacing the old server interfaces with a RESTful interface means that the access to the database is realized through HTTP. In this context, the best patterns and practices can be found in the domain of web applications and used within the Viewer and Patient Browser (PB).</p><p>To use Web and HTTP-optimized frameworks, such as jQuery's AJAX for making rest calls, it is possible to embed a web browser in the&nbsp;Viewer for certain features concerning the loading and displaying of images.&nbsp;</p><p>This solution opens the way for a zero foot-print web-based client. One can start migrading application code to the embedded&nbsp;web page.</p>" ;
          spec:decisionArchitecturalView  "1. Component View" ;
          spec:hasDecisionDomain          :Domain_cust-5__web-based_client ;
          spec:hasDecisionEffectOnQuality
                  :ArchitecturalQuality_stability ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_usability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_performance , :ArchitecturalQuality_maintainability ;
          spec:useDecisionTactic          :DesignTactic_embedded_browsing .
  
  :Author_harbich_stefanie
          a           cont:Author ;
          rdfs:label  "harbich stefanie" .
  
  :DesignPattern_exception_shielding
          a                              gen:DesignPattern ;
          rdfs:label                     "Exception Shielding" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_immunity , :ArchitecturalQuality_security ;
          gen:isAlternativeOf            :DesignTactic_message_protection ;
          gen:wikiEntry                  "The Exception Shielding pattern prevents a service from exposing information about its internal implementation when an exception occurs [MSDN Event Message 2014].This implementation pattern provides a detailed description of that process that is specific to the implementation.  The Exception Shielding pattern involves two participants  The client accesses the Web service he provides the credentials for authentication during the request to the Web service. The service is the Web service that requires authentication of a client prior to authorizing the client." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_distributability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "distributability" ;
          gen:isQualityAffectedBy  :DesignPattern_service-oriented_architecture .
  
  :Requirement_ar-015__usage_tracking___monitoring
          a                          spec:Requirement ;
          rdfs:label                 "AR-015: Usage Tracking & Monitoring" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          gen:wikiEntry              "<p style=\"font-size: small;\"><span style=\"font-size: small;\" data-mce-style=\"font-size: 12pt;\">All interactions between the different stakeholders (users, application) through the platform shall be&nbsp;monitored and tracked by a monitoring agent.</span></p>" ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "API Governance" ;
          spec:requirementPurpose    "Monitoring" , "Data Analytics" .
  
  :DesignPattern_realistic_threshold
          a                              gen:DesignPattern ;
          rdfs:label                     "Realistic Threshold" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_maturity , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_utility , :ArchitecturalQuality_resilience , :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_integrity , :ArchitecturalQuality_safety ;
          gen:isAlternativeOf            :DesignTactic_error_detection ;
          gen:wikiEntry                  "When implementing a system monitor or related techniques to monitor critical functionality the system monitor takes action when something takes an unexpectedly long time. The Realistic Threshold decides how much time should elapse before the system monitor takes action when an error is detected. The elapsed time is a hard real-time constraint on the system execution. The deadlines must be chosen carefully. Detection latency and messaging latency are the two times of interest.  The detection latency should be set based upon the criticality of the functionality. It should be a multiple of the messaging latency- A smaller multiple for extremely critical or unique tasks is recommended and a larger for redundant tasks.  Thresholds for detection of problems should be set realistically. This applies to communications as well as anything counted [Hanmer 2007] pp 110-115.  Relations Error Detection [Hanmer 2007] Detection Patterns pp 110-115." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :Domain_ar-164__modularity
          a           spec:Domain ;
          rdfs:label  "ar-164: modularity" .
  
  gen:hasPosEffectOn  a       owl:ObjectProperty ;
          rdfs:label          "hasPosEffectOn" ;
          rdfs:subPropertyOf  gen:hasEffectOn .
  
  :DesignPattern_tenant-isolated_component
          a                              gen:DesignPattern ;
          rdfs:label                     "Tenant-isolated Component" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_generality , :ArchitecturalQuality_functionality , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_utility , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_agility , :ArchitecturalQuality_uniformity ;
          gen:isAlternativeOf            :DesignTactic_multitenancy ;
          gen:wikiEntry                  "A component shared between tenants avoids influences between tenants regarding assured performance available storage capacity and accessibility of functionality and data.[Cloud Computing Patterns]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  gen:hasPosPatternEffectOnQuality
          a                   owl:ObjectProperty ;
          rdfs:label          "hasPosPatternEffectOnQuality" ;
          rdfs:subPropertyOf  gen:hasPosEffectOnQuality , gen:hasPatternEffectOnQuality .
  
  :Domain_embedded_systems
          a           spec:Domain ;
          rdfs:label  "embedded systems" .
  
  :Domain_ar-159__generic_api
          a           spec:Domain ;
          rdfs:label  "ar-159: generic api" .
  
  :DesignPattern_bulk_synchronous_parallel
          a                              gen:DesignPattern ;
          rdfs:label                     "Bulk Synchronous Parallel" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_integratability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_availability , :ArchitecturalQuality_mobility , :ArchitecturalQuality_operability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_parallel_computing , :DesignTactic_load_distribution ;
          gen:wikiEntry                  "[Tiskin 1998] The Bulk Synchronous Parallel pattern aims to distribute load amoung a set of workers. It is based on lock-step execution across all workers coordinated by a master. Each worker repeats the following steps until the exit condition is reached while the entire process lasts until thereare no more active workers. Each worker read data from input queue Each worker perform local processing based on the read data Each worker push local result along its direct connectionThis pattern has been used in Googles Pregel graph as well as the Apache Hama project..  The following figure illustrates the Bulk Synchronous Parallel pattern." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Bulk_synchronous_parallel .
  
  :SoftwareEngineeringMethod_risk_based_testing_2_0
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Risk Based Testing 2.0" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_risk , :AuthorTag_testing , :AuthorTag_test ;
          gen:wikiEntry            "The Idea behind the Risk Based Testing 2.0 is to learn from past in order to succeed in the future by means of Project histories and forward calculation of potential problems." .
  
  :Requirement_ar-05__compliance_checking
          a                          spec:Requirement ;
          rdfs:label                 "AR-05: Compliance checking" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_shape ;
          gen:wikiEntry              "<span lang=\"EN-US\">The system shall have&nbsp;m</span><span lang=\"EN-US\">echanisms for automatic compliance checking to enable online monitoring and enforce rules and policies during process execution.&nbsp;</span>The automated processes shall be subjected to&nbsp;domain-specific compliance constraints." ;
          spec:containedWithin       :UseCase_adaptation ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Security" ;
          spec:requirementPurpose    "Compliance checking" .
  
  :DesignTactic_script_injection
          a           gen:DesignTactic ;
          rdfs:label  "script injection" .
  
  :DesignDecision_kdd-13
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-13" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p data-mce-style=\"font-size: small;\" style=\"font-size: small;\"><strong><span style=\"font-size: 12pt;\">Variable Reihenfolge der Datenabfrageschritte durch Facettierte Navigation</span></strong></p><p data-mce-style=\"font-size: small;\" style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Die Datenabfrage erfolgt in mehreren Schritten, die in einer Variablen Reihenfolge durchgeführt werde können. Dabei wird zwischen Filter und Facetten unterschieden[1]:</span></p><ul data-mce-style=\"font-size: small;\" style=\"font-size: small;\"><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><strong>Facetten</strong>&nbsp;sind Metadaten-Parameter, wie z.B. Typen von Messdaten oder Gebäudetypen.</span></li><li><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><strong>Filter</strong>&nbsp;sind Parameter, die zur Einschränkung eines Ergebnissatzes dienen (z.B. Zeitspanne oder Zeitgranularität – Tag, Woche, Monat, etc.).</span></li></ul><p data-mce-style=\"font-size: small;\" style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Um die Einschränkung der Ergebnissätze in einer variablen Reihenfolge der Facetten- und Filterauswahl zu ermöglichen, bietet sich eine Facettierte Navigation<a target=\"_blank\" name=\"_ftnref1\" data-mce-href=\"#_ftn1\"></a>[2] an. Eine Facettierte Navigation kann (muss aber nicht) auch eine Freitextsuche anbieten.</span></p><p data-mce-style=\"font-size: small;\" style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><strong>Notes:</strong></span></p><p data-mce-style=\"font-size: small;\" style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">[1] Filters vs. Facets:&nbsp;<a href=\"http://www.nngroup.com/articles/filters-vs-facets/\" data-mce-href=\"http://www.nngroup.com/articles/filters-vs-facets/\">http://www.nngroup.com/articles/filters-vs-facets/</a></span></p><p data-mce-style=\"font-size: small;\" style=\"font-size: small;\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\"><a target=\"_blank\" name=\"_ftn1\" data-mce-href=\"#_ftnref1\"></a>[2] Faceted Search:&nbsp;<a href=\"http://en.wikipedia.org/wiki/Faceted_search\" data-mce-href=\"http://en.wikipedia.org/wiki/Faceted_search\">http://en.wikipedia.org/wiki/Faceted_search</a></span></p>" ;
          spec:decisionArchitecturalView  "III.Laufzeitsicht" ;
          spec:hasDecisionDomain          :Domain_ar-104_2__variable_filtering ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_versatility , :ArchitecturalQuality_usability ;
          spec:useDecisionTactic          :DesignTactic_faceting .
  
  :Requirement_ar-025__perceived_resillience
          a                          spec:Requirement ;
          rdfs:label                 "AR-025: Perceived resillience" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernes ;
          spec:containedWithin       :UseCase_ecosystem ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Operational" ;
          spec:requirementPurpose    "Perceived resillience" .
  
  spec:requiredBy  a          owl:ObjectProperty ;
          rdfs:domain         gen:ArchitecturalQuality ;
          rdfs:label          "isUsedIn" ;
          rdfs:subPropertyOf  spec:address ;
          owl:inverseOf       spec:requires .
  
  :DesignPattern_expendable_hardware
          a                              gen:DesignPattern ;
          rdfs:label                     "Expendable Hardware" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_generality , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_versatility ;
          gen:isAlternativeOf            :DesignTactic_vertical_scaling ;
          gen:wikiEntry                  "[Dyson and Longshaw 2004] pp. 341-343. Prevention of the Hardware to impose restrictive limits on the system. We have to use Hardware that can be expanded to add new processors (or high speed processors) memory disks and network connectivity. The hardware should be sized so that it can aope with the maximum predicted load when it is configured to about half its maximum capacity in the four areas.   Relations Vertical Scaling Vertical scaling would fit to Expendable Hardware due to adding more processors and storage to a computer node to extend its performance." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :UseCase_sa_collaboration
          a           spec:UseCase ;
          rdfs:label  "sa collaboration" .
  
  spec:decisionArchitecturalView
          a            owl:DatatypeProperty ;
          rdfs:domain  spec:DesignDecision ;
          rdfs:range   xsd:string .
  
  :DesignDecision_add-06__secret_project_urls
          a                               spec:DesignDecision ;
          rdfs:label                      "ADD-06: Secret project URLs" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_safiddle ;
          gen:wikiEntry                   "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Secret project URLs</strong></span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">The confidentiality of project data is ensured through the secret URL pattern. Users can share project-specific content with other users by means of an URL only known to them.</span><br></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Examples:&nbsp;</strong></span></p><ul><li><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>saFiddle:</strong> https://workspace.cee.siemens.com/content/00000102/saFiddle/index.html?s=1&amp;<strong>p=MySecredProject</strong></span></li><li><strong style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\">Google docs:</strong><span style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\"> https://docs.google.com/document/d/<strong>13P3p5bA3lslqEJT1BGeTL1L5ZrQq_fSov_56jT9vf0I</strong>/</span><br></li><li><strong style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\">jsFiddle:</strong><span style=\"font-size: 14pt; line-height: 1.3em;\" data-mce-style=\"font-size: 14pt; line-height: 1.3em;\">&nbsp;http://jsfiddle.net/<strong>qL6jknu7</strong>/</span></li></ul>" ;
          spec:decisionArchitecturalView  "Logical view" ;
          spec:hasDecisionDomain          :Domain_ar-05__effective_collaboration , :Domain_ar-04__protect_content_confidentiality ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_security ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_confidentiality , :ArchitecturalQuality_complexity ;
          spec:useDecisionTactic          :DesignTactic_obscuring .
  
  :ArchitecturalQuality_effectiveness
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "effectiveness" , "Effectiveness" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_shared_component , :DesignPattern_replication , :DesignPattern_bulk_synchronous_parallel , :DesignPattern_sharding_pattern , :DesignPattern_pipe_and_filter , :DesignPattern_caching , :DesignPattern_load_balancing , :DesignPattern_dedicated_component , :DesignPattern_event_message , :DesignPattern_queuing , :DesignPattern_tenant-isolated_component , :DesignPattern_peripheral_specialist_elements , :DesignPattern_shared_space , :DesignPattern_map_reduce , :DesignPattern_competing_consumers , :DesignPattern_static_content_hosting_pattern , :DesignTactic_multitenancy , :DesignPattern_scatter_and_gather , :DesignPattern_message_federation , :DesignPattern_execution_orchestrator , :DesignTactic_load_distribution ;
          gen:relatedQuality       :ArchitecturalQuality_scalability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_performance , :ArchitecturalQuality_completeness , :ArchitecturalQuality_accuracy ;
          gen:wikiEntry            "[Wikipedia Effectiveness 2014] Effectiveness is the capability of producing a desired result. When something is deemed effective it means it has an intended or expected outcome or produces a deep vivid impression.  [Ergonomic requirements for office work with visual display terminals 1998] In humancomputer interaction effectiveness is defined as the accuracy and completeness of users tasks while using a system. [Emila Mendes Nile Mosley. 2006]The capability of the software product to enable users to achieve specified goals with accuracy and completeness in a specified context of use." ;
          spec:requiredBy          :Domain_abstract .
  
  :Requirement_ar-08__rapid_specification_authoring
          a                          spec:Requirement ;
          rdfs:label                 "AR-08: Rapid specification authoring" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_safiddle ;
          gen:wikiEntry              "<p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\">Generate technical architecture specifications \"on the fly\" while&nbsp;providing sorting and traceability features&nbsp;as well as coverage&nbsp;analytics.</span></p><p><span style=\"font-size: 14pt;\" data-mce-style=\"font-size: 14pt;\"><strong>Rationale:</strong>&nbsp;MS Word-based architecture specifications are static and too focused on narration. Word provides no coverage&nbsp;analytics and laborious traceability features.</span></p>" ;
          spec:containedWithin       :UseCase_sad_generation ;
          spec:hasRequirementOrigin  :Domain_ar-01__tool_support_for_sad ;
          spec:requirementGroup      "Document generation" ;
          spec:requirementPurpose    "Rapid authoring" .
  
  :DesignTactic_obscuring
          a           gen:DesignTactic ;
          rdfs:label  "obscuring" .
  
  :DesignPattern_caching
          a                              gen:DesignPattern ;
          rdfs:label                     "Caching" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_consistency , :ArchitecturalQuality_maturity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_completeness , :ArchitecturalQuality_mobility , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_utility , :ArchitecturalQuality_complexity , :ArchitecturalQuality_operability , :ArchitecturalQuality_integratability ;
          gen:isAlternativeOf            :DesignTactic_load_distribution , :DesignTactic_no_single_point_of_failure , :DesignTactic_routing ;
          gen:wikiEntry                  "A cache is a component that transparently stores data so that future requests for that data can be served faster. The data that is stored within a cache might be values that have been computed earlier or duplicates of original values that are stored elsewhere. If requested data is contained in the cache (cache hit) this request can be served by simply reading the cache which is comparatively faster. Otherwise (cache miss) the data has to be recomputed or fetched from its original storage location which is comparatively slower. Hence the greater the number of requests that can be served from the cache the faster the overall system performance becomes [Wikipedia Cache (computing) 2014].  In the context of load distribution adispatcher will first lookup if the request has been made before and try to find the previous result to return in the cache in order to save the actual execution. This is usually referred to as Result Cache. This pattern is commonly used in large enterprise application. Memcached is a very commonly deployed cache server. The following figure illustrates the pattern in the context of load distribution." ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_web_services .
  
  :Domain_seco__aspern_
          a           spec:Domain ;
          rdfs:label  "seco (aspern)" .
  
  :DesignTactic_modularization
          a           gen:DesignTactic ;
          rdfs:label  "modularization" .
  
  :DesignPattern_peripheral_specialist_elements
          a                              gen:DesignPattern ;
          rdfs:label                     "Peripheral Specialist Elements" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_mobility , :ArchitecturalQuality_availability , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_completeness , :ArchitecturalQuality_integratability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_operability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_load_distribution , :DesignTactic_no_single_point_of_failure ;
          gen:wikiEntry                  "[Dyson and Longshaw 2004] pp. 295-298. An Internet-technology system has been created using an Application Server Architecture. Introducing functionality that cannot be considered as a mainstream system functionality as used by a sub-set of users only runs for a limited time or interfaces in an unusual way to the outside world. A solution would be to separate extraordinary functionality from thecore application and to implement it into specialist or dedicated elements. These elements should be placed at the periphery of the application and should be executed maintained secured and managed independently.   Relations  No Single Point of Failure An Application Server Architecture has been implemented which is based on No Single point of Failure Load Distribution [Dyson and Longshaw 2004] Extraordinary functionality should be separated and placed at the periphery of the at the periphery of the application pp. 296." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_increase_cohesion
          a                             gen:DesignTactic ;
          rdfs:label                    "increase cohesion" , "Increase Cohesion" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_correctness , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_expressiveness , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_testability , :ArchitecturalQuality_modifiability ;
          gen:wikiEntry                 "Cohesion is a measure of how closely related all the responsibilities data and methods of a class or component are to each other. In a broader sense it represents a measure of whether a class or componenent has a well-defined role within the system." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :Requirement_req_1  a              spec:Requirement ;
          rdfs:label                 "Req 1" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_asperntest ;
          gen:wikiEntry              "<p>Requirement 1:</p><p><br data-mce-bogus=\"1\"></p><p>sadakjhdhs</p>" , "Completely new requirement" ;
          spec:hasRequirementOrigin  :Domain_ar-012__protocols_and_formats , :Domain_none ;
          spec:requirementGroup      "Confidentiality" , "group 1" ;
          spec:requirementPurpose    "Performance improvement" , "Load Balancing" .
  
  :Domain_ar-104_2__variable_filtering
          a           spec:Domain ;
          rdfs:label  "ar-104.2: variable filtering" .
  
  :DesignTactic_dynamic_binding
          a                             gen:DesignTactic ;
          rdfs:label                    "dynamic binding" , "Dynamic Binding" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_modifiability , :ArchitecturalQuality_utility , :ArchitecturalQuality_certainty , :ArchitecturalQuality_sustainability , :ArchitecturalQuality_uniformity ;
          gen:wikiEntry                 "[Wikipedia Late Binding 2014] Late binding or dynamic binding is a mechanism in which the method/operation being called upon an object is looked up by name at runtime. With early binding or static binding the compilation phase fixes all types of variables and expressions. This is usually stored in the compiled program as an offset in a virtual method table (v-table) and is very efficient. With late binding the compiler does not have enough information to verify the method even exists let alone bind to its particular slot on the v-table. Instead the method is looked up by name at runtime.   Late binding" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignPattern_temporal_analytics
          a                              gen:DesignPattern ;
          rdfs:label                     "Temporal Analytics" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ionescu_tudor , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_integrity , :ArchitecturalQuality_dependability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_safety , :ArchitecturalQuality_survivability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_resilience , :ArchitecturalQuality_composability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_availability , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_viability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_composition , :DesignTactic_error_detection , :DesignTactic_adaptation ;
          gen:wikiEntry                  "[Chandramouli et al. 2011] Temporal analytics is used to determine density and burstiness of events to identify possible errors of how values or data is being generated (e.g. sensor defect or defect in software/algorithm). Given the inherent complexity of temporal analytics on big data we need a mechanism whereby analysts can directly express time-based computations easily and succinctly while allowing scalable processing on a cluster.This can enable quick building debugging backtesting and deployment of new algorithms for such applications." , "<h3>Understanding the Links between Decisions and Other Software Artifacts</h3>\n<p>When documenting design decisions, it’s important to establish links to other software artifacts such as requirements and architecture designs. <sup>8</sup> However, although many architectural-decision-capturing templates implicitly mention requirements, establishing and maintaining the right set of traceability links between the decisions and other software artifacts is time-consuming and difficult. But as we’ll see, capturing the right set of links can help increase decisions’ sustainability.<sup>3</sup></p>\n<h3>Avoiding Repetitive Effort</h3>\n<p>Many decisions are based on existing AK in the project or field. For example, in many service-oriented architecture (SOA) projects, service proxies and adapters must integrate legacy systems, each with only a slightly different design. So, each proxy and adapter requires its own decisions, but many of them are similar. Instead of documenting each decision on its own, we would like to reuse the AK and work only with variations of individual decisions, reducing the documentation effort and allowing decisions to be based more on timeproven knowledge.</p>" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_reintegration
          a                              gen:DesignPattern ;
          rdfs:label                     "Reintegration" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_survivability , :ArchitecturalQuality_availability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_robustness , :ArchitecturalQuality_safety , :ArchitecturalQuality_dependability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_recoverability ;
          gen:isAlternativeOf            :DesignTactic_error_handling , :DesignTactic_fault_handling ;
          gen:wikiEntry                  "After correcting a fault the previously faulty element is not necessarily doing useful work yet. The faulty element was either redundant and the application is still available or it wasnt redundant and the application is unavailable.  The Reintegration Pattern recommends following a predetermined procedure to reintegrate a repaired component into the system [Hanmer 2007]pp 233-235.  Relations Error Handling [Hanmer 2007]FaultTreatment Patterns pp 233-235. Fault Handling [Hanmer 2007]FaultTreatment Patterns pp 233-235." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_error_handling
          a                             gen:DesignTactic ;
          rdfs:label                    "Error Handling" , "error handling" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_robustness , :ArchitecturalQuality_viability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_availability , :ArchitecturalQuality_safety , :ArchitecturalQuality_resilience , :ArchitecturalQuality_dependability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_maturity ;
          gen:wikiEntry                 "Error handling aims at transforming a system state that contains one or more errors and possibly faults into an error-free and faultless state." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :DesignDecision_ad-101__service-oriented_architecture
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-101: Service-oriented architecture" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: small;\"><strong style=\"font-size: small;\">Layered service-orientierted architecture</strong></span></p>\n<p style=\"font-size: small;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: small;\">The system follows a service-oriented architecture with three functional layers (see figure below):</span></p>\n<ul style=\"font-size: small;\">\n<li style=\"font-size: small;\"><span style=\"font-family: arial, helvetica, sans-serif; line-height: 1.3em; font-size: small;\"><strong style=\"font-size: small;\">Data layer</strong> - consists of the ETL components, data storage and the Data API for&nbsp;querying data from the DWH. Due to the existing DWH architecture, the data layer is subdivided into three further layers.</span></li>\n<li style=\"font-size: small;\"><span style=\"font-family: arial, helvetica, sans-serif; line-height: 1.3em; font-size: small;\"><strong style=\"font-size: small;\">Application layer</strong> (business logic) - consists of the components, which&nbsp;use the data layer for&nbsp;processing and&nbsp;retrieving data from the warehouse. These components are&nbsp;also used to&nbsp;generate predefined reports and to&nbsp;provide visual and analytical means for performing exploratory analyses. Within this layer, query filters are also parsed and&nbsp;forwarded to the data layer. External tools, such as the analytics server are also assigned to this layer and encapsulated by <em style=\"font-size: small;\">facade</em> classes.</span></li>\n<li style=\"font-size: small;\"><span style=\"font-family: arial, helvetica, sans-serif; line-height: 1.3em; font-size: small;\"><strong style=\"font-size: small;\">Visualization layer</strong> - consists of components used for visualizing&nbsp;the data queried&nbsp;through&nbsp;the application&nbsp;layer. In this layer,&nbsp;no complex processing should be&nbsp;carried out (e.g., costly computation of KPIs).&nbsp;</span></li>\n</ul>\n<p style=\"font-size: small;\">&nbsp;The following diagram illustrates the components of the benchmarks subsystem:</p>\n<div style=\"text-align: center; position: relative; font-size: small;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: small;\"><img src=\"p/AspernES/benchmarks_components.png\" alt=\"\" width=\"582\" height=\"665\" style=\"font-size: small;\"></span></div>\n<div style=\"text-align: center; position: relative; font-size: small;\"><span style=\"font-family: arial, helvetica, sans-serif; font-size: small;\">Component diagram</span></div>\n<div style=\"text-align: center; position: relative; font-size: small;\">&nbsp;</div>\n<br><div style=\"text-align: start;\"><span style=\"text-align: center; line-height: normal;\">The following table provides descriptions of the components from the <font face=\"arial, helvetica, sans-serif\">component diagram.</font></span></div><div style=\"text-align: start;\"><span style=\"text-align: center; line-height: normal;\"><font face=\"arial, helvetica, sans-serif\"><br></font></span></div><table style=\"border-color: rgb(240, 240, 240); margin-left: auto; margin-right: auto; font-size: small;\" border=\"1px\" cellspacing=\"0\" cellpadding=\"5\">\n<tbody style=\"font-size: small;\">\n<tr style=\"font-size: small; background-color: rgb(240, 240, 240);\">\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Component</strong></span></p>\n</td>\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\"><strong>Description</strong></span></p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Data Warehouse (DWH)</span></p>\n</td>\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Central database for storing data extracted from various sources (smart grid, smart buildings, etc.).</span></p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Data API</span></p>\n</td>\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Application programming interface for providing data for the higher layers in a JSON or XML-based format.</span></p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Analytics Services</span></p>\n</td>\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Statistics&nbsp;software and programming interface for performing statistical data analyses (correlation and trend analyses).</span></p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Aspern Extensions&nbsp;(AE)</span></p>\n</td>\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Business logic and programming interface for processing data retrieved via the Data API and preparation for visualization.</span></p>\n</td>\n</tr>\n<tr style=\"font-size: small;\">\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Additional Visualization&nbsp;(AV)</span></p>\n</td>\n<td width=\"317\" style=\"font-size: small;\">\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 12pt;\">Web-based graphical user interface (GUI) for chart-based visualizations of measurement data and KPIs.</span></p>\n</td>\n</tr>\n</tbody>\n</table>" ;
          spec:decisionArchitecturalView  "1. Development View" ;
          spec:hasDecisionDomain          :Domain_ar-102__tool_integration , :Domain_ar-153__scalability , :Domain_ar-101__dwh_querying ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_scalability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_integratability ;
          spec:useDecisionTactic          :DesignTactic_loose_coupling , :DesignTactic_service_orientation , :DesignTactic_layering .
  
  :Author_ct_sad-sra  a  cont:Author ;
          rdfs:label  "ct sad-sra" .
  
  :Domain_ar-010__policy_publishing
          a           spec:Domain ;
          rdfs:label  "ar-010: policy publishing" .
  
  :DesignTactic_self-descriptiveness
          a                             gen:DesignTactic ;
          rdfs:label                    "self-descriptiveness" , "Self-descriptiveness" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_learnability , :ArchitecturalQuality_discoverability , :ArchitecturalQuality_trainability , :ArchitecturalQuality_understandability , :ArchitecturalQuality_likeability , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_usability , :ArchitecturalQuality_installability ;
          gen:wikiEntry                 "[Sapdesignguild Self-descriptiveness [date unknown]] Self-descriptiveness requires that the system describes itself. It is closely related to understandability and one approach to making an application easier to understand." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_flexibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "flexibility" , "Flexibility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_pipes_and_filters_pattern , :DesignPattern_facade , :DesignPattern_module , :DesignPattern_abstract_factory , :DesignPattern_dedicated_component , :DesignPattern_default , :DesignPattern_service_locator , :DesignPattern_enterprise_integration_patterns , :DesignPattern_proxy , :DesignPattern_dedicated_web_and_application_servers , :DesignDecision_ad-201__camunda_process_engine , :DesignDecision_kdd-02__use_camunda_suite , :DesignPattern_template_method , :DesignDecision_kdd-03__platform_architecture , :DesignPattern_message_bus_architecture , :DesignPattern_bridge , :DesignTactic_multitenancy , :DesignTactic_inheritance , :DesignPattern_mediator , :DesignPattern_at-least-once_delivery , :DesignPattern_temporal_analytics , :DesignTactic_abstraction , :DesignPattern_timeout-based_delivery , :DesignDecision_kdd-04__process_architecture , :DesignPattern_chain_of_responsibility , :DesignDecision_kdd-01__high_level_architecture , :DesignPattern_composite , :DesignPattern_data-based_task_trigger , :DesignPattern_layered_architecture , :DesignTactic_convention_over_configuration , :DesignTactic_increase_cohesion , :DesignDecision_kdd-11__document_generation , :DesignPattern_external_configuration_store_pattern , :DesignPattern_exactly-once_delivery , :DesignPattern_shared_component , :DesignPattern_environment_to_task_-_push , :DesignPattern_environment_to_workflow_-_push , :DesignTactic_messaging , :DesignPattern_event-based_task_trigger , :DesignDecision_ad-017__core_services , :DesignPattern_component_configurator , :DesignPattern_tenant-isolated_component , :DesignPattern_state , :DesignPattern_transaction-based_delivery , :DesignPattern_prototype , :DesignTactic_softcoding , :DesignPattern_object_pool , :DesignPattern_strategy , :DesignPattern_cancel_task , :DesignPattern_visitor , :DesignTactic_reduce_coupling , :DesignPattern_adapter , :DesignTactic_layering , :DesignDecision_kdd-09__process_recovery , :DesignPattern_command , :DesignPattern_factory_method , :DesignPattern_decorator , :DesignPattern_runtime_reconfiguration_pattern , :DesignPattern_model-view-controller , :DesignTactic_composition , :DesignPattern_builder ;
          gen:relatedQuality       :ArchitecturalQuality_configurability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_versatility , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_mobility , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_portability , :ArchitecturalQuality_transferability , :ArchitecturalQuality_composability ;
          gen:wikiEntry            "<p><strong>Flexibility</strong></p>\n<p>Flexibility reflects&nbsp;the ease with which a system or component can be modified for use in applications or environments other than those for which it was specifically designed.</p>\n<p><strong>Source:</strong></p>\n<ul>\n<li><a href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?&amp;arnumber=159342\">IEEE Standard Glossary of Software Engineering Terminology</a></li>\n</ul>" ;
          spec:requiredBy          :Domain_abstract .
  
  :Domain_ar-156__usability
          a           spec:Domain ;
          rdfs:label  "ar-156: usability" .
  
  spec:hasRequirementEffectOnDecision
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:Requirement ;
          rdfs:label          "hasEffectOn" ;
          rdfs:subPropertyOf  spec:hasEffectOnDecision .
  
  :DesignPattern_change_array_type
          a                              gen:DesignPattern ;
          rdfs:label                     "Change array type" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1>VIVA64: Changing an array's type</h1>\n\n<p>Sometimes it is necessary (or simply convenient) to present array items in the form of items of another type. The following code example shows dangerous and safe type conversions:</p>\n<pre class=\"clear cleared\"><code><span class=\"kwd\">int</span><span class=\"pln\"> array</span><span class=\"pun\">[</span><span class=\"lit\">4</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pln\"> </span><span class=\"pun\">};</span><span class=\"pln\">\n</span><span class=\"kwd\">enum</span><span class=\"pln\"> </span><span class=\"typ\">ENumbers</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> ZERO</span><span class=\"pun\">,</span><span class=\"pln\"> ONE</span><span class=\"pun\">,</span><span class=\"pln\"> TWO</span><span class=\"pun\">,</span><span class=\"pln\"> THREE</span><span class=\"pun\">,</span><span class=\"pln\"> FOUR </span><span class=\"pun\">};</span><span class=\"pln\">\n</span><span class=\"com\">//safe cast (for MSVC)</span><span class=\"pln\">\n</span><span class=\"typ\">ENumbers</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">enumPtr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">ENumbers</span><span class=\"pln\"> </span><span class=\"pun\">*)(</span><span class=\"pln\">array</span><span class=\"pun\">);</span><span class=\"pln\">\ncout </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> enumPtr</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> </span><span class=\"str\">\" \"</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"com\">//unsafe cast</span><span class=\"pln\">\n</span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">sizetPtr </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">size_t</span><span class=\"pln\"> </span><span class=\"pun\">*)(</span><span class=\"pln\">array</span><span class=\"pun\">);</span><span class=\"pln\">\ncout </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> sizetPtr</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">&lt;&lt;</span><span class=\"pln\"> endl</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"com\">//Output on 32-bit system: 2 2</span><span class=\"pln\">\n</span><span class=\"com\">//Output on 64-bit system: 2 17179869187</span></code></pre>\n<p>As you may see, the output result of the program differs in the 32-bit and 64-bit versions. On the 32-bit system, the access to the array items is correct because the sizes of the types <a href=\"http://www.viva64.com/en/t/0044/\" class=\"link-inner\" target=\"_blank\">size_t</a> and \"int\" coincide, so we see the result \"2 2\".</p>\n<p>On the 64-bit system, the output result is \"2 17179869187\" because it is the value 17179869187 which is located in the 1-st item of the array <span class=\" span-i\">sizetPtr</span> (see Figure 1). Sometimes it is this behavior you need but usually it is considered an error.</p>\n<p><span class=\" span-i\">Note. The type enum in Visual C++ compiler by default coincides with the type int, i.e. it is a 32-bit type. You may use enum of another size only with the help of an extension considered non-standard in Visual C++. So the example above is correct from the viewpoint of Visual C++ compiler but from the viewpoint of other compilers conversion of a pointer to int items to a pointer to enum items may be also incorrect.</span></p>\n<div class=\"div-image\" style=\"position: relative;\"><a href=\"http://www.viva64.com/media/images/content/l/14_Pattern_06_Changing_an_arrays_type/image1.png\" class=\"link-image\" target=\"_blank\"><img src=\"http://www.viva64.com/media/images/content/l/14_Pattern_06_Changing_an_arrays_type/image1.png\" alt=\"Picture 1073343\"></a></div>\n<p><span class=\" span-i\">Figure 1 - Arrangement of array items in memory</span></p>\n<p>To get rid of this incorrectness you should refuse to use unsafe type conversions and modify the program. Another way is to create a new array and copy the values from the original array into it.</p>\n<p>You may encounter the described error pattern most often in the code fragments where programmers try to use pointer values as unique 32-bit identifiers.</p>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :Role_configuration_manager
          a           cont:Role ;
          rdfs:label  "configuration manager" .
  
  :SoftwareEngineeringMethod_theory_of_constraints__toc_
          a                             gen:SoftwareEngineeringMethod ;
          rdfs:label                    "Theory of Constraints (TOC)" ;
          gen:endorsements              "0"^^xsd:int ;
          gen:entryType                 "Method" ;
          gen:hasKnowledgeAuthor        :Author_ionescu_tudor ;
          gen:hasKnowledgeProject       :Project_isdcatalog ;
          gen:hasMethodEffectOnQuality  :ArchitecturalQuality_complexity ;
          gen:hasMethodPhase            :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole             :Role_technical_project_manager ;
          gen:wikiEntry                 "Complex organizational problem needs resolving, but first root cause or core problem should be identified. Speed of development must be significantly increased without additional investments. Throughput of organization must be increased without substantional additional investments." .
  
  :DesignTactic_messaging
          a                             gen:DesignTactic ;
          rdfs:label                    "messaging" , "Messaging" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_portability , :ArchitecturalQuality_agility , :ArchitecturalQuality_integratability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_replaceability , :ArchitecturalQuality_operability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_interoperability , :ArchitecturalQuality_wrappability , :ArchitecturalQuality_flexibility ;
          gen:wikiEntry                 "Anenterprise messaging system(EMS) is a set of published enterprise-wide standards that allows organizations to send semantically precise messages between computer systems. EMS systems promoteloosely coupled architectures that allow changes in the formats of messages to have minimum impact on message subscribers. EMS systems are facilitated by the use of structured messages (such as usingXMLorJSON) and appropriate protocols such asDDSMSMQAMQPorSOAPwithweb services. [Wikipedia Enterprise Messaging System 2014]" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_uniformity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "Uniformity" , "uniformity" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_dedicated_component , :DesignTactic_multitenancy , :DesignTactic_inheritance , :DesignPattern_abstract_factory , :DesignPattern_tenant-isolated_component , :DesignPattern_reflection , :DesignPattern_shared_component , :DesignTactic_dynamic_binding ;
          gen:relatedQuality       :ArchitecturalQuality_usability ;
          gen:wikiEntry            "[Businessdictionary Uniformity [date unknown]] When speaking of Uniformity a complete or very high degree ofcomparability between two or more alternative processes products qualifications data sets systems etc. is meant.Uniformity impliesconsistency in lack ofvariation between theitems being compared over along periodand across a wide range. [Kaur and Sharma 2004]Uniformityrefers toconforming to one principle standard or rule. Software development is intended to be consistent.  Relations Inheritance Subclasses with the same Superclass are highly comparable in most of the cases. Dynamic Binding [Businessdictionary Uniformity [date unknown]] Methods using the tacit c dynamic binding bear also great assemblence with each other - in other words they are uniform." ;
          spec:requiredBy          :Domain_abstract .
  
  :Domain_ar-023__integrated_services
          a           spec:Domain ;
          rdfs:label  "ar-023: integrated services" .
  
  :DesignPattern_model-view-controller
          a                              gen:DesignPattern ;
          rdfs:label                     "Model-View-Controller" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza , :Project_wiki , :Project_aspernbm ;
          gen:hasNegPatternEffectOnQuality
                  :ArchitecturalQuality_complexity , :ArchitecturalQuality_extensibility ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_accessibility ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_compatibility , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_testability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_understandability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_performance , :ArchitecturalQuality_reusability ;
          gen:isAlternativeOf            :DesignTactic_event_handling , :DesignTactic_reduce_coupling , :DesignTactic_separation_of_concerns , :DesignTactic_delegated_event_handling , :DesignTactic_separated_presentation , :DesignTactic_data_access , :DesignTactic_abstraction ;
          gen:wikiEntry                  "<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Model–view–controller</h1>\n\t\t\t\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\">From Wikipedia, the free encyclopedia</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#mw-head\" target=\"_blank\">navigation</a>, \t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#p-search\" target=\"_blank\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><p><b>Model–view–controller</b> (<b>MVC</b>) is a software <a href=\"https://en.wikipedia.org/wiki/Architectural_pattern\" title=\"Architectural pattern\" target=\"_blank\">architectural pattern</a> for implementing <a href=\"https://en.wikipedia.org/wiki/User_interface\" title=\"User interface\" target=\"_blank\">user interfaces</a>. It divides a given software application into three interconnected parts, so as to separate internal representations of information from the ways that information is presented to or accepted from the user.<sup id=\"cite_ref-1\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-1\" target=\"_blank\"><span>[</span>1<span>]</span></a></sup><sup id=\"cite_ref-2\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-2\" target=\"_blank\"><span>[</span>2<span>]</span></a></sup></p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#\" id=\"togglelink\" target=\"_blank\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Overview\" target=\"_blank\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Overview</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Components\" target=\"_blank\"><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Components</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Interactions\" target=\"_blank\"><span class=\"tocnumber\">1.2</span> <span class=\"toctext\">Interactions</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Use_in_web_applications\" target=\"_blank\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Use in web applications</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#History\" target=\"_blank\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">History</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#See_also\" target=\"_blank\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#References\" target=\"_blank\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#External_links\" target=\"_blank\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Overview\">Overview</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"https://en.wikipedia.org/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=1\" title=\"Edit section: Overview\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>As with other software patterns, MVC expresses the \"core of the solution\" to a problem while allowing it to be adapted for each system.<sup id=\"cite_ref-gof_3-0\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-gof-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup> Particular MVC architectures can vary significantly from the traditional description here.<sup id=\"cite_ref-4\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-4\" target=\"_blank\"><span>[</span>4<span>]</span></a></sup></p>\n<h3><span class=\"mw-headline\" id=\"Components\"><span id=\"COMPONENTS\"></span>Components</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"https://en.wikipedia.org/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=2\" title=\"Edit section: Components\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"thumb tright\">\n<div class=\"thumbinner\" style=\"width:202px;\"><a href=\"https://en.wikipedia.org/wiki/File:MVC-Process.svg\" class=\"image\" target=\"_blank\"><img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/200px-MVC-Process.svg.png\" width=\"200\" height=\"220\" class=\"thumbimage\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/300px-MVC-Process.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/400px-MVC-Process.svg.png 2x\" data-file-width=\"500\" data-file-height=\"550\"></a>\n<div class=\"thumbcaption\">\n<div class=\"magnify\"><a href=\"https://en.wikipedia.org/wiki/File:MVC-Process.svg\" class=\"internal\" title=\"Enlarge\" target=\"_blank\"></a></div>\nA typical collaboration of the MVC components</div>\n</div>\n</div>\n<p>The central component of MVC, the <i>model</i>, captures the behavior of the application in terms of its <a href=\"https://en.wikipedia.org/wiki/Problem_domain\" title=\"Problem domain\" target=\"_blank\">problem domain</a>, independent of the user interface.<sup id=\"cite_ref-5\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-5\" target=\"_blank\"><span>[</span>5<span>]</span></a></sup> The model directly manages the data, logic and rules of the application. A <i>view</i> can be any output representation of information, such as a chart or a diagram; multiple views of the same information are possible, such as a bar chart for management and a tabular view for accountants. The third part, the <i>controller</i>, accepts input and converts it to commands for the model or view.<sup id=\"cite_ref-6\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-6\" target=\"_blank\"><span>[</span>6<span>]</span></a></sup></p>\n<h3></h3></div></div>" , "<h1 id=\"pageTitle\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Model-View-Controller</span></h1><p>The Model-View-Controller (MVC) design pattern assigns objects in an application one of three roles: model, view, or controller. The pattern defines not only the roles objects play in the application, it defines the way objects communicate with each other. Each of the three types of objects is separated from the others by abstract boundaries and communicates with objects of the other types across those boundaries. The collection of objects of a certain MVC type in an application is sometimes referred to as a <em>layer</em>—for example, model layer.</p><p>MVC is central to a good design for an application. The benefits of adopting this pattern are numerous. Many objects in these applications tend to be more reusable, and their interfaces tend to be better defined. Applications having an MVC design are also more easily extensible than other applications. Moreover, many technologies and architectures are based on MVC and require that your custom objects play one of the MVC roles.</p><figure class=\"figure\"><img src=\"https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/Art/model_view_controller.jpg\" alt=\"Model-View-Controller design pattern\" width=\"440\" height=\"125\" data-mce-src=\"https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/Art/model_view_controller.jpg\"></figure><section><a title=\"Model Objects\" target=\"_blank\" name=\"//apple_ref/doc/uid/TP40008195-CH32-SW3\" class=\"mce-item-anchor\" href=\"javascript:saFiddle();\"></a><h2 class=\"jump\"><span style=\"font-size: 12pt;\">Model Objects</span></h2><p>Model objects encapsulate the data specific to an application and define the logic and computation that manipulate and process that data. For example, a model object might represent a character in a game or a contact in an address book. A model object can have to-one and to-many relationships with other model objects, and so sometimes the model layer of an application effectively is one or more object graphs. Much of the data that is part of the persistent state of the application (whether that persistent state is stored in files or databases) should reside in the model objects after the data is loaded into the application. Because model objects represent knowledge and expertise related to a specific problem domain, they can be reused in similar problem domains. Ideally, a model object should have no explicit connection to the view objects that present its data and allow users to edit that data—it should not be concerned with user-interface and presentation issues.</p><p><i>Communication:</i> User actions in the view layer that create or modify data are communicated through a controller object and result in the creation or updating of a model object. When a model object changes (for example, new data is received over a network connection), it notifies a controller object, which updates the appropriate view objects.</p></section><section><a title=\"View Objects\" target=\"_blank\" name=\"//apple_ref/doc/uid/TP40008195-CH32-SW2\" class=\"mce-item-anchor\" href=\"javascript:closePopup(this);\"></a><h2 class=\"jump\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">View Objects</span></h2><p>A view object is an object in an application that users can see. A view object knows how to draw itself and can respond to user actions. A major purpose of view objects is to display data from the application’s model objects and to enable the editing of that data. Despite this, view objects are typically decoupled from model objects in an MVC application.</p><p>Because you typically reuse and reconfigure them, view objects provide consistency between applications. Both the UIKit and AppKit frameworks provide collections of view classes, and Interface Builder offers dozens of view objects in its Library.</p><p><i>Communication:</i> View objects learn about changes in model data through the application’s controller objects and communicate user-initiated changes—for example, text entered in a text field—through controller objects to an application’s model objects.</p></section><section><a title=\"Controller Objects\" target=\"_top\" name=\"//apple_ref/doc/uid/TP40008195-CH32-SW4\" class=\"mce-item-anchor\"></a><h2 class=\"jump\"><span data-mce-style=\"font-size: 12pt;\" style=\"font-size: 12pt;\">Controller Objects</span></h2><p>A controller object acts as an intermediary between one or more of an application’s view objects and one or more of its model objects. Controller objects are thus a conduit through which view objects learn about changes in model objects and vice versa. Controller objects can also perform setup and coordinating tasks for an application and manage the life cycles of other objects.</p><p><i>Communication:</i> A controller object interprets user actions made in view objects and communicates new or changed data to the model layer. When model objects change, a controller object communicates that new model data to the view objects so that they can display it.</p></section><div id=\"seeAlsoSection\" style=\"position: relative;\"></div><p></p>" , "<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Model–view–controller</h1>\n\t\t\t\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\" style=\"position: relative;\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\" style=\"position: relative;\">From Wikipedia, the free encyclopedia *****</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\" style=\"position: relative;\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\" style=\"position: relative;\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"#mw-head\">navigation</a>, \t\t\t\t\t<a href=\"#p-search\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\" style=\"position: relative;\"><p><b>Model–view–controller</b> (<b>MVC</b>) is a software <a href=\"/wiki/Architectural_pattern\" title=\"Architectural pattern\">architectural pattern</a> for implementing <a href=\"/wiki/User_interface\" title=\"User interface\">user interfaces</a>. It divides a given software application into three interconnected parts, so as to separate internal representations of information from the ways that information is presented to or accepted from the user.<sup id=\"cite_ref-1\" class=\"reference\"><a href=\"#cite_note-1\"><span>[</span>1<span>]</span></a></sup><sup id=\"cite_ref-2\" class=\"reference\"><a href=\"#cite_note-2\"><span>[</span>2<span>]</span></a></sup></p>\n<p></p>\n<div id=\"toc\" class=\"toc\" style=\"position: relative;\">\n<div id=\"toctitle\" style=\"position: relative;\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"#\" id=\"togglelink\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Overview\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Overview</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#Components\"><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Components</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"#Interactions\"><span class=\"tocnumber\">1.2</span> <span class=\"toctext\">Interactions</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"#Use_in_web_applications\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Use in web applications</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"#History\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">History</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"#See_also\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#References\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"#External_links\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Overview\">Overview</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=1\" title=\"Edit section: Overview\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>As with other software patterns, MVC expresses the \"core of the solution\" to a problem while allowing it to be adapted for each system.<sup id=\"cite_ref-gof_3-0\" class=\"reference\"><a href=\"#cite_note-gof-3\"><span>[</span>3<span>]</span></a></sup> Particular MVC architectures can vary significantly from the traditional description here.<sup id=\"cite_ref-4\" class=\"reference\"><a href=\"#cite_note-4\"><span>[</span>4<span>]</span></a></sup></p>\n<h3><span class=\"mw-headline\" id=\"Components\"><span id=\"COMPONENTS\"></span>Components</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=2\" title=\"Edit section: Components\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"thumb tright\" style=\"position: relative;\">\n<div class=\"thumbinner\" style=\"width: 202px; position: relative;\"><a href=\"/wiki/File:MVC-Process.svg\" class=\"image\"><img alt=\"\" src=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/200px-MVC-Process.svg.png\" width=\"200\" height=\"220\" class=\"thumbimage\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/300px-MVC-Process.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/400px-MVC-Process.svg.png 2x\" data-file-width=\"500\" data-file-height=\"550\"></a>\n<div class=\"thumbcaption\" style=\"position: relative;\">\n<div class=\"magnify\" style=\"position: relative;\"><a href=\"/wiki/File:MVC-Process.svg\" class=\"internal\" title=\"Enlarge\"></a></div>\nA typical collaboration of the MVC components</div>\n</div>\n</div>\n<p>The central component of MVC, the <i>model</i>, captures the behavior of the application in terms of its <a href=\"/wiki/Problem_domain\" title=\"Problem domain\">problem domain</a>, independent of the user interface.<sup id=\"cite_ref-5\" class=\"reference\"><a href=\"#cite_note-5\"><span>[</span>5<span>]</span></a></sup> The model directly manages the data, logic and rules of the application. A <i>view</i> can be any output representation of information, such as a chart or a diagram; multiple views of the same information are possible, such as a bar chart for management and a tabular view for accountants. The third part, the <i>controller</i>, accepts input and converts it to commands for the model or view.<sup id=\"cite_ref-6\" class=\"reference\"><a href=\"#cite_note-6\"><span>[</span>6<span>]</span></a></sup></p>\n<h3><span class=\"mw-headline\" id=\"Interactions\"><span id=\"MODEL\"></span><span id=\"VIEW\"></span><span id=\"CONTROLLER\"></span>Interactions</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=3\" title=\"Edit section: Interactions\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>In addition to dividing the application into three kinds of components, the model–view–controller design defines the interactions between them.<sup id=\"cite_ref-posa_7-0\" class=\"reference\"><a href=\"#cite_note-posa-7\"><span>[</span>7<span>]</span></a></sup></p>\n<ul>\n<li>A <b>controller</b> can send commands to the model to update the model's state (e.g., editing a document). It can also send commands to its associated view to change the view's presentation of the model (e.g., by scrolling through a document).</li>\n<li>A <b>model</b> stores data that is retrieved by the controller and displayed in the view. Whenever there is a change to the data it is updated by the controller.</li>\n<li>A <b>view</b> requests information from the model that it uses to generate an output representation to the user.</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Use_in_web_applications\">Use in web applications</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=4\" title=\"Edit section: Use in web applications\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Although originally developed for desktop computing, model–view–controller has been widely adopted as an architecture for <a href=\"/wiki/World_Wide_Web\" title=\"World Wide Web\">World Wide Web</a> applications in major <a href=\"/wiki/Programming_languages\" title=\"Programming languages\" class=\"mw-redirect\">programming languages</a>. Several commercial and noncommercial <a href=\"/wiki/Web_application_framework\" title=\"Web application framework\">web application frameworks</a> have been created that enforce the pattern. These <a href=\"/wiki/Software_framework\" title=\"Software framework\">frameworks</a> vary in their interpretations, mainly in the way that the MVC responsibilities are divided between the <a href=\"/wiki/Client%E2%80%93server_model\" title=\"Client–server model\">client and server</a>.<sup id=\"cite_ref-leff_8-0\" class=\"reference\"><a href=\"#cite_note-leff-8\"><span>[</span>8<span>]</span></a></sup></p>\n<p>Early web MVC frameworks took a <a href=\"/wiki/Thin_client\" title=\"Thin client\">thin client</a> approach that placed almost the entire model, view and controller logic on the server. In this approach, the client sends either <a href=\"/wiki/Hyperlink\" title=\"Hyperlink\">hyperlink</a> requests or <a href=\"/wiki/Form_(web)\" title=\"Form (web)\" class=\"mw-redirect\">form</a> input to the controller and then receives a complete and updated web page (or other document) from the view; the model exists entirely on the server.<sup id=\"cite_ref-leff_8-1\" class=\"reference\"><a href=\"#cite_note-leff-8\"><span>[</span>8<span>]</span></a></sup> As client technologies have matured, frameworks such as <a href=\"/wiki/AngularJS\" title=\"AngularJS\">AngularJS</a>, <a href=\"/wiki/Ember.js\" title=\"Ember.js\">Ember.js</a>, <a href=\"/wiki/JavaScriptMVC\" title=\"JavaScriptMVC\">JavaScriptMVC</a> and <a href=\"/wiki/Backbone.js\" title=\"Backbone.js\">Backbone</a> have been created that allow the MVC components to execute partly on the client (also see <a href=\"/wiki/Ajax_(programming)\" title=\"Ajax (programming)\">Ajax</a>).</p>\n<h2><span class=\"mw-headline\" id=\"History\">History</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=5\" title=\"Edit section: History\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>MVC was one of the seminal insights in the early development of <a href=\"/wiki/Graphical_user_interfaces\" title=\"Graphical user interfaces\" class=\"mw-redirect\">graphical user interfaces</a>, and one of the first approaches to describe and implement software constructs in terms of their <a href=\"/wiki/Single_responsibility_principle\" title=\"Single responsibility principle\">responsibilities</a>.<sup id=\"cite_ref-9\" class=\"reference\"><a href=\"#cite_note-9\"><span>[</span>9<span>]</span></a></sup></p>\n<p><a href=\"/wiki/Trygve_Reenskaug\" title=\"Trygve Reenskaug\">Trygve Reenskaug</a> introduced MVC into Smalltalk-76 while visiting <a href=\"/wiki/PARC_(company)\" title=\"PARC (company)\">Xerox Parc</a><sup id=\"cite_ref-page_trygver_10-0\" class=\"reference\"><a href=\"#cite_note-page_trygver-10\"><span>[</span>10<span>]</span></a></sup><sup id=\"cite_ref-notes1_11-0\" class=\"reference\"><a href=\"#cite_note-notes1-11\"><span>[</span>11<span>]</span></a></sup> in the 1970s. In the 1980s, Jim Althoff and others implemented a version of MVC for the <a href=\"/wiki/Smalltalk-80\" title=\"Smalltalk-80\" class=\"mw-redirect\">Smalltalk-80</a> class library. It was only later, in a 1988 article in <a href=\"/wiki/The_Journal_of_Object_Technology\" title=\"The Journal of Object Technology\">The Journal of Object Technology</a>, that MVC was expressed as a general concept.<sup id=\"cite_ref-art1_12-0\" class=\"reference\"><a href=\"#cite_note-art1-12\"><span>[</span>12<span>]</span></a></sup></p>\n<p>The MVC pattern has subsequently evolved,<sup id=\"cite_ref-Fowler_13-0\" class=\"reference\"><a href=\"#cite_note-Fowler-13\"><span>[</span>13<span>]</span></a></sup> giving rise to variants such as <a href=\"/wiki/Hierarchical_model%E2%80%93view%E2%80%93controller\" title=\"Hierarchical model–view–controller\">HMVC</a>, <a href=\"/wiki/Model%E2%80%93view%E2%80%93adapter\" title=\"Model–view–adapter\">MVA</a>, <a href=\"/wiki/Model%E2%80%93view%E2%80%93presenter\" title=\"Model–view–presenter\">MVP</a>, <a href=\"/wiki/Model_View_ViewModel\" title=\"Model View ViewModel\">MVVM</a>, and others that adapted Model View Controller to different contexts.</p></div></div>" , "<h1 class=\"title\">Model-View-Controller</h1>\n<div id=\"mainSection\" style=\"position: relative;\">\n<h2 class=\"subheading\">Context</h2>\n<p>The purpose of many computer systems is to retrieve data from a data store and display it for the user. After the user changes the data, the system stores the updates in the data store. Because the key flow of information is between the data store and the user interface, you might be inclined to tie these two pieces together to reduce the amount of coding and to improve application performance. However, this seemingly natural approach has some significant problems. One problem is that the user interface tends to change much more frequently than the data storage system. Another problem with coupling the data and user interface pieces is that business applications tend to incorporate business logic that goes far beyond data transmission.</p>\n<h2 class=\"subheading\">Problem</h2>\n<p>How do you modularize the user interface functionality of a Web application so that you can easily modify the individual parts?</p>\n<h2 class=\"subheading\">Forces</h2>\n<p>The following forces act on a system within this context and must be reconciled as you consider a solution to the problem:</p>\n<ul>\n<li>\n<p>User interface logic tends to change more frequently than business logic, especially in Web-based applications. For example, new user interface pages may be added, or existing page layouts may be shuffled around. After all, one of the advantages of a Web-based thin-client application is the fact that you can change the user interface at any time without having to redistribute the application. If presentation code and business logic are combined in a single object, you have to modify an object containing business logic every time you change the user interface. This is likely to introduce errors and require the retesting of all business logic after every minimal user interface change.</p>\n</li>\n<li>\n<p>In some cases, the application displays the same data in different ways. For example, when an analyst prefers a spreadsheet view of data whereas management prefers a pie chart of the same data. In some rich-client user interfaces, multiple views of the same data are shown at the same time. If the user changes data in one view, the system must update all other views of the data automatically.</p>\n</li>\n<li>\n<p>Designing visually appealing and efficient HTML pages generally requires a different skill set than does developing complex business logic. Rarely does a person have both skill sets. Therefore, it is desirable to separate the development effort of these two parts.</p>\n</li>\n<li>\n<p>User interface activity generally consists of two parts: presentation and update. The presentation part retrieves data from a data source and formats the data for display. When the user performs an action based on the data, the update part passes control back to the business logic to update the data.</p>\n</li>\n<li>\n<p>In Web applications, a single page request combines the processing of the action associated with the link that the user selected with the rendering of the target page. In many cases, the target page may not be directly related to the action. For example, imagine a simple Web application that shows a list of items. The user returns to the main list page after either adding an item to the list or deleting an item from the list. Therefore, the application must render the same page (the list) after executing two quite different commands (adding or deleting)-all within the same HTTP request.</p>\n</li>\n<li>\n<p>User interface code tends to be more device-dependent than business logic. If you want to migrate the application from a browser-based application to support personal digital assistants (PDAs) or Web-enabled cell phones, you must replace much of the user interface code, whereas the business logic may be unaffected. A clean separation of these two parts accelerates the migration and minimizes the risk of introducing errors into the business logic.</p>\n</li>\n<li>\n<p>Creating automated tests for user interfaces is generally more difficult and time-consuming than for business logic. Therefore, reducing the amount of code that is directly tied to the user interface enhances the testability of the application.</p>\n</li>\n</ul>\n<h2 class=\"subheading\">Solution</h2>\n<p>The <em>Model-View-Controller (MVC)</em> pattern separates the modeling of the domain, the presentation, and the actions based on user input into three separate classes [Burbeck92]:</p>\n<ul>\n<li>\n<p><strong>Model</strong>. The model manages the behavior and data of the application domain, responds to requests for information about its state (usually from the view), and responds to instructions to change state (usually from the controller).</p>\n</li>\n<li>\n<p><strong>View</strong>. The view manages the display of information.</p>\n</li>\n<li>\n<p><strong>Controller</strong>. The controller interprets the mouse and keyboard inputs from the user, informing the model and/or the view to change as appropriate.</p>\n</li>\n</ul>\n<p>&nbsp;</p>\n<p>Figure 1 depicts the structural relationship between the three objects.</p>\n<p><img id=\"des_MVC_Fig01\" title=\"Ff649643.des_MVC_Fig01(en-us,PandP.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC114765.gif\" alt=\"Ff649643.des_MVC_Fig01(en-us,PandP.10).gif\"></p>\n<p>Figure 1: MVC class structure</p>\n<p>It is important to note that both the view and the controller depend on the model. However, the model depends on neither the view nor the controller. This is one the key benefits of the separation. This separation allows the model to be built and tested independent of the visual presentation. The separation between view and controller is secondary in many rich-client applications, and, in fact, many user interface frameworks implement the roles as one object. In Web applications, on the other hand, the separation between view (the browser) and controller (the server-side components handling the HTTP request) is very well defined.&nbsp;</p>\n<p><em>Model-View-Controller </em>is a fundamental design pattern for the separation of user interface logic from business logic. Unfortunately, the popularity of the pattern has resulted in a number of faulty descriptions. In particular, the term \"controller\" has been used to mean different things in different contexts. Fortunately, the advent of Web applications has helped resolve some of the ambiguity because the separation between the view and the controller is so apparent.</p>\n<h3 class=\"subheading\">Variations</h3>\n<p>The passive model is employed when one controller manipulates the model exclusively. The controller modifies the model and then informs the view that the model has changed and should be refreshed (see Figure 2). The model in this scenario is completely independent of the view and the controller, which means that there is no means for the model to report changes in its state. The HTTP protocol is an example of this. There is no simple way in the browser to get asynchronous updates from the server. The browser displays the view and responds to user input, but it does not detect changes in the data on the server. Only when the user explicitly requests a refresh is the server interrogated for changes.</p>\n<p><img id=\"des_MVC_Fig02\" title=\"Ff649643.des_MVC_Fig02(en-us,PandP.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC108622.gif\" alt=\"Ff649643.des_MVC_Fig02(en-us,PandP.10).gif\"></p>\n<p>Figure 2: Behavior of the passive model</p>\n<p>The active model is used when the model changes state without the controller's involvement. This can happen when other sources are changing the data and the changes must be reflected in the views. Consider a stock-ticker display. You receive stock data from an external source and want to update the views (for example, a ticker band and an alert window) when the stock data changes. Because only the model detects changes to its internal state when they occur, the model must notify the views to refresh the display.&nbsp;</p>\n<p>However, one of the motivations of using the <em>MVC</em> pattern is to make the model independent from of the views. If the model had to notify the views of changes, you would reintroduce the dependency you were looking to avoid. Fortunately, the <a href=\"https://msdn.microsoft.com/en-us/library/ff649896.aspx\"><em>Observer</em></a> pattern [Gamma95] provides a mechanism to alert other objects of state changes without introducing dependencies on them. The individual views implement the <em>Observer</em>interface and register with the model. The model tracks the list of all observers that subscribe to changes. When a model changes, the model iterates through all registered observers and notifies them of the change. This approach is often called \"publish-subscribe.\" The model never requires specific information about any views. In fact, in scenarios where the controller needs to be informed of model changes (for example, to enable or disable menu options), all the controller has to do is implement the<em>Observer </em>interface and subscribe to the model changes. In situations where there are many views, it makes sense to define multiple subjects, each of which describes a specific type of model change. Each view can then subscribe only to types of changes that are relevant to the view.</p>\n<p>Figure 3 shows the structure of the active MVC using <em>Observer</em> and how the observer isolates the model from referencing views directly.</p>\n<p><img id=\"des_MVC_Fig03\" title=\"Ff649643.des_MVC_Fig03(en-us,PandP.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC111180.gif\" alt=\"Ff649643.des_MVC_Fig03(en-us,PandP.10).gif\"></p>\n<p>Figure 3: Using Observer to decouple the model from the view in the active model</p>\n<p>&nbsp;</p>\n<p>Figure 4 illustrates how the <em>Observer</em> notifies the views when the model changes. Unfortunately, there is no good way to demonstrate the separation of model and view in a Unified Modeling Language (UML) sequence diagram, because the diagram represents instances of objects rather than classes and interfaces.</p>\n<p><img id=\"des_MVC_Fig04\" title=\"Ff649643.des_MVC_Fig04(en-us,PandP.10).gif\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC100217.gif\" alt=\"Ff649643.des_MVC_Fig04(en-us,PandP.10).gif\"></p>\n<p>Figure 4: Behavior of the active model<span style=\"font-size: small;\">&nbsp;</span></p>\n<h2 class=\"subheading\">Testing Considerations</h2>\n<p>Testability is greatly enhanced when you employ employing <em>Model-View-Controller</em>. Testing components becomes difficult when they are highly interdependent, especially with user interface components. These types of components often require a complex setup just to test a simple function. Worse, when an error occurs, it is hard to isolate the problem to a specific component. This is the reason why separation of concerns is such an important architectural driver. <em>MVC</em> separates the concern of storing, displaying, and updating data into three components that can be tested individually.</p>\n<p>Apart from the problems posed by interdependencies, user interface frameworks are inherently difficult to test. Testing user interfaces either requires tedious (and error-prone) manual testing or testing scripts that simulate user actions. These scripts tend to be time-consuming to develop and brittle. <em>MVC</em> does not eliminate the need for user interface testing, but separating the model from the presentation logic allows the model to be tested independent of the presentation and reduces the number of user interface test cases.</p>\n<h2 class=\"subheading\">Resulting Context</h2>\n<p>Architecting the presentation layer around the <em>MVC</em> pattern results in the following benefits and liabilities:</p>\n<h3 class=\"subheading\">Benefits&nbsp;</h3>\n<ul>\n<li>\n<p><strong>Supports multiple views</strong>. Because the view is separated from the model and there is no direct dependency from the model to the view, the user interface can display multiple views of the same data at the same time. For example, multiple pages in a Web application may use the same model objects. Another example is a Web application that allows the user to change the appearance of the pages. These pages display the same data from the shared model, but show it in a different way.</p>\n</li>\n<li>\n<p><strong>Accommodates change</strong>. User interface requirements tend to change more rapidly than business rules. Users may prefer different colors, fonts, screen layouts, and levels of support for new devices such as cell phones or PDAs. Because the model does not depend on the views, adding new types of views to the system generally does not affect the model. As a result, the scope of change is confined to the view. This pattern lays the foundation for further specializations of this pattern such as <a href=\"https://msdn.microsoft.com/en-us/library/ff649595.aspx\"><em>Page Controller</em></a>and <a href=\"https://msdn.microsoft.com/en-us/library/ff648617.aspx\"><em>Front Controller</em></a>.</p>\n</li>\n</ul>\n<h3 class=\"subheading\">Liabilities</h3>\n<ul>\n<li>\n<p><strong>Complexity</strong>. The <em>MVC</em> pattern introduces new levels of indirection and therefore increases the complexity of the solution slightly. It also increases the event-driven nature of the user-interface code, which can become more difficult to debug.</p>\n</li>\n<li>\n<p><strong>Cost of frequent updates</strong><em>.</em> Decoupling the model from the view does not mean that developers of the model can ignore the nature of the views. For example, if the model undergoes frequent changes, it could flood the views with update requests. Some views, such as graphical displays, may take some time to render. As a result, the view may fall behind update requests. Therefore, it is important to keep the view in mind when coding the model. For example, the model could batch multiple updates into a single notification to the view.</p>\n</li>\n</ul>\n<h2 class=\"subheading\">Variants</h2>\n<p>The <em>Document-View</em> variant recognizes all three roles of <em>Model-View-Controller </em>but merges the controller into the view. The document corresponds to the model role in <em>MVC</em>. This variant is present in many existing GUI platforms. An excellent example of <em>Document-View</em> is the Microsoft Foundation Class Library (MFC) in the Microsoft Visual C++ environment. The tradeoff of using this variant is that the view and the controller are more tightly coupled.</p>\n<h2 class=\"subheading\">References</h2>\n<p>[Burbeck92] Burbeck, Steve. \"Application Programming in Smalltalk-80: How to use Model-View-Controller (MVC).<em>\"University of Illinois in Urbana-Champaign (UIUC) Smalltalk Archive.</em> Available at: <a href=\"http://st-www.cs.illinois.edu/users/smarch/st-docs/mvc.html\">http://st-www.cs.illinois.edu/users/smarch/st-docs/mvc.html</a>.</p>\n<p>[Fowler03] Fowler, Martin. <em>Patterns of Enterprise Application Architecture</em>. Addison-Wesley, 2003.</p>\n<p>[Gamma95] Gamma, Helm, Johnson, and Vlissides. <em>Design Patterns: Elements of Reusable Object-Oriented Software</em>. Addison-Wesley, 1995.</p>\n</div>" , "<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Model–view–controller</h1>\n\t\t\t\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\">From Wikipedia, the free encyclopedia</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#mw-head\" target=\"_blank\">navigation</a>, \t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#p-search\" target=\"_blank\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><p><b>Model–view–controller</b> (<b>MVC</b>) is a software <a href=\"https://en.wikipedia.org/wiki/Architectural_pattern\" title=\"Architectural pattern\" target=\"_blank\">architectural pattern</a> for implementing <a href=\"https://en.wikipedia.org/wiki/User_interface\" title=\"User interface\" target=\"_blank\">user interfaces</a>. It divides a given software application into three interconnected parts, so as to separate internal representations of information from the ways that information is presented to or accepted from the user.<sup id=\"cite_ref-1\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-1\" target=\"_blank\"><span>[</span>1<span>]</span></a></sup><sup id=\"cite_ref-2\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-2\" target=\"_blank\"><span>[</span>2<span>]</span></a></sup></p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#\" id=\"togglelink\" target=\"_blank\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Overview\" target=\"_blank\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Overview</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Components\" target=\"_blank\"><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Components</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Interactions\" target=\"_blank\"><span class=\"tocnumber\">1.2</span> <span class=\"toctext\">Interactions</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#Use_in_web_applications\" target=\"_blank\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Use in web applications</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#History\" target=\"_blank\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">History</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#See_also\" target=\"_blank\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#References\" target=\"_blank\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#External_links\" target=\"_blank\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Overview\">Overview</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"https://en.wikipedia.org/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=1\" title=\"Edit section: Overview\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>As with other software patterns, MVC expresses the \"core of the solution\" to a problem while allowing it to be adapted for each system.<sup id=\"cite_ref-gof_3-0\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-gof-3\" target=\"_blank\"><span>[</span>3<span>]</span></a></sup> Particular MVC architectures can vary significantly from the traditional description here.<sup id=\"cite_ref-4\" class=\"reference\"><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#cite_note-4\" target=\"_blank\"><span>[</span>4<span>]</span></a></sup></p>\n<h3><span class=\"mw-headline\" id=\"Components\"><span id=\"COMPONENTS\"></span>Components</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"https://en.wikipedia.org/w/index.php?title=Model%E2%80%93view%E2%80%93controller&amp;action=edit&amp;section=2\" title=\"Edit section: Components\" target=\"_blank\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"thumb tright\">\n<div class=\"thumbinner\" style=\"width:202px;\"><a href=\"https://en.wikipedia.org/wiki/File:MVC-Process.svg\" class=\"image\" target=\"_blank\"><img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/200px-MVC-Process.svg.png\" width=\"200\" height=\"220\" class=\"thumbimage\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/300px-MVC-Process.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a0/MVC-Process.svg/400px-MVC-Process.svg.png 2x\" data-file-width=\"500\" data-file-height=\"550\"></a>\n<div class=\"thumbcaption\">\n<div class=\"magnify\"><a href=\"https://en.wikipedia.org/wiki/File:MVC-Process.svg\" class=\"internal\" title=\"Enlarge\" target=\"_blank\"></a></div>\nA typical collaboration of the MVC components</div></div></div></div></div>" ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_data_analytics__aspern_ , :Domain_user_interfaces ;
          owl:sameAs                     <http://dbpedia.org/resource/Model–view–controller> .
  
  :DesignPattern_default
          a                              gen:DesignPattern ;
          rdfs:label                     "Default" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_configurability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_simplicity , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_legibility , :ArchitecturalQuality_suitability ;
          gen:isAlternativeOf            :DesignTactic_convention_over_configuration ;
          gen:wikiEntry                  "[Wikipedia Default (Computer Science) 2014] A default refers to a setting or value automatically assigned outside of user intervention. Such settings are also called presets especially for electronic devices." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_message_federation
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Federation" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_consistency , :ArchitecturalQuality_security , :ArchitecturalQuality_reliability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_privacy , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_effectiveness , :ArchitecturalQuality_immunity , :ArchitecturalQuality_visibility , :ArchitecturalQuality_traceability ;
          gen:isAlternativeOf            :DesignTactic_isolation , :DesignTactic_message_protection ;
          gen:wikiEntry                  "[Guidanceshare Application Architecture Guide 2011] When speaking of the Message Federation Design Pattern an integrated view of information anddata distributed across multiple services systems and consumers is meant. Software Developers and Architects are agreeing upon standards of operation in a collective fashion of Messages. The term may also be used when groups attempt to delegate collective authority of development to prevent fragmentation." ;
          spec:hasPatternDomain          :Domain_software_ecosystems , :Domain_abstract .
  
  :DesignPattern_active_redundant_elements
          a                              gen:DesignPattern ;
          rdfs:label                     "Active redundant elements" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_observability , :ArchitecturalQuality_debuggability ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_monitoring ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :ArchitecturalQuality_consistency
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "consistency" , "Consistency" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_chain_of_responsibility , :DesignPattern_task_precondition_-_data_existence , :DesignPattern_message_federation , :DesignPattern_restart , :DesignPattern_gatekeeper_pattern , :DesignTactic_isolation , :DesignPattern_capturing_architectural_requirements , :DesignPattern_redundancy , :DesignPattern_separate_system-managed_data , :DesignPattern_lock , :DesignPattern_caching , :DesignTactic_atomicity , :DesignPattern_request_response , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_message_bus , :DesignTactic_keep_consistent , :DesignPattern_access_control , :DesignPattern_event_message , :DesignPattern_encapsulation ;
          gen:relatedQuality       :ArchitecturalQuality_functionality , :ArchitecturalQuality_integrity , :ArchitecturalQuality_durability ;
          gen:wikiEntry            "[Wikipedia Consistency (DB Systems) 2014] Consistency is one of the ACID properties that ensures that any changes to values in an instance are consistent with changes to other values in the same instance.  [MSDN Principles of Accessible Design 2003]Make your application interact with other applications and system standards in a consistent predictable manner." ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignDecision_kdd-26
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-26" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Deployment-Konfiguration</strong></p><p>Abbildung 7 zeigt die Deployment-Konfiguration für die in Abbildung 1 gezeigten Systemkomponenten. Dabei wurde auch die <em>Development Roadmap UC 07:&nbsp; Benchmark - Mini Use Case 01</em>&nbsp;(Rogenhofer, 2014) sowie die DWH-Architekturspezifikation (Taucher &amp; Nyikos, 2014) in Betracht gezogen.</p><p><img style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\" src=\"https://workspace.cee.siemens.com/content/00000102/saFiddle/p/AspernBM/deployment.png\" alt=\"\" width=\"628\" height=\"369\" data-mce-src=\"p/AspernBM/deployment.png\" data-mce-style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\"></p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><strong>Abbildung 7</strong> - Deployment-Konfiguration</p><p>Die ASCR Zentrale (Abbildung 8) besteht aus einer Reihe von virtuellen Maschinen mit unterschiedlichen Funktionen. Zwei davon sind für die Teradata-Datenbank (IP: 10.50.1.2) und für die Benchmarks vorgesehen (Demo_building, IP: 10.50.1.99). Die ASCR-Zentrale ist von einem Firewall geschützt und kann nur vor berechtigten Usern über eine Remote Connection erreicht werden.</p><p><img style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\" src=\"https://workspace.cee.siemens.com/content/00000102/saFiddle/p/AspernBM/ascr.png\" alt=\"\" width=\"628\" height=\"329\" data-mce-src=\"p/AspernBM/ascr.png\" data-mce-style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\"></p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><strong>Abbildung 8</strong> - Rechenkapazitäten in der ASCR Zentrale</p><p>Die ZV-Komponente ist in JavaScript implementiert und läuft Client-seitig Die AE-Komponente ist eine Java Webapplikation und wird als WAR-File (Web Archive) auf einem Glassfish Webserver<a target=\"_blank\" name=\"_ftnref1\" data-mce-href=\"#_ftn1\" href=\"javascript:saFiddle();\"></a>[1] auf der virtuellen Maschine Demo_building installiert.</p><p><strong>Notes:</strong></p><p><a target=\"_blank\" name=\"_ftn1\" data-mce-href=\"#_ftnref1\" href=\"javascript:closePopup(this);\"></a>[1] <a href=\"https://glassfish.java.net/\" data-mce-href=\"https://glassfish.java.net/\">https://glassfish.java.net/</a></p>" ;
          spec:decisionArchitecturalView  "IV.Deploymentsicht" ;
          spec:hasDecisionDomain          :Domain_ar-101__dwh_querying , :Domain_ar-102__tool_integration ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance , :ArchitecturalQuality_integratability , :ArchitecturalQuality_security , :ArchitecturalQuality_portability , :ArchitecturalQuality_scalability ;
          spec:useDecisionTactic          :DesignTactic_horizontal_scaling , :DesignTactic_virtualization .
  
  :Domain_ar-105__analytics
          a           spec:Domain ;
          rdfs:label  "ar-105: analytics" .
  
  :DesignTactic_fault_tolerance
          a           gen:DesignTactic ;
          rdfs:label  "fault tolerance" .
  
  :SoftwareEngineeringMethod_orthogonal_defect_classification__odc_
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Orthogonal Defect Classification (ODC)" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_verification_and_validation ;
          gen:hasMethodRole        :Role_test_architect ;
          gen:hasMethodTag         :AuthorTag_testing ;
          gen:wikiEntry            "ODC is commonly used in software root cause analysis in a system context. ODC is known to reduce the time taken to perform root cause analysis by more than a factor of 10." .
  
  :DesignTactic_tracking
          a           gen:DesignTactic ;
          rdfs:label  "tracking" .
  
  :DesignTactic_adapt_sp2
          a           gen:DesignTactic ;
          rdfs:label  "adapt sp2" .
  
  :DesignTactic_fault_handling
          a                             gen:DesignTactic ;
          rdfs:label                    "Fault Handling" , "fault handling" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_safety , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_dependability , :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_autonomy ;
          gen:wikiEntry                 "The aim of fault handling is to prevent faults from being activated again." ;
          spec:hasTacticDomain          :Domain_abstract , :Domain_cloud_computing , :Domain_software_ecosystems .
  
  :DesignPattern_rollforward
          a                              gen:DesignPattern ;
          rdfs:label                     "Rollforward" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_reliability , :ArchitecturalQuality_viability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_resilience , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_maturity , :ArchitecturalQuality_availability , :ArchitecturalQuality_safety , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_survivability ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "A Rollforward is an operation where the system is restored to the most recent state that would have been reached if the error had not occured. To perform Rollforward the system state is reverted to a checkpoint (i.e. the backup state) and then all the activities such as transactions or events are replayed to recover the most recent state. The underlying assumption is that (1) the systems supports checkpointing/recovery and (2) a detailed record of activies (transactions events etc.) is available which can be re-performed [Hanmer 2007]pp 156-157.  Relations Error Handling [Hanmer 2007]Error Recovery Patterns pp 156-157." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_valet_key_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Valet Key Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_accountability , :ArchitecturalQuality_security , :ArchitecturalQuality_trustability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_immunity , :ArchitecturalQuality_confidentiality ;
          gen:isAlternativeOf            :DesignTactic_authorization ;
          gen:wikiEntry                  "Use a token or key that provides clients with restricted direct access to a specific resource or service in order to offload data transfer operations from the application code. This pattern is particularly useful in applications that use cloud-hosted storage systems or queues and can minimize cost and maximize scalability and performance. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_multiple_stakeholders
          a           gen:DesignTactic ;
          rdfs:label  "multiple stakeholders" .
  
  spec:subDomain  a    owl:ObjectProperty ;
          rdfs:domain  spec:Domain ;
          rdfs:label   "hasSubDomainOf" ;
          rdfs:range   spec:Domain .
  
  gen:hasContext  a           owl:ObjectProperty ;
          rdfs:range          cont:ContextInformationElement ;
          rdfs:subPropertyOf  gen:has .
  
  :DesignTactic_compression
          a           gen:DesignTactic ;
          rdfs:label  "compression" .
  
  :DesignPattern_message_validation
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Validation" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_security , :ArchitecturalQuality_immunity ;
          gen:isAlternativeOf            :DesignTactic_message_protection ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignDecision_kdd-03__platform_architecture
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-03: Platform Architecture" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_shape ;
          gen:wikiEntry                   "<h2 style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\"><span lang=\"EN-US\">Platform Architecture</span></h2>\n<p style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\"><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\">Camunda</span><span lang=\"DE-AT\"> provides 4 deployment schemes (see:&nbsp;</span><span lang=\"DE-AT\">http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview-camunda-bpm-platform-architecture). From these schemes,&nbsp;the</span><span lang=\"EN-US\">&nbsp;<strong>shared process engine</strong> for all workflows and users will be used in SHAPE. </span></span></p>\n<p style=\"margin-left: 0cm; text-indent: 0cm; text-align: left;\" align=\"center\"><span style=\"font-size: 12pt;\"><strong><span lang=\"EN-US\">Rationale:</span></strong></span></p>\n<ul>\n<li><span style=\"font-size: 12pt;\"><span lang=\"DE-AT\" style=\"line-height: 1.3em; text-indent: 0cm;\">Allows</span><span lang=\"DE-AT\" style=\"line-height: 1.3em; text-indent: 0cm;\"> inter-process communication</span></span></li>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em; font-size: 12pt;\">Can also be REST-based for more interoperability</span></li>\n<li><span lang=\"EN-US\" style=\"line-height: 1.3em; font-size: 12pt;\">Consumes less hardware and human resources</span></li>\n</ul>\n<p>&nbsp;</p>\n<p><span lang=\"EN-US\"><img src=\"p/Shape/platform_architecture.png\" alt=\"\" width=\"539\" height=\"212\" /></span></p>" ;
          spec:decisionArchitecturalView  "4. Physical View" ;
          spec:hasDecisionDomain          :Domain_ar-01__process_automation ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_extensibility ;
          spec:useDecisionTactic          :DesignTactic_tool_integration .
  
  :DesignPattern_deferreds_for_caching
          a                              gen:DesignPattern ;
          rdfs:label                     "Deferreds for Caching" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_usability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_caching ;
          gen:wikiEntry                  "<h3 class=\"toc-linked\">Caching using Deferred Objects (Deferreds)</h3>\n<p>The Deferred object, introduced in jQuery 1.5, is a chainable utilityobject created by calling the jQuery.Deferred() method. It can register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.</p>\n<h4 class=\"toc-linked\">Asynchronous cache</h4>\n<p>When it comes to asynchronous tasks, caching can be a bit demanding since you have to make sure a task is only performed once for a given key. As a consequence, the code has to somehow keep track of inbound tasks.</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code>$.cachedGetScript( url, callback1 );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>$.cachedGetScript( url, callback2 );</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>The caching mechanism has to make sure the URL is only requested once even if the script isn't in cache yet. This shows some logic to keep track of callbacks bound to a given URL in order for the cache system to properly handle both complete and inbound requests.</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n<div class=\"line n3\">3</div>\n<div class=\"line n4\">4</div>\n<div class=\"line n5\">5</div>\n<div class=\"line n6\">6</div>\n<div class=\"line n7\">7</div>\n<div class=\"line n8\">8</div>\n<div class=\"line n9\">9</div>\n<div class=\"line n10\">10</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code><span class=\"keyword\">var</span> cachedScriptPromises = {};</code></div>\n</div>\n<div class=\"container\">&nbsp;</div>\n<div class=\"container\">\n<div class=\"line\"><code>$.cachedGetScript = <span class=\"keyword\">function</span>( url, callback ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">if</span> ( !cachedScriptPromises[ url ] ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> cachedScriptPromises[ url ] = $.Deferred(<span class=\"keyword\">function</span>( defer ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> $.getScript( url ).then( defer.resolve, defer.reject );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> }).promise();</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> }</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">return</span> cachedScriptPromises[ url ].done( callback );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>};</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>One promise is cached per URL. If there is no promise for the given URL yet, then a deferred is created and the request is issued. If it already exists, however, the callback is attached to the existing deferred. The big advantage of this solution is that it will handle both complete and inbound requests transparently. Another advantage is that a deferred-based cache will deal with failure gracefully. The promise will end up rejected which can be tested for by providing an error callback:</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code>$.cachedGetScript( url ).then( successCallback, errorCallback );</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 class=\"toc-linked\">Generic asynchronous cache</h4>\n<p>It is also possible to make the code completely generic and build a cache factory that will abstract out the actual task to be performed when a key isn't in the cache yet:</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n<div class=\"line n3\">3</div>\n<div class=\"line n4\">4</div>\n<div class=\"line n5\">5</div>\n<div class=\"line n6\">6</div>\n<div class=\"line n7\">7</div>\n<div class=\"line n8\">8</div>\n<div class=\"line n9\">9</div>\n<div class=\"line n10\">10</div>\n<div class=\"line n11\">11</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code>$.createCache = <span class=\"keyword\">function</span>( requestFunction ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">var</span> cache = {};</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>( key, callback ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">if</span> ( !cache[ key ] ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> cache[ key ] = $.Deferred(<span class=\"keyword\">function</span>( defer ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> requestFunction( defer, key );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> }).promise();</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> }</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">return</span> cache[ key ].done( callback );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> };</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>};</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Now that the request logic is abstracted away, <code>$.cachedGetScript()</code> can be rewritten as follows:</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n<div class=\"line n3\">3</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code>$.cachedGetScript = $.createCache(<span class=\"keyword\">function</span>( defer, url ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> $.getScript( url ).then( defer.resolve, defer.reject );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>});</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>This will work because every call to <code>$.createCache()</code> will create a new cache repository and return a new cache-retrieval function.</p>\n<h4 class=\"toc-linked\">Image loading</h4>\n<p>A cache can be used to ensure that the same image is not loaded multiple times.</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n<div class=\"line n3\">3</div>\n<div class=\"line n4\">4</div>\n<div class=\"line n5\">5</div>\n<div class=\"line n6\">6</div>\n<div class=\"line n7\">7</div>\n<div class=\"line n8\">8</div>\n<div class=\"line n9\">9</div>\n<div class=\"line n10\">10</div>\n<div class=\"line n11\">11</div>\n<div class=\"line n12\">12</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code>$.loadImage = $.createCache(<span class=\"keyword\">function</span>( defer, url ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">var</span> image = <span class=\"keyword\">new</span> Image();</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanUp</span><span class=\"params\">()</span> {</span></code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> image.onload = image.onerror = <span class=\"literal\">null</span>;</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> }</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> defer.then( cleanUp, cleanUp );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> image.onload = <span class=\"keyword\">function</span>() {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> defer.resolve( url );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> };</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> image.onerror = defer.reject;</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> image.src = url;</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>});</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Again, the following snippet:</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code>$.loadImage( <span class=\"string\">\"my-image.png\"</span> ).done( callback1 );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>$.loadImage( <span class=\"string\">\"my-image.png\"</span> ).done( callback2 );</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>will work regardless of whether <code>my-image.png</code> has already been loaded or not, or if it is actually in the process of being loaded.</p>\n<h4 class=\"toc-linked\">Caching Data API responses</h4>\n<p>API requests that are considered immutable during the lifetime of your page are also perfect candidates. For instance, the following:</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n<div class=\"line n3\">3</div>\n<div class=\"line n4\">4</div>\n<div class=\"line n5\">5</div>\n<div class=\"line n6\">6</div>\n<div class=\"line n7\">7</div>\n<div class=\"line n8\">8</div>\n<div class=\"line n9\">9</div>\n<div class=\"line n10\">10</div>\n<div class=\"line n11\">11</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code>$.searchTwitter = $.createCache(<span class=\"keyword\">function</span>( defer, query ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> $.ajax({</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> url: <span class=\"string\">\"http://search.twitter.com/search.json\"</span>,</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> data: {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> q: query</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> },</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> dataType: <span class=\"string\">\"jsonp\"</span>,</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> success: defer.resolve,</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> error: defer.reject</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> });</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>});</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>will allow you to perform searches on Twitter and cache them at the same time:</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code>$.searchTwitter( <span class=\"string\">\"jQuery Deferred\"</span>, callback1 );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>$.searchTwitter( <span class=\"string\">\"jQuery Deferred\"</span>, callback2 );</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 class=\"toc-linked\">Timing</h4>\n<p>This deferred-based cache is not limited to network requests; it can also be used for timing purposes.</p>\n<p>For instance, you may need to perform an action on the page after a given amount of time so as to attract the user's attention to a specific feature they may not be aware of or deal with a timeout (for a quiz question for instance). While <code>setTimeout()</code> is good for most use-cases it doesn't handle the situation when the timer is asked for later, even after it has theoretically expired. We can handle that with the following caching system:</p>\n<div class=\"syntaxhighlighter javascript nogutter\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<div class=\"line n1\">1</div>\n<div class=\"line n2\">2</div>\n<div class=\"line n3\">3</div>\n<div class=\"line n4\">4</div>\n<div class=\"line n5\">5</div>\n<div class=\"line n6\">6</div>\n<div class=\"line n7\">7</div>\n<div class=\"line n8\">8</div>\n<div class=\"line n9\">9</div>\n<div class=\"line n10\">10</div>\n<div class=\"line n11\">11</div>\n<div class=\"line n12\">12</div>\n<div class=\"line n13\">13</div>\n<div class=\"line n14\">14</div>\n<div class=\"line n15\">15</div>\n<div class=\"line n16\">16</div>\n<div class=\"line n17\">17</div>\n</td>\n<td class=\"code\">\n<div class=\"container\">\n<div class=\"line\"><code><span class=\"keyword\">var</span> readyTime;</code></div>\n</div>\n<div class=\"container\">&nbsp;</div>\n<div class=\"container\">\n<div class=\"line\"><code>$(<span class=\"keyword\">function</span>() {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> readyTime = jQuery.now();</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>});</code></div>\n</div>\n<div class=\"container\">&nbsp;</div>\n<div class=\"container\">\n<div class=\"line\"><code>$.afterDOMReady = $.createCache(<span class=\"keyword\">function</span>( defer, delay ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> delay = delay || <span class=\"number\">0</span>;</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> $(<span class=\"keyword\">function</span>() {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">var</span> delta = $.now() - readyTime;</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> <span class=\"keyword\">if</span> ( delta &gt;= delay ) {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> defer.resolve();</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> } <span class=\"keyword\">else</span> {</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> setTimeout( defer.resolve, delay - delta );</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> }</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code> });</code></div>\n</div>\n<div class=\"container\">\n<div class=\"line\"><code>});</code></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>The new <code>$.afterDOMReady()</code> helper method provides proper timing after the DOM is ready while ensuring the bare minimum of timers will be used. If the delay is already expired, any callback will be called right away.</p>" ;
          spec:hasPatternDomain          :Domain_web_applications .
  
  :Requirement_rq12  a               spec:Requirement ;
          rdfs:label                 "RQ12" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_wos2016 ;
          gen:wikiEntry              "<p style=\"font-size: small;\">Requirement 1 Text of the requirement....</p><p style=\"font-size: small;\">dsfsdfs</p><p style=\"font-size: small;\">sdfsffsd</p><p style=\"font-size: small;\"><br data-mce-bogus=\"1\" style=\"font-size: small;\"></p><p style=\"font-size: small;\">dfkfss</p>" ;
          spec:hasRequirementOrigin  :Domain_rq11 ;
          spec:requirementGroup      "Group1" ;
          spec:requirementPurpose    "Good life" .
  
  gen:describedIn  a   owl:ObjectProperty ;
          rdfs:domain  gen:ArchitecturalKnowledgeElement ;
          rdfs:label   "describedIn" ;
          rdfs:range   gen:ReferenceDocument .
  
  :AuthorTag_productivity
          a           cont:AuthorTag ;
          rdfs:label  "productivity" .
  
  :DesignPattern_fire_and_forget
          a                              gen:DesignPattern ;
          rdfs:label                     "Fire and Forget" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_heterogeneity , :ArchitecturalQuality_performance ;
          gen:isAlternativeOf            :DesignTactic_asynchronous_communication ;
          gen:wikiEntry                  "The Fire and Forget pattern isa one-way message communication mechanism used when no response is expected [MSDN Event Message 2014]So it helps to realize an asynchronous communication model [Buschmann et al.2007].  This Figure illustrates how a Web service processes messages exception details from an exception [MSDN Fire and Forget 2014]   The process uses the following steps Client submits a request to service. Service attempts to process the request and throws an exception. Exception shielding logic processes the exception. The service returns the processed exception to the client." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_cost-benefit_analysis
          a           cont:AuthorTag ;
          rdfs:label  "cost-benefit analysis" .
  
  :AuthorTag_indicators
          a           cont:AuthorTag ;
          rdfs:label  "indicators" .
  
  spec:DesignDecision
          a                owl:Class ;
          rdfs:label       "Design Decision" ;
          rdfs:subClassOf  gen:ArchitecturalKnowledgeElement .
  
  :DesignDecision_add-1
          a                               spec:DesignDecision ;
          rdfs:label                      "ADD-1" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_smartscada ;
          gen:wikiEntry                   "Design decision 1" ;
          spec:decisionArchitecturalView  "Access control" ;
          spec:hasDecisionDomain          :Domain_ara-3 ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_adapt_sp2 .
  
  :DesignPattern_decision_2
          a                              gen:DesignPattern ;
          rdfs:label                     "Decision 2" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_privacy ;
          gen:isAlternativeOf            :DesignTactic_adaptation ;
          gen:wikiEntry                  "<h2>Challenges to Achieving Sustainable Decisions</h2>\n<p>Many researchers and practitioners consider architectural knowledge (AK) to be an inherent part of software design. They point to the importance of capturing significant architectural design decisions together with other software artifacts because those decisions can ensure that the design rationale doesn’t get lost.<sup>5</sup> Capturing significant decisions and their rationale is difficult and often neglected because doing so requires considerable effort.<sup>6,7</sup> In this context, architects should seek to make and document sustainable decisions. However, various challenges can hinder this desire.</p>\n<h2>Decision Documentation Effort</h2>\n<p>A key challenge in various industrial cases is that the relatively high effort needed for design decision documentation<sup>6</sup> often isn’t well accepted. Many decision templates require filling in 10 to 20 fields to document a single design decision. Although each documentation attribute is important, this documentation frequently takes too much effort, so architects on high-pressure projects often neglect it.<sup>7</sup> Therefore, software architects and project managers tend to disregard such practices over time, leading to decision rationale erosion in the long term.</p>\n\t        \n\t        \n\t            <div id=\"lowerFullwidthVCR\"></div>\n\t        \n\t       \t\n<p>Another consequence of strained time for decision documentation is low-quality documentation. For example, if a decision’s rationale is “the end user wants it,” the documentation isn’t likely to be useful over time.</p>\n<h3></h3>" , "<h2>Decision Sustainability Criteria</h2>\n<p>To define decision sustainability in detail, we derived five key criteria.</p>\n<h3>Strategic</h3>\n<p>During decision making, someone looking&nbsp; at strategic consequences should consider things such as the decisions’ long-term impact—for example, future operations and maintenance effort.</p>\n<h3>Measurable and Manageable</h3>\n<p>You can measure and evaluate a decision’s outcome over time according to objective criteria, ideally numeric ones (as, for instance, propagated by quality attribute scenarios and workshops4). Capturing all fine-grained decisions isn’t possible, so architects must limit the decisions’ granularity to a certain level of detail (such as creating a design class). This will lead to a more sustainable set of decisions and fewer traceability links. Moreover, limiting the number of dependencies between decisions reduces changes’ ripple effect.</p>\n<h3>Achievable and Realistic</h3>\n<p>The rationale for fitting the solution to the problem should be chosen pragmatically and made explicit. For example, architects can indicate that they have taken care to avoid over- or underengineering (that is, they should apply the “good enough” approach).</p>\n<h3>Rooted in Requirements</h3>\n<p>Decision making should be grounded in domain-specific architecting experience and context. It should take into account the company environment as well as project requirements and constraints, including the development team’s current skills, training budget, and process.</p>\n<h3>Timeless</h3>\n<p>Decisions should be based on experience and knowledge that won’t likely be soon outdated. For example, architects can choose platform-neutral architectural patterns or tactics.</p>\n<h3></h3>" .
  
  :Requirement_arch-5__64-bit_code
          a                          spec:Requirement ;
          rdfs:label                 "ARCH-5: 64-Bit Code" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "Any changes to existing code or the code of new components shall be written in 64-bit compatible C++." ;
          spec:containedWithin       :UseCase_64-bit_migration ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Architecture / Development / Test" ;
          spec:requirementPurpose    "64-Bit Ready Code" .
  
  :ProjectPhase_integration
          a           cont:ProjectPhase ;
          rdfs:label  "integration" .
  
  :DesignDecision_ad-010__use_wso2_eip
          a                               spec:DesignDecision ;
          rdfs:label                      "AD-010: Use WSO2 EIP" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernes ;
          gen:wikiEntry                   "<p style=\"font-size: small;\"><strong style=\"font-size: small;\">Use enterprise integration patterns</strong></p>\n<p style=\"font-size: small;\">Even though the API management applications restrict what can be configured on the API gateway, knowing that a complete ESB solution is deployed to the API gateway, everything that can typically be done with an Enterprise Service Bus can be done with the API gateway if needed. This includes especially the popular Enterprise Integration Patterns for messaging, channels, message construction routing and transformation can be used.</p>\n<p style=\"font-size: small;\">The WSO2 ESB implementation supports the complete set of Enterprise Integration Patterns: <a href=\"https://docs.wso2.com/display/IntegrationPatterns/Enterprise+Integration+Patterns+with+WSO2+ESB\" target=\"_blank\" style=\"font-size: small;\">https://docs.wso2.com/display/IntegrationPatterns/Enterprise+Integration+Patterns+with+WSO2+ESB</a></p>\n<p style=\"font-size: small;\"><b>Note:</b>&nbsp;An extensive use of EIPs in the ESB that is configured to work as an API gateway is not suggested. This is mainly because a true separation of concerns based architecture cannot be established anymore when business logic and API management logic are mixed up on the ESB. If extensive mediation is needed, the typical pattern would be to set up one ESB for system integration tasks and one as API gateway for managing user facing APIs.</p>" ;
          spec:decisionArchitecturalView  "2. Logical View" ;
          spec:hasDecisionDomain          :Domain_ar-023__integrated_services ;
          spec:hasNegDecisionEffectOnQuality
                  :ArchitecturalQuality_complexity ;
          spec:useDecisionTactic          :DesignTactic_messaging .
  
  :ArchitecturalQuality_modularity
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "modularity" , "Modularity" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_secoqualities , :Project_repository ;
          gen:isQualityAffectedBy  :DesignDecision_kdd-07 , :DesignDecision_kdd-21 , :DesignDecision_kdd-01 ;
          gen:relatedQuality       :ArchitecturalQuality_manageability , :ArchitecturalQuality_maintainability ;
          gen:wikiEntry            "<span style=\"line-height: 20.8px;\">Modularity is designing a system that is divided into a set of functional units (named modules) that can be composed into a larger application. A module represents a set of related concerns. It can include a collection of related components, such as features, views, or business logic, and pieces of infrastructure, such as services for logging or authenticating users. Modules are independent of one another but can communicate with each other in a loosely coupled fashion.</span>" ;
          spec:requiredBy          :Domain_abstract .
  
  :DesignPattern_fresh_work_before_stale
          a                              gen:DesignPattern ;
          rdfs:label                     "Fresh Work Before Stale" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_robustness , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_viability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_safety , :ArchitecturalQuality_survivability ;
          gen:isAlternativeOf            :DesignTactic_message_channeling , :DesignTactic_error_handling ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_expansive_automatic_controls
          a                              gen:DesignPattern ;
          rdfs:label                     "Expansive Automatic Controls" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_viability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_safety , :ArchitecturalQuality_resilience , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_singleton
          a                              gen:DesignPattern ;
          rdfs:label                     "Singleton" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_completeness , :ArchitecturalQuality_availability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_utility ;
          gen:isAlternativeOf            :DesignTactic_no_single_point_of_failure ;
          gen:wikiEntry                  "[Wikipedia Singleton Pattern 2014] A Singleton restricts object creation for a class to only one instance. (GoF creational pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Singleton_pattern .
  
  :DesignTactic_change_propagation
          a                             gen:DesignTactic ;
          rdfs:label                    "change propagation" , "Change Propagation" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_usability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_efficiency , :ArchitecturalQuality_transferability , :ArchitecturalQuality_affordability ;
          gen:wikiEntry                 "When Application Programming Interfaces (API) of a framework or library changeclients must be adapted i.e. consumers of this API alsohave to undergo changes which iscommonlyknown asripple effect." ;
          spec:hasTacticDomain          :Domain_abstract .
  
  sear:UserAccount  a  owl:Class ;
          rdfs:label  "User Account" .
  
  :DesignPattern_transactional_client
          a                              gen:DesignPattern ;
          rdfs:label                     "Transactional Client" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability ;
          gen:isAlternativeOf            :DesignTactic_message_endpoint ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :AuthorTag_understandability
          a           cont:AuthorTag ;
          rdfs:label  "understandability" .
  
  spec:hasDomainEffectOnRequirement
          a                   owl:ObjectProperty ;
          rdfs:domain         spec:Domain ;
          rdfs:label          "hasEffectOn" ;
          rdfs:range          spec:Requirement ;
          rdfs:subPropertyOf  gen:hasEffectOn .
  
  :Role_system_integrator
          a           cont:Role ;
          rdfs:label  "system integrator" .
  
  sear:hasKeyword  a          owl:FunctionalProperty , owl:ObjectProperty ;
          rdfs:domain         sear:QueryElement ;
          rdfs:range          sear:Keyword ;
          rdfs:subPropertyOf  gen:has .
  
  :DesignPattern_priority_queue_pattern
          a                              gen:DesignPattern ;
          rdfs:label                     "Priority Queue Pattern" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_scalability , :ArchitecturalQuality_utility , :ArchitecturalQuality_availability , :ArchitecturalQuality_controllability ;
          gen:isAlternativeOf            :DesignTactic_queueing , :DesignTactic_message_channeling ;
          gen:wikiEntry                  "Prioritize requests sent to services so that requests with a higher priority are received and processed more quickly than those of a lower priority. This pattern is useful in applications that offer different service level guarantees to individual clients. [MSDN Cloud Design Patterns 2014]" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Priority_queue .
  
  :DesignTactic_no_single_point_of_failure
          a                             gen:DesignTactic ;
          rdfs:label                    "no single point of failure" , "No Single Point of Failure" ;
          gen:hasKnowledgeAuthor        :Author_willegger_edwin ;
          gen:hasKnowledgeProject       :Project_repository ;
          gen:hasTacticEffectOnQuality  :ArchitecturalQuality_utility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_completeness ;
          gen:wikiEntry                 "A single point of failure (SPOF) is a part of a system that if it fails will stop the entire system from working.In any system with a goal of high availability or reliability sucha SPOF is undesirable andusually topreventsystem failure theseSPOF components are being made redundant using patterns such as mirroring orreplication.   Synonym Redundancy" ;
          spec:hasTacticDomain          :Domain_abstract .
  
  :ArchitecturalQuality_feasibility
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "feasibility" , "Feasibility" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignTactic_feasibility_study ;
          gen:relatedQuality       :ArchitecturalQuality_suitability ;
          gen:wikiEntry            "Feasibility is the stage of being feasible or possible capable of being done affected or accomplished. Every project has a feasibility analysis phase which should include important requirements definition [TeachTarget Feasibility 2014]. When done poorly as so often happens the project is almost certainly destined to fail. The feasibility analysis determine whether or not to do a project. In a nutshell in feasibility analysis one identifies what a project is expected to produce and wether it seems worthwhile to do it.The outcome of feasibility analysis is a project definition the allocation of project budget and the schedule [TeachTarget Feasibility 2014].    Relations Feasibility Study [TeachTarget Feasibility 2014]Defining requirements during software project feasibility analysis" ;
          spec:requiredBy          :Domain_abstract .
  
  :Domain_ar-04__protect_content_confidentiality
          a           spec:Domain ;
          rdfs:label  "ar-04: protect content confidentiality" .
  
  :AuthorTag_engineering
          a           cont:AuthorTag ;
          rdfs:label  "engineering" .
  
  :Requirement_ar-103__kpi_computation
          a                          spec:Requirement ;
          rdfs:label                 "AR-103: KPI computation" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_aspernbm ;
          gen:wikiEntry              "Die\n  Berechnung der KPIs soll (soweit möglich) innerhalb der DWH erfolgen,\n  unabhängig davon, ob sie z.B. von dem Navigator oder einer externen\n  Datenquelle importiert wurden." ;
          spec:containedWithin       :UseCase_cr-01__messdaten_und_kpis_visualisieren ;
          spec:hasRequirementOrigin  :Domain_sr-01_07 ;
          spec:requirementGroup      "Functional" ;
          spec:requirementPurpose    "Adaptive Query Processing" .
  
  :DesignDecision_kdd-07
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-07" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Entkoppelung der Datenschichtkomponenten</strong><br></p><p>Die Datenschicht wird in drei wesentlichen Komponenten unterteilt, die folgende Funktionen haben:<br></p><ul><li><span style=\"line-height: 1.3em;\">ETL-Komponente: Import, Transformation und Persistieren der Daten aus</span><br></li><li><span style=\"line-height: 1.3em;\">DWH: Datenhaltung, -aggregation und -partitionierung.</span><br></li><li><span style=\"line-height: 1.3em;\">Data API: Datenabfrage aus der DWH, Berechnung einiger KPIs „On-The-Fly“ und Ergebnisbereitstellung über eine&nbsp;Webservice-Schnittstelle.</span><br></li></ul><p><span style=\"line-height: 1.3em;\">Dadurch werden die ETL Prozesse, die Datenhaltung und die Berechnung der KPIs voneinander entkoppelt.<br></span></p><p><span style=\"line-height: 1.3em;\"><strong>Anmerkung:</strong> Diese Architekturentscheidung stammt aus dem DWH-Design und wird hier nur informativ vollständigkeitshalber aufgeführt.</span></p>" ;
          spec:decisionArchitecturalView  "I.Komponentensicht" ;
          spec:hasDecisionDomain          :Domain_ar-103__kpi_computation , :Domain_ar-153__scalability , :Domain_ar-164__modularity , :Domain_ar-159__generic_api ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_interoperability , :ArchitecturalQuality_modularity , :ArchitecturalQuality_scalability , :ArchitecturalQuality_performance ;
          spec:useDecisionTactic          :DesignTactic_separation_of_concerns , :DesignTactic_web_interfaces , :DesignTactic_horizontal_scaling , :DesignTactic_adaptive_query_processing , :DesignTactic_reduce_coupling .
  
  :DesignPattern_message_broker
          a                              gen:DesignPattern ;
          rdfs:label                     "Message Broker" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_compatibility , :ArchitecturalQuality_reliability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_availability , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_logging , :DesignTactic_routing ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Message_broker .
  
  :DesignPattern_voting
          a                              gen:DesignPattern ;
          rdfs:label                     "Voting" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_robustness , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_viability , :ArchitecturalQuality_scalability , :ArchitecturalQuality_resilience , :ArchitecturalQuality_integrity , :ArchitecturalQuality_availability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_safety , :ArchitecturalQuality_reliability , :ArchitecturalQuality_utility , :ArchitecturalQuality_survivability , :ArchitecturalQuality_security , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance ;
          gen:isAlternativeOf            :DesignTactic_routing , :DesignTactic_error_detection , :DesignTactic_monitoring ;
          gen:wikiEntry                  "Voting aims to confirm or discard whether values are correct or incorrect by letting a committee give votes regarding the correctness of the value. In majority based voting for example correctness is confirmed if the majority of committee members are affirmative.  Applying the Voting Pattern means to devise a voting strategy to select from the available solutions. If there is any disagreement with the vote treat the element that loses the vote as erroneous and begin error processing on it [Hanmer 2007]pp 118-121.  Relations Error Detection [Hanmer 2007]Detection Patterns pp 118-121." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_capturing_architectural_requirements
          a                              gen:DesignPattern ;
          rdfs:label                     "Capturing Architectural Requirements" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_requirements ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_testability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_usability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_privacy , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_stability , :ArchitecturalQuality_configurability , :ArchitecturalQuality_performance , :ArchitecturalQuality_functionality , :ArchitecturalQuality_security , :ArchitecturalQuality_installability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_consistency , :ArchitecturalQuality_scalability , :ArchitecturalQuality_availability , :ArchitecturalQuality_portability , :ArchitecturalQuality_localizability , :ArchitecturalQuality_accuracy , :ArchitecturalQuality_adaptability ;
          gen:isAlternativeOf            :DesignTactic_requirement_capturing ;
          gen:wikiEntry                  "<p><em>Capturing requirements is difficult. Capturing architecturally significant requirements is </em>particularly <em>difficult. This article discusses the root causes of this difficulty, and suggests a systematic approach to capturing architectural requirements to ensure that these elusive, and yet extremely important, system specifications are not overlooked.</em></p><h2 id=\"N10046\">What Is an Architectural Requirement?</h2><p> Because this article focuses on an approach to gathering requirements of particular significance to the architecture of a system<a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#footnotes\" target=\"_blank\"><sup>1</sup></a>, let's start with the definition of an architectural requirement. </p><p>Rational Unified Process® (RUP®) gives the following definition for <em>any</em> requirement: </p><blockquote><em> A requirement describes a condition or capability to which a system must conform; either derived directly from user needs, or stated in a contract, standard, specification, or other formally imposed document. </em></blockquote><p> An <em>architectural</em> requirement, in turn, is any requirement that is architecturally significant, whether this significance be implicit or explicit. Implicit architectural requirements are those requirements that have particular attributes. For example, any high-risk, high-priority, or low-stability requirement could be considered to be architecturally significant. However, this article will focus primarily on explicit requirements, which are often technical in nature. The following are examples of explicit architectural requirements: </p><ul class=\"ibm-bullet-list\"><li>The product will be localized (support multiple human languages).</li><li>The persistence will be handled by a relational database.</li><li>The database will be Oracle 8i.</li><li>The system will run seven days a week, twenty-four hours per day.</li><li>An online help system is required.</li><li>All presentation logic will be written in Visual Basic.</li></ul><p> As you may notice, these requirements are extremely mixed. Some are functional, some non-functional; some are independent of technical mechanisms, others are not. What we need is a systematic approach that provides a framework for classifying architectural requirements, which ensures that valuable statements such as those listed above are not overlooked. </p><div class=\"ibm-alternate-rule\"><hr></div><p class=\"ibm-ind-link ibm-back-to-top\"><a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#ibm-content\" class=\"ibm-anchor-up-link\" target=\"_blank\">Back to top</a></p><h2 id=\"N10073\">The FURPS+ System for Classifying Requirements</h2><p> One such classification system was devised by Robert Grady at Hewlett-Packard.<a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#footnotes\" target=\"_blank\"><sup>2</sup></a> It goes by the acronym FURPS+ which represents: </p><ul class=\"ibm-bullet-list\"><li>Functionality</li><li>Usability</li><li>Reliability</li><li>Performance</li><li>Supportability</li></ul><p>The \"+\" in FURPS+ also helps us to remember concerns such as:</p><ul class=\"ibm-bullet-list\"><li>Design requirements</li><li>Implementation requirements</li><li>Interface requirements </li><li>Physical requirements</li></ul><p>Let's look at each category in detail.</p><h3 id=\"N10098\">Functional Requirements</h3><p> These requirements generally represent the main product features. In a warehouse application, we might have requirements pertaining to order processing or stock control, for example. However, functional requirements are not always domain-specific. Providing printing capability is a functional requirement of particular significance to architecture, for example. </p><p>Table 1 lists additional functional requirements that might be considered. </p><h5 id=\"table1\">Table 1: Architecturally Significant Functional Requirements </h5><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"ibm-data-table\" summary=\"Table 1: Architecturally Significant Functional Requirements\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th scope=\"col\">Function</th><th scope=\"col\">Description</th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td>Auditing</td><td>Provide audit trails of system execution.</td></tr><tr><td>Licensing</td><td>Provide services for tracking, acquiring, installing, and monitoring license usage.</td></tr><tr><td>Localization</td><td>Provide facilities for supporting multiple human languages.</td></tr><tr><td>Mail </td><td>Provide services that allow applications to send and receive mail.</td></tr><tr><td>Online help</td><td>Provide online help capability.</td></tr><tr><td>Printing </td><td>Provide facilities for printing.</td></tr><tr><td>Reporting</td><td>Provide reporting facilities.</td></tr><tr><td>Security</td><td>Provide services to protect access to certain resources or information.</td></tr><tr><td>System management</td><td>Provide services that facilitate management of applications in a distributed environment.</td></tr><tr><td>Workflow</td><td>Provide support for moving documents and other work items, including review and approval cycles.</td></tr></tbody></table><h3 id=\"N100E8\">Usability, Reliability, Performance, and Supportability Requirements</h3><p> The remaining \"URPS\" categories describe non-functional requirements that are generally architecturally significant. </p><ul class=\"ibm-bullet-list\"><li><em>Usability</em> is concerned with characteristics such as aesthetics and consistency in the user interface.</li><li><em>Reliability</em> is concerned with characteristics such as availability (the amount of system \"up time\"), accuracy of system calculations, and the system's ability to recover from failure.</li><li><em>Performance</em> is concerned with characteristics such as throughput, response time, recovery time, start-up time, and shutdown time.</li><li><em>Supportability</em> is concerned with characteristics such as testability, adaptability, maintainability, compatibility, configurability, installability, scalability, and localizability.</li></ul><h3 id=\"N10101\">Design, Implementation, Interface, and Physical Requirements</h3><p> The \"+\" in the FURPS+ acronym is used to identify additional categories that generally represent constraints. </p><ul class=\"ibm-bullet-list\"><li>A <em>design requirement</em>, often called a design constraint, specifies or constrains the options for designing a system. For example, if you specify that a relational database is required, that's a design constraint.</li><li>An <em>implementation requirement</em> specifies or constrains the coding or construction of a system. Examples might include required standards, implementation languages, and resource limits.</li><li>An <em>interface requirement </em>specifies an external item with which a system must interact, or constraints on formats or other factors used within such an interaction.</li><li>A <em>physical requirement </em>specifies a physical constraint imposed on the hardware used to house the system Â— shape, size, or weight, for example.</li></ul><div class=\"ibm-alternate-rule\"><hr></div><p class=\"ibm-ind-link ibm-back-to-top\"><a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#ibm-content\" class=\"ibm-anchor-up-link\" target=\"_blank\">Back to top</a></p><h2 id=\"N1011E\">Realizing Requirements</h2><p> From the descriptions above, we can easily see that some functional requirements, and most requirements in the other FURPS+ categories, are architecturally significant. Now let's look at how we might classify the seemingly unrelated architectural requirements we listed earlier. Using the FURPS+ classification we can see that: </p><ul class=\"ibm-bullet-list\"><li>\"The product will be localized (support multiple human languages)\" is a <em>supportability</em> requirement. </li><li>\"The persistence will be handled by a relational database\" is a <em>design</em> requirement.</li><li>\"The database will be Oracle 8i\" is an <em>implementation</em> requirement.</li><li>\"The system will run seven days a week, twenty-four hours per day\" is a <em>reliability</em> requirement.</li><li>\"An online help system is required\" is a <em>functional</em> requirement.</li><li>\"All presentation logic will be written in Visual Basic\" is an <em>implementation</em> requirement.</li></ul><p> Knowing how such requirements are realized will help us ask the right questions of our stakeholders. There is also value in understanding the relationships between categories of requirement that, at first glance, appear very disparate. Considering architectural mechanisms can assist us on both counts. </p><h3 id=\"N10147\">Architectural Mechanisms</h3><p> In simple terms, an architectural mechanism represents a common solution\n                to a frequently encountered problem. Architectural mechanisms are often\n                used to realize architectural requirements. Table 2 shows three categories\n                of architectural mechanisms</p><h5 id=\"table2\">Table 2: Three categories of architectural mechanisms</h5><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"ibm-data-table\" summary=\"Table 2: Three categories of architectural mechanisms\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th scope=\"col\">Analysis Mechanism</th><th scope=\"col\">Design Mechanism</th><th scope=\"col\">Implementation Mechanism</th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th rowspan=\"3\"><strong>Persistence</strong></th><td rowspan=\"2\">RDBMS</td><td>Oracle</td></tr><tr><td>Ingres</td></tr><tr><td>OODBMS</td><td>ObjectStore</td></tr><tr><th rowspan=\"4\"><strong>Communication</strong></th><td rowspan=\"2\">Object request broker</td><td>Orbix</td></tr><tr><td>VisiBroker</td></tr><tr><td rowspan=\"2\">Message queue</td><td>MSMQ</td></tr><tr><td>MQSeries</td></tr></tbody></table><p> An <em>analysis</em> mechanism represents an implementation-independent solution. Table 2 shows two analysis mechanisms: persistence and communication. For more examples of analysis mechanisms, see the <a href=\"http://www.ibm.com/developerworks/rational/library/4707.html\" target=\"_blank\">Analysis Mechanism Summary in Appendix A</a>. </p><p> A <em>design</em> mechanism is a refinement of an analysis mechanism. It assumes some details of the implementation environment but is not tied to a specific implementation. In our example, the communication analysis mechanism may be realized as a design mechanism such as an object request broker or a message queue. </p><p> Finally, an <em>implementation</em> mechanism is a refinement of a design mechanism, and specifies the exact implementation of the mechanism. In our example, an object request broker may be implemented using either Orbix or VisiBroker. </p><p> Figure 1 summarizes the relationship between requirements and mechanisms, showing refinements of the FURPS requirements, design requirements and implementation requirements as well as architectural mechanisms at different levels of refinement. </p><h5 id=\"fig1\">Figure 1: Relationship\n                    between requirements and mechanisms</h5><img alt=\"Relationship Between Requirements and Mechanism\" src=\"http://www.ibm.com/developerworks/rational/library/content/RationalEdge/nov01/t_architecturalRequirements_fig1.gif\" width=\"445\"><h3 id=\"N101AF\">The Challenge of Gathering Architectural Requirements </h3><p> Before we discuss a systematic approach to gathering architectural requirements, it is worth noting why such an approach is needed. In essence, this is because many of the FURPS+ requirements we mentioned earlier are relevant in a system-wide context and help drive the design of the foundations (i.e., the architecture) of the system we're building. In fact, on some projects, architectural requirements can be significantly more important than their domain-specific counterparts. If you were designing a life-support machine, for example, then availability (\"up time\") would be pretty high on your list. </p><p> So why is it that architectural requirements are often overlooked? Because they are difficult to gather -- and that's why being \"systematic\" about how these requirements are gathered can make a real difference. </p><p> Gathering architectural requirements means venturing into uncharted territory (in contrast to gathering more domain-specific requirements) for a number of reasons: </p><ul class=\"ibm-bullet-list\"><li>In most (although not all) systems, from an end-user perspective, domain-specific requirements are more visible than their architectural counterparts. Consequently, emphasis is placed on gathering these domain-specific requirements because they are perceived as the most valuable.</li><li>Stakeholders are not usually familiar with the majority of architectural requirements. Although they are comfortable with specifying domain-specific features such as \"Order Processing\" and \"Stock Control,\" they are less familiar with \"Reliability\" and \"Usability,\" and think of them as technical issues that lie outside their area of concern.</li><li>Systematic techniques for gathering architectural requirements are generally less well known than techniques for gathering domain-specific requirements.</li></ul><p>Using a systematic approach can help overcome these difficulties, as we shall see below. </p><div class=\"ibm-alternate-rule\"><hr></div><p class=\"ibm-ind-link ibm-back-to-top\"><a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#ibm-content\" class=\"ibm-anchor-up-link\" target=\"_blank\">Back to top</a></p><h2 id=\"N101C4\">An Approach for Gathering Architectural Requirements</h2><p>The approach to gathering architectural requirements we will explore is simple:</p><ol><li>Maintain a complete list of architectural requirements (regardless of whether all items are relevant to a particular project). See <a href=\"http://www.ibm.com/developerworks/rational/library/4708.html\" target=\"_blank\">Appendix B: Architectural Requirements</a> for a sample list. </li><li>For each architectural requirement, formulate one or more questions that can help in the specification process. Make sure <em>all the system's stakeholders</em> can understand these questions.</li><li>Assist stakeholders by showing them the potential impact of answering a question one way or the other.</li><li>Capture the responses from your stakeholders to each of the questions.</li><li>Assist the architect by ensuring that the stakeholders Â— in addition to answering these questions Â— assign a priority or weighting to each architectural requirement. This weighting will allow the architect to make tradeoffs between requirements.</li></ol><p> It is worth noting that this approach is possible because, at a high level, the set of architectural requirements that must be considered is finite. You can also apply this approach to requirements gathering within particular problem domains that also have finite, well-defined, sets of considerations. For a financial system, for example, there would be an imperative to pose certain finance-related questions. </p><a id=\"qa\" href=\"http://www.ibm.com/developerworks/rational/library/4706.html\" target=\"_blank\"></a><h3 id=\"N101E4\">The Architectural Requirements Questionnaire</h3><p> This approach is best represented in the form of a simple table provided to stakeholders as an Architectural Requirements Questionnaire. Table 3 shows a portion of such a questionnaire and includes example answers. For a complete Architectural Requirements Questionnaire template, see <a href=\"http://www.ibm.com/developerworks/rational/library/4710.html\" target=\"_blank\">Appendix C</a>. </p><h5 id=\"table3\">Table 3: Portion of an architectural\n              requirements questionnaire</h5><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"ibm-data-table\" summary=\"Portion of an architectural               requirements questionnaire\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th scope=\"col\">Requirement</th><th scope=\"col\">Questions</th><th scope=\"col\">Impact</th><th scope=\"col\">Answers</th><th scope=\"col\">Priority</th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th class=\"dw-no-background\" scope=\"row\">Licensing</th><td>Will the system, or parts of the system, be licensed?<br><br>Are there any constraints on the mechanism used to provide licensing capability?</td><td>The greater the sophistication of the licensing mechanism, the longer the time to market, and the greater the long-term maintenance cost.</td><td>The stock control module will be marketed as a separate component of the system and will require licensing. The FlexLM tool is used throughout our organization to provide licensing capability.</td><td>Medium</td></tr><tr><th class=\"dw-no-background\" scope=\"row\">Availability</th><td>Are there any requirements regarding system \"up time\"? This may be specified in terms of Mean Time Between Failures (MTBF).</td><td>The higher the availability, the longer the time to market.</td><td>Availability is a key product feature. The product must have an MTBF of 60 days.</td><td>High</td></tr><tr><th class=\"dw-no-background\" scope=\"row\">Platform support</th><td>What platforms must the system support?</td><td>Development for a single platform shortens the time to market. It also allows closer integration with platform features.<br><br>Development for multiple platforms lengthens the time to market. Close integration with platform features is lessened, increasing the maintenance of the system.</td><td>The product will be released on the following UNIX platforms:<br><br>Sun Solaris<br>IBM AIX<br>HPUX</td><td>High</td></tr></tbody></table><p> Note that this questionnaire is used in the Elicit Stakeholder Requests activity in the Rational Unified Process (RUP). Once completed, the questionnaire is then used in the definition of some of the most important artifacts used in the development process, including the Use-Case Model and Supplementary Specification (which together provide a formal specification of system requirements). </p><p> Rational RequisitePro® can be of great help in relation to the questionnaire: </p><ul class=\"ibm-bullet-list\"><li>It allows you to create multiple \"views\" of the questionnaire. This is particularly valuable if you are interviewing different stakeholders because you can filter by role. If you are interviewing a marketing person, for example, you might want his or her responses to a certain subset of questions but not to complex technical issues. Rational RequisitePro allows you to assign a \"role\" attribute to each question, which makes information gathering more efficient. </li><li>It gives you traceability between architectural stakeholder requests and both use-case requirements and supplementary requirements. You can specify this traceability through links, and RequisitePro provides traceabilty matrices to help you visualize these links. </li></ul><h3 id=\"N1024D\">Avoiding Common Pitfalls</h3><p> When gathering any requirements Â— not just architectural requirements Â— there are a number of potential pitfalls. This section discusses these pitfalls and provides suggestions for avoiding them. </p><p><strong>The \"Shopping Cart\" Mentality.</strong> The technique described in this article has been used on more than twenty projects to date, and every single one of these projects has suffered from stakeholders' false impression that specifying requirements is like filling up a shopping cart. In the absence of any other criteria, a requirements gathering effort can amount to a futile exchange along the following lines: </p><table border=\"0\" cellpadding=\"4\" cellspacing=\"4\" class=\"ibm-data-table\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th valign=\"top\">Analyst:</th><th>Does the product need to be localized?</th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><td valign=\"top\"><strong>Stakeholder:</strong></td><td>That sounds good. We should plan to address foreign markets.</td></tr><tr><td valign=\"top\"><strong>Analyst:</strong></td><td>And what about security?</td></tr><tr><td valign=\"top\"><strong>Stakeholder:</strong></td><td>Oh yes, the product should be secure.</td></tr><tr><td valign=\"top\"><strong>Analyst:</strong></td><td>Tell me about your reliability expectations.</td></tr><tr><td valign=\"top\"><strong>Stakeholder:</strong></td><td>Definitely twenty-four by seven Â— no down time. That's what we need to beat our competitors.</td></tr></tbody></table><p> And so on. If you could offer your stakeholders a solution that solved the worldwide shortage of dilithium crystals<a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#footnotes\" target=\"_blank\"><sup>3</sup></a>, they'd want it. But every desired requirement comes at a price; stakeholders can't just put everything they want into a shopping cart at no cost. Be careful not to fall into the trap of presenting them with the equivalent of a shopping list from which they pick and choose. </p><p> The trick is to ensure that your stakeholders understand the cost of their purchases, which is why an impact statement is associated with each question in the questionnaire. </p><p><strong>The \"This Is Too Technical for Me\" Attitude.</strong> Some stakeholders may dismiss the Architectural Requirements Questionnaire as a technical document whose content lies outside their area of concern. Often, the reason for this perception is that the questions don't discuss their familiar domain concepts, so they treat the document as less important than techniques (such as use-case modeling) for capturing more visible, domain-specific requirements. </p><p> Once again, it's important to ensure that your stakeholders understand the value of taking time to answer questions your questionnaire poses. It's often easiest to demonstrate this value by giving examples of problems that arise in the absence of a questionnaire! </p><p><strong>The \"All Requirements Are Equal\" Fallacy.</strong> Another common pitfall stems from giving all requirements the same priority. Without exception, projects that fall into this trap classify all requirements as high priority. </p><p> Architectural requirements must be prioritized to indicate to the architect Â— or anyone else Â— which are the most important requirements for the finished system. No design tradeoffs can be made if all requirements are assigned the same priority. If you start to get bogged down when prioritizing requirements, try considering them two at a time. The most important requirements should naturally \"bubble up\" to the top of the list. </p><p><strong>The \"Park It in the Lot\" Problem.</strong> In some organizations, stakeholders dutifully collect requirements because an analyst told them to and prioritize them (again, because an analyst told them to). And then, for some reason, these requirements are then placed \"on the shelf,\" never to be used again. It's critical to ensure that your stakeholders understand the value of capturing architectural requirements and that these requirements are applied throughout the development of the system. </p><p><strong>The \"Requirements T</strong><strong>hat Can't Be Measured\" Syndrome.</strong> This can be a pitfall for both domain-specific and architectural requirements. It's important to ensure that all stated requirements are both unambiguous and measurable. \"The system will have a state-of-the-art interface,\" for example, does not meet these criteria, because the definition of state-of-the-art is highly subjective. </p><p><strong>The \"Not Enough Time\" Complaint.</strong> Specifying architectural requirements is a complex task that can't be done quickly. If stakeholders balk at scheduling adequate time for the activity or grow impatient during the process, remind them how important these requirements are in building a foundation for the system, and don't allow them to short-circuit your efforts. </p><p><strong>The \"Lack of Ownership\" Problem.</strong> It is critical for the system analyst and software architect to work collaboratively to create the Architectural Requirements Questionnaire, and for the analyst to fully understand the content. After all, the analyst will be gathering the requirements. If he or she conveys the impression that the questionnaire is too technical to comprehend and cannot provide clarification when necessary, that will only reinforce stakeholders' misperceptions that the questionnaire is of little use. </p><p><strong>The \"All Stakeholders Are Alike\" Misconception.</strong> Many different stakeholders have input during the requirements gathering process, and you need to address the right questions to the right people. For example, product management is probably the group to ask about specifying the ability to license elements of the system, but requirements for system usability are best specified by end users. Before you talk with stakeholders, take the time to identify which group is responsible for answering which questions. </p><p><strong>The \"Too General\" Tendency.</strong> The Architectural Requirements Questionnaire should be treated as an elicitation technique similar to interviewing, brainstorming, and so on. The only difference between this technique and others is that the primary focus is on capturing architectural requirements for the system. Architectural requirements are often specified at a very general level. For example, a requirement might state that the response time of any transaction is less than three seconds. It's likely, however, that although response times for specific transactions must conform to this particular requirement, some transactions will take significantly longer. If you don't make requirements as specific as possible, then elements of your system are likely to be over-engineered, to comply with architectural requirements that may not apply. Once again, the RUP is helpful here. It provides three possible locations for architectural requirements, which reflect three\n                different levels of specificity, as shown in Table 4. </p><h5 id=\"table4\">Table 4. Levels of Specificity and RUP Locations for Architectural Requirements</h5><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"ibm-data-table\" summary=\"Levels of Specificity and RUP Locations for Architectural Requirements\"><thead xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th scope=\"col\">Relates to</th><th scope=\"col\">Example</th><th scope=\"col\">Location in a RUP artifact</th></tr></thead><tbody xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><tr><th class=\"dw-no-background\" scope=\"row\">A particular event\n                                  flow within a use case (most specific)</th><td>If, in the basic flow, the plane undercarriage fails to engage, then an alarm will be sent to the central monitoring station in less than one second.</td><td>\"Flow of events\" section in a use-case specification.</td></tr><tr><th class=\"dw-no-background\" scope=\"row\">An entire use\n                                   case</th><td>Any order that is processed must scale to support more than 10,000 items. </td><td>\"Special requirements\" section in a use-case specification.</td></tr><tr><th class=\"dw-no-background\" scope=\"row\">The entire system\n                                   (most general)</th><td>Due to the nature of our target markets, the system must be deployed in English, French, Chinese, and Arabic. </td><td>Supplementary specification.</td></tr></tbody></table><div class=\"ibm-alternate-rule\"><hr></div><p class=\"ibm-ind-link ibm-back-to-top\"><a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#ibm-content\" class=\"ibm-anchor-up-link\" target=\"_blank\">Back to top</a></p><h2 id=\"N102EB\">Where to Go from Here </h2><p> As we've seen, capturing architecturally significant requirements is difficult and fraught with pitfalls. But help is available. Use a tried and true classification scheme for architectural requirements and an elicitation technique to ensure that these requirements are not overlooked. Use the appendices in this article, which contain a <a href=\"http://www.ibm.com/developerworks/rational/library/4710.html\" target=\"_blank\">Sample Architectural Requirements Questionnaire</a>, and summaries of <a href=\"http://www.ibm.com/developerworks/rational/library/4707.html\" target=\"_blank\">architectural analysis mechanisms</a>, and <a href=\"http://www.ibm.com/developerworks/rational/library/4708.html\" target=\"_blank\">architectural requirements</a>. </p><p> You can also take advantage of the best practices and workflow capabilities built into the Rational Unified Process and Rational RequisitePro. These tools are based on the experiences of many software professionals just like yourself who have been down the same challenging path, so using them will get you off to a great start and sustain you on the journey, too. </p><div class=\"ibm-alternate-rule\"><hr></div><p class=\"ibm-ind-link ibm-back-to-top\"><a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#ibm-content\" class=\"ibm-anchor-up-link\" target=\"_blank\">Back to top</a></p><h2 id=\"N10304\">Acknowledgments</h2><p> I'd like to thank a number of my colleagues at Rational for reviewing the content of this article and providing valuable feedback, including Dave Brown, Maria Ericsson, Kelli Houston, Volker Kopetzky, and Wojtek Kozaczynski. </p><div class=\"ibm-alternate-rule\"><hr></div><p class=\"ibm-ind-link ibm-back-to-top\"><a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#ibm-content\" class=\"ibm-anchor-up-link\" target=\"_blank\">Back to top</a></p><h2 id=\"N1030C\">Appendices</h2><p><a href=\"http://www.ibm.com/developerworks/rational/library/4707.html\" target=\"_blank\">Appendix A: Analysis Mechanisms</a></p><p><a href=\"http://www.ibm.com/developerworks/rational/library/4708.html\" target=\"_blank\">Appendix B: Architectural Requirements</a></p><a id=\"footnotes\" href=\"http://www.ibm.com/developerworks/rational/library/4706.html\" target=\"_blank\"></a><p><a href=\"http://www.ibm.com/developerworks/rational/library/4710.html\" target=\"_blank\">Appendix C: Sample Architectural Requirements Questionnaire</a></p><div class=\"ibm-alternate-rule\"><hr></div><p class=\"ibm-ind-link ibm-back-to-top\"><a href=\"http://www.ibm.com/developerworks/rational/library/4706.html#ibm-content\" class=\"ibm-anchor-up-link\" target=\"_blank\">Back to top</a></p><h2 id=\"N10324\">Notes</h2><p><strong><sup>1</sup></strong> Much of the advice in this article can be applied to requirements gathering in general.</p><p><strong><sup>2</sup></strong> As presented in Robert Grady, <em>Practical Software Metrics for Project Management and Process Improvement</em>. Prentice-Hall, 1992.</p><p><strong><sup>3</sup></strong> As every Trekkie knows, dilithium can work in conjunction with deuterium to power both warp drives and weaponry. Unfortunately, it is native only to planets heretofore unvisited by Earthlings.</p>" ;
          spec:hasPatternDomain          :Domain_any .
  
  :AuthorTag_people  a  cont:AuthorTag ;
          rdfs:label  "people" .
  
  :AuthorTag_semantics
          a           cont:AuthorTag ;
          rdfs:label  "semantics" .
  
  :DesignPattern_avoiding_polymorphism
          a                              gen:DesignPattern ;
          rdfs:label                     "Avoiding Polymorphism" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_syngoplaza ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_portability ;
          gen:isAlternativeOf            :DesignTactic_64-bit_ready_code ;
          gen:wikiEntry                  "<h1 class=\"title\">MSDN:&nbsp;Avoiding Polymorphism</h1>\n  \n  <div id=\"mainSection\" style=\"position: relative;\">\n<div class=\"clsServerSDKContent\" style=\"position: relative;\">\n\n</div>\n<p>The new data types include two polymorphic types, <strong>INT_PTR</strong> and <strong>LONG_PTR</strong>. On 32-bit Windows, the <strong>INT_PTR</strong> maps to <strong>int</strong> and the <strong>LONG_PTR</strong> maps to <strong>long</strong>. On 64-bit Windows, both types map to the <strong>__int64</strong> intrinsic type. The MIDL compiler supports these types for remote procedure calls, but there is an inherent limitation that you must keep in mind when using them in a distributed environment. Be sure to comment your code accordingly.</p>\n<p>Regardless of the platform size, the wire size of these polymorphic types is always 32 bits. When unmarshaling on 64-bit Windows, the run-time library sign extends signed values and assigns zero to the high-order bytes for an unsigned value. When putting a 64-bit value on the wire, the run time truncates the high-order bytes. Thus, only the low-order 32-bit values are usable.</p>\n<p>Use the polymorphic types only when necessary for porting. For new interfaces, use the MIDL intrinsic integer types <strong>__int32</strong> and <strong>__int64</strong>, or use a pointer type or context handle, whichever is most appropriate for the kind of data being transferred.</p>\n<p>The 64-bit compiler supports a new polymorphic intrinsic <strong>__int3264</strong>. Again, this type was developed to support porting efforts, in this case to support the <strong>UINT_PTR</strong> types transparently. (Another intrinsic, <strong>__long3264</strong>, will support the <strong>ULONG_PTR</strong> type.) Do not use <strong>__int3264</strong> directly; use the <strong>INT_PTR</strong> type when you need a polymorphic type for porting reasons.</p></div>" ;
          spec:hasPatternDomain          :Domain_visual_c__ .
  
  :ArchitecturalQuality_reliability
          a                        gen:ArchitecturalQuality ;
          rdfs:label               "reliability" , "Reliability" ;
          gen:hasKnowledgeAuthor   :Author_willegger_edwin ;
          gen:hasKnowledgeProject  :Project_repository ;
          gen:isQualityAffectedBy  :DesignPattern_flyweight , :DesignPattern_fault_isolation , :DesignPattern_message_filter , :DesignPattern_local_cache , :SoftwareEngineeringMethod_nfr_testing_and_analysis , :DesignPattern_routine_audits , :DesignPattern_watchdog , :DesignPattern_checkpoint , :DesignPattern_publish_subscribe , :DesignPattern_load_balancing , :DesignPattern_application_server_architecture , :DesignPattern_finish_work_in_progress , :DesignPattern_riding_over_transients , :DesignPattern_singleton , :DesignPattern_layered_architecture , :DesignPattern_traffic_shaping , :DesignPattern_static_content_hosting_pattern , :DesignPattern_minimize_human_intervention , :DesignPattern_expendable_hardware , :DesignPattern_small_patches , :DesignPattern_fault_correlation , :DesignPattern_restful_architecture , :DesignPattern_web_service_proxy , :DesignPattern_message_federation , :DesignPattern_existing_metrics , :DesignPattern_maintenance_interface , :DesignTactic_error_detection , :DesignPattern_root_cause_analysis , :DesignPattern_message_aggregator , :DesignPattern_expansive_automatic_controls , :DesignPattern_peripheral_specialist_elements , :DesignPattern_dynamic_router , :DesignPattern_checksum , :SoftwareEngineeringMethod_technical_debt_management , :DesignPattern_deferrable_work , :DesignPattern_operational_monitoring_and_alerting , :DesignPattern_fresh_work_before_stale , :DesignPattern_voting , :DesignPattern_queue_for_resources , :DesignPattern_software_update , :SoftwareEngineeringMethod_component_fault_trees , :DesignPattern_event_message , :DesignPattern_temporal_analytics , :DesignPattern_partitioning , :DesignPattern_aggregated_routing , :DesignPattern_quarantine , :DesignPattern_compensation , :DesignPattern_scheduler_agent_supervisor_pattern , :DesignPattern_claim_check , :DesignTactic_routing , :DesignPattern_let_sleeping_dogs_lie , :DesignPattern_fire_and_forget , :DesignTactic_fault_handling , :DesignTactic_vertical_scaling , :DesignPattern_memento , :DesignPattern_compensating_transaction_pattern , :DesignPattern_marked_data , :DesignPattern_rest , :DesignPattern_fault_observer , :DesignDecision_kdd-12__connection_drop , :DesignPattern_routine_maintenance , :DesignPattern_reassess_overload_decision , :DesignPattern_error_handler , :DesignPattern_realistic_threshold , :DesignPattern_leaky_bucket_counter , :DesignPattern_fault_diagnosis , :DesignPattern_esb , :DesignPattern_message_broker , :DesignPattern_remote_storage , :DesignPattern_return_to_reference_point , :DesignPattern_correcting_audits , :DesignPattern_similarity_detection , :DesignPattern_parameter_checking , :DesignPattern_units_of_mitigation , :DesignPattern_capturing_architectural_requirements , :DesignPattern_protective_automatic_controls , :DesignPattern_someone_in_charge , :DesignPattern_pipe_and_filter , :DesignPattern_idempotent_retry , :DesignPattern_redundancy , :DesignPattern_fork_and_join , :DesignPattern_rollback , :DesignPattern_resource_allocation , :DesignPattern_3-category_logging , :SoftwareEngineeringMethod_built-in_self_test_methods , :DesignPattern_competing_consumers , :DesignPattern_architectural_requirements_questionnaire , :DesignPattern_treshold_analysis , :DesignPattern_routine_exercises , :DesignPattern_escalation , :DesignPattern_concentrated_recovery , :DesignPattern_maximize_human_participation , :DesignPattern_reconfiguration , :SoftwareEngineeringMethod_coded_processing , :DesignTactic_horizontal_scaling , :DesignPattern_slow_it_down , :DesignDecision_kdd-08__adaptation_process , :DesignPattern_mirror , :DesignTactic_keep_consistent , :DesignPattern_rest_architecture , :DesignPattern_load_shedding , :DesignPattern_reintegration , :DesignTactic_asynchronous_communication , :DesignPattern_limit_retries , :DesignPattern_revise_procedure , :DesignTactic_no_single_point_of_failure , :DesignPattern_error_correcting_code , :DesignPattern_circuit_breaker , :DesignTactic_overload_mitigation , :DesignPattern_replication , :DesignTactic_producer_consumer , :DesignPattern_acknowledgement , :DesignPattern_process_manager , :DesignPattern_overload_toolboxes , :DesignPattern_error_containment_barrier , :DesignPattern_heartbeat , :DesignPattern_reinitialization , :DesignPattern_dynamically-discoverable_elements , :DesignPattern_recovery_blocks , :DesignPattern_rollforward , :DesignPattern_throttling_pattern , :DesignPattern_message_bus , :DesignPattern_duplex_messaging , :DesignPattern_final_handling , :DesignDecision_add-01__zero-footprint_architecture , :DesignPattern_indiviuals_decide_timing , :DesignPattern_failover , :DesignDecision_kdd-09__process_recovery , :DesignPattern_reproducible_error , :DesignPattern_workload_sharing , :DesignPattern_representational_state_transfer , :DesignPattern_caching , :DesignTactic_error_handling , :DesignPattern_content-based_router , :DesignPattern_observer , :DesignPattern_restart , :DesignPattern_retry_pattern ;
          gen:relatedQuality       :ArchitecturalQuality_resilience , :ArchitecturalQuality_durability , :ArchitecturalQuality_agility , :ArchitecturalQuality_availability , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_dependability , :ArchitecturalQuality_performance , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_scalability , :ArchitecturalQuality_integrity ;
          gen:wikiEntry            "[Blanchard 1992] Reliability is the ability of a system or component to perform its required functions under stated conditions for a specified period of time.  [Wikipedia Reliability 2014] In general reliability is the ability of a person or system to perform and maintain its functions in routine circumstances as well as hostile or unexpected circumstances.  [Organizational Requirements Engineering - Reliability 2006] Reliabitlity is the ability of the system to perform its required functions under stated conditions for a specific period of time.  [MSDN Quality Attributes 2015]Reliability is the ability of a system to remain operational over time. Reliability is measured as the probability that a system will not fail to perform its intended functions over a specified time interval.  [Alan Gillies 2011]Reliability is concerned with the ability of the software to maintain its level of performance under stated conditons for a stated period of time." ;
          spec:requiredBy          :Domain_abstract .
  
  :AuthorTag_nfr_engineering
          a           cont:AuthorTag ;
          rdfs:label  "nfr engineering" .
  
  :DesignDecision_kdd-21
          a                               spec:DesignDecision ;
          rdfs:label                      "KDD-21" ;
          gen:hasKnowledgeAuthor          :Author_ionescu_tudor ;
          gen:hasKnowledgeProject         :Project_aspernbm ;
          gen:wikiEntry                   "<p><strong>Generischer Mechanismus für Datenabfragen&nbsp;</strong><br></p><p>Die Datenbankabfragen werden von einer begrenzten Anzahl von generischen Programmeinheiten (z.B. Klassen oder einfache Funktionen) gesteuert. Somit wird vermieden, dass für jede neue Abfrage eine neue Programmeinheit erstellt wird. Der Name der Datenabfrage soll als Parameter der dafür zuständigen Programmeinheit übergeben werden.</p><p>Für die Abfragen werden Abfragefilter verwendet, die aus einem eindeutigen Namen der Abfrage und einer Reihe von Parametern bestehen. Dabei müssen die Parameter, die zur Erzeugung jeglicher Grafiken notwendig sind, systemweit standardisiert werden. Dazu zählen zum Beispiel:<br></p><ul><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Name der Abfrage</span><br></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Parameter für Zeitspannen</span><br></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Parameter für Granularität (z.B. Tag, Woche, Monat, Jahr)</span><br></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">Gebäudetyp</span><br></li><li><span style=\"line-height: 1.3em;\" data-mce-style=\"line-height: 1.3em;\">…</span><br></li></ul><p>&nbsp;</p><p>Die AE-Komponente (Aspern Erweiterungen) in Abbildung 1 ist die für Datenabfragen zuständige Web-Anwedung. Sie wird als Webdienst bereitgestellt und kann, je nach Implementierung, auf die Datenbank über</p><ul><li>einen JDBC/ODBC Treiber oder</li><li>einen REST/SOAP Webdienst.</li></ul><p>Abbildung 2 zeigt einen möglichen Implementierungsansatz in einer höheren Sprache (z.B. C# oder Java) für die generischen Klassen zur Steuerung der Datenabfragen. Die&nbsp;<em>QueryManager</em>-Klassen sind für die Zusammensetzung der Abfragefilter (Query-Namen + Query-Parameter) zuständig. Ein&nbsp;<em>ResultFormatter</em>&nbsp;ist nur dann notwendig, wenn die Formatierung (z.B. in JSON) nicht schon im DWH durchgeführt wird. Dieser Implementierungsansatz ist in Übereinstimmung mit folgenden Architekturentscheidungen:</p><p><img style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\" src=\"https://workspace.cee.siemens.com/content/00000102/saFiddle/p/AspernBM/QueryManager.png\" alt=\"\" width=\"628\" height=\"314\" data-mce-src=\"p/AspernBM/QueryManager.png\" data-mce-style=\"border-width: 0px; display: block; margin-left: auto; margin-right: auto;\"></p><p style=\"text-align: center;\" data-mce-style=\"text-align: center;\"><strong>Abbildung 2:</strong>&nbsp;Generische QueryManager-Klassenstruktur in Java. Diese Klassen sind Teil der Data API-Komponente in Abbildung 1.</p>" ;
          spec:decisionArchitecturalView  "II.Logische Sicht" ;
          spec:hasDecisionDomain          :Domain_ar-158__standard_compatibility , :Domain_ar-155__generic_components , :Domain_ar-154__extensibiltiy , :Domain_ar-164__modularity ;
          spec:hasPosDecisionEffectOnQuality
                  :ArchitecturalQuality_portability , :ArchitecturalQuality_extensibility , :ArchitecturalQuality_maintainability , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_modularity ;
          spec:useDecisionTactic          :DesignTactic_separation_of_concerns , :DesignTactic_extension_support , :DesignTactic_web_interfaces , :DesignTactic_genericization , :DesignTactic_service_orientation , :DesignTactic_modularization .
  
  :Domain_safety_critical
          a           spec:Domain ;
          rdfs:label  "safety critical" .
  
  gen:isQualityAffectedBy
          a                   owl:ObjectProperty ;
          rdfs:domain         gen:ArchitecturalQuality ;
          rdfs:label          "isAffectedBy" ;
          rdfs:subPropertyOf  gen:isAffectedBy .
  
  :UseCase_analysis_support
          a           spec:UseCase ;
          rdfs:label  "analysis support" .
  
  :Author_edwin_willegger
          a           cont:Author ;
          rdfs:label  "edwin willegger" .
  
  gen:qualityCluster  a  owl:DatatypeProperty ;
          rdfs:domain  gen:ArchitecturalQuality ;
          rdfs:range   xsd:string .
  
  :Domain_ar-017__reusable_components
          a           spec:Domain ;
          rdfs:label  "ar-017: reusable components" .
  
  :DesignPattern_command
          a                              gen:DesignPattern ;
          rdfs:label                     "Command" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_ionescu_tudor ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maintainability , :ArchitecturalQuality_availability , :ArchitecturalQuality_modifiability , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_privacy , :ArchitecturalQuality_composability , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_complexity , :ArchitecturalQuality_correctness , :ArchitecturalQuality_security , :ArchitecturalQuality_compatibility , :ArchitecturalQuality_scalability ;
          gen:isAlternativeOf            :DesignTactic_monitoring , :DesignTactic_routing , :DesignTactic_logging , :DesignTactic_data_access , :DesignTactic_composition , :DesignTactic_message_construction ;
          gen:wikiEntry                  "<h2>Motivation</h2>\n<p align=\"justify\">The <em>Cancel Task </em>pattern provides the ability to withdraw a task which has been enabled or is already executing. This ensures that it will not commence or complete execution. </p>\n<h2>Overview</h2>\n<p align=\"justify\">The general interpretation of the <em>Cancel Task</em> pattern is illustrated by Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig25\" target=\"_blank\">25</a>. The trigger which has enabled task B is removed, preventing the task from proceeding.</p>\n<a name=\"fig25\" id=\"fig25\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig25.png\" width=\"539\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 25: </strong>Cancel task pattern (variant 1) </p>\n<p align=\"justify\">There is also a second variant of the pattern where the task has already commenced execution but has not yet completed. This scenario is shown in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig26\" target=\"_blank\">26</a>, where a task which has been enabled or is currently executing can be cancelled. It is important to note for both variants that cancellation is not guaranteed and it is possible that the task will continue executing to completion. In effect, the cancellation vs continuation decision operates as a <em>Deferred Choice</em> with a race condition being set up between the cancellation event and the much slower task of resources responding to work assignment. For all practical purposes, it is much more likely that the cancellation will be effected rather than the task being continued.</p>\n<a name=\"fig26\" id=\"fig26\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig26.png\" width=\"620\" height=\"136\"></p>\n<p align=\"center\"><strong>Figure 26:</strong> Cancel task pattern (variant 2) </p>\n<p align=\"justify\">Where guaranteed cancellation is required, the implementation of tasks should take the form illustrated in Figure <a href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php#fig27\" target=\"_blank\">27</a>. The decision to cancel task B can only be made after it has been enabled and prior to it completing. Once this decision is made, it is not possible for the task to progress any further. For obvious reasons, it is not possible to cancel a task which has not been enabled (i.e. there is no \"memory\" associated with the action of cancelling a task in the way that there is for triggers) nor is it possible to cancel a task which has already completed execution. </p>\n<a name=\"fig27\" id=\"fig27\" href=\"http://www.workflowpatterns.com/patterns/control/cancellation/wcp19.php\" target=\"_blank\"></a><p align=\"center\"><img src=\"http://www.workflowpatterns.com/patterns/control/images/fig27.png\" width=\"734\" height=\"276\"></p>\n<p align=\"center\"><strong>Figure 27:</strong> Cancel task pattern with guaranteed termination</p>\n<p align=\"justify\">&nbsp;</p>" , "[Wikipedia Command Pattern 2014] A Command creates objects which encapsulate actions and parameters. (GoF behavioral pattern)" ;
          spec:hasPatternDomain          :Domain_abstract , :Domain_embedded_systems ;
          owl:sameAs                     dbr:Command_pattern .
  
  :Domain_ar-105__reports_and_analytics
          a           spec:Domain ;
          rdfs:label  "ar-105: reports and analytics" .
  
  :DesignPattern_data_logger
          a                              gen:DesignPattern ;
          rdfs:label                     "Data Logger" ;
          gen:hasKnowledgeAuthor         :Author_ionescu_tudor , :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_repeatability , :ArchitecturalQuality_debuggability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_analyzability , :ArchitecturalQuality_defensibility , :ArchitecturalQuality_security , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_availability , :ArchitecturalQuality_observability , :ArchitecturalQuality_accessibility , :ArchitecturalQuality_auditability , :ArchitecturalQuality_accountability ;
          gen:isAlternativeOf            :DesignTactic_monitoring , :DesignTactic_logging , :DesignTactic_auditing ;
          gen:wikiEntry                  "#StartSearchingFromHere#\" style=\"display:none;\">#StartSearchingFromHere#</div>\n\t\t<div id=\"mw-page-base\" class=\"noprint\"></div>\n\t\t<div id=\"mw-head-base\" class=\"noprint\"></div>\n\t\t<div id=\"content\" class=\"mw-body\" role=\"main\">\n\t\t\t<a id=\"top\"></a>\n\n\t\t\t\t\t\t\t<div id=\"siteNotice\"><div id=\"centralNotice\" class=\"cn-wle2015at\"><!--googleoff: all--><div style=\"background:#FCFCFC; border:1px solid #339966; margin: 0 auto 1em auto; font-size: 120%; overflow: hidden; text-align: center; padding: 0.5ex;\"><div id=\"cn-toggle-box\" style=\"float:right;\" valign=\"middle\"><a href=\"#\" title=\"Close\" onclick=\"mw.centralNotice.hideBanner();return false;\"><img border=\"0\" src=\"//upload.wikimedia.org/wikipedia/foundation/2/20/CloseWindow19x19.png\" alt=\"Close\"></a></div>\n<div style=\"margin-top: 17px\"><center>\n<div class=\"floatleft\"><a href=\"http://wikilovesearth.at/\" class=\"image\"><img alt=\"WLE Austria Logo (no text).svg\" src=\"//upload.wikimedia.org/wikipedia/commons/thumb/8/85/WLE_Austria_Logo_%28no_text%29.svg/50px-WLE_Austria_Logo_%28no_text%29.svg.png\" width=\"50\" height=\"50\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/8/85/WLE_Austria_Logo_%28no_text%29.svg/75px-WLE_Austria_Logo_%28no_text%29.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/8/85/WLE_Austria_Logo_%28no_text%29.svg/100px-WLE_Austria_Logo_%28no_text%29.svg.png 2x\" style=\"margin-top:-10px;\"></a></div><a href=\"http://wikilovesearth.at/\" class=\"image\"><img src=\"//upload.wikimedia.org/wikipedia/commons/thumb/4/42/Naturdenkmal_646_2011-09-24_0113_Wien_02_Prater_Mauthnerwasser_GuentherZ.JPG/77px-Naturdenkmal_646_2011-09-24_0113_Wien_02_Prater_Mauthnerwasser_GuentherZ.JPG\" class=\"wle_image\" style=\"float:right; margin-right: 10px; margin-top: -15px\"></a><span class=\"plainlinks\">Wiki Loves Earth in focus during May and June<br><a class=\"external text\" href=\"http://wikilovesearth.at/\">Discover nature, take photos, help Wikipedia and win!</a></span></center>\n</div></div><div style=\"clear:both;\"></div><!--googleon: all--></div><!-- CentralNotice --></div>\n\t\t\t\t\t\t<div class=\"mw-indicators\">\n</div>\n\t\t\t<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Publish–subscribe pattern</h1>\n\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\">From Wikipedia, the free encyclopedia</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"#mw-head\">navigation</a>, \t\t\t\t\t<a href=\"#p-search\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"hatnote\">For the Macintosh feature introduced with System 7, see <a href=\"/wiki/Publish_and_Subscribe_(Mac_OS)\" title=\"Publish and Subscribe (Mac OS)\">Publish and Subscribe (Mac OS)</a>.</div>\n<div class=\"hatnote\">\"PubSub\" redirects here. For the defunct search website, see <a href=\"/wiki/PubSub_(website)\" title=\"PubSub (website)\">PubSub (website)</a>.</div>\n<table class=\"metadata plainlinks ambox ambox-content ambox-Refimprove\" role=\"presentation\">\n<tbody><tr>\n<td class=\"mbox-image\">\n<div style=\"width:52px\"><a href=\"/wiki/File:Question_book-new.svg\" class=\"image\"><img alt=\"\" src=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png\" width=\"50\" height=\"39\" srcset=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x\" data-file-width=\"262\" data-file-height=\"204\"></a></div>\n</td>\n<td class=\"mbox-text\"><span class=\"mbox-text-span\">This article <b>needs additional citations for <a href=\"/wiki/Wikipedia:Verifiability\" title=\"Wikipedia:Verifiability\">verification</a></b>. <span class=\"hide-when-compact\">Please help <a class=\"external text\" href=\"//en.wikipedia.org/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit\">improve this article</a> by <a href=\"/wiki/Help:Introduction_to_referencing/1\" title=\"Help:Introduction to referencing/1\">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(March 2010)</i></small></span></td>\n</tr>\n</tbody></table>\n<p>In <a href=\"/wiki/Software_architecture\" title=\"Software architecture\">software architecture</a>, <b>publish–subscribe</b> is a <a href=\"/wiki/Messaging_pattern\" title=\"Messaging pattern\">messaging pattern</a> where senders of <a href=\"/wiki/Message_passing\" title=\"Message passing\">messages</a>, called publishers, do not program the messages to be sent directly to specific receivers, called subscribers. Instead, published messages are characterized into classes, without knowledge of what, if any, subscribers there may be. Similarly, subscribers express interest in one or more classes, and only receive messages that are of interest, without knowledge of what, if any, publishers there are.</p>\n<p>Pub/sub is a sibling of the <a href=\"/wiki/Message_queue\" title=\"Message queue\">message queue</a> paradigm, and is typically one part of a larger <a href=\"/wiki/Message-oriented_middleware\" title=\"Message-oriented middleware\">message-oriented middleware</a> system. Most messaging systems support both the pub/sub and message queue models in their <a href=\"/wiki/Application_programming_interface\" title=\"Application programming interface\">API</a>, e.g. <a href=\"/wiki/Java_Message_Service\" title=\"Java Message Service\">Java Message Service</a> (JMS).</p>\n<p>This pattern provides greater network <a href=\"/wiki/Scalability\" title=\"Scalability\">scalability</a> and a more dynamic <a href=\"/wiki/Network_topology\" title=\"Network topology\">network topology</a>, with a resulting decreased flexibility to modify the Publisher and its structure of the data published.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"#\" id=\"togglelink\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Message_filtering\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Message filtering</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#Topologies\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Topologies</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#History\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">History</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"#Advantages\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">Advantages</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"#Loose_coupling\"><span class=\"tocnumber\">4.1</span> <span class=\"toctext\">Loose coupling</span></a></li>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"#Scalability\"><span class=\"tocnumber\">4.2</span> <span class=\"toctext\">Scalability</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#Disadvantages\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">Disadvantages</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-8\"><a href=\"#Inflexible_Semantic_coupling\"><span class=\"tocnumber\">5.1</span> <span class=\"toctext\">Inflexible Semantic coupling</span></a></li>\n<li class=\"toclevel-2 tocsection-9\"><a href=\"#Message_Delivery_Issues\"><span class=\"tocnumber\">5.2</span> <span class=\"toctext\">Message Delivery Issues</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-10\"><a href=\"#See_also\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-11\"><a href=\"#References\"><span class=\"tocnumber\">7</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-12\"><a href=\"#External_links\"><span class=\"tocnumber\">8</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Message_filtering\">Message filtering</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=1\" title=\"Edit section: Message filtering\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>In the pub/sub model, subscribers typically receive only a subset of the total messages published. The process of selecting messages for reception and processing is called <i>filtering</i>. There are two common forms of filtering: topic-based and content-based.</p>\n<p>In a <b>topic-based</b> system, messages are published to \"topics\" or named logical channels. Subscribers in a topic-based system will receive all messages published to the topics to which they subscribe, and all subscribers to a topic will receive the same messages. The publisher is responsible for defining the classes of messages to which subscribers can subscribe.</p>\n<p>In a <b>content-based</b> system, messages are only delivered to a subscriber if the attributes or content of those messages match constraints defined by the subscriber. The subscriber is responsible for classifying the messages.</p>\n<p>Some systems support a <b>hybrid</b> of the two; publishers post messages to a topic while subscribers register content-based subscriptions to one or more topics.</p>\n<h2><span class=\"mw-headline\" id=\"Topologies\">Topologies</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=2\" title=\"Edit section: Topologies\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>In many pub/sub systems, publishers post messages to an intermediary <a href=\"/wiki/Message_broker\" title=\"Message broker\">message broker or event bus</a>, and subscribers register subscriptions with that broker, letting the broker perform the filtering. The broker normally performs a <a href=\"/wiki/Store_and_forward\" title=\"Store and forward\">store and forward</a> function to route messages from publishers to subscribers. In addition, the broker may prioritize messages in a <a href=\"/wiki/Priority_queue\" title=\"Priority queue\">queue</a> before routing.</p>\n<p>Subscribers may register for specific messages at build time, initialization time or runtime. In GUI systems, subscribers can be coded to handle user commands (e.g., click of a button), which corresponds to build time registration. Some frameworks and software products use xml configuration files to register subscribers. These configuration files are read at initialization time. The most sophisticated alternative is when subscribers can be added or removed at runtime. This latter approach is used, for example, in <a href=\"/wiki/Database_trigger\" title=\"Database trigger\">database triggers</a>, <a href=\"/wiki/Mailing_list\" title=\"Mailing list\">mailing lists</a>, and <a href=\"/wiki/RSS\" title=\"RSS\">RSS</a>.</p>\n<p>The <a href=\"/wiki/Data_Distribution_Service\" title=\"Data Distribution Service\">Data Distribution Service</a> (DDS) middleware does not use a broker in the middle. Instead, each publisher and subscriber in the pub/sub system shares meta-data about each other via IP multicast. The publisher and the subscribers cache this information locally and route messages based on the discovery of each other in the shared cognizance.</p>\n<h2><span class=\"mw-headline\" id=\"History\">History</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=3\" title=\"Edit section: History\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>One of the earliest publicly described pub/sub systems was the \"news\" subsystem of the Isis Toolkit, described at the 1987 <a href=\"/wiki/Association_for_Computing_Machinery\" title=\"Association for Computing Machinery\">Association for Computing Machinery</a> (ACM) Symposium on Operating Systems Principles conference (SOSP '87), in a paper \"Exploiting <a href=\"/wiki/Virtual_synchrony\" title=\"Virtual synchrony\">Virtual Synchrony</a> in <a href=\"/wiki/Distributed_computing\" title=\"Distributed computing\">Distributed Systems</a>. 123–138\".<sup id=\"cite_ref-1\" class=\"reference\"><a href=\"#cite_note-1\"><span>[</span>1<span>]</span></a></sup></p>\n<h2><span class=\"mw-headline\" id=\"Advantages\">Advantages</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=4\" title=\"Edit section: Advantages\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Loose_coupling\">Loose coupling</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=5\" title=\"Edit section: Loose coupling\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<dl>\n<dd>Publishers are <a href=\"/wiki/Loose_coupling\" title=\"Loose coupling\">loosely coupled</a> to subscribers, and need not even know of their existence. With the topic being the focus, publishers and subscribers are allowed to remain ignorant of system topology. Each can continue to operate normally regardless of the other. In the traditional tightly coupled <a href=\"/wiki/Client%E2%80%93server_model\" title=\"Client–server model\">client–server paradigm</a>, the client cannot post messages to the server while the server process is not running, nor can the server receive messages unless the client is running. Many pub/sub systems decouple not only the locations of the publishers and subscribers, but also decouple them temporally. A common strategy used by <a href=\"/wiki/Middleware_analyst\" title=\"Middleware analyst\">middleware analysts</a> with such pub/sub systems is to take down a publisher to allow the subscriber to work through the backlog (a form of <a href=\"/wiki/Bandwidth_throttling\" title=\"Bandwidth throttling\">bandwidth throttling</a>).</dd>\n</dl>\n<h3><span class=\"mw-headline\" id=\"Scalability\">Scalability</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=6\" title=\"Edit section: Scalability\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<dl>\n<dd>Pub/sub provides the opportunity for better <a href=\"/wiki/Scalability\" title=\"Scalability\">scalability</a> than traditional client–server, through parallel operation, message caching, tree-based or network-based routing, etc. However, in certain types of tightly coupled, high-volume enterprise environments, as systems scale up to become data centers with thousands of servers sharing the pub/sub infrastructure, current vendor systems often lose this benefit; scalability for pub/sub products under high load in these contexts is a research challenge.</dd>\n<dd>Outside of the enterprise environment, on the other hand, the pub/sub paradigm has proven its scalability to volumes far beyond those of a single data centre, providing Internet-wide distributed messaging through web syndication protocols such as <a href=\"/wiki/RSS\" title=\"RSS\">RSS</a> and <a href=\"/wiki/Atom_(standard)\" title=\"Atom (standard)\">Atom (standard)</a>. These syndication protocols accept higher latency and lack of delivery guarantees in exchange for the ability for even a low-end web server to syndicate messages to (potentially) millions of separate subscriber nodes.</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"Disadvantages\">Disadvantages</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=7\" title=\"Edit section: Disadvantages\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The most serious problems with pub/sub systems are a side-effect of their main advantage: the decoupling of publisher from subscriber.</p>\n<h3><span class=\"mw-headline\" id=\"Inflexible_Semantic_coupling\">Inflexible Semantic coupling</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=8\" title=\"Edit section: Inflexible Semantic coupling\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>The structure of the data published must be well defined, and quickly becomes rather inflexible. In order to modify the published data structure, it would be necessary to know about all the Subscribers, and either modify them also, or maintain compatibility with older versions. This makes refactoring of Publisher code much more difficult. Since requirements change over time, the inflexibility of the data structure becomes a burden on the programmer.</p>\n<p>However, this is a common issue with any client/server architecture and is best served by versioning content payloads or topics and/or changing URL end points for backward compatibility.</p>\n<p>In more academic terms:</p>\n<p>[It is true that] Pub/sub systems have loose coupling within space, time and synchronization, providing a scalable infrastructure for information exchange and distributed workflows. However, pub/sub are tightly coupled, via event subscriptions and patterns, to the semantics of the underlying event schema and values. The high degree of semantic heterogeneity of events in large and open deployments such as smart cities and the sensor web makes it difficult to develop and maintain pub/sub systems. In order to address semantic coupling within pub/sub systems the use of approximate semantic matching of events is an active area of research.<sup id=\"cite_ref-2\" class=\"reference\"><a href=\"#cite_note-2\"><span>[</span>2<span>]</span></a></sup></p>\n<h3><span class=\"mw-headline\" id=\"Message_Delivery_Issues\">Message Delivery Issues</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=9\" title=\"Edit section: Message Delivery Issues\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>A pub/sub system must be designed carefully to be able to provide stronger system properties that a particular application might require, such as assured delivery.</p>\n<ul>\n<li>The broker in a pub/sub system may be designed to deliver messages for a specified time, but then stop attempting delivery, whether or not it has received confirmation of successful receipt of the message by all subscribers. A pub/sub system so-designed cannot guarantee delivery of messages to any applications that might require such assured delivery. Tighter coupling of the designs of such a publisher and subscriber pair must be enforced outside of the pub/sub architecture to accomplish such assured delivery (e.g. by requiring the subscriber to publish receipt messages).</li>\n<li>A publisher in a pub/sub system may \"assume\" that a subscriber is listening when it is not. A <a href=\"/wiki/Factory_method_pattern\" title=\"Factory method pattern\">factory</a> may utilize a pub/sub system where equipment can publish problems or failures to a subscriber that displays and logs those problems. If the logger fails (crashes), equipment problem publishers won't necessarily receive notice of the logger failure and error messages will not be displayed or recorded by any equipment on the pub/sub system. It should be noted that this is also a design challenge for alternative messaging architectures, such as a client/server system. In a client/server system, when an error logger fails, the system will receive an indication of the error logger (server) failure. But the client/server system will have to deal with that failure by having redundant logging servers online, or spawning fallback logging servers dynamically. This adds complexity to the client and server designs and the client/server architecture as a whole. However, in a pub/sub system, redundant logging subscribers that are exact duplicates of the existing logger can be added to the system to increase logging reliability without any impact to any other equipment on the system. In a pub/sub system, the feature of assured error message logging, can be added incrementally, subsequent to implementing the simpler basic functionality of equipment problem message logging.</li>\n</ul>\n<p>Pub/sub scales well for small networks with a small number of publishers and subscriber nodes and low message volume. However, as the number of nodes and messages grows, the likelihood of instabilities increases, limiting the maximum scalability of a pub/sub network. Example throughput instabilities at large scales include:</p>\n<ul>\n<li>Load surges—periods when subscriber requests saturate network throughput followed by periods of low message volume (underutilized network bandwidth)</li>\n<li>Slowdowns—more and more applications use the system (even if they are communicating on separate pub/sub channels) the message volume flow to an individual subscriber will slow</li>\n<li>IP <a href=\"/wiki/Broadcast_storm\" title=\"Broadcast storm\" class=\"mw-redirect\">broadcast storms</a>—a local area network may be shut down entirely by saturating it with overhead messages that choke out all normal traffic unrelated to the pub/sub traffic</li>\n</ul>\n<p>For pub/sub systems that use brokers (servers), the agreement for a broker to send messages to a subscriber is <a href=\"/wiki/In-band_control\" title=\"In-band control\">in-band</a>, and can be subject to security problems. Brokers might be fooled into sending notifications to the wrong client, amplifying denial of service requests against the client. Brokers themselves could be overloaded as they allocate resources to track created subscriptions.</p>\n<p>Even with systems that do not rely on brokers, a subscriber might be able to receive data that it is not authorized to receive. An unauthorized publisher may be able to introduce incorrect or damaging messages into the pub/sub system. This is especially true with systems that <a href=\"/wiki/Broadcasting_(computing)\" title=\"Broadcasting (computing)\" class=\"mw-redirect\">broadcast</a> or <a href=\"/wiki/Multicast\" title=\"Multicast\">multicast</a> their messages. <a href=\"/wiki/Encryption\" title=\"Encryption\">Encryption</a> (e.g. <a href=\"/wiki/Transport_Layer_Security\" title=\"Transport Layer Security\">Transport Layer Security</a> (SSL/TLS)) can prevent unauthorized access but cannot prevent damaging messages from being introduced by authorized publishers. Architectures other than pub/sub, such as client/server systems are also vulnerable to authorized message senders that behave maliciously.</p>\n<h2><span class=\"mw-headline\" id=\"See_also\">See also</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=10\" title=\"Edit section: See also\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n<li><a href=\"/wiki/Message_broker\" title=\"Message broker\">Message brokers</a></li>\n<li><a href=\"/wiki/PubSubHubbub\" title=\"PubSubHubbub\">PubSubHubbub</a>, an implementation of pub/sub</li>\n<li><a href=\"/wiki/RSS\" title=\"RSS\">RSS</a>, a highly scalable web-syndication protocol</li>\n<li><a href=\"/wiki/Atom_(standard)\" title=\"Atom (standard)\">Atom (standard)</a>, another highly scalable web-syndication protocol</li>\n<li><a href=\"/wiki/Event-driven_programming\" title=\"Event-driven programming\">Event-driven programming</a></li>\n<li><a href=\"/wiki/Observer_pattern\" title=\"Observer pattern\">Observer Pattern</a></li>\n<li><a href=\"/wiki/High-level_architecture_(simulation)\" title=\"High-level architecture (simulation)\">High-level architecture</a></li>\n<li>OMG <a href=\"/wiki/Data_Distribution_Service\" title=\"Data Distribution Service\">Data Distribution Service</a> (DDS)</li>\n<li><a href=\"/wiki/Push_technology\" title=\"Push technology\">Push technology</a></li>\n<li><a href=\"/wiki/Usenet\" title=\"Usenet\">Usenet</a></li>\n<li><a href=\"/wiki/Internet_Group_Management_Protocol\" title=\"Internet Group Management Protocol\">Internet Group Management Protocol</a></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"References\">References</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=11\" title=\"Edit section: References\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<div class=\"reflist\" style=\"list-style-type: decimal;\">\n<ol class=\"references\">\n<li id=\"cite_note-1\"><span class=\"mw-cite-backlink\"><b><a href=\"#cite_ref-1\"><span class=\"cite-accessibility-label\">Jump up </span>^</a></b></span> <span class=\"reference-text\">Birman, K. and Joseph, T. \"<a rel=\"nofollow\" class=\"external text\" href=\"http://portal.acm.org/citation.cfm?id=41457.37515&amp;coll=portal&amp;dl=ACM&amp;CFID=97240647&amp;CFTOKEN=78805594\">Exploiting virtual synchrony in distributed systems</a>\" <i>in Proceedings of the eleventh ACM Symposium on Operating systems principles (SOSP '87)</i>, 1987. pp. 123–138.</span></li>\n<li id=\"cite_note-2\"><span class=\"mw-cite-backlink\"><b><a href=\"#cite_ref-2\"><span class=\"cite-accessibility-label\">Jump up </span>^</a></b></span> <span class=\"reference-text\">Hasan, Souleiman, Sean O’Riain, and Edward Curry. 2012. <a rel=\"nofollow\" class=\"external text\" href=\"http://www.edwardcurry.org/publications/Hasan_DEBS_2012.pdf\">“Approximate Semantic Matching of Heterogeneous Events.”</a> In 6th ACM International Conference on Distributed Event-Based Systems (DEBS 2012), 252–263. Berlin, Germany: ACM. <a rel=\"nofollow\" class=\"external text\" href=\"http://dx.doi.org/10.1145/2335484.2335512\">“DOI”</a>.</span></li>\n</ol>\n</div>\n<h2><span class=\"mw-headline\" id=\"External_links\">External links</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=12\" title=\"Edit section: External links\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://xmpp.org/extensions/xep-0060.html\">XMPP XEP-0060: Publish-Subscribe</a></li>\n<li>For an open source example which is in production on MSN.com and Microsoft.com, see <a rel=\"nofollow\" class=\"external text\" href=\"http://www.codeplex.com/pubsub\">Distributed Publish/Subscribe Event System</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://pubsub.sf.net\">Python PubSub</a> a Python Publish-Subscribe broker for messages *within* an application (NOT network)</li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://portals.omg.org/dds\">The OMG DDS portal</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://rtmatheson.com/2010/03/working-on-the-subject-observer-pattern/\">Publish Subscribe example in C++</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://open.syn3.nl/syn3/trac/default/wiki/projects/synapse\">Synapse is a C++ framework that implements a Publish-subscribe pattern</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://stackoverflow.com/questions/tagged/publish-subscribe\">Programmer Question-Answer topics tagged with \"publish-subscribe\"</a></li>\n</ul>\n\n\n<!-- \nNewPP limit report\nParsed by mw1215\nCPU time usage: 0.138 seconds\nReal time usage: 0.390 seconds\nPreprocessor visited node count: 303/1000000\nPreprocessor generated node count: 0/1500000\nPost-expand include size: 4282/2097152 bytes\nTemplate argument size: 132/2097152 bytes\nHighest expansion depth: 6/40\nExpensive parser function count: 2/500\nLua time usage: 0.031/10.000 seconds\nLua memory usage: 845 KB/50 MB\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%  303.972      1 - -total\n 83.02%  252.371      1 - Template:Refimprove\n 13.50%   41.023      1 - Template:Ambox\n 10.06%   30.580      1 - Template:For\n  8.84%   26.866      1 - Template:Hatnote\n  3.75%   11.404      1 - Template:Redirect\n  2.01%    6.125      1 - Template:Reflist\n-->\n\n<!-- Saved in parser cache with key enwiki:pcache:idhash:1336424-0!*!0!!en!4!* and timestamp 20150504082141 and revision id 651964637\n -->\n<noscript>&amp;lt;img src=\"//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1\" alt=\"\" title=\"\" width=\"1\" height=\"1\" style=\"border: none; position: absolute;\" /&amp;gt;</noscript></div>\t\t\t\t\t\t\t\t\t<div class=\"printfooter\">\n\t\t\t\t\t\tRetrieved from \"<a dir=\"ltr\" href=\"http://en.wikipedia.org/w/index.php?title=Publish–subscribe_pattern&amp;oldid=651964637\">http://en.wikipedia.org/w/index.php?title=Publish–subscribe_pattern&amp;oldid=651964637</a>\"\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"catlinks\" class=\"catlinks\"><div id=\"mw-normal-catlinks\" class=\"mw-normal-catlinks\"><a href=\"/wiki/Help:Category\" title=\"Help:Category\">Categories</a>: <ul><li><a href=\"/wiki/Category:Software_design_patterns\" title=\"Category:Software design patterns\">Software design patterns</a></li><li><a href=\"/wiki/Category:Distributed_computing_architecture\" title=\"Category:Distributed computing architecture\">Distributed computing architecture</a></li><li><a href=\"/wiki/Category:Message-oriented_middleware\" title=\"Category:Message-oriented middleware\">Message-oriented middleware</a></li></ul></div><div id=\"mw-hidden-catlinks\" class=\"mw-hidden-catlinks mw-hidden-cats-hidden\">Hidden categories: <ul><li><a href=\"/wiki/Category:Articles_needing_additional_references_from_March_2010\" title=\"Category:Articles needing additional references from March 2010\">Articles needing additional references from March 2010</a></li><li><a href=\"/wiki/Category:All_articles_needing_additional_references\" title=\"Category:All articles needing additional references\">All articles needing additional references</a></li></ul></div></div>\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"visualClear\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"mw-navigation\">\n\t\t\t<h2>Navigation menu</h2>\n\n\t\t\t<div id=\"mw-head\">\n\t\t\t\t\t\t\t\t\t<div id=\"p-personal\" role=\"navigation\" class=\"\" aria-labelledby=\"p-personal-label\">\n\t\t\t\t\t\t<h3 id=\"p-personal-label\">Personal tools</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"pt-createaccount\"><a href=\"/w/index.php?title=Special:UserLogin&amp;returnto=Publish%E2%80%93subscribe+pattern&amp;type=signup\" title=\"You are encouraged to create an account and log in; however, it is not mandatory\">Create account</a></li><li id=\"pt-login\"><a href=\"/w/index.php?title=Special:UserLogin&amp;returnto=Publish%E2%80%93subscribe+pattern\" title=\"You're encouraged to log in; however, it's not mandatory. [alt-shift-o]\" accesskey=\"o\">Log in</a></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id=\"left-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-namespaces\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-namespaces-label\">\n\t\t\t\t\t\t<h3 id=\"p-namespaces-label\">Namespaces</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-nstab-main\" class=\"selected\"><span><a href=\"/wiki/Publish%E2%80%93subscribe_pattern\" title=\"View the content page [alt-shift-c]\" accesskey=\"c\">Article</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-talk\"><span><a href=\"/wiki/Talk:Publish%E2%80%93subscribe_pattern\" title=\"Discussion about the content page [alt-shift-t]\" accesskey=\"t\">Talk</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-variants\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-variants-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 id=\"p-variants-label\" tabindex=\"0\"><span>Variants</span><a href=\"#\" tabindex=\"-1\"></a></h3>\n\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t<div id=\"right-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-views\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-views-label\">\n\t\t\t\t\t\t<h3 id=\"p-views-label\">Views</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-view\" class=\"selected\"><span><a href=\"/wiki/Publish%E2%80%93subscribe_pattern\">Read</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-edit\"><span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit\" title=\"You can edit this page. Please use the preview button before saving [alt-shift-e]\" accesskey=\"e\">Edit</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-history\" class=\"collapsible\"><span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=history\" title=\"Past versions of this page [alt-shift-h]\" accesskey=\"h\">View history</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-cactions\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-cactions-label\">\n\t\t\t\t\t\t<h3 id=\"p-cactions-label\" tabindex=\"0\"><span>More</span><a href=\"#\" tabindex=\"-1\"></a></h3>\n\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-search\" role=\"search\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<label for=\"searchInput\">Search</label>\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<form action=\"/w/index.php\" id=\"searchform\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"simpleSearch\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"search\" name=\"search\" placeholder=\"Search\" title=\"Search Wikipedia [alt-shift-f]\" accesskey=\"f\" id=\"searchInput\" tabindex=\"1\" autocomplete=\"off\"><input type=\"hidden\" value=\"Special:Search\" name=\"title\"><input type=\"submit\" name=\"go\" value=\"Go\" title=\"Go to a page with this exact name if one exists\" id=\"searchButton\" class=\"searchButton\">\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"mw-panel\">\n\t\t\t\t<div id=\"p-logo\" role=\"banner\"><a class=\"mw-wiki-logo\" href=\"/wiki/Main_Page\" title=\"Visit the main page\"></a></div>\n\t\t\t\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-navigation\" aria-labelledby=\"p-navigation-label\">\n\t\t\t<h3 id=\"p-navigation-label\">Navigation</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-mainpage-description\"><a href=\"/wiki/Main_Page\" title=\"Visit the main page [alt-shift-z]\" accesskey=\"z\">Main page</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-contents\"><a href=\"/wiki/Portal:Contents\" title=\"Guides to browsing Wikipedia\">Contents</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-featuredcontent\"><a href=\"/wiki/Portal:Featured_content\" title=\"Featured content – the best of Wikipedia\">Featured content</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-currentevents\"><a href=\"/wiki/Portal:Current_events\" title=\"Find background information on current events\">Current events</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-randompage\"><a href=\"/wiki/Special:Random\" title=\"Load a random article [alt-shift-x]\" accesskey=\"x\">Random article</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-sitesupport\"><a href=\"https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en\" title=\"Support us\">Donate to Wikipedia</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-shoplink\"><a href=\"//shop.wikimedia.org\" title=\"Visit the Wikimedia Shop\">Wikipedia store</a></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-interaction\" aria-labelledby=\"p-interaction-label\">\n\t\t\t<h3 id=\"p-interaction-label\">Interaction</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-help\"><a href=\"/wiki/Help:Contents\" title=\"Guidance on how to use and edit Wikipedia\">Help</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-aboutsite\"><a href=\"/wiki/Wikipedia:About\" title=\"Find out about Wikipedia\">About Wikipedia</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-portal\"><a href=\"/wiki/Wikipedia:Community_portal\" title=\"About the project, what you can do, where to find things\">Community portal</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-recentchanges\"><a href=\"/wiki/Special:RecentChanges\" title=\"A list of recent changes in the wiki [alt-shift-r]\" accesskey=\"r\">Recent changes</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-contactpage\"><a href=\"//en.wikipedia.org/wiki/Wikipedia:Contact_us\">Contact page</a></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-tb\" aria-labelledby=\"p-tb-label\">\n\t\t\t<h3 id=\"p-tb-label\">Tools</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-whatlinkshere\"><a href=\"/wiki/Special:WhatLinksHere/Publish%E2%80%93subscribe_pattern\" title=\"List of all English Wikipedia pages containing links to this page [alt-shift-j]\" accesskey=\"j\">What links here</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-recentchangeslinked\"><a href=\"/wiki/Special:RecentChangesLinked/Publish%E2%80%93subscribe_pattern\" title=\"Recent changes in pages linked from this page [alt-shift-k]\" accesskey=\"k\">Related changes</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-upload\"><a href=\"/wiki/Wikipedia:File_Upload_Wizard\" title=\"Upload files [alt-shift-u]\" accesskey=\"u\">Upload file</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-specialpages\"><a href=\"/wiki/Special:SpecialPages\" title=\"A list of all special pages [alt-shift-q]\" accesskey=\"q\">Special pages</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-permalink\"><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;oldid=651964637\" title=\"Permanent link to this revision of the page\">Permanent link</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-info\"><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=info\" title=\"More information about this page\">Page information</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-wikibase\"><a href=\"//www.wikidata.org/wiki/Q1071360\" title=\"Link to connected data repository item [alt-shift-g]\" accesskey=\"g\">Wikidata item</a></li>\n\t\t\t\t\t\t<li id=\"t-cite\"><a href=\"/w/index.php?title=Special:CiteThisPage&amp;page=Publish%E2%80%93subscribe_pattern&amp;id=651964637\" title=\"Information on how to cite this page\">Cite this page</a></li>\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-coll-print_export\" aria-labelledby=\"p-coll-print_export-label\">\n\t\t\t<h3 id=\"p-coll-print_export-label\">Print/export</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"coll-create_a_book\"><a href=\"/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Publish%E2%80%93subscribe+pattern\">Create a book</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"coll-download-as-rdf2latex\"><a href=\"/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Publish%E2%80%93subscribe+pattern&amp;oldid=651964637&amp;writer=rdf2latex\">Download as PDF</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-print\"><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;printable=yes\" title=\"Printable version of this page [alt-shift-p]\" accesskey=\"p\">Printable version</a></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-lang\" aria-labelledby=\"p-lang-label\"><span class=\"uls-settings-trigger\" tabindex=\"0\" role=\"button\" aria-haspopup=\"true\" original-title=\"Language settings\"></span>\n\t\t\t<h3 id=\"p-lang-label\">Languages</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-fr\"><a href=\"//fr.wikipedia.org/wiki/PubSub\" title=\"PubSub – French\" lang=\"fr\" hreflang=\"fr\">Français</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-ko\"><a href=\"//ko.wikipedia.org/wiki/%EB%B0%9C%ED%96%89-%EA%B5%AC%EB%8F%85_%EB%AA%A8%EB%8D%B8\" title=\"??-?? ?? – Korean\" lang=\"ko\" hreflang=\"ko\">???</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-it\"><a href=\"//it.wikipedia.org/wiki/Publish/subscribe\" title=\"Publish/subscribe – Italian\" lang=\"it\" hreflang=\"it\">Italiano</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-ja\"><a href=\"//ja.wikipedia.org/wiki/%E5%87%BA%E7%89%88-%E8%B3%BC%E8%AA%AD%E5%9E%8B%E3%83%A2%E3%83%87%E3%83%AB\" title=\"??-?????? – Japanese\" lang=\"ja\" hreflang=\"ja\">???</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-ru\"><a href=\"//ru.wikipedia.org/wiki/%D0%98%D0%B7%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C-%D0%BF%D0%BE%D0%B4%D0%BF%D0%B8%D1%81%D1%87%D0%B8%D0%BA_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)\" title=\"????????-????????? (?????? ??????????????) – Russian\" lang=\"ru\" hreflang=\"ru\">???????</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-uk\"><a href=\"//uk.wikipedia.org/wiki/Pub/sub\" title=\"Pub/sub – Ukrainian\" lang=\"uk\" hreflang=\"uk\">??????????</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-zh\"><a href=\"//zh.wikipedia.org/wiki/%E5%8F%91%E5%B8%83/%E8%AE%A2%E9%98%85\" title=\"??/?? – Chinese\" lang=\"zh\" hreflang=\"zh\">??</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t<div class=\"after-portlet after-portlet-lang\"><span class=\"wb-langlinks-edit wb-langlinks-link\"><a href=\"//www.wikidata.org/wiki/Q1071360#sitelinks-wikipedia\" title=\"Edit interlanguage links\" class=\"wbc-editpage\">Edit links</a></span></div>\t\t\t</div>\n\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"footer\" role=\"contentinfo\">\n\t\t\t\t\t\t\t<ul id=\"footer-info\">\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-info-lastmod\"> This page was last modified on 18 March 2015, at 19:01.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-info-copyright\">Text is available under the <a rel=\"license\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License\">Creative Commons Attribution-ShareAlike License</a><a rel=\"license\" href=\"//creativecommons.org/licenses/by-sa/3.0/\" style=\"display:none;\"></a>;\nadditional terms may apply.  By using this site, you agree to the <a href=\"//wikimediafoundation.org/wiki/Terms_of_Use\">Terms of Use</a> and <a href=\"//wikimediafoundation.org/wiki/Privacy_policy\">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href=\"//www.wikimediafoundation.org/\">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<ul id=\"footer-places\">\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-privacy\"><a href=\"//wikimediafoundation.org/wiki/Privacy_policy\" title=\"wikimedia:Privacy policy\">Privacy policy</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-about\"><a href=\"/wiki/Wikipedia:About\" title=\"Wikipedia:About\">About Wikipedia</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-disclaimer\"><a href=\"/wiki/Wikipedia:General_disclaimer\" title=\"Wikipedia:General disclaimer\">Disclaimers</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-contact\"><a href=\"//en.wikipedia.org/wiki/Wikipedia:Contact_us\">Contact Wikipedia</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-developers\"><a href=\"https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute\">Developers</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-mobileview\"><a href=\"//en.m.wikipedia.org/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;mobileaction=toggle_view_mobile\" class=\"noprint stopMobileRedirectToggle\">Mobile view</a></li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t<ul id=\"footer-icons\" class=\"noprint\">\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-copyrightico\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"//wikimediafoundation.org/\"><img src=\"/static/images/wikimedia-button.png\" srcset=\"/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x\" width=\"88\" height=\"31\" alt=\"Wikimedia Foundation\"></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-poweredbyico\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"//www.mediawiki.org/\"><img src=\"//en.wikipedia.org/static/1.26wmf4/resources/assets/poweredby_mediawiki_88x31.png\" alt=\"Powered by MediaWiki\" srcset=\"//en.wikipedia.org/static/1.26wmf4/resources/assets/poweredby_mediawiki_132x47.png 1.5x, //en.wikipedia.org/static/1.26wmf4/resources/assets/poweredby_mediawiki_176x62.png 2x\" width=\"88\" height=\"31\"></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div style=\"clear:both\"></div>\n\t\t</div>\n\t\t<script>if(window.jQuery)jQuery.ready();</script><script>if(window.mw){\nmw.loader.state({\"ext.globalCssJs.site\":\"ready\",\"ext.globalCssJs.user\":\"ready\",\"site\":\"loading\",\"user\":\"ready\",\"user.groups\":\"ready\"});\n}</script>\n<script>if(window.mw){\nmw.loader.load([\"ext.cite\",\"mediawiki.toc\",\"mediawiki.action.view.postEdit\",\"mediawiki.user\",\"mediawiki.hidpi\",\"mediawiki.page.ready\",\"mediawiki.searchSuggest\",\"ext.gadget.teahouse\",\"ext.gadget.ReferenceTooltips\",\"ext.gadget.DRN-wizard\",\"ext.gadget.charinsert\",\"ext.gadget.refToolbar\",\"ext.gadget.switcher\",\"ext.gadget.featured-articles-links\",\"ext.cirrusSearch.loggingSchema\",\"mmv.bootstrap.autostart\",\"ext.imageMetrics.loader\",\"ext.visualEditor.targetLoader\",\"ext.eventLogging.subscriber\",\"ext.wikimediaEvents.statsd\",\"ext.navigationTiming\",\"schema.UniversalLanguageSelector\",\"ext.uls.eventlogger\",\"ext.uls.interlanguage\",\"ext.wikigrok.startup\"],null,true);\n}</script>\n<script>if(window.mw){\ndocument.write(\"\\u003Cscript src=\\\"//en.wikipedia.org/w/load.php?debug=false\\u0026amp;lang=en\\u0026amp;modules=site\\u0026amp;only=scripts\\u0026amp;skin=vector\\u0026amp;*\\\"\\u003E\\u003C/script\\u003E\");\n}</script><script src=\"//en.wikipedia.org/w/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*\"></script><div class=\"suggestions\" style=\"display: none; font-size: 13px;\"><div class=\"suggestions-results\"></div><div class=\"suggestions-special\"></div></div>\n<script>if(window.mw){\nmw.config.set({\"wgBackendResponseTime\":122,\"wgHostname\":\"mw1050\"});\n}</script>\n\t\n\n<script src=\"https://workspace.cee.siemens.com/content/00000102/Facets/jquery-2.1.0.js\"></script><script src=\"https://workspace.cee.siemens.com/content/00000102/Facets/bookmark/popup.js?nfr_eng_rep_username=Ionescu Tudor\"></script>" , "[Wikipedia Computer Data Logging 2014] Data Logging is the process of recording events to a persistent storage. In the simplest case log messages are written to a log file. Most operating systems and software frameworks also provide more sophisticated services for logging. One example is the syslog service (described in RFC 3164) which allows the filtering and recording of log messages to be performed by a separate dedicated subsystem rather than placing the onus on each application to provide its own ad hoc logging system." , "#StartSearchingFromHere#\" style=\"display:none;\">#StartSearchingFromHere#</div>\n\t\t<div id=\"mw-page-base\" class=\"noprint\"></div>\n\t\t<div id=\"mw-head-base\" class=\"noprint\"></div>\n\t\t<div id=\"content\" class=\"mw-body\" role=\"main\">\n\t\t\t<a id=\"top\"></a>\n\n\t\t\t\t\t\t\t<div id=\"siteNotice\"><div id=\"centralNotice\" class=\"cn-wle2015at\"><!--googleoff: all--><div style=\"background:#FCFCFC; border:1px solid #339966; margin: 0 auto 1em auto; font-size: 120%; overflow: hidden; text-align: center; padding: 0.5ex;\"><div id=\"cn-toggle-box\" style=\"float:right;\" valign=\"middle\"><a href=\"#\" title=\"Close\" onclick=\"mw.centralNotice.hideBanner();return false;\"><img border=\"0\" src=\"//upload.wikimedia.org/wikipedia/foundation/2/20/CloseWindow19x19.png\" alt=\"Close\"></a></div>\n<div style=\"margin-top: 17px\"><center>\n<div class=\"floatleft\"><a href=\"http://wikilovesearth.at/\" class=\"image\"><img alt=\"WLE Austria Logo (no text).svg\" src=\"//upload.wikimedia.org/wikipedia/commons/thumb/8/85/WLE_Austria_Logo_%28no_text%29.svg/50px-WLE_Austria_Logo_%28no_text%29.svg.png\" width=\"50\" height=\"50\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/8/85/WLE_Austria_Logo_%28no_text%29.svg/75px-WLE_Austria_Logo_%28no_text%29.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/8/85/WLE_Austria_Logo_%28no_text%29.svg/100px-WLE_Austria_Logo_%28no_text%29.svg.png 2x\" style=\"margin-top:-10px;\"></a></div><a href=\"http://wikilovesearth.at/\" class=\"image\"><img src=\"//upload.wikimedia.org/wikipedia/commons/thumb/4/42/Naturdenkmal_646_2011-09-24_0113_Wien_02_Prater_Mauthnerwasser_GuentherZ.JPG/77px-Naturdenkmal_646_2011-09-24_0113_Wien_02_Prater_Mauthnerwasser_GuentherZ.JPG\" class=\"wle_image\" style=\"float:right; margin-right: 10px; margin-top: -15px\"></a><span class=\"plainlinks\">Wiki Loves Earth in focus during May and June<br><a class=\"external text\" href=\"http://wikilovesearth.at/\">Discover nature, take photos, help Wikipedia and win!</a></span></center>\n</div></div><div style=\"clear:both;\"></div><!--googleon: all--></div><!-- CentralNotice --></div>\n\t\t\t\t\t\t<div class=\"mw-indicators\">\n</div>\n\t\t\t<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">Publish–subscribe pattern</h1>\n\t\t\t\t\t\t<div id=\"bodyContent\" class=\"mw-body-content\">\n\t\t\t\t\t\t\t\t\t<div id=\"siteSub\">From Wikipedia, the free encyclopedia</div>\n\t\t\t\t\t\t\t\t<div id=\"contentSub\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"jump-to-nav\" class=\"mw-jump\">\n\t\t\t\t\tJump to:\t\t\t\t\t<a href=\"#mw-head\">navigation</a>, \t\t\t\t\t<a href=\"#p-search\">search</a>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div class=\"hatnote\">For the Macintosh feature introduced with System 7, see <a href=\"/wiki/Publish_and_Subscribe_(Mac_OS)\" title=\"Publish and Subscribe (Mac OS)\">Publish and Subscribe (Mac OS)</a>.</div>\n<div class=\"hatnote\">\"PubSub\" redirects here. For the defunct search website, see <a href=\"/wiki/PubSub_(website)\" title=\"PubSub (website)\">PubSub (website)</a>.</div>\n<table class=\"metadata plainlinks ambox ambox-content ambox-Refimprove\" role=\"presentation\">\n<tbody><tr>\n<td class=\"mbox-image\">\n<div style=\"width:52px\"><a href=\"/wiki/File:Question_book-new.svg\" class=\"image\"><img alt=\"\" src=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png\" width=\"50\" height=\"39\" srcset=\"//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x\" data-file-width=\"262\" data-file-height=\"204\"></a></div>\n</td>\n<td class=\"mbox-text\"><span class=\"mbox-text-span\">This article <b>needs additional citations for <a href=\"/wiki/Wikipedia:Verifiability\" title=\"Wikipedia:Verifiability\">verification</a></b>. <span class=\"hide-when-compact\">Please help <a class=\"external text\" href=\"//en.wikipedia.org/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit\">improve this article</a> by <a href=\"/wiki/Help:Introduction_to_referencing/1\" title=\"Help:Introduction to referencing/1\">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(March 2010)</i></small></span></td>\n</tr>\n</tbody></table>\n<p>In <a href=\"/wiki/Software_architecture\" title=\"Software architecture\">software architecture</a>, <b>publish–subscribe</b> is a <a href=\"/wiki/Messaging_pattern\" title=\"Messaging pattern\">messaging pattern</a> where senders of <a href=\"/wiki/Message_passing\" title=\"Message passing\">messages</a>, called publishers, do not program the messages to be sent directly to specific receivers, called subscribers. Instead, published messages are characterized into classes, without knowledge of what, if any, subscribers there may be. Similarly, subscribers express interest in one or more classes, and only receive messages that are of interest, without knowledge of what, if any, publishers there are.</p>\n<p>Pub/sub is a sibling of the <a href=\"/wiki/Message_queue\" title=\"Message queue\">message queue</a> paradigm, and is typically one part of a larger <a href=\"/wiki/Message-oriented_middleware\" title=\"Message-oriented middleware\">message-oriented middleware</a> system. Most messaging systems support both the pub/sub and message queue models in their <a href=\"/wiki/Application_programming_interface\" title=\"Application programming interface\">API</a>, e.g. <a href=\"/wiki/Java_Message_Service\" title=\"Java Message Service\">Java Message Service</a> (JMS).</p>\n<p>This pattern provides greater network <a href=\"/wiki/Scalability\" title=\"Scalability\">scalability</a> and a more dynamic <a href=\"/wiki/Network_topology\" title=\"Network topology\">network topology</a>, with a resulting decreased flexibility to modify the Publisher and its structure of the data published.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n<span class=\"toctoggle\">&nbsp;[<a href=\"#\" id=\"togglelink\">hide</a>]&nbsp;</span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Message_filtering\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Message filtering</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#Topologies\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Topologies</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#History\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">History</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"#Advantages\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">Advantages</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"#Loose_coupling\"><span class=\"tocnumber\">4.1</span> <span class=\"toctext\">Loose coupling</span></a></li>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"#Scalability\"><span class=\"tocnumber\">4.2</span> <span class=\"toctext\">Scalability</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#Disadvantages\"><span class=\"tocnumber\">5</span> <span class=\"toctext\">Disadvantages</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-8\"><a href=\"#Inflexible_Semantic_coupling\"><span class=\"tocnumber\">5.1</span> <span class=\"toctext\">Inflexible Semantic coupling</span></a></li>\n<li class=\"toclevel-2 tocsection-9\"><a href=\"#Message_Delivery_Issues\"><span class=\"tocnumber\">5.2</span> <span class=\"toctext\">Message Delivery Issues</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-10\"><a href=\"#See_also\"><span class=\"tocnumber\">6</span> <span class=\"toctext\">See also</span></a></li>\n<li class=\"toclevel-1 tocsection-11\"><a href=\"#References\"><span class=\"tocnumber\">7</span> <span class=\"toctext\">References</span></a></li>\n<li class=\"toclevel-1 tocsection-12\"><a href=\"#External_links\"><span class=\"tocnumber\">8</span> <span class=\"toctext\">External links</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Message_filtering\">Message filtering</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=1\" title=\"Edit section: Message filtering\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>In the pub/sub model, subscribers typically receive only a subset of the total messages published. The process of selecting messages for reception and processing is called <i>filtering</i>. There are two common forms of filtering: topic-based and content-based.</p>\n<p>In a <b>topic-based</b> system, messages are published to \"topics\" or named logical channels. Subscribers in a topic-based system will receive all messages published to the topics to which they subscribe, and all subscribers to a topic will receive the same messages. The publisher is responsible for defining the classes of messages to which subscribers can subscribe.</p>\n<p>In a <b>content-based</b> system, messages are only delivered to a subscriber if the attributes or content of those messages match constraints defined by the subscriber. The subscriber is responsible for classifying the messages.</p>\n<p>Some systems support a <b>hybrid</b> of the two; publishers post messages to a topic while subscribers register content-based subscriptions to one or more topics.</p>\n<h2><span class=\"mw-headline\" id=\"Topologies\">Topologies</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=2\" title=\"Edit section: Topologies\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>In many pub/sub systems, publishers post messages to an intermediary <a href=\"/wiki/Message_broker\" title=\"Message broker\">message broker or event bus</a>, and subscribers register subscriptions with that broker, letting the broker perform the filtering. The broker normally performs a <a href=\"/wiki/Store_and_forward\" title=\"Store and forward\">store and forward</a> function to route messages from publishers to subscribers. In addition, the broker may prioritize messages in a <a href=\"/wiki/Priority_queue\" title=\"Priority queue\">queue</a> before routing.</p>\n<p>Subscribers may register for specific messages at build time, initialization time or runtime. In GUI systems, subscribers can be coded to handle user commands (e.g., click of a button), which corresponds to build time registration. Some frameworks and software products use xml configuration files to register subscribers. These configuration files are read at initialization time. The most sophisticated alternative is when subscribers can be added or removed at runtime. This latter approach is used, for example, in <a href=\"/wiki/Database_trigger\" title=\"Database trigger\">database triggers</a>, <a href=\"/wiki/Mailing_list\" title=\"Mailing list\">mailing lists</a>, and <a href=\"/wiki/RSS\" title=\"RSS\">RSS</a>.</p>\n<p>The <a href=\"/wiki/Data_Distribution_Service\" title=\"Data Distribution Service\">Data Distribution Service</a> (DDS) middleware does not use a broker in the middle. Instead, each publisher and subscriber in the pub/sub system shares meta-data about each other via IP multicast. The publisher and the subscribers cache this information locally and route messages based on the discovery of each other in the shared cognizance.</p>\n<h2><span class=\"mw-headline\" id=\"History\">History</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=3\" title=\"Edit section: History\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>One of the earliest publicly described pub/sub systems was the \"news\" subsystem of the Isis Toolkit, described at the 1987 <a href=\"/wiki/Association_for_Computing_Machinery\" title=\"Association for Computing Machinery\">Association for Computing Machinery</a> (ACM) Symposium on Operating Systems Principles conference (SOSP '87), in a paper \"Exploiting <a href=\"/wiki/Virtual_synchrony\" title=\"Virtual synchrony\">Virtual Synchrony</a> in <a href=\"/wiki/Distributed_computing\" title=\"Distributed computing\">Distributed Systems</a>. 123–138\".<sup id=\"cite_ref-1\" class=\"reference\"><a href=\"#cite_note-1\"><span>[</span>1<span>]</span></a></sup></p>\n<h2><span class=\"mw-headline\" id=\"Advantages\">Advantages</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=4\" title=\"Edit section: Advantages\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Loose_coupling\">Loose coupling</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=5\" title=\"Edit section: Loose coupling\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<dl>\n<dd>Publishers are <a href=\"/wiki/Loose_coupling\" title=\"Loose coupling\">loosely coupled</a> to subscribers, and need not even know of their existence. With the topic being the focus, publishers and subscribers are allowed to remain ignorant of system topology. Each can continue to operate normally regardless of the other. In the traditional tightly coupled <a href=\"/wiki/Client%E2%80%93server_model\" title=\"Client–server model\">client–server paradigm</a>, the client cannot post messages to the server while the server process is not running, nor can the server receive messages unless the client is running. Many pub/sub systems decouple not only the locations of the publishers and subscribers, but also decouple them temporally. A common strategy used by <a href=\"/wiki/Middleware_analyst\" title=\"Middleware analyst\">middleware analysts</a> with such pub/sub systems is to take down a publisher to allow the subscriber to work through the backlog (a form of <a href=\"/wiki/Bandwidth_throttling\" title=\"Bandwidth throttling\">bandwidth throttling</a>).</dd>\n</dl>\n<h3><span class=\"mw-headline\" id=\"Scalability\">Scalability</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=6\" title=\"Edit section: Scalability\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<dl>\n<dd>Pub/sub provides the opportunity for better <a href=\"/wiki/Scalability\" title=\"Scalability\">scalability</a> than traditional client–server, through parallel operation, message caching, tree-based or network-based routing, etc. However, in certain types of tightly coupled, high-volume enterprise environments, as systems scale up to become data centers with thousands of servers sharing the pub/sub infrastructure, current vendor systems often lose this benefit; scalability for pub/sub products under high load in these contexts is a research challenge.</dd>\n<dd>Outside of the enterprise environment, on the other hand, the pub/sub paradigm has proven its scalability to volumes far beyond those of a single data centre, providing Internet-wide distributed messaging through web syndication protocols such as <a href=\"/wiki/RSS\" title=\"RSS\">RSS</a> and <a href=\"/wiki/Atom_(standard)\" title=\"Atom (standard)\">Atom (standard)</a>. These syndication protocols accept higher latency and lack of delivery guarantees in exchange for the ability for even a low-end web server to syndicate messages to (potentially) millions of separate subscriber nodes.</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"Disadvantages\">Disadvantages</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=7\" title=\"Edit section: Disadvantages\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The most serious problems with pub/sub systems are a side-effect of their main advantage: the decoupling of publisher from subscriber.</p>\n<h3><span class=\"mw-headline\" id=\"Inflexible_Semantic_coupling\">Inflexible Semantic coupling</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=8\" title=\"Edit section: Inflexible Semantic coupling\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>The structure of the data published must be well defined, and quickly becomes rather inflexible. In order to modify the published data structure, it would be necessary to know about all the Subscribers, and either modify them also, or maintain compatibility with older versions. This makes refactoring of Publisher code much more difficult. Since requirements change over time, the inflexibility of the data structure becomes a burden on the programmer.</p>\n<p>However, this is a common issue with any client/server architecture and is best served by versioning content payloads or topics and/or changing URL end points for backward compatibility.</p>\n<p>In more academic terms:</p>\n<p>[It is true that] Pub/sub systems have loose coupling within space, time and synchronization, providing a scalable infrastructure for information exchange and distributed workflows. However, pub/sub are tightly coupled, via event subscriptions and patterns, to the semantics of the underlying event schema and values. The high degree of semantic heterogeneity of events in large and open deployments such as smart cities and the sensor web makes it difficult to develop and maintain pub/sub systems. In order to address semantic coupling within pub/sub systems the use of approximate semantic matching of events is an active area of research.<sup id=\"cite_ref-2\" class=\"reference\"><a href=\"#cite_note-2\"><span>[</span>2<span>]</span></a></sup></p>\n<h3><span class=\"mw-headline\" id=\"Message_Delivery_Issues\">Message Delivery Issues</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=9\" title=\"Edit section: Message Delivery Issues\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>A pub/sub system must be designed carefully to be able to provide stronger system properties that a particular application might require, such as assured delivery.</p>\n<ul>\n<li>The broker in a pub/sub system may be designed to deliver messages for a specified time, but then stop attempting delivery, whether or not it has received confirmation of successful receipt of the message by all subscribers. A pub/sub system so-designed cannot guarantee delivery of messages to any applications that might require such assured delivery. Tighter coupling of the designs of such a publisher and subscriber pair must be enforced outside of the pub/sub architecture to accomplish such assured delivery (e.g. by requiring the subscriber to publish receipt messages).</li>\n<li>A publisher in a pub/sub system may \"assume\" that a subscriber is listening when it is not. A <a href=\"/wiki/Factory_method_pattern\" title=\"Factory method pattern\">factory</a> may utilize a pub/sub system where equipment can publish problems or failures to a subscriber that displays and logs those problems. If the logger fails (crashes), equipment problem publishers won't necessarily receive notice of the logger failure and error messages will not be displayed or recorded by any equipment on the pub/sub system. It should be noted that this is also a design challenge for alternative messaging architectures, such as a client/server system. In a client/server system, when an error logger fails, the system will receive an indication of the error logger (server) failure. But the client/server system will have to deal with that failure by having redundant logging servers online, or spawning fallback logging servers dynamically. This adds complexity to the client and server designs and the client/server architecture as a whole. However, in a pub/sub system, redundant logging subscribers that are exact duplicates of the existing logger can be added to the system to increase logging reliability without any impact to any other equipment on the system. In a pub/sub system, the feature of assured error message logging, can be added incrementally, subsequent to implementing the simpler basic functionality of equipment problem message logging.</li>\n</ul>\n<p>Pub/sub scales well for small networks with a small number of publishers and subscriber nodes and low message volume. However, as the number of nodes and messages grows, the likelihood of instabilities increases, limiting the maximum scalability of a pub/sub network. Example throughput instabilities at large scales include:</p>\n<ul>\n<li>Load surges—periods when subscriber requests saturate network throughput followed by periods of low message volume (underutilized network bandwidth)</li>\n<li>Slowdowns—more and more applications use the system (even if they are communicating on separate pub/sub channels) the message volume flow to an individual subscriber will slow</li>\n<li>IP <a href=\"/wiki/Broadcast_storm\" title=\"Broadcast storm\" class=\"mw-redirect\">broadcast storms</a>—a local area network may be shut down entirely by saturating it with overhead messages that choke out all normal traffic unrelated to the pub/sub traffic</li>\n</ul>\n<p>For pub/sub systems that use brokers (servers), the agreement for a broker to send messages to a subscriber is <a href=\"/wiki/In-band_control\" title=\"In-band control\">in-band</a>, and can be subject to security problems. Brokers might be fooled into sending notifications to the wrong client, amplifying denial of service requests against the client. Brokers themselves could be overloaded as they allocate resources to track created subscriptions.</p>\n<p>Even with systems that do not rely on brokers, a subscriber might be able to receive data that it is not authorized to receive. An unauthorized publisher may be able to introduce incorrect or damaging messages into the pub/sub system. This is especially true with systems that <a href=\"/wiki/Broadcasting_(computing)\" title=\"Broadcasting (computing)\" class=\"mw-redirect\">broadcast</a> or <a href=\"/wiki/Multicast\" title=\"Multicast\">multicast</a> their messages. <a href=\"/wiki/Encryption\" title=\"Encryption\">Encryption</a> (e.g. <a href=\"/wiki/Transport_Layer_Security\" title=\"Transport Layer Security\">Transport Layer Security</a> (SSL/TLS)) can prevent unauthorized access but cannot prevent damaging messages from being introduced by authorized publishers. Architectures other than pub/sub, such as client/server systems are also vulnerable to authorized message senders that behave maliciously.</p>\n<h2><span class=\"mw-headline\" id=\"See_also\">See also</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=10\" title=\"Edit section: See also\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n<li><a href=\"/wiki/Message_broker\" title=\"Message broker\">Message brokers</a></li>\n<li><a href=\"/wiki/PubSubHubbub\" title=\"PubSubHubbub\">PubSubHubbub</a>, an implementation of pub/sub</li>\n<li><a href=\"/wiki/RSS\" title=\"RSS\">RSS</a>, a highly scalable web-syndication protocol</li>\n<li><a href=\"/wiki/Atom_(standard)\" title=\"Atom (standard)\">Atom (standard)</a>, another highly scalable web-syndication protocol</li>\n<li><a href=\"/wiki/Event-driven_programming\" title=\"Event-driven programming\">Event-driven programming</a></li>\n<li><a href=\"/wiki/Observer_pattern\" title=\"Observer pattern\">Observer Pattern</a></li>\n<li><a href=\"/wiki/High-level_architecture_(simulation)\" title=\"High-level architecture (simulation)\">High-level architecture</a></li>\n<li>OMG <a href=\"/wiki/Data_Distribution_Service\" title=\"Data Distribution Service\">Data Distribution Service</a> (DDS)</li>\n<li><a href=\"/wiki/Push_technology\" title=\"Push technology\">Push technology</a></li>\n<li><a href=\"/wiki/Usenet\" title=\"Usenet\">Usenet</a></li>\n<li><a href=\"/wiki/Internet_Group_Management_Protocol\" title=\"Internet Group Management Protocol\">Internet Group Management Protocol</a></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"References\">References</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=11\" title=\"Edit section: References\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<div class=\"reflist\" style=\"list-style-type: decimal;\">\n<ol class=\"references\">\n<li id=\"cite_note-1\"><span class=\"mw-cite-backlink\"><b><a href=\"#cite_ref-1\"><span class=\"cite-accessibility-label\">Jump up </span>^</a></b></span> <span class=\"reference-text\">Birman, K. and Joseph, T. \"<a rel=\"nofollow\" class=\"external text\" href=\"http://portal.acm.org/citation.cfm?id=41457.37515&amp;coll=portal&amp;dl=ACM&amp;CFID=97240647&amp;CFTOKEN=78805594\">Exploiting virtual synchrony in distributed systems</a>\" <i>in Proceedings of the eleventh ACM Symposium on Operating systems principles (SOSP '87)</i>, 1987. pp. 123–138.</span></li>\n<li id=\"cite_note-2\"><span class=\"mw-cite-backlink\"><b><a href=\"#cite_ref-2\"><span class=\"cite-accessibility-label\">Jump up </span>^</a></b></span> <span class=\"reference-text\">Hasan, Souleiman, Sean O’Riain, and Edward Curry. 2012. <a rel=\"nofollow\" class=\"external text\" href=\"http://www.edwardcurry.org/publications/Hasan_DEBS_2012.pdf\">“Approximate Semantic Matching of Heterogeneous Events.”</a> In 6th ACM International Conference on Distributed Event-Based Systems (DEBS 2012), 252–263. Berlin, Germany: ACM. <a rel=\"nofollow\" class=\"external text\" href=\"http://dx.doi.org/10.1145/2335484.2335512\">“DOI”</a>.</span></li>\n</ol>\n</div>\n<h2><span class=\"mw-headline\" id=\"External_links\">External links</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit&amp;section=12\" title=\"Edit section: External links\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://xmpp.org/extensions/xep-0060.html\">XMPP XEP-0060: Publish-Subscribe</a></li>\n<li>For an open source example which is in production on MSN.com and Microsoft.com, see <a rel=\"nofollow\" class=\"external text\" href=\"http://www.codeplex.com/pubsub\">Distributed Publish/Subscribe Event System</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://pubsub.sf.net\">Python PubSub</a> a Python Publish-Subscribe broker for messages *within* an application (NOT network)</li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://portals.omg.org/dds\">The OMG DDS portal</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://rtmatheson.com/2010/03/working-on-the-subject-observer-pattern/\">Publish Subscribe example in C++</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://open.syn3.nl/syn3/trac/default/wiki/projects/synapse\">Synapse is a C++ framework that implements a Publish-subscribe pattern</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://stackoverflow.com/questions/tagged/publish-subscribe\">Programmer Question-Answer topics tagged with \"publish-subscribe\"</a></li>\n</ul>\n\n\n<!-- \nNewPP limit report\nParsed by mw1215\nCPU time usage: 0.138 seconds\nReal time usage: 0.390 seconds\nPreprocessor visited node count: 303/1000000\nPreprocessor generated node count: 0/1500000\nPost-expand include size: 4282/2097152 bytes\nTemplate argument size: 132/2097152 bytes\nHighest expansion depth: 6/40\nExpensive parser function count: 2/500\nLua time usage: 0.031/10.000 seconds\nLua memory usage: 845 KB/50 MB\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%  303.972      1 - -total\n 83.02%  252.371      1 - Template:Refimprove\n 13.50%   41.023      1 - Template:Ambox\n 10.06%   30.580      1 - Template:For\n  8.84%   26.866      1 - Template:Hatnote\n  3.75%   11.404      1 - Template:Redirect\n  2.01%    6.125      1 - Template:Reflist\n-->\n\n<!-- Saved in parser cache with key enwiki:pcache:idhash:1336424-0!*!0!!en!4!* and timestamp 20150504082141 and revision id 651964637\n -->\n<noscript>&amp;lt;img src=\"//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1\" alt=\"\" title=\"\" width=\"1\" height=\"1\" style=\"border: none; position: absolute;\" /&amp;gt;</noscript></div>\t\t\t\t\t\t\t\t\t<div class=\"printfooter\">\n\t\t\t\t\t\tRetrieved from \"<a dir=\"ltr\" href=\"http://en.wikipedia.org/w/index.php?title=Publish–subscribe_pattern&amp;oldid=651964637\">http://en.wikipedia.org/w/index.php?title=Publish–subscribe_pattern&amp;oldid=651964637</a>\"\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"catlinks\" class=\"catlinks\"><div id=\"mw-normal-catlinks\" class=\"mw-normal-catlinks\"><a href=\"/wiki/Help:Category\" title=\"Help:Category\">Categories</a>: <ul><li><a href=\"/wiki/Category:Software_design_patterns\" title=\"Category:Software design patterns\">Software design patterns</a></li><li><a href=\"/wiki/Category:Distributed_computing_architecture\" title=\"Category:Distributed computing architecture\">Distributed computing architecture</a></li><li><a href=\"/wiki/Category:Message-oriented_middleware\" title=\"Category:Message-oriented middleware\">Message-oriented middleware</a></li></ul></div><div id=\"mw-hidden-catlinks\" class=\"mw-hidden-catlinks mw-hidden-cats-hidden\">Hidden categories: <ul><li><a href=\"/wiki/Category:Articles_needing_additional_references_from_March_2010\" title=\"Category:Articles needing additional references from March 2010\">Articles needing additional references from March 2010</a></li><li><a href=\"/wiki/Category:All_articles_needing_additional_references\" title=\"Category:All articles needing additional references\">All articles needing additional references</a></li></ul></div></div>\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"visualClear\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"mw-navigation\">\n\t\t\t<h2>Navigation menu</h2>\n\n\t\t\t<div id=\"mw-head\">\n\t\t\t\t\t\t\t\t\t<div id=\"p-personal\" role=\"navigation\" class=\"\" aria-labelledby=\"p-personal-label\">\n\t\t\t\t\t\t<h3 id=\"p-personal-label\">Personal tools</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"pt-createaccount\"><a href=\"/w/index.php?title=Special:UserLogin&amp;returnto=Publish%E2%80%93subscribe+pattern&amp;type=signup\" title=\"You are encouraged to create an account and log in; however, it is not mandatory\">Create account</a></li><li id=\"pt-login\"><a href=\"/w/index.php?title=Special:UserLogin&amp;returnto=Publish%E2%80%93subscribe+pattern\" title=\"You're encouraged to log in; however, it's not mandatory. [alt-shift-o]\" accesskey=\"o\">Log in</a></li>\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id=\"left-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-namespaces\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-namespaces-label\">\n\t\t\t\t\t\t<h3 id=\"p-namespaces-label\">Namespaces</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-nstab-main\" class=\"selected\"><span><a href=\"/wiki/Publish%E2%80%93subscribe_pattern\" title=\"View the content page [alt-shift-c]\" accesskey=\"c\">Article</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-talk\"><span><a href=\"/wiki/Talk:Publish%E2%80%93subscribe_pattern\" title=\"Discussion about the content page [alt-shift-t]\" accesskey=\"t\">Talk</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-variants\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-variants-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 id=\"p-variants-label\" tabindex=\"0\"><span>Variants</span><a href=\"#\" tabindex=\"-1\"></a></h3>\n\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t<div id=\"right-navigation\">\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-views\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-views-label\">\n\t\t\t\t\t\t<h3 id=\"p-views-label\">Views</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-view\" class=\"selected\"><span><a href=\"/wiki/Publish%E2%80%93subscribe_pattern\">Read</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-edit\"><span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=edit\" title=\"You can edit this page. Please use the preview button before saving [alt-shift-e]\" accesskey=\"e\">Edit</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"ca-history\" class=\"collapsible\"><span><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=history\" title=\"Past versions of this page [alt-shift-h]\" accesskey=\"h\">View history</a></span></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-cactions\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-cactions-label\">\n\t\t\t\t\t\t<h3 id=\"p-cactions-label\" tabindex=\"0\"><span>More</span><a href=\"#\" tabindex=\"-1\"></a></h3>\n\n\t\t\t\t\t\t<div class=\"menu\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div id=\"p-search\" role=\"search\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<label for=\"searchInput\">Search</label>\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<form action=\"/w/index.php\" id=\"searchform\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"simpleSearch\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"search\" name=\"search\" placeholder=\"Search\" title=\"Search Wikipedia [alt-shift-f]\" accesskey=\"f\" id=\"searchInput\" tabindex=\"1\" autocomplete=\"off\"><input type=\"hidden\" value=\"Special:Search\" name=\"title\"><input type=\"submit\" name=\"go\" value=\"Go\" title=\"Go to a page with this exact name if one exists\" id=\"searchButton\" class=\"searchButton\">\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"mw-panel\">\n\t\t\t\t<div id=\"p-logo\" role=\"banner\"><a class=\"mw-wiki-logo\" href=\"/wiki/Main_Page\" title=\"Visit the main page\"></a></div>\n\t\t\t\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-navigation\" aria-labelledby=\"p-navigation-label\">\n\t\t\t<h3 id=\"p-navigation-label\">Navigation</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-mainpage-description\"><a href=\"/wiki/Main_Page\" title=\"Visit the main page [alt-shift-z]\" accesskey=\"z\">Main page</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-contents\"><a href=\"/wiki/Portal:Contents\" title=\"Guides to browsing Wikipedia\">Contents</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-featuredcontent\"><a href=\"/wiki/Portal:Featured_content\" title=\"Featured content – the best of Wikipedia\">Featured content</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-currentevents\"><a href=\"/wiki/Portal:Current_events\" title=\"Find background information on current events\">Current events</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-randompage\"><a href=\"/wiki/Special:Random\" title=\"Load a random article [alt-shift-x]\" accesskey=\"x\">Random article</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-sitesupport\"><a href=\"https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en\" title=\"Support us\">Donate to Wikipedia</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-shoplink\"><a href=\"//shop.wikimedia.org\" title=\"Visit the Wikimedia Shop\">Wikipedia store</a></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-interaction\" aria-labelledby=\"p-interaction-label\">\n\t\t\t<h3 id=\"p-interaction-label\">Interaction</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-help\"><a href=\"/wiki/Help:Contents\" title=\"Guidance on how to use and edit Wikipedia\">Help</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-aboutsite\"><a href=\"/wiki/Wikipedia:About\" title=\"Find out about Wikipedia\">About Wikipedia</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-portal\"><a href=\"/wiki/Wikipedia:Community_portal\" title=\"About the project, what you can do, where to find things\">Community portal</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-recentchanges\"><a href=\"/wiki/Special:RecentChanges\" title=\"A list of recent changes in the wiki [alt-shift-r]\" accesskey=\"r\">Recent changes</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"n-contactpage\"><a href=\"//en.wikipedia.org/wiki/Wikipedia:Contact_us\">Contact page</a></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-tb\" aria-labelledby=\"p-tb-label\">\n\t\t\t<h3 id=\"p-tb-label\">Tools</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-whatlinkshere\"><a href=\"/wiki/Special:WhatLinksHere/Publish%E2%80%93subscribe_pattern\" title=\"List of all English Wikipedia pages containing links to this page [alt-shift-j]\" accesskey=\"j\">What links here</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-recentchangeslinked\"><a href=\"/wiki/Special:RecentChangesLinked/Publish%E2%80%93subscribe_pattern\" title=\"Recent changes in pages linked from this page [alt-shift-k]\" accesskey=\"k\">Related changes</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-upload\"><a href=\"/wiki/Wikipedia:File_Upload_Wizard\" title=\"Upload files [alt-shift-u]\" accesskey=\"u\">Upload file</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-specialpages\"><a href=\"/wiki/Special:SpecialPages\" title=\"A list of all special pages [alt-shift-q]\" accesskey=\"q\">Special pages</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-permalink\"><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;oldid=651964637\" title=\"Permanent link to this revision of the page\">Permanent link</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-info\"><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;action=info\" title=\"More information about this page\">Page information</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-wikibase\"><a href=\"//www.wikidata.org/wiki/Q1071360\" title=\"Link to connected data repository item [alt-shift-g]\" accesskey=\"g\">Wikidata item</a></li>\n\t\t\t\t\t\t<li id=\"t-cite\"><a href=\"/w/index.php?title=Special:CiteThisPage&amp;page=Publish%E2%80%93subscribe_pattern&amp;id=651964637\" title=\"Information on how to cite this page\">Cite this page</a></li>\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-coll-print_export\" aria-labelledby=\"p-coll-print_export-label\">\n\t\t\t<h3 id=\"p-coll-print_export-label\">Print/export</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"coll-create_a_book\"><a href=\"/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Publish%E2%80%93subscribe+pattern\">Create a book</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"coll-download-as-rdf2latex\"><a href=\"/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Publish%E2%80%93subscribe+pattern&amp;oldid=651964637&amp;writer=rdf2latex\">Download as PDF</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"t-print\"><a href=\"/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;printable=yes\" title=\"Printable version of this page [alt-shift-p]\" accesskey=\"p\">Printable version</a></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t\t<div class=\"portal\" role=\"navigation\" id=\"p-lang\" aria-labelledby=\"p-lang-label\"><span class=\"uls-settings-trigger\" tabindex=\"0\" role=\"button\" aria-haspopup=\"true\" original-title=\"Language settings\"></span>\n\t\t\t<h3 id=\"p-lang-label\">Languages</h3>\n\n\t\t\t<div class=\"body\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-fr\"><a href=\"//fr.wikipedia.org/wiki/PubSub\" title=\"PubSub – French\" lang=\"fr\" hreflang=\"fr\">Français</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-ko\"><a href=\"//ko.wikipedia.org/wiki/%EB%B0%9C%ED%96%89-%EA%B5%AC%EB%8F%85_%EB%AA%A8%EB%8D%B8\" title=\"??-?? ?? – Korean\" lang=\"ko\" hreflang=\"ko\">???</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-it\"><a href=\"//it.wikipedia.org/wiki/Publish/subscribe\" title=\"Publish/subscribe – Italian\" lang=\"it\" hreflang=\"it\">Italiano</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-ja\"><a href=\"//ja.wikipedia.org/wiki/%E5%87%BA%E7%89%88-%E8%B3%BC%E8%AA%AD%E5%9E%8B%E3%83%A2%E3%83%87%E3%83%AB\" title=\"??-?????? – Japanese\" lang=\"ja\" hreflang=\"ja\">???</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-ru\"><a href=\"//ru.wikipedia.org/wiki/%D0%98%D0%B7%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C-%D0%BF%D0%BE%D0%B4%D0%BF%D0%B8%D1%81%D1%87%D0%B8%D0%BA_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)\" title=\"????????-????????? (?????? ??????????????) – Russian\" lang=\"ru\" hreflang=\"ru\">???????</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-uk\"><a href=\"//uk.wikipedia.org/wiki/Pub/sub\" title=\"Pub/sub – Ukrainian\" lang=\"uk\" hreflang=\"uk\">??????????</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"interlanguage-link interwiki-zh\"><a href=\"//zh.wikipedia.org/wiki/%E5%8F%91%E5%B8%83/%E8%AE%A2%E9%98%85\" title=\"??/?? – Chinese\" lang=\"zh\" hreflang=\"zh\">??</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t<div class=\"after-portlet after-portlet-lang\"><span class=\"wb-langlinks-edit wb-langlinks-link\"><a href=\"//www.wikidata.org/wiki/Q1071360#sitelinks-wikipedia\" title=\"Edit interlanguage links\" class=\"wbc-editpage\">Edit links</a></span></div>\t\t\t</div>\n\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"footer\" role=\"contentinfo\">\n\t\t\t\t\t\t\t<ul id=\"footer-info\">\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-info-lastmod\"> This page was last modified on 18 March 2015, at 19:01.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-info-copyright\">Text is available under the <a rel=\"license\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License\">Creative Commons Attribution-ShareAlike License</a><a rel=\"license\" href=\"//creativecommons.org/licenses/by-sa/3.0/\" style=\"display:none;\"></a>;\nadditional terms may apply.  By using this site, you agree to the <a href=\"//wikimediafoundation.org/wiki/Terms_of_Use\">Terms of Use</a> and <a href=\"//wikimediafoundation.org/wiki/Privacy_policy\">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href=\"//www.wikimediafoundation.org/\">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<ul id=\"footer-places\">\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-privacy\"><a href=\"//wikimediafoundation.org/wiki/Privacy_policy\" title=\"wikimedia:Privacy policy\">Privacy policy</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-about\"><a href=\"/wiki/Wikipedia:About\" title=\"Wikipedia:About\">About Wikipedia</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-disclaimer\"><a href=\"/wiki/Wikipedia:General_disclaimer\" title=\"Wikipedia:General disclaimer\">Disclaimers</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-contact\"><a href=\"//en.wikipedia.org/wiki/Wikipedia:Contact_us\">Contact Wikipedia</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-developers\"><a href=\"https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute\">Developers</a></li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-places-mobileview\"><a href=\"//en.m.wikipedia.org/w/index.php?title=Publish%E2%80%93subscribe_pattern&amp;mobileaction=toggle_view_mobile\" class=\"noprint stopMobileRedirectToggle\">Mobile view</a></li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t<ul id=\"footer-icons\" class=\"noprint\">\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-copyrightico\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"//wikimediafoundation.org/\"><img src=\"/static/images/wikimedia-button.png\" srcset=\"/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x\" width=\"88\" height=\"31\" alt=\"Wikimedia Foundation\"></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li id=\"footer-poweredbyico\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"//www.mediawiki.org/\"><img src=\"//en.wikipedia.org/static/1.26wmf4/resources/assets/poweredby_mediawiki_88x31.png\" alt=\"Powered by MediaWiki\" srcset=\"//en.wikipedia.org/static/1.26wmf4/resources/assets/poweredby_mediawiki_132x47.png 1.5x, //en.wikipedia.org/static/1.26wmf4/resources/assets/poweredby_mediawiki_176x62.png 2x\" width=\"88\" height=\"31\"></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div style=\"clear:both\"></div>\n\t\t</div>\n\t\t<script>if(window.jQuery)jQuery.ready();</script><script>if(window.mw){\nmw.loader.state({\"ext.globalCssJs.site\":\"ready\",\"ext.globalCssJs.user\":\"ready\",\"site\":\"loading\",\"user\":\"ready\",\"user.groups\":\"ready\"});\n}</script>\n<script>if(window.mw){\nmw.loader.load([\"ext.cite\",\"mediawiki.toc\",\"mediawiki.action.view.postEdit\",\"mediawiki.user\",\"mediawiki.hidpi\",\"mediawiki.page.ready\",\"mediawiki.searchSuggest\",\"ext.cirrusSearch.loggingSchema\",\"mmv.bootstrap.autostart\",\"ext.imageMetrics.loader\",\"ext.visualEditor.targetLoader\",\"ext.eventLogging.subscriber\",\"ext.wikimediaEvents.statsd\",\"ext.navigationTiming\",\"schema.UniversalLanguageSelector\",\"ext.uls.eventlogger\",\"ext.uls.interlanguage\",\"ext.gadget.teahouse\",\"ext.gadget.ReferenceTooltips\",\"ext.gadget.DRN-wizard\",\"ext.gadget.charinsert\",\"ext.gadget.refToolbar\",\"ext.gadget.switcher\",\"ext.gadget.featured-articles-links\",\"ext.wikigrok.startup\"],null,true);\n}</script>\n<script>if(window.mw){\ndocument.write(\"\\u003Cscript src=\\\"//en.wikipedia.org/w/load.php?debug=false\\u0026amp;lang=en\\u0026amp;modules=site\\u0026amp;only=scripts\\u0026amp;skin=vector\\u0026amp;*\\\"\\u003E\\u003C/script\\u003E\");\n}</script><script src=\"//en.wikipedia.org/w/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*\"></script><div class=\"suggestions\" style=\"display: none; font-size: 13px;\"><div class=\"suggestions-results\"></div><div class=\"suggestions-special\"></div></div>\n<script>if(window.mw){\nmw.config.set({\"wgBackendResponseTime\":69,\"wgHostname\":\"mw1249\"});\n}</script>\n\t\n\n<script src=\"https://workspace.cee.siemens.com/content/00000102/Facets/jquery-2.1.0.js\"></script><script src=\"https://workspace.cee.siemens.com/content/00000102/Facets/bookmark/popup.js?nfr_eng_rep_username=Ionescu Tudor\"></script>" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Data_logger .
  
  gen:methodOutput  a  owl:DatatypeProperty ;
          rdfs:domain  gen:SoftwareEngineeringMethod ;
          rdfs:range   xsd:string .
  
  :DesignPattern_correcting_audits
          a                              gen:DesignPattern ;
          rdfs:label                     "Correcting Audits" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_utility , :ArchitecturalQuality_safety , :ArchitecturalQuality_dependability , :ArchitecturalQuality_viability , :ArchitecturalQuality_reliability , :ArchitecturalQuality_defensibility , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_integrity , :ArchitecturalQuality_verifiability , :ArchitecturalQuality_traceability , :ArchitecturalQuality_maturity , :ArchitecturalQuality_survivability , :ArchitecturalQuality_auditability , :ArchitecturalQuality_security , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_robustness , :ArchitecturalQuality_resilience ;
          gen:hasPosPatternEffectOnQuality
                  :ArchitecturalQuality_accountability ;
          gen:isAlternativeOf            :DesignTactic_auditing , :DesignTactic_error_detection ;
          gen:wikiEntry                  "Data errors should be detected and corrected as soon as possible. Related data should be checked for errors corrected and the occurrence of the error should be recorded. Checking or auditing data for errors is accomplished by using other information that is known about the data to determine its correctness [Hanmer 2007]pp 42-46. Ways that data can be checked  Check structural properties Check that linked lists are correctly linked stack and queue pointers are within bounds pointers and counters related to the data structures match the data structures.  Known correlations The same or related data is stored in multiple locations.  Sanity checks Check if values are within the range of expected values (Checksums are correct).  Direct Comparison Data are duplicated and stored to serve as a check to each other.  Relations Auditing [Hanmer 2007]Architectural Patterns pp 42-46. Error Detection [Hanmer 2007]Architectural Patterns pp 42-46." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignTactic_process_mining
          a           gen:DesignTactic ;
          rdfs:label  "process mining" .
  
  :AuthorTag_mega_trends
          a           cont:AuthorTag ;
          rdfs:label  "mega trends" .
  
  :SoftwareEngineeringMethod_invention_mining_and_trend_workshops
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Invention Mining and Trend Workshops" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_systems_engineer , :Role_system_architect , :Role_technical_project_manager ;
          gen:hasMethodTag         :AuthorTag_indicators , :AuthorTag_opportunity , :AuthorTag_strategy , :AuthorTag_mega_trends , :AuthorTag_impact , :AuthorTag_innovation ;
          gen:wikiEntry            "Invention Mining Workshops: Generate innovations, inventions and improvement suggestions (3i) for a focused domain. Adaption to individual needs.<br>\nTrend Workshops: Evaluation regarding the impact of mega trends on the current product, solution and service portfolio. Results are first indicators, roadmap elements and concrete action items for strategy alignment to upcoming trends and core techniques." .
  
  :SoftwareEngineeringMethod_knowledge_management_maturity_model
          a                        gen:SoftwareEngineeringMethod ;
          rdfs:label               "Knowledge Management Maturity Model" ;
          gen:endorsements         "0"^^xsd:int ;
          gen:entryType            "Method" ;
          gen:hasKnowledgeAuthor   :Author_ionescu_tudor ;
          gen:hasKnowledgeProject  :Project_isdcatalog ;
          gen:hasMethodPhase       :ProjectPhase_all_life-cycle_phases ;
          gen:hasMethodRole        :Role_technical_project_manager , :Role_system_architect ;
          gen:hasMethodTag         :AuthorTag_knowledge_management ;
          gen:wikiEntry            "The Knowledge Management Maturity Model (KMMM) is an integrated KM assessment instrument and process for achieving a comprehensive analysis of the current status of knowledge management in an organization or organizational unit, and serves as a basis for planning improvement actions." .
  
  :DesignTactic_classification
          a           gen:DesignTactic ;
          rdfs:label  "classification" .
  
  :Requirement_arch-2__eliminate_reduce_macros
          a                          spec:Requirement ;
          rdfs:label                 "ARCH-2: Eliminate/Reduce Macros" ;
          gen:hasKnowledgeAuthor     :Author_ionescu_tudor ;
          gen:hasKnowledgeProject    :Project_syngoplaza ;
          gen:wikiEntry              "<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">Eliminate / Reduce\n  the macros used in client code base</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\">&nbsp;</span></p>\n  <p class=\"MsoListParagraphCxSpMiddle\" style=\"margin:0cm;margin-bottom:.0001pt;\n  text-align:justify;line-height:normal\"><span lang=\"EN-GB\" style=\"font-size:\n  10.0pt\">This will help in reducing complexity, test effort and Technical debt</span></p>" ;
          spec:containedWithin       :UseCase_redesign ;
          spec:hasRequirementOrigin  :Domain_none ;
          spec:requirementGroup      "Architecture / Development / Test" ;
          spec:requirementPurpose    "Eliminate/Reduce macros" .
  
  :Domain_ar-002__version_consistency
          a           spec:Domain ;
          rdfs:label  "ar-002: version consistency" .
  
  :AuthorTag_check  a  cont:AuthorTag ;
          rdfs:label  "check" .
  
  :DesignPattern_reproducible_error
          a                              gen:DesignPattern ;
          rdfs:label                     "Reproducible Error" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_maturity , :ArchitecturalQuality_safety , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_reliability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_viability , :ArchitecturalQuality_availability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_robustness ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "The real fault should be corrected and no time should be wasted on something only imagined to be the fault. The Reproducible Error Pattern recommends stimulating the fault in a controlled manner to verify that the fault did indeed cause the observed error and that the fault is still present in the system. To know that a fault exists compare the results of applying the stimuli to the behavior described in the system specification [Hanmer 2007]pp 236-238.  Relations Error Handling [Hanmer 2007]FaultTreatment Patterns pp 236-238." ;
          spec:hasPatternDomain          :Domain_abstract .
  
  :DesignPattern_composite
          a                              gen:DesignPattern ;
          rdfs:label                     "Composite" ;
          gen:hasKnowledgeAuthor         :Author_ct_sad-sra , :Author_willegger_edwin ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_isolateability , :ArchitecturalQuality_complexity , :ArchitecturalQuality_automatibility , :ArchitecturalQuality_flexibility , :ArchitecturalQuality_composability , :ArchitecturalQuality_manageability , :ArchitecturalQuality_portability , :ArchitecturalQuality_versatility , :ArchitecturalQuality_structuredness , :ArchitecturalQuality_configurability , :ArchitecturalQuality_replicability ;
          gen:isAlternativeOf            :DesignTactic_composition , :DesignTactic_layering ;
          gen:wikiEntry                  "[Wikipedia Composite Pattern 2014] A Composite composes zero-or-more similar objects so that they can be manipulated as one object. (GoF structural pattern)" ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Composite_pattern .
  
  :DesignPattern_root_cause_analysis
          a                              gen:DesignPattern ;
          rdfs:label                     "Root Cause Analysis" ;
          gen:hasKnowledgeAuthor         :Author_willegger_edwin , :Author_ct_sad-sra ;
          gen:hasKnowledgeProject        :Project_wiki ;
          gen:hasPatternEffectOnQuality  :ArchitecturalQuality_availability , :ArchitecturalQuality_viability , :ArchitecturalQuality_survivability , :ArchitecturalQuality_recoverability , :ArchitecturalQuality_dependability , :ArchitecturalQuality_fault_tolerance , :ArchitecturalQuality_resilience , :ArchitecturalQuality_reliability , :ArchitecturalQuality_autonomy , :ArchitecturalQuality_robustness , :ArchitecturalQuality_safety , :ArchitecturalQuality_maturity ;
          gen:isAlternativeOf            :DesignTactic_error_handling ;
          gen:wikiEntry                  "The Root Cause Analysis Pattern recommends fixing the root cause of the error and any faults that are found while determining the root cause. A useful technique is the five WHY? Questions [Hanmer 2007]pp 242-244  Why was the data record lost?  Why did the transaction fail in the middle?  Why did it run out of memory?  Why was there no more memory available for allocation?  Why was the memory inaccessible? Then the faults found at this depth of analysis should be corrected.  Relations Error Handling [Hanmer 2007]FaultTreatment Patterns pp 242-244." ;
          spec:hasPatternDomain          :Domain_abstract ;
          owl:sameAs                     dbr:Root_cause_analysis .
  
  :Domain_cr-01  a    spec:Domain ;
          rdfs:label  "cr-01" .
}
